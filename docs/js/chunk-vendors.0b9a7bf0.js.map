{"version":3,"file":"js/chunk-vendors.0b9a7bf0.js","mappings":"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,EAAYhzC,EAAO,MAEpB,UAAOizC,EAAUj2C,KAAU4zC,EAAQmC,QACaH,IAA/C7B,EAAyBgC,EAAQE,KACnCD,EAAUC,GAAYj2C,GAI1B,OAAOg2C,CACR,CASD,SAASE,EAAaH,EAAQ9jB,GACrB,MAAW,OAAX8jB,EAAiB,CACtB,MAAMI,EAAOpC,EAAyBgC,EAAQ9jB,GAE9C,GAAIkkB,EAAM,CACJ,GAAAA,EAAK9tC,IACP,OAAOmsC,EAAQ2B,EAAK9tC,KAGtB,GAA0B,oBAAf8tC,EAAKn2C,MACd,OAAOw0C,EAAQ2B,EAAKn2C,MAEvB,CAED+1C,EAASnpC,EAAempC,EACzB,CAEQ,SAAAK,EAAcP,GAErB,OADAt4C,QAAQ84C,KAAK,qBAAsBR,GAC5B,IACR,CAED,OAAOO,CACR,CC3JM,MAAME,EAAOtC,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWuC,EAAMvC,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWwC,EAAaxC,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWyC,EAAgBzC,EAAO,CAClC,UACA,gBACA,SACA,UACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGW0C,EAAS1C,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,gBAKW2C,EAAmB3C,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWlT,EAAOkT,EAAO,CAAC,UCrRf4C,EAAO5C,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGW6C,EAAM7C,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGW8C,EAAS9C,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBAC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","sources":["webpack://vue-tv-maze/../src/constants.ts","webpack://vue-tv-maze/../src/crypt.ts","webpack://vue-tv-maze/../src/global.ts","webpack://vue-tv-maze/../src/defaults.ts","webpack://vue-tv-maze/../src/deferred.ts","webpack://vue-tv-maze/../src/emulator.ts","webpack://vue-tv-maze/../src/environment.ts","webpack://vue-tv-maze/../src/errors.ts","webpack://vue-tv-maze/../src/obj.ts","webpack://vue-tv-maze/../src/compat.ts","webpack://vue-tv-maze/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://vue-tv-maze/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://vue-tv-maze/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://vue-tv-maze/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://vue-tv-maze/../src/utils.js","webpack://vue-tv-maze/../src/tags.js","webpack://vue-tv-maze/../src/attrs.js","webpack://vue-tv-maze/../src/regexp.js","webpack://vue-tv-maze/../src/purify.js","webpack://vue-tv-maze/./node_modules/vue-loader/dist/exportHelper.js","webpack://vue-tv-maze/./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack://vue-tv-maze/./node_modules/core-js/internals/a-callable.js","webpack://vue-tv-maze/./node_modules/core-js/internals/a-possible-prototype.js","webpack://vue-tv-maze/./node_modules/core-js/internals/an-instance.js","webpack://vue-tv-maze/./node_modules/core-js/internals/an-object.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-from-constructor-and-list.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-includes.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-set-length.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-to-reversed.js","webpack://vue-tv-maze/./node_modules/core-js/internals/array-with.js","webpack://vue-tv-maze/./node_modules/core-js/internals/classof-raw.js","webpack://vue-tv-maze/./node_modules/core-js/internals/classof.js","webpack://vue-tv-maze/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://vue-tv-maze/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://vue-tv-maze/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://vue-tv-maze/./node_modules/core-js/internals/create-property-descriptor.js","webpack://vue-tv-maze/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://vue-tv-maze/./node_modules/core-js/internals/define-built-in.js","webpack://vue-tv-maze/./node_modules/core-js/internals/define-global-property.js","webpack://vue-tv-maze/./node_modules/core-js/internals/descriptors.js","webpack://vue-tv-maze/./node_modules/core-js/internals/document-all.js","webpack://vue-tv-maze/./node_modules/core-js/internals/document-create-element.js","webpack://vue-tv-maze/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://vue-tv-maze/./node_modules/core-js/internals/dom-exception-constants.js","webpack://vue-tv-maze/./node_modules/core-js/internals/engine-user-agent.js","webpack://vue-tv-maze/./node_modules/core-js/internals/engine-v8-version.js","webpack://vue-tv-maze/./node_modules/core-js/internals/enum-bug-keys.js","webpack://vue-tv-maze/./node_modules/core-js/internals/error-stack-clear.js","webpack://vue-tv-maze/./node_modules/core-js/internals/export.js","webpack://vue-tv-maze/./node_modules/core-js/internals/fails.js","webpack://vue-tv-maze/./node_modules/core-js/internals/function-bind-native.js","webpack://vue-tv-maze/./node_modules/core-js/internals/function-call.js","webpack://vue-tv-maze/./node_modules/core-js/internals/function-name.js","webpack://vue-tv-maze/./node_modules/core-js/internals/function-uncurry-this-accessor.js","webpack://vue-tv-maze/./node_modules/core-js/internals/function-uncurry-this.js","webpack://vue-tv-maze/./node_modules/core-js/internals/get-built-in.js","webpack://vue-tv-maze/./node_modules/core-js/internals/get-method.js","webpack://vue-tv-maze/./node_modules/core-js/internals/global.js","webpack://vue-tv-maze/./node_modules/core-js/internals/has-own-property.js","webpack://vue-tv-maze/./node_modules/core-js/internals/hidden-keys.js","webpack://vue-tv-maze/./node_modules/core-js/internals/ie8-dom-define.js","webpack://vue-tv-maze/./node_modules/core-js/internals/indexed-object.js","webpack://vue-tv-maze/./node_modules/core-js/internals/inherit-if-required.js","webpack://vue-tv-maze/./node_modules/core-js/internals/inspect-source.js","webpack://vue-tv-maze/./node_modules/core-js/internals/internal-state.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-array.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-big-int-array.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-callable.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-forced.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-object.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-pure.js","webpack://vue-tv-maze/./node_modules/core-js/internals/is-symbol.js","webpack://vue-tv-maze/./node_modules/core-js/internals/length-of-array-like.js","webpack://vue-tv-maze/./node_modules/core-js/internals/make-built-in.js","webpack://vue-tv-maze/./node_modules/core-js/internals/math-trunc.js","webpack://vue-tv-maze/./node_modules/core-js/internals/normalize-string-argument.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-define-property.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-keys-internal.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://vue-tv-maze/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://vue-tv-maze/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://vue-tv-maze/./node_modules/core-js/internals/own-keys.js","webpack://vue-tv-maze/./node_modules/core-js/internals/require-object-coercible.js","webpack://vue-tv-maze/./node_modules/core-js/internals/shared-key.js","webpack://vue-tv-maze/./node_modules/core-js/internals/shared-store.js","webpack://vue-tv-maze/./node_modules/core-js/internals/shared.js","webpack://vue-tv-maze/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-absolute-index.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-big-int.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-indexed-object.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-length.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-object.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-primitive.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-property-key.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-string-tag-support.js","webpack://vue-tv-maze/./node_modules/core-js/internals/to-string.js","webpack://vue-tv-maze/./node_modules/core-js/internals/try-to-string.js","webpack://vue-tv-maze/./node_modules/core-js/internals/uid.js","webpack://vue-tv-maze/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://vue-tv-maze/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://vue-tv-maze/./node_modules/core-js/internals/validate-arguments-length.js","webpack://vue-tv-maze/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://vue-tv-maze/./node_modules/core-js/internals/well-known-symbol.js","webpack://vue-tv-maze/./node_modules/core-js/modules/es.array.push.js","webpack://vue-tv-maze/./node_modules/core-js/modules/es.typed-array.to-reversed.js","webpack://vue-tv-maze/./node_modules/core-js/modules/es.typed-array.to-sorted.js","webpack://vue-tv-maze/./node_modules/core-js/modules/es.typed-array.with.js","webpack://vue-tv-maze/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://vue-tv-maze/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://vue-tv-maze/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://vue-tv-maze/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://vue-tv-maze/./node_modules/idb/build/wrap-idb-value.js","webpack://vue-tv-maze/./node_modules/idb/build/index.js","webpack://vue-tv-maze/../../src/platformLoggerService.ts","webpack://vue-tv-maze/../../src/logger.ts","webpack://vue-tv-maze/../../src/constants.ts","webpack://vue-tv-maze/../../src/internal.ts","webpack://vue-tv-maze/../../src/errors.ts","webpack://vue-tv-maze/../../src/firebaseApp.ts","webpack://vue-tv-maze/../../src/api.ts","webpack://vue-tv-maze/../../src/indexeddb.ts","webpack://vue-tv-maze/../../src/heartbeatService.ts","webpack://vue-tv-maze/../../src/registerCoreComponents.ts","webpack://vue-tv-maze/../../src/index.ts","webpack://vue-tv-maze/../../src/component.ts","webpack://vue-tv-maze/../../src/provider.ts","webpack://vue-tv-maze/../../src/component_container.ts","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/bind.js","webpack://vue-tv-maze/./node_modules/axios/lib/utils.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/AxiosError.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/null.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/toFormData.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/buildURL.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/InterceptorManager.js","webpack://vue-tv-maze/./node_modules/axios/lib/defaults/transitional.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/browser/index.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/common/utils.js","webpack://vue-tv-maze/./node_modules/axios/lib/platform/index.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://vue-tv-maze/./node_modules/axios/lib/defaults/index.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/transformData.js","webpack://vue-tv-maze/./node_modules/axios/lib/cancel/isCancel.js","webpack://vue-tv-maze/./node_modules/axios/lib/cancel/CanceledError.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/settle.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/cookies.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/combineURLs.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/buildFullPath.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/speedometer.js","webpack://vue-tv-maze/./node_modules/axios/lib/adapters/xhr.js","webpack://vue-tv-maze/./node_modules/axios/lib/adapters/adapters.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/dispatchRequest.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/mergeConfig.js","webpack://vue-tv-maze/./node_modules/axios/lib/env/data.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/validator.js","webpack://vue-tv-maze/./node_modules/axios/lib/core/Axios.js","webpack://vue-tv-maze/./node_modules/axios/lib/cancel/CancelToken.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/spread.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://vue-tv-maze/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://vue-tv-maze/./node_modules/axios/lib/axios.js","webpack://vue-tv-maze/../../index.ts","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/base.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/disposable/disposable.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/array/array.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/event.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/browserfeature.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/string/internal.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/useragent/util.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/reflect/reflect.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/math/integer.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/useragent/useragent.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/useragent/browser.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/useragent/engine.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/browserevent.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/eventtype.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/listenable.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/listenablekey.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/listener.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/listenermap.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/object/object.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/events.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/eventtarget.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/json/json.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/async/freelist.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/async/workqueue.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/async/run.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/string/string.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/xhrio.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/async/throwexception.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/timer/timer.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/async/throttle.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/events/eventhandler.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchanneldebug.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/requeststats.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/errorcode.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/eventtype.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/xmlhttpfactory.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/xmlhttp.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/channelrequest.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/environment.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchannelbase.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/uri/uri.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/disposable/dispose.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/wirev8.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/forwardchannelrequestpool.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/structs/structs.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/uri/utils.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/wire.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/json/nativejsonprocessor.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/netutils.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/fetchxmlhttpfactory.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/functions/functions.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/json/hybrid.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/httpstatus.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/net/rpc/httpcors.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchannelbasetransport.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/crypt/hash.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/crypt/md5.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchanneltransport.js","webpack://vue-tv-maze/../temp/src/index.js","webpack://vue-tv-maze/../../node_modules/google-closure-library/closure/goog/labs/net/webchanneltransportfactory.js","webpack://vue-tv-maze/../src/auth/user.ts","webpack://vue-tv-maze/../src/core/version.ts","webpack://vue-tv-maze/../src/util/log.ts","webpack://vue-tv-maze/../src/platform/browser/format_json.ts","webpack://vue-tv-maze/../src/util/assert.ts","webpack://vue-tv-maze/../src/util/error.ts","webpack://vue-tv-maze/../src/util/promise.ts","webpack://vue-tv-maze/../src/api/credentials.ts","webpack://vue-tv-maze/../src/platform/browser/random_bytes.ts","webpack://vue-tv-maze/../src/util/misc.ts","webpack://vue-tv-maze/../src/lite-api/timestamp.ts","webpack://vue-tv-maze/../src/core/snapshot_version.ts","webpack://vue-tv-maze/../src/model/path.ts","webpack://vue-tv-maze/../src/model/document_key.ts","webpack://vue-tv-maze/../src/model/field_index.ts","webpack://vue-tv-maze/../src/local/persistence_transaction.ts","webpack://vue-tv-maze/../src/local/local_store.ts","webpack://vue-tv-maze/../src/local/persistence_promise.ts","webpack://vue-tv-maze/../src/local/simple_db.ts","webpack://vue-tv-maze/../src/core/listen_sequence.ts","webpack://vue-tv-maze/../src/util/types.ts","webpack://vue-tv-maze/../src/local/indexeddb_sentinels.ts","webpack://vue-tv-maze/../src/local/indexeddb_schema_legacy.ts","webpack://vue-tv-maze/../src/util/obj.ts","webpack://vue-tv-maze/../src/util/sorted_map.ts","webpack://vue-tv-maze/../src/util/sorted_set.ts","webpack://vue-tv-maze/../src/model/field_mask.ts","webpack://vue-tv-maze/../src/util/base64_decode_error.ts","webpack://vue-tv-maze/../src/util/byte_string.ts","webpack://vue-tv-maze/../src/platform/browser/base64.ts","webpack://vue-tv-maze/../src/model/normalize.ts","webpack://vue-tv-maze/../src/model/server_timestamps.ts","webpack://vue-tv-maze/../src/core/database_info.ts","webpack://vue-tv-maze/../src/model/values.ts","webpack://vue-tv-maze/../src/model/object_value.ts","webpack://vue-tv-maze/../src/model/document.ts","webpack://vue-tv-maze/../src/core/bound.ts","webpack://vue-tv-maze/../src/core/order_by.ts","webpack://vue-tv-maze/../src/core/filter.ts","webpack://vue-tv-maze/../src/core/target.ts","webpack://vue-tv-maze/../src/core/query.ts","webpack://vue-tv-maze/../src/util/obj_map.ts","webpack://vue-tv-maze/../src/model/collections.ts","webpack://vue-tv-maze/../src/remote/number_serializer.ts","webpack://vue-tv-maze/../src/model/transform_operation.ts","webpack://vue-tv-maze/../src/model/mutation.ts","webpack://vue-tv-maze/../src/model/mutation_batch.ts","webpack://vue-tv-maze/../src/model/overlay.ts","webpack://vue-tv-maze/../src/remote/existence_filter.ts","webpack://vue-tv-maze/../src/remote/rpc_error.ts","webpack://vue-tv-maze/../src/util/testing_hooks_spi.ts","webpack://vue-tv-maze/../src/platform/browser/text_serializer.ts","webpack://vue-tv-maze/../src/remote/bloom_filter.ts","webpack://vue-tv-maze/../src/remote/remote_event.ts","webpack://vue-tv-maze/../src/remote/watch_change.ts","webpack://vue-tv-maze/../src/remote/serializer.ts","webpack://vue-tv-maze/../src/local/target_data.ts","webpack://vue-tv-maze/../src/local/local_serializer.ts","webpack://vue-tv-maze/../src/index/firestore_index_value_writer.ts","webpack://vue-tv-maze/../src/local/memory_index_manager.ts","webpack://vue-tv-maze/../src/local/indexeddb_index_manager.ts","webpack://vue-tv-maze/../src/local/lru_garbage_collector.ts","webpack://vue-tv-maze/../src/core/target_id_generator.ts","webpack://vue-tv-maze/../src/local/remote_document_change_buffer.ts","webpack://vue-tv-maze/../src/local/overlayed_document.ts","webpack://vue-tv-maze/../src/local/local_documents_view.ts","webpack://vue-tv-maze/../src/local/memory_bundle_cache.ts","webpack://vue-tv-maze/../src/local/memory_document_overlay_cache.ts","webpack://vue-tv-maze/../src/local/reference_set.ts","webpack://vue-tv-maze/../src/local/memory_mutation_queue.ts","webpack://vue-tv-maze/../src/local/memory_remote_document_cache.ts","webpack://vue-tv-maze/../src/local/memory_target_cache.ts","webpack://vue-tv-maze/../src/local/memory_persistence.ts","webpack://vue-tv-maze/../src/local/local_view_changes.ts","webpack://vue-tv-maze/../src/local/query_context.ts","webpack://vue-tv-maze/../src/local/query_engine.ts","webpack://vue-tv-maze/../src/local/local_store_impl.ts","webpack://vue-tv-maze/../src/local/shared_client_state.ts","webpack://vue-tv-maze/../src/remote/connectivity_monitor_noop.ts","webpack://vue-tv-maze/../src/platform/browser/connectivity_monitor.ts","webpack://vue-tv-maze/../src/util/debug_uid.ts","webpack://vue-tv-maze/../src/remote/rest_connection.ts","webpack://vue-tv-maze/../src/remote/stream_bridge.ts","webpack://vue-tv-maze/../src/platform/browser/webchannel_connection.ts","webpack://vue-tv-maze/../src/platform/browser/dom.ts","webpack://vue-tv-maze/../src/platform/browser/serializer.ts","webpack://vue-tv-maze/../src/remote/backoff.ts","webpack://vue-tv-maze/../src/remote/persistent_stream.ts","webpack://vue-tv-maze/../src/remote/datastore.ts","webpack://vue-tv-maze/../src/remote/online_state_tracker.ts","webpack://vue-tv-maze/../src/remote/remote_store.ts","webpack://vue-tv-maze/../src/util/async_queue.ts","webpack://vue-tv-maze/../src/model/document_set.ts","webpack://vue-tv-maze/../src/core/view_snapshot.ts","webpack://vue-tv-maze/../src/core/event_manager.ts","webpack://vue-tv-maze/../src/core/view.ts","webpack://vue-tv-maze/../src/core/sync_engine_impl.ts","webpack://vue-tv-maze/../src/core/component_provider.ts","webpack://vue-tv-maze/../src/platform/browser/connection.ts","webpack://vue-tv-maze/../src/util/async_observer.ts","webpack://vue-tv-maze/../src/core/firestore_client.ts","webpack://vue-tv-maze/../src/api/long_polling_options.ts","webpack://vue-tv-maze/../src/lite-api/components.ts","webpack://vue-tv-maze/../src/util/input_validation.ts","webpack://vue-tv-maze/../src/lite-api/settings.ts","webpack://vue-tv-maze/../src/local/lru_garbage_collector_impl.ts","webpack://vue-tv-maze/../src/lite-api/database.ts","webpack://vue-tv-maze/../src/lite-api/reference.ts","webpack://vue-tv-maze/../src/util/async_queue_impl.ts","webpack://vue-tv-maze/../src/api/database.ts","webpack://vue-tv-maze/../src/lite-api/bytes.ts","webpack://vue-tv-maze/../src/lite-api/field_path.ts","webpack://vue-tv-maze/../src/lite-api/field_value.ts","webpack://vue-tv-maze/../src/lite-api/geo_point.ts","webpack://vue-tv-maze/../src/lite-api/user_data_reader.ts","webpack://vue-tv-maze/../src/lite-api/snapshot.ts","webpack://vue-tv-maze/../src/lite-api/query.ts","webpack://vue-tv-maze/../src/lite-api/user_data_writer.ts","webpack://vue-tv-maze/../src/lite-api/reference_impl.ts","webpack://vue-tv-maze/../src/api/snapshot.ts","webpack://vue-tv-maze/../src/api/reference_impl.ts","webpack://vue-tv-maze/../src/api/persistent_cache_index_manager.ts","webpack://vue-tv-maze/../src/register.ts","webpack://vue-tv-maze/../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import { extend, isArray, isSymbol, isMap, isIntegerKey, hasOwn, hasChanged, isObject, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { effect: activeEffect, target, type, key } : void 0;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (!!(process.env.NODE_ENV !== \"production\") && activeEffect.onTrack) {\n      activeEffect.onTrack(\n        extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || !isSymbol(key2) && key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { target, type, key, newValue, oldValue, oldTarget } : void 0;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (!!(process.env.NODE_ENV !== \"production\") && effect2.onTrigger) {\n      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _shallow = false) {\n    this._isReadonly = _isReadonly;\n    this._shallow = _shallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, shallow = this._shallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(false, shallow);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!this._shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(true, shallow);\n  }\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(\n  true\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      trackEffects(ref2.dep || (ref2.dep = createDep()));\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(dep);\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, getCurrentScope, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, shallowReadonly, track, reactive, shallowReactive, trigger, isProxy, proxyRefs, markRaw, EffectScope, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, looseToNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, capitalize, toNumber, hasChanged, remove, isSet, isMap, isPlainObject, isBuiltInDirective, invokeArrayFns, isRegExp, isGloballyAllowed, NO, def, isReservedProp, EMPTY_ARR, toRawType, makeMap, normalizeClass, normalizeStyle } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nfunction warn(msg, ...args) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        msg + args.join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n  return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n  return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = !!(process.env.NODE_ENV !== \"production\") ? ErrorTypeStrings[type] : type;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const info = ErrorTypeStrings[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  } else {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.pre) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!isArray(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(seen, i = isFlushing ? flushIndex + 1 : 0) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n        continue;\n      }\n      activePostFlushCbs[postFlushIndex]();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre)\n      return -1;\n    if (b.pre && !a.pre)\n      return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  queue.sort(comparator);\n  const check = !!(process.env.NODE_ENV !== \"production\") ? (job) => checkRecursiveUpdates(seen, job) : NOOP;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (!!(process.env.NODE_ENV !== \"production\") && check(job)) {\n          continue;\n        }\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      warn(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Set();\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record)\n    return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n    if (!hmrDirtyComponents.has(oldComp)) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.add(oldComp);\n    }\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      queueJob(instance.parent.update);\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n  }\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type)\n      );\n    }\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (devtools) {\n    devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n  devtools = hook;\n  if (devtools) {\n    devtools.enabled = true;\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook(newHook, target);\n    });\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:added\" /* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (devtools && typeof devtools.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !devtools.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:start\" /* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:end\" /* PERFORMANCE_END */\n);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted)\n    return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${toHandlerKey(event)}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber);\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    extend(normalized, raw);\n  }\n  if (isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx)\n    return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      result = normalizeVNode(\n        render.call(\n          proxyToUse,\n          proxyToUse,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (!!(process.env.NODE_ENV !== \"production\") && attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          props,\n          !!(process.env.NODE_ENV !== \"production\") ? {\n            get attrs() {\n              markAttrsAccessed();\n              return attrs;\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          props,\n          null\n          /* we know it doesn't need it */\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (isOn(key)) {\n            if (!isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    root.transition = vnode.transition;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n  if (!childRoot) {\n    return [vnode, void 0];\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (!!(process.env.NODE_ENV !== \"production\") && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n        /* do not include inferred name to avoid breaking existing code */\n      );\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    isSVG,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      isSVG,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(\n          activeBranch,\n          newFallback,\n          container,\n          anchor,\n          parentComponent,\n          null,\n          // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      suspense.pendingId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!!(process.env.NODE_ENV !== \"production\") && true && !hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense == null ? void 0 : parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      let delayEnter = false;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container2, anchor2, 0);\n              queuePostFlushCb(effects);\n            }\n          };\n        }\n        let { anchor: anchor2 } = suspense;\n        if (activeBranch) {\n          anchor2 = next(activeBranch);\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor2, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor && !delayEnter) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, isSVG: isSVG2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          isSVG2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          isSVG,\n          optimized\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    document.createElement(\"div\"),\n    null,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n    /* hydrating */\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!!(process.env.NODE_ENV !== \"production\") && !singleChild && s.filter((child) => child !== NULL_DYNAMIC_COMPONENT).length > 0) {\n      warn(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  const el = vnode.el = branch.el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  var _a;\n  return ((_a = vnode.props) == null ? void 0 : _a.suspensible) != null && vnode.props.suspensible !== false;\n}\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"post\" }) : { flush: \"post\" }\n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"sync\" }) : { flush: \"sync\" }\n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\n  var _a;\n  if (!!(process.env.NODE_ENV !== \"production\") && !cb) {\n    if (immediate !== void 0) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const warnInvalidSource = (s) => {\n    warn(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const instance = getCurrentScope() === ((_a = currentInstance) == null ? void 0 : _a.scope) ? currentInstance : null;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow$1(source);\n  } else if (isReactive(source)) {\n    getter = () => source;\n    deep = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow$1(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return traverse(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(s);\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = NOOP;\n    !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance)\n      job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new ReactiveEffect(getter, scheduler);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  const unwatch = () => {\n    effect.stop();\n    if (instance && instance.scope) {\n      remove(instance.scope.effects, effect);\n    }\n  };\n  if (ssrCleanup)\n    ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, seen) {\n  if (!isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  if (isRef(value)) {\n    traverse(value.value, seen);\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n  return value;\n}\n\nfunction validateDirectiveName(name) {\n  if (isBuiltInDirective(name)) {\n    warn(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n  if (internalInstance === null) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      resetTracking();\n    }\n  }\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        let hasFound = false;\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (!!(process.env.NODE_ENV !== \"production\") && hasFound) {\n              warn(\n                \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n              );\n              break;\n            }\n            child = c;\n            hasFound = true;\n            if (!!!(process.env.NODE_ENV !== \"production\"))\n              break;\n          }\n        }\n      }\n      const rawProps = toRaw(props);\n      const { mode } = rawProps;\n      if (!!(process.env.NODE_ENV !== \"production\") && mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const { getTransitionKey } = innerChild.type;\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n        if (prevTransitionKey === void 0) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      }\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\") {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1))\n        done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      return resolveTransitionHooks(vnode2, props, state, instance);\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? vnode.children ? vnode.children[0] : void 0 : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128)\n        keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineAsyncComponent(source) {\n  if (isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && !comp) {\n        warn(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && comp && !isObject(comp) && !isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n          /* do not throw in dev if user provided error component */\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = ref(false);\n      const error = ref();\n      const delayed = ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        isSVG,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      }\n      pauseTracking();\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, \"\"));\n    warn(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => (\n  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n  (!isInSSRComponentSetup || lifecycle === \"sp\") && injectHook(lifecycle, (...args) => hook(...args), target)\n);\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);\n    }\n  } else if (typeof source === \"number\") {\n    if (!!(process.env.NODE_ENV !== \"production\") && !Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res)\n          res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\")\n      props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (!!(process.env.NODE_ENV !== \"production\") && slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child))\n      return true;\n    if (child.type === Comment)\n      return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!!(process.env.NODE_ENV !== \"production\") && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i)\n    return null;\n  if (isStatefulComponent(i))\n    return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.props) : i.props,\n    $attrs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.attrs) : i.attrs,\n    $slots: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.slots) : i.slots,\n    $refs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.refs) : i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,\n    $forceUpdate: (i) => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP\n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (!!(process.env.NODE_ENV !== \"production\") && key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        track(instance, \"get\", key);\n        !!(process.env.NODE_ENV !== \"production\") && markAttrsAccessed();\n      } else if (!!(process.env.NODE_ENV !== \"production\") && key === \"$slots\") {\n        track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\") && currentRenderingInstance && (!isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (!!(process.env.NODE_ENV !== \"production\") && setupState.__isScriptSetup && hasOwn(setupState, key)) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (hasOwn(instance.props, key)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nif (!!(process.env.NODE_ENV !== \"production\") && true) {\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target, key) {\n      if (key === Symbol.unscopables) {\n        return;\n      }\n      return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n      const has = key[0] !== \"_\" && !isGloballyAllowed(key);\n      if (!!(process.env.NODE_ENV !== \"production\") && !has && PublicInstanceProxyHandlers.has(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        );\n      }\n      return has;\n    }\n  }\n);\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction useModel(props, name, options) {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useModel() called without active instance.`);\n    return ref();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !i.propsOptions[0][name]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`);\n    return ref();\n  }\n  if (options && options.local) {\n    const proxy = ref(props[name]);\n    watch(\n      () => props[name],\n      (v) => proxy.value = v\n    );\n    watch(proxy, (value) => {\n      if (value !== props[name]) {\n        i.emit(`update:${name}`, value);\n      }\n    });\n    return proxy;\n  } else {\n    return {\n      __v_isRef: true,\n      get value() {\n        return props[name];\n      },\n      set value(value) {\n        i.emit(`update:${name}`, value);\n      }\n    };\n  }\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\"))\n      continue;\n    let opt = props[key];\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b)\n    return a || b;\n  if (isArray(a) && isArray(b))\n    return a.concat(b);\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !ctx) {\n    warn(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = !!(process.env.NODE_ENV !== \"production\") ? createDuplicateChecker() : null;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (isFunction(methodHandler)) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!!(process.env.NODE_ENV !== \"production\") && isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!isObject(data)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`data() should return an object.`);\n    } else {\n      instance.data = reactive(data);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;\n      if (!!(process.env.NODE_ENV !== \"production\") && get === NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : !!(process.env.NODE_ENV !== \"production\") ? () => {\n        warn(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } : NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components)\n    instance.components = components;\n  if (directives)\n    instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n          /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (isString(raw)) {\n    const handler = ctx[raw];\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (extend)(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to)\n    return from;\n  if (!from)\n    return to;\n  const merged = extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent);\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      Object.defineProperty(context.config, \"unwrapInjectedRef\", {\n        get() {\n          return true;\n        },\n        set() {\n          warn(\n            `app.config.unwrapInjectedRef has been deprecated. 3.3 now always unwraps injected refs in Options API.`\n          );\n        }\n      });\n    }\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          !!(process.env.NODE_ENV !== \"production\") && warn(`Plugin has already been applied to target app.`);\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        if (__VUE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Mixins are only available in builds supporting Options API\");\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          if (!!(process.env.NODE_ENV !== \"production\") && rootContainer.__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG);\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (!!(process.env.NODE_ENV !== \"production\") && key in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = null;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`injection \"${String(key)}\" not found.`);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = {};\n  def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId)\n      return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(!!(process.env.NODE_ENV !== \"production\") && isInHmrContext(instance)) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n              /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n              /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    trigger(instance, \"set\", \"$attrs\");\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      extend(normalized, props);\n      if (keys)\n        needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR);\n    }\n    return EMPTY_ARR;\n  }\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isObject(raw)) {\n      warn(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\") {\n    return true;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/);\n  return match ? match[2] : ctor === null ? \"null\" : \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (isArray(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null)\n      continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = isArray(value);\n  } else if (expectedType === \"null\") {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && currentInstance) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key))\n      continue;\n    const value = rawSlots[key];\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      if (!!(process.env.NODE_ENV !== \"production\") && true) {\n        warn(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isKeepAlive(instance.vnode) && true) {\n    warn(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      instance.slots = toRaw(children);\n      def(children, \"_\", type);\n    } else {\n      normalizeObjectSlots(\n        children,\n        instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n  def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n        extend(slots, children);\n        trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!!(process.env.NODE_ENV !== \"production\") && !owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null;\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = isString(ref);\n    const _isRef = isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue);\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k)\n                  refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k)\n            refs[rawRef.k] = value;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== \"foreignObject\";\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n    if (hasMismatch && true) {\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3 /* TEXT */) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n            !!(process.env.NODE_ENV !== \"production\") && warn(\n              `Hydration text mismatch:\n- Server rendered: ${JSON.stringify(\n                node.data\n              )}\n- Client rendered: ${JSON.stringify(vnode.children)}`\n            );\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (isTemplateNode(node)) {\n          nextNode = nextSibling(node);\n          replaceNode(\n            vnode.el = node.content.firstChild,\n            node,\n            parentComponent\n          );\n        } else if (domType !== 8 /* COMMENT */ || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 /* ELEMENT */ || domType === 3 /* TEXT */) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 /* ELEMENT */ ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if ((domType !== 1 /* ELEMENT */ || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          if (isFragmentStart) {\n            nextNode = locateClosingAnchor(node);\n          } else if (isComment(node) && node.data === \"teleport start\") {\n            nextNode = locateClosingAnchor(node, node.data, \"teleport end\");\n          } else {\n            nextNode = nextSibling(node);\n          }\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(container),\n            optimized\n          );\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8 /* COMMENT */) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;\n    const forcePatchValue = type === \"input\" && dirs || type === \"option\";\n    if (!!(process.env.NODE_ENV !== \"production\") || forcePatchValue || patchFlag !== -1) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      if (props) {\n        if (forcePatchValue || !optimized || patchFlag & (16 | 32)) {\n          for (const key in props) {\n            if (forcePatchValue && key.endsWith(\"value\") || isOn(key) && !isReservedProp(key)) {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                false,\n                void 0,\n                parentComponent\n              );\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            false,\n            void 0,\n            parentComponent\n          );\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      let needCallTransitionHooks = false;\n      if (isTemplateNode(el)) {\n        needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;\n        const content = el.content.firstChild;\n        if (needCallTransitionHooks) {\n          transition.beforeEnter(content);\n        }\n        replaceNode(content, el, parentComponent);\n        vnode.el = el = content;\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          needCallTransitionHooks && transition.enter(el);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          hasMismatch = true;\n          if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n            warn(\n              `Hydration children mismatch in <${vnode.type}>: server rendered element contains more child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n          !!(process.env.NODE_ENV !== \"production\") && warn(\n            `Hydration text content mismatch in <${vnode.type}>:\n- Server rendered: ${el.textContent}\n- Client rendered: ${vnode.children}`\n          );\n          el.textContent = vnode.children;\n        }\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n        if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n          warn(\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: server rendered element contains fewer child nodes than client vdom.`\n          );\n          hasWarned = true;\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVGContainer(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      hasMismatch = true;\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `Hydration node mismatch:\n- Client vnode:`,\n      vnode.type,\n      `\n- Server rendered DOM:`,\n      node,\n      node.nodeType === 3 /* TEXT */ ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``\n    );\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      isSVGContainer(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAnchor = (node, open = \"[\", close = \"]\") => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === open)\n          match++;\n        if (node.data === close) {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  const replaceNode = (newNode, oldNode, parentComponent) => {\n    const parentNode2 = oldNode.parentNode;\n    if (parentNode2) {\n      parentNode2.replaceChild(newNode, oldNode);\n    }\n    let parent = parentComponent;\n    while (parent) {\n      if (parent.vnode.el === oldNode) {\n        parent.vnode.el = parent.subTree.el = newNode;\n      }\n      parent = parent.parent;\n    }\n  };\n  const isTemplateNode = (node) => {\n    return node.nodeType === 1 /* ELEMENT */ && node.tagName.toLowerCase() === \"template\";\n  };\n  return [hydrate, hydrateNode];\n}\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nfunction initFeatureFlags() {\n  const needWarn = [];\n  if (typeof __VUE_OPTIONS_API__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_OPTIONS_API__`);\n    getGlobalThis().__VUE_OPTIONS_API__ = true;\n  }\n  if (typeof __VUE_PROD_DEVTOOLS__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && needWarn.length) {\n    const multi = needWarn.length > 1;\n    console.warn(\n      `Feature flag${multi ? `s` : ``} ${needWarn.join(\", \")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.\n\nFor more details, see https://link.vuejs.org/feature-flags.`\n    );\n  }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  {\n    initFeatureFlags();\n  }\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = !!(process.env.NODE_ENV !== \"production\") && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          patchStaticNode(n1, n2, container, isSVG);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      isSVG,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        isSVG\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === \"svg\";\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { type, props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      isSVG,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG && type !== \"foreignObject\",\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      Object.defineProperty(el, \"__vnode\", {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, \"__vueParentComponent\", {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (!!(process.env.NODE_ENV !== \"production\") && subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    const areChildrenSVG = isSVG && n2.type !== \"foreignObject\";\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds\n      );\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, isSVG);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, isSVG);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                isSVG,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              isSVG,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (isReservedProp(key))\n          continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && // #5523 dev root fragment may inherit directives\n    (isHmrUpdating || patchFlag & 2048)) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        n2.children,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          traverseStaticChildren(n1, n2);\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          isSVG,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n      return;\n    }\n    setupRenderEffect(\n      instance,\n      initialVNode,\n      container,\n      anchor,\n      parentSuspense,\n      isSVG,\n      optimized\n    );\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `render`);\n            }\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `render`);\n          }\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            isSVG\n          );\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        let originNext = next;\n        let vnodeHook;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n      }\n    };\n    const effect = instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => effect.run();\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      effect.onTrack = instance.rtc ? (e) => invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking();\n    flushPreFlushCbs();\n    resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (!!(process.env.NODE_ENV !== \"production\") && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++)\n        newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode;\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (!!(process.env.NODE_ENV !== \"production\") && vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, update, subTree, um } = instance;\n    if (bum) {\n      invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n    flushPreFlushCbs();\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (isString(targetSelector)) {\n    if (!select) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!target) {\n        !!(process.env.NODE_ENV !== \"production\") && warn(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!!(process.env.NODE_ENV !== \"production\") && !targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport start\") : createText(\"\");\n      const mainAnchor = n2.anchor = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport end\") : createText(\"\");\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText(\"\");\n      if (target) {\n        insert(targetAnchor, target);\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !disabled) {\n        warn(\"Invalid Teleport target on mount:\", target, `(${typeof target})`);\n      }\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        } else {\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\n            n2.props.to = n1.props.to;\n          }\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n    }\n    updateCssVars(n2);\n  },\n  remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n    if (target) {\n      hostRemove(targetAnchor);\n    }\n    doRemove && hostRemove(anchor);\n    if (shapeFlag & 16) {\n      const shouldRemove = doRemove || !isTeleportDisabled(props);\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        unmount(\n          child,\n          parentComponent,\n          parentSuspense,\n          shouldRemove,\n          !!child.dynamicChildren\n        );\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === \"teleport anchor\") {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.children[0].el;\n    while (node && node !== vnode.targetAnchor) {\n      if (node.nodeType === 1)\n        node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n      /* isBlock */\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n      /* isBlock: prevent a block from tracking itself */\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (!!(process.env.NODE_ENV !== \"production\") && n2.shapeFlag & 6 && hmrDirtyComponents.has(n2.type)) {\n    n1.shapeFlag &= ~256;\n    n2.shapeFlag &= ~512;\n    return false;\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? isString(ref) || isRef(ref) || isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= isString(children) ? 8 : 16;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = !!(process.env.NODE_ENV !== \"production\") ? createVNodeWithArgsTransform : _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag |= -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n    if (isObject(style)) {\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style);\n      }\n      props.style = normalizeStyle(style);\n    }\n  }\n  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && shapeFlag & 4 && isProxy(type)) {\n    type = toRaw(type);\n    warn(\n      `Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props)\n    return null;\n  return isProxy(props) || InternalObjectKey in props ? extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  const { props, ref, patchFlag, children } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: !!(process.env.NODE_ENV !== \"production\") && patchFlag === -1 && isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    instance.ctx = createDevRenderContext(instance);\n  } else {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet globalCurrentInstanceSetters;\nlet settersKey = \"__VUE_INSTANCE_SETTERS__\";\n{\n  if (!(globalCurrentInstanceSetters = getGlobalThis()[settersKey])) {\n    globalCurrentInstanceSetters = getGlobalThis()[settersKey] = [];\n  }\n  globalCurrentInstanceSetters.push((i) => currentInstance = i);\n  internalSetCurrentInstance = (instance) => {\n    if (globalCurrentInstanceSetters.length > 1) {\n      globalCurrentInstanceSetters.forEach((s) => s(instance));\n    } else {\n      globalCurrentInstanceSetters[0](instance);\n    }\n  };\n}\nconst setCurrentInstance = (instance) => {\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ makeMap(\"slot,component\");\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || NO;\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [!!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(instance.props) : instance.props, setupContext]\n    );\n    resetTracking();\n    unsetCurrentInstance();\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!!(process.env.NODE_ENV !== \"production\") && !instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (isObject(setupResult)) {\n    if (!!(process.env.NODE_ENV !== \"production\") && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = proxyRefs(setupResult);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\") && setupResult !== void 0) {\n    warn(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  if (__VUE_OPTIONS_API__ && true) {\n    setCurrentInstance(instance);\n    pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      resetTracking();\n      unsetCurrentInstance();\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !Component.render && instance.render === NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".` )\n        /* should not happen */\n      );\n    } else {\n      warn(`Component is missing template or render function.`);\n    }\n  }\n}\nfunction getAttrsProxy(instance) {\n  return instance.attrsProxy || (instance.attrsProxy = new Proxy(\n    instance.attrs,\n    !!(process.env.NODE_ENV !== \"production\") ? {\n      get(target, key) {\n        markAttrsAccessed();\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      },\n      set() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      },\n      deleteProperty() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      }\n    } : {\n      get(target, key) {\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      }\n    }\n  ));\n}\nfunction getSlotsProxy(instance) {\n  return instance.slotsProxy || (instance.slotsProxy = new Proxy(instance.slots, {\n    get(target, key) {\n      track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  }));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    return Object.freeze({\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      get slots() {\n        return getSlotsProxy(instance);\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  } else {\n    return {\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\n\nfunction initCustomFormatter() {\n  if (!!!(process.env.NODE_ENV !== \"production\") || typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#0b1bc9\" };\n  const stringStyle = { style: \"color:#b62e24\" };\n  const keywordStyle = { style: \"color:#9d288c\" };\n  const formatter = {\n    header(obj) {\n      if (!isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          formatValue(obj.value),\n          `>`\n        ];\n      } else if (isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", toRaw(instance.props)));\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (isObject(v)) {\n      return [\"object\", { object: asRaw ? toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (isArray(opts) && opts.includes(key) || isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.3.8\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\n\nexport { BaseTransition, BaseTransitionPropsValidators, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, assertNumber, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineModel, defineOptions, defineProps, defineSlots, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, hasInjectionContext, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeModels, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useModel, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { h, BaseTransition, BaseTransitionPropsValidators, assertNumber, warn, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, isRuntimeOnly, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { extend, isObject, toNumber, isArray, isString, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, camelize as camelize$1, EMPTY_OBJ, looseToNumber, looseIndexOf, isSet, looseEqual, invokeArrayFns, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, isSVG, is, props) => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : void 0);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling))\n          break;\n      }\n    } else {\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n      const template = templateContainer.content;\n      if (isSVG) {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(\n  {},\n  BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\")\n    return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOldKey = Symbol(\"_vod\");\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el[vShowOldKey] = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue)\n      return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nfunction setDisplay(el, value) {\n  el.style.display = value ? el[vShowOldKey] : \"none\";\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = isString(next);\n  if (next && !isCssString) {\n    if (prev && !isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, \"\");\n        }\n      }\n    }\n    for (const key in next) {\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    const currentDisplay = style.display;\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next;\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n    if (vShowOldKey in el) {\n      style.display = currentDisplay;\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null)\n      val = \"\";\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    const isBoolean = isSpecialBooleanAttr(key);\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? \"\" : value);\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    el._value = value;\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (oldValue !== newValue) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map((fn) => (e2) => !e2._stopped && fn && fn(e2));\n  } else {\n    return value;\n  }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (nativeOnRE.test(key) && isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineCustomElement(options, hydrate2) {\n  const Comp = defineComponent(options);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydrate2);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\n/*! #__NO_SIDE_EFFECTS__ */\nconst defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options) => {\n  return /* @__PURE__ */ defineCustomElement(options, hydrate);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate2) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    this._ob = null;\n    if (this.shadowRoot && hydrate2) {\n      hydrate2(this._createVNode(), this.shadowRoot);\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      this.attachShadow({ mode: \"open\" });\n      if (!this._def.__asyncLoader) {\n        this._resolveProps(this._def);\n      }\n    }\n  }\n  connectedCallback() {\n    this._connected = true;\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update();\n      } else {\n        this._resolveDef();\n      }\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    if (this._ob) {\n      this._ob.disconnect();\n      this._ob = null;\n    }\n    nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    this._resolved = true;\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    this._ob = new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    });\n    this._ob.observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize$1(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      this._applyStyles(styles);\n      this._update();\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      asyncDef().then((def) => resolve(def, true));\n    } else {\n      resolve(this._def);\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key], true, false);\n      }\n    }\n    for (const key of declaredPropKeys.map(camelize$1)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    let value = this.getAttribute(key);\n    const camelKey = camelize$1(key);\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value);\n    }\n    this._setProp(camelKey, value, false);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n  _createVNode() {\n    const vnode = createVNode(this._def, extend({}, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.isCE = true;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this.shadowRoot.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args);\n          }\n        };\n        let parent = this;\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            instance.provides = parent._instance.provides;\n            break;\n          }\n        }\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach((css) => {\n        const s = document.createElement(\"style\");\n        s.textContent = css;\n        this.shadowRoot.appendChild(s);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      });\n    }\n  }\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = getCurrentInstance();\n    if (!instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`useCssModule must be called inside setup()`);\n      return EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS modules injected.`);\n      return EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS module named \"${name}\".`);\n      return EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`useCssVars is called without current active component instance.`);\n    return;\n  }\n  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach((node) => setVarsOnNode(node, vars));\n  };\n  const setVars = () => {\n    const vars = getter(instance.proxy);\n    setVarsOnVNode(instance.subTree, vars);\n    updateTeleports(vars);\n  };\n  watchPostEffect(setVars);\n  onMounted(() => {\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, { childList: true });\n    onUnmounted(() => ob.disconnect());\n  });\n}\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  }\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n  if (vnode.shapeFlag & 1 && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach((c) => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode;\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor)\n        break;\n      el = el.nextSibling;\n    }\n  }\n}\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n    }\n  }\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst moveCbKey = Symbol(\"_moveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nconst TransitionGroupImpl = {\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevChildren;\n    let children;\n    onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el[moveCbKey] = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el[moveCbKey] = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || Fragment;\n      prevChildren = children;\n      children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i];\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n          positionMap.set(child, child.el.getBoundingClientRect());\n        }\n      }\n      return createVNode(tag, null, children);\n    };\n  }\n};\nconst removeMode = (props) => delete props.mode;\n/* @__PURE__ */ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el[moveCbKey]) {\n    el[moveCbKey]();\n  }\n  if (el[enterCbKey]) {\n    el[enterCbKey]();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return isArray(fn) ? (value) => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst assignKey = Symbol(\"_assign\");\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing)\n        return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue);\n      }\n      el[assignKey](domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (el.composing)\n      return;\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy) {\n        return;\n      }\n      if (trim && el.value.trim() === value) {\n        return;\n      }\n      if ((number || el.type === \"number\") && looseToNumber(el.value) === value) {\n        return;\n      }\n    }\n    const newValue = value == null ? \"\" : value;\n    if (el.value !== newValue) {\n      el.value = newValue;\n    }\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el[assignKey];\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  if (isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props.value) > -1;\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true));\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props.value);\n    el[assignKey] = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el[assignKey](getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? looseToNumber(getValue(o)) : getValue(o)\n      );\n      el[assignKey](\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n    });\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el[assignKey] = getModelAssigner(vnode);\n  },\n  updated(el, { value }) {\n    setSelected(el, value);\n  }\n};\nfunction setSelected(el, value) {\n  const isMultiple = el.multiple;\n  if (isMultiple && !isArray(value) && !isSet(value)) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArray(value)) {\n        option.selected = looseIndexOf(value, optionValue) > -1;\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i)\n          el.selectedIndex = i;\n        return;\n      }\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  return (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers))\n        return;\n    }\n    return fn(event, ...args);\n  };\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  return (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = hyphenate(event.key);\n    if (modifiers.some((k) => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  };\n};\n\nconst rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container)\n      return;\n    const component = app._component;\n    if (!isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, container instanceof SVGElement);\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, container instanceof SVGElement);\n    }\n  };\n  return app;\n};\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (isString(container)) {\n    const res = document.querySelector(container);\n    if (!!(process.env.NODE_ENV !== \"production\") && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","function makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction((str) => {\n  const s = str ? `on${capitalize(str)}` : ``;\n  return s;\n});\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `HYDRATE_EVENTS`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\nconst isGloballyWhitelisted = isGloballyAllowed;\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props)\n    return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length)\n    return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b)\n    return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n        entries[`${key} =>`] = val2;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyAllowed, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array, transformCaseFunc = stringToLowerCase) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nexport function clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    if (getOwnPropertyDescriptor(object, property) !== undefined) {\n      newObject[property] = value;\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  create,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n} from './utils.js';\n\nconst getGlobal = function () {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, purifyHostElement) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg = {}) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","/*!\n  * vue-router v4.0.13\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = Array.isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (Array.isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${\r\n                // @ts-expect-error: the type is never\r\n                rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ |\r\n                            16 /* NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ | 16 /* NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw new $TypeError('Incorrect invocation');\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = global.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nmodule.exports = function (Constructor, list) {\n  var index = 0;\n  var length = lengthOfArrayLike(list);\n  var result = new Constructor(length);\n  while (length > index) result[index] = list[index++];\n  return result;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toReversed\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed\nmodule.exports = function (O, C) {\n  var len = lengthOfArrayLike(O);\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = O[len - k - 1];\n  return A;\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.with\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\nvar documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\nmodule.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar classof = require('../internals/classof');\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n","'use strict';\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nmodule.exports = false;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\nvar toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.33.2',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar arrayToReversed = require('../internals/array-to-reversed');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\n\n// `%TypedArray%.prototype.toReversed` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nexportTypedArrayMethod('toReversed', function toReversed() {\n  return arrayToReversed(aTypedArray(this), getTypedArrayConstructor(this));\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar sort = uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);\n\n// `%TypedArray%.prototype.toSorted` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted\nexportTypedArrayMethod('toSorted', function toSorted(compareFn) {\n  if (compareFn !== undefined) aCallable(compareFn);\n  var O = aTypedArray(this);\n  var A = arrayFromConstructorAndList(getTypedArrayConstructor(O), O);\n  return sort(A, compareFn);\n});\n","'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER);\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = new Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in new Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(global, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.hasStandardBrowserEnv) {\n      // Add xsrf header\n      // regarding CVE-2023-45857 config.withCredentials condition was removed temporarily\n      const xsrfValue = isURLSameOrigin(fullPath) && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.1\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @suppress {deprecated} Users cannot remove deprecated uses here.\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global object.\n * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-global-object\n *\n * More info on this implementation here:\n * https://docs.google.com/document/d/1NAeW4Wk7I7FV0Y2tcUFvQdGMc89k2vdgSXInw8_nvCI/edit\n *\n * @const\n * @suppress {undefinedVars} self won't be referenced unless `this` is falsy.\n * @type {!Global}\n */\ngoog.global =\n    // Check `this` first for backwards compatibility.\n    // Valid unless running as an ES module or in a function wrapper called\n    //   without setting `this` properly.\n    // Note that base.js can't usefully be imported as an ES module, but it may\n    // be compiled into bundles that are loadable as ES modules.\n    this ||\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n    // For in-page browser environments and workers.\n    self;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * Currently the Closure Compiler will only recognize very simple definitions of\n * this value when looking for values to apply to compiled code and ignore all\n * other references.  Specifically, it looks the value defined at the variable\n * declaration, as with the example above.\n *\n * TODO(user): Improve the recognized definitions.\n *\n * @type {!Object<string, (string|number|boolean)>|null|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name The name of the object that this file defines.\n * @param {*=} object The object to expose at the end of the path.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether object should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @param {?Object=} objectToExportTo The object to add the path to; if this\n *     field is not specified, its value defaults to `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {\n  var parts = name.split('.');\n  var cur = objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && object !== undefined) {\n      if (!overwriteImplicit && goog.isObject(object) &&\n          goog.isObject(cur[part])) {\n        // Merge properties on object (the input parameter) with the existing\n        // implicitly defined namespace, so as to not clobber previously\n        // defined child namespaces.\n        for (var prop in object) {\n          if (object.hasOwnProperty(prop)) {\n            cur[part][prop] = object[prop];\n          }\n        }\n      } else {\n        // Either there is no existing implicit namespace, or overwriteImplicit\n        // is set to true, so directly assign object (the input parameter) to\n        // the namespace.\n        cur[part] = object;\n      }\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler options or the\n * value set in the CLOSURE_DEFINES object. Returns the defined value so that it\n * can be used safely in modules. Note that the value type MUST be either\n * boolean, number, or string.\n *\n * @param {string} name The distinguished name to provide.\n * @param {T} defaultValue\n * @return {T} The defined value.\n * @template T\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  return value;\n};\n\n\n/**\n * @define {number} Integer year indicating the set of browser features that are\n * guaranteed to be present.  This is defined to include exactly features that\n * work correctly on all \"modern\" browsers that are stable on January 1 of the\n * specified year.  For example,\n * ```js\n * if (goog.FEATURESET_YEAR >= 2019) {\n *   // use APIs known to be available on all major stable browsers Jan 1, 2019\n * } else {\n *   // polyfill for older browsers\n * }\n * ```\n * This is intended to be the primary define for removing\n * unnecessary browser compatibility code (such as ponyfills and workarounds),\n * and should inform the default value for most other defines:\n * ```js\n * const ASSUME_NATIVE_PROMISE =\n *     goog.define('ASSUME_NATIVE_PROMISE', goog.FEATURESET_YEAR >= 2016);\n * ```\n *\n * The default assumption is that IE9 is the lowest supported browser, which was\n * first available Jan 1, 2012.\n *\n * TODO(user): Reference more thorough documentation when it's available.\n */\ngoog.FEATURESET_YEAR = goog.define('goog.FEATURESET_YEAR', 2012);\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.DEBUG = goog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.LOCALE = goog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.TRUSTED_SITE = goog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.DISALLOW_TEST_ONLY_CODE =\n    goog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING =\n    goog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * deprecated Use goog.module (see b/159289405)\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide cannot be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {?Object=} object The object to embed in the namespace.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether opt_obj should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @private\n */\ngoog.constructNamespace_ = function(name, object, overwriteImplicit) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, object, overwriteImplicit);\n};\n\n\n/**\n * According to the CSP3 spec a nonce must be a valid base64 string.\n * @see https://www.w3.org/TR/CSP3/#grammardef-base64-value\n * @private @const\n */\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {?Window=} opt_window The window context used to retrieve the nonce.\n *     Defaults to global context.\n * @return {string} CSP nonce or empty string if no nonce is present.\n * @private\n */\ngoog.getScriptNonce_ = function(opt_window) {\n  var doc = (opt_window || goog.global).document;\n  var script = doc.querySelector && doc.querySelector('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    var nonce = script['nonce'] || script.getAttribute('nonce');\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (typeof name !== 'string' || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   type: ?goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module or an es6 module is currently being\n *     initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  var inLoader = !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n\n  if (inLoader) {\n    return true;\n  }\n\n  var jscomp = goog.global['$jscomp'];\n\n  if (jscomp) {\n    // jscomp may not have getCurrentModulePath if this is a compiled bundle\n    // that has some of the runtime, but not all of it. This can happen if\n    // optimizations are turned on so the unused runtime is removed but renaming\n    // and Closure pass are off (so $jscomp is still named $jscomp and the\n    // goog.provide/require calls still exist).\n    if (typeof jscomp.getCurrentModulePath != 'function') {\n      return false;\n    }\n\n    // Bundled ES6 module.\n    return !!jscomp.getCurrentModulePath();\n  }\n\n  return false;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Associates an ES6 module with a Closure module ID so that is available via\n * goog.require. The associated ID  acts like a goog.module ID - it does not\n * create any global names, it is merely available via goog.require /\n * goog.module.get / goog.forwardDeclare / goog.requireType. goog.require and\n * goog.module.get will return the entire module as if it was import *'d. This\n * allows Closure files to reference ES6 modules for the sake of migration.\n *\n * @param {string} namespace\n * @suppress {missingProvide}\n */\ngoog.declareModuleId = function(namespace) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) {\n      throw new Error(\n          'goog.declareModuleId may only be called from ' +\n          'within an ES6 module');\n    }\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {\n      throw new Error(\n          'goog.declareModuleId may only be called once per module.');\n    }\n    if (namespace in goog.loadedModules_) {\n      throw new Error(\n          'Module with namespace \"' + namespace + '\" already exists.');\n    }\n  }\n  if (goog.moduleLoaderState_) {\n    // Not bundled - debug loading.\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    // Bundled - not debug loading, no module loader state.\n    var jscomp = goog.global['$jscomp'];\n    if (!jscomp || typeof jscomp.getCurrentModulePath != 'function') {\n      throw new Error(\n          'Module with namespace \"' + namespace +\n          '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {\n      exports: exports,\n      type: goog.ModuleType.ES6,\n      moduleId: namespace\n    };\n  }\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n * @deprecated See go/noforwarddeclaration, Use `goog.requireType` instead.\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (cur == null) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = goog.define('goog.ENABLE_DEBUG_LOADER', false);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system.\n *\n * Note that all calls to goog.require will be stripped by the compiler.\n *\n * @see goog.provide\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?} If called within a goog.module or ES6 module file, the associated\n *     namespace or module otherwise null.\n */\ngoog.require = function(namespace) {\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(namespace);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(namespace)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(namespace);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(namespace);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Requires a symbol for its type information. This is an indication to the\n * compiler that the symbol may appear in type annotations, yet it is not\n * referenced at runtime.\n *\n * When called within a goog.module or ES6 module file, the return value may be\n * assigned to or destructured into a variable, but it may not be otherwise used\n * in code outside of a type annotation.\n *\n * Note that all calls to goog.requireType will be stripped by the compiler.\n *\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?}\n */\ngoog.requireType = function(namespace) {\n  // Return an empty object so that single-level destructuring of the return\n  // value doesn't crash at runtime when using the debug loader. Multi-level\n  // destructuring isn't supported.\n  return {};\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n * @deprecated Use \"@abstract\" annotation instead of goog.abstractMethod in new\n *     code. See\n *     https://github.com/google/closure-compiler/wiki/@abstract-classes-and-methods\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  // Delcare type to avoid conformance violations that ctor.instance_ is unknown\n  /** @type {undefined|!Object} @suppress {underscore} */\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    // Cast to avoid conformance violations that ctor.instance_ is unknown\n    return /** @type {!Object|undefined} */ (ctor.instance_) = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.LOAD_MODULE_USING_EVAL = goog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.SEAL_MODULE_EXPORTS = goog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(sdh): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.TRANSPILE = goog.define('goog.TRANSPILE', 'detect');\n\n/**\n * @define {boolean} If true assume that ES modules have already been\n * transpiled by the jscompiler (in the same way that transpile.js would\n * transpile them - to jscomp modules). Useful only for servers that wish to use\n * the debug loader and transpile server side. Thus this is only respected if\n * goog.TRANSPILE is \"never\".\n */\ngoog.ASSUME_ES_MODULES_TRANSPILED =\n    goog.define('goog.ASSUME_ES_MODULES_TRANSPILED', false);\n\n\n/**\n * @define {string} Trusted Types policy name. If non-empty then Closure will\n * use Trusted Types.\n */\ngoog.TRUSTED_TYPES_POLICY_NAME =\n    goog.define('goog.TRUSTED_TYPES_POLICY_NAME', 'goog');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n */\ngoog.loadModule = function(moduleDef) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG\n    };\n    var origExports = {};\n    var exports = origExports;\n    if (typeof moduleDef === 'function') {\n      exports = moduleDef.call(undefined, exports);\n    } else if (typeof moduleDef === 'string') {\n      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (typeof moduleName === 'string' && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        // Whether exports was overwritten via default export assignment.\n        // This is important for legacy namespaces as it dictates whether\n        // previously a previously loaded implicit namespace should be clobbered\n        // or not.\n        var isDefaultExport = origExports !== exports;\n        goog.constructNamespace_(moduleName, exports, isDefaultExport);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ =\n    /** @type {function(!Object, string):?} */ (function(exports) {\n      // NOTE: we avoid declaring parameters or local variables here to avoid\n      // masking globals or leaking values into the module definition.\n      'use strict';\n      eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));\n      return exports;\n    });\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n\n  if (s != 'object') {\n    return s;\n  }\n\n  if (!value) {\n    return 'null';\n  }\n\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) &&\n      obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    if (typeof Map !== 'undefined' && obj instanceof Map) {\n      return new Map(obj);\n    } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n      return new Set(obj);\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n * @deprecated use `=> {}` or Function.prototype.bind instead.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(/** @type {?} */ (this), newArgs);\n  };\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n * @deprecated Use Date.now\n */\ngoog.now = function() {\n  return Date.now();\n};\n\n\n/**\n * Evals JavaScript in the global scope.\n *\n * Throws an exception if neither execScript or eval is defined.\n * @param {string|!TrustedScript} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  (0, eval)(script);\n};\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n/**\n * Options bag type for `goog.getMsg()` third argument.\n *\n * It is important to note that these options need to be known at compile time,\n * so they must always be provided to `goog.getMsg()` as an actual object\n * literal in the function call. Otherwise, closure-compiler will report an\n * error.\n * @record\n */\ngoog.GetMsgOptions = function() {};\n\n/**\n * If `true`, escape '<' in the message string to '&lt;'.\n *\n * Used by Closure Templates where the generated code size and performance is\n * critical which is why {@link goog.html.SafeHtmlFormatter} is not used.\n * The value must be literal `true` or `false`.\n * @type {boolean|undefined}\n */\ngoog.GetMsgOptions.prototype.html;\n\n/**\n * If `true`, unescape common html entities: &gt;, &lt;, &apos;, &quot; and\n * &amp;.\n *\n * Used for messages not in HTML context, such as with the `textContent`\n * property.\n * The value must be literal `true` or `false`.\n * @type {boolean|undefined}\n */\ngoog.GetMsgOptions.prototype.unescapeHtmlEntities;\n\n/**\n * Associates placeholder names with strings showing how their values are\n * obtained.\n *\n * This field is intended for use in automatically generated JS code.\n * Human-written code should use meaningful placeholder names instead.\n *\n * closure-compiler uses this as the contents of the `<ph>` tag in the\n * XMB file it generates or defaults to `-` for historical reasons.\n *\n * Must be an object literal.\n * Ignored at runtime.\n * Keys are placeholder names.\n * Values are string literals indicating how the value is obtained.\n * Typically this is a snippet of source code.\n * @type {!Object<string, string>|undefined}\n */\ngoog.GetMsgOptions.prototype.original_code;\n\n/**\n * Associates placeholder names with example values.\n *\n * closure-compiler uses this as the contents of the `<ex>` tag in the\n * XMB file it generates or defaults to `-` for historical reasons.\n *\n * Must be an object literal.\n * Ignored at runtime.\n * Keys are placeholder names.\n * Values are string literals containing example placeholder values.\n * (e.g. \"George McFly\" for a name placeholder)\n * @type {!Object<string, string>|undefined}\n */\ngoog.GetMsgOptions.prototype.example;\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {!Object<string, string>=} opt_values Maps place holder name to value.\n * @param {!goog.GetMsgOptions=} opt_options see `goog.GetMsgOptions`\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values, opt_options) {\n  if (opt_options && opt_options.html) {\n    // Note that '&' is not replaced because the translation can contain HTML\n    // entities.\n    str = str.replace(/</g, '&lt;');\n  }\n  if (opt_options && opt_options.unescapeHtmlEntities) {\n    // Note that \"&amp;\" must be the last to avoid \"creating\" new entities.\n    str = str.replace(/&lt;/g, '<')\n              .replace(/&gt;/g, '>')\n              .replace(/&apos;/g, '\\'')\n              .replace(/&quot;/g, '\"')\n              .replace(/&amp;/g, '&');\n  }\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {?Object=} objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(\n      publicPath, object, /* overwriteImplicit= */ true, objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n * @deprecated Use goog.module instead.\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.defineClass.SEAL_CLASS_INSTANCES =\n    goog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // NOTE: The sealing behavior has been removed\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n/**\n * Returns the parameter.\n * @param {string} s\n * @return {string}\n * @private\n */\ngoog.identity_ = function(s) {\n  return s;\n};\n\n\n/**\n * Creates Trusted Types policy if Trusted Types are supported by the browser.\n * The policy just blesses any string as a Trusted Type. It is not visibility\n * restricted because anyone can also call trustedTypes.createPolicy directly.\n * However, the allowed names should be restricted by a HTTP header and the\n * reference to the created policy should be visibility restricted.\n * @param {string} name\n * @return {?TrustedTypePolicy}\n */\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null;\n  var policyFactory = goog.global.trustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  // trustedTypes.createPolicy throws if called with a name that is already\n  // registered, even in report-only mode. Until the API changes, catch the\n  // error not to break the applications functionally. In such case, the code\n  // will fall back to using regular Safe Types.\n  // TODO(koto): Remove catching once createPolicy API stops throwing.\n  try {\n    policy = policyFactory.createPolicy(name, {\n      createHTML: goog.identity_,\n      createScript: goog.identity_,\n      createScriptURL: goog.identity_\n    });\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n\n  /**\n   * Tries to detect whether the current browser is Edge, based on the user\n   * agent. This matches only pre-Chromium Edge.\n   * @see https://docs.microsoft.com/en-us/microsoft-edge/web-platform/user-agent-string\n   * @return {boolean} True if the current browser is Edge.\n   * @private\n   */\n  goog.isEdge_ = function() {\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n    var edgeRe = /Edge\\/(\\d+)(\\.\\d)*/i;\n    return !!userAgent.match(edgeRe);\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH != undefined &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        typeof goog.global.CLOSURE_BASE_PATH === 'string') {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.slice(l - 7, l) == 'base.js') {\n        goog.basePath = src.slice(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory();\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} namespace\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(namespace) {\n    if (!this.getPathFromDeps_(namespace)) {\n      var errorMessage = 'goog.require could not find: ' + namespace;\n      goog.logToConsole_(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} namespace */\n      var visit = function(namespace) {\n        var path = loader.getPathFromDeps_(namespace);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + namespace);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(namespace);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(type) {\n            goog.moduleLoaderState_ = {\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          /** @type {function(string, string, string=)} */\n          registerEs6ModuleExports: function(\n              path, exports, opt_closureNamespace) {\n            if (opt_closureNamespace) {\n              goog.loadedModules_[opt_closureNamespace] = {\n                exports: exports,\n                type: goog.ModuleType.ES6,\n                moduleId: opt_closureNamespace || ''\n              };\n            }\n          },\n          /** @type {function(string, ?)} */\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   * @param {string=} opt_closureNamespace Closure namespace to associate with\n   *     this module.\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports, opt_closureNamespace) {};\n\n\n  /**\n   * Sets the current module state.\n   *\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @return {string} The pathname part of this dependency's path if it is a\n   *     URI.\n   */\n  goog.Dependency.prototype.getPathName = function() {\n    var pathName = this.path;\n    var protocolIndex = pathName.indexOf('://');\n    if (protocolIndex >= 0) {\n      pathName = pathName.substring(protocolIndex + 3);\n      var slashIndex = pathName.indexOf('/');\n      if (slashIndex >= 0) {\n        pathName = pathName.substring(slashIndex + 1);\n      }\n    }\n    return pathName;\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or setting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    var nonce = goog.getScriptNonce_();\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key;\n      var callback = function(script) {\n        if (script.readyState && script.readyState != 'complete') {\n          script.onload = callback;\n          return;\n        }\n        goog.Dependency.unregisterCallback_(key);\n        controller.loaded();\n      };\n      key = goog.Dependency.registerCallback_(callback);\n\n      var defer = goog.Dependency.defer_ ? ' defer' : '';\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script src=\"' + this.path + '\"' + nonceAttr + defer +\n          ' id=\"script-' + key + '\"><\\/script>';\n\n      script += '<script' + nonceAttr + '>';\n\n      if (goog.Dependency.defer_) {\n        script += 'document.getElementById(\\'script-' + key +\n            '\\').onload = function() {\\n' +\n            '  goog.Dependency.callback_(\\'' + key + '\\', this);\\n' +\n            '};\\n';\n      } else {\n        script += 'goog.Dependency.callback_(\\'' + key +\n            '\\', document.getElementById(\\'script-' + key + '\\'));';\n      }\n\n      script += '<\\/script>';\n\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      scriptEl.onload = function() {\n        scriptEl.onload = null;\n        controller.loaded();\n      };\n\n      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n          goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) :\n          this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides Should be an empty array.\n   *     TODO(johnplaisted) add support for adding closure namespaces to ES6\n   *     modules for interop purposes.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(johnplaisted): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      var nonceAttr = '';\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        nonceAttr = ' nonce=\"' + nonce + '\"';\n      }\n\n      if (contents) {\n        var script = '<script type=\"module\" crossorigin' + nonceAttr + '>' +\n            contents + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script type=\"module\" crossorigin src=\"' + src + '\"' +\n            nonceAttr + '></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      if (contents) {\n        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScript(contents) :\n            contents;\n      } else {\n        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) :\n            src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guaranteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(johnplaisted): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(\n          dep.path, exports, goog.moduleLoaderState_.moduleName);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n\n    /**\n     * Whether to lazily make the synchronous XHR (when goog.require'd) or make\n     * the synchronous XHR when initially loading. On FireFox 61 there is a bug\n     * where an ES6 module cannot make a synchronous XHR (rather, it can, but if\n     * it does then no other ES6 modules will load after).\n     *\n     * tl;dr we lazy load due to bugs on older browsers and eager load due to\n     * bugs on newer ones.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1477090\n     *\n     * @private @const {boolean}\n     */\n    this.lazyFetch_ = !goog.inHtmlDocument_() ||\n        !('noModule' in goog.global.document.createElement('script'));\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    var dep = this;\n\n    function fetch() {\n      dep.contents_ = goog.loadFileSync_(dep.path);\n\n      if (dep.contents_) {\n        dep.contents_ = dep.transform(dep.contents_);\n        if (dep.contents_) {\n          dep.contents_ += '\\n//# sourceURL=' + dep.path;\n        }\n      }\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      fetch();\n      if (this.contents_ &&\n          goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    if (!this.lazyFetch_) {\n      fetch();\n    }\n\n    function load() {\n      if (dep.lazyFetch_) {\n        fetch();\n      }\n\n      if (!dep.contents_) {\n        // loadFileSync_ or transform are responsible. Assume they logged an\n        // error.\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(goog.ModuleType.ES6);\n      }\n\n      var namespace;\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));\n        if (isEs6) {\n          namespace = goog.moduleLoaderState_.moduleName;\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure'](\n            [dep.getPathName()], function() {\n              controller.registerEs6ModuleExports(\n                  dep.path,\n                  goog.global['$jscomp']['require'](dep.getPathName()),\n                  namespace);\n            });\n      }\n\n      controller.loaded();\n    }\n\n    // Do not fetch now; in FireFox 47 the synchronous XHR doesn't block all\n    // events. If we fetched now and then document.write'd the contents the\n    // document.write would be an eval and would execute too soon! Instead write\n    // a script tag to fetch and eval synchronously at the correct time.\n    function fetchInOwnScriptThenLoad() {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        load();\n      });\n\n      var nonce = goog.getScriptNonce_();\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script' + nonceAttr + '>' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    }\n\n    // If one thing is pending it is this.\n    var anythingElsePending = controller.pending().length > 1;\n\n    // Additionally if we are meant to defer scripts but the page is still\n    // loading (e.g. an ES6 module is loading) then also defer. Or if we are\n    // meant to defer and anything else is pending then defer (those may be\n    // scripts that did not need transformation and are just script tags with\n    // defer set to true, and we need to evaluate after that deferred script).\n    var needsAsyncLoading = goog.Dependency.defer_ &&\n        (anythingElsePending || goog.isDocumentLoading_());\n\n    if (needsAsyncLoading) {\n      // Note that we only defer when we have to rather than 100% of the time.\n      // Always defering would work, but then in theory the order of\n      // goog.require calls would then matter. We want to enforce that most of\n      // the time the order of the require calls does not matter.\n      controller.defer(function() {\n        load();\n      });\n      return;\n    }\n    // TODO(johnplaisted): Externs are missing onreadystatechange for\n    // HTMLDocument.\n    /** @type {?} */\n    var doc = goog.global.document;\n\n    var isInternetExplorerOrEdge = goog.inHtmlDocument_() &&\n        ('ActiveXObject' in goog.global || goog.isEdge_());\n\n    // Don't delay in any version of IE or pre-Chromium Edge. There's a bug\n    // around this that will cause out of order script execution. This means\n    // that on older IE ES6 modules will load too early (while the document is\n    // still loading + the dom is not available). The other option is to load\n    // too late (when the document is complete and the onload even will never\n    // fire). This seems to be the lesser of two evils as scripts already act\n    // like the former.\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() &&\n        !isInternetExplorerOrEdge) {\n      goog.Dependency.defer_ = true;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load();\n          controller.resume();\n        }\n        if (typeof oldCallback === 'function') {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      if (!goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {\n        load();\n      } else {\n        fetchInOwnScriptThenLoad();\n      }\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * An ES6 module dependency that was transpiled to a jscomp module outside\n   * of the debug loader, e.g. server side.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.PreTranspiledEs6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.PreTranspiledEs6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(\n      goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(\n      contents) {\n    return contents;\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '});' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ');';\n    }\n  };\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags);\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function() {};\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure’s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        if (goog.ASSUME_ES_MODULES_TRANSPILED) {\n          return new goog.PreTranspiledEs6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        } else {\n          return new goog.Es6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        }\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  /**\n   * Trusted Types policy for the debug loader.\n   * @private @const {?TrustedTypePolicy}\n   */\n  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ?\n      goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + '#base') :\n      null;\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure JavaScript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n\n\nif (!COMPILED) {\n  var isChrome87 = false;\n  // Cannot run check for Chrome <87 bug in case of strict CSP environments.\n  // TODO(user): Remove once Chrome <87 bug is no longer a problem.\n  try {\n    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !==\n        goog.global.trustedTypes.emptyScript;\n  } catch (err) {\n  }\n\n  /**\n   * Trusted Types for running dev servers.\n   *\n   * @private @const\n   */\n  goog.CLOSURE_EVAL_PREFILTER_ =\n      // Detect Chrome <87 bug with TT and eval.\n      goog.global.trustedTypes && isChrome87 &&\n          goog.createTrustedTypesPolicy('goog#base#devonly#eval') ||\n      {createScript: goog.identity_};\n}\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Implements the disposable interface.\n */\n\ngoog.provide('goog.Disposable');\n\ngoog.require('goog.disposable.IDisposable');\ngoog.require('goog.dispose');\n/**\n * TODO(user): Remove this require.\n * @suppress {extraRequire}\n */\ngoog.require('goog.disposeAll');\n\n/**\n * Class that provides the basic implementation for disposable objects. If your\n * class holds references or resources that can't be collected by standard GC,\n * it should extend this class or implement the disposable interface (defined\n * in goog.disposable.IDisposable). See description of\n * goog.disposable.IDisposable for examples of cleanup.\n * @constructor\n * @implements {goog.disposable.IDisposable}\n */\ngoog.Disposable = function() {\n  'use strict';\n  /**\n   * If monitoring the goog.Disposable instances is enabled, stores the creation\n   * stack trace of the Disposable instance.\n   * @type {string|undefined}\n   */\n  this.creationStack;\n\n  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {\n      this.creationStack = new Error().stack;\n    }\n    goog.Disposable.instances_[goog.getUid(this)] = this;\n  }\n  // Support sealing\n  this.disposed_ = this.disposed_;\n  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;\n};\n\n\n/**\n * @enum {number} Different monitoring modes for Disposable.\n */\ngoog.Disposable.MonitoringMode = {\n  /**\n   * No monitoring.\n   */\n  OFF: 0,\n  /**\n   * Creating and disposing the goog.Disposable instances is monitored. All\n   * disposable objects need to call the `goog.Disposable` base\n   * constructor. The PERMANENT mode must be switched on before creating any\n   * goog.Disposable instances.\n   */\n  PERMANENT: 1,\n  /**\n   * INTERACTIVE mode can be switched on and off on the fly without producing\n   * errors. It also doesn't warn if the disposable objects don't call the\n   * `goog.Disposable` base constructor.\n   */\n  INTERACTIVE: 2\n};\n\n\n/**\n * @define {number} The monitoring mode of the goog.Disposable\n *     instances. Default is OFF. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.Disposable.MONITORING_MODE =\n    goog.define('goog.Disposable.MONITORING_MODE', 0);\n\n\n/**\n * @define {boolean} Whether to attach creation stack to each created disposable\n *     instance; This is only relevant for when MonitoringMode != OFF.\n */\ngoog.Disposable.INCLUDE_STACK_ON_CREATION =\n    goog.define('goog.Disposable.INCLUDE_STACK_ON_CREATION', true);\n\n\n/**\n * Maps the unique ID of every undisposed `goog.Disposable` object to\n * the object itself.\n * @type {!Object<number, !goog.Disposable>}\n * @private\n */\ngoog.Disposable.instances_ = {};\n\n\n/**\n * @return {!Array<!goog.Disposable>} All `goog.Disposable` objects that\n *     haven't been disposed of.\n */\ngoog.Disposable.getUndisposedObjects = function() {\n  'use strict';\n  var ret = [];\n  for (var id in goog.Disposable.instances_) {\n    if (goog.Disposable.instances_.hasOwnProperty(id)) {\n      ret.push(goog.Disposable.instances_[Number(id)]);\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Clears the registry of undisposed objects but doesn't dispose of them.\n */\ngoog.Disposable.clearUndisposedObjects = function() {\n  'use strict';\n  goog.Disposable.instances_ = {};\n};\n\n\n/**\n * Whether the object has been disposed of.\n * @type {boolean}\n * @private\n */\ngoog.Disposable.prototype.disposed_ = false;\n\n\n/**\n * Callbacks to invoke when this object is disposed.\n * @type {Array<!Function>}\n * @private\n */\ngoog.Disposable.prototype.onDisposeCallbacks_;\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @override\n */\ngoog.Disposable.prototype.isDisposed = function() {\n  'use strict';\n  return this.disposed_;\n};\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @deprecated Use {@link #isDisposed} instead.\n */\ngoog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;\n\n\n/**\n * Disposes of the object. If the object hasn't already been disposed of, calls\n * {@link #disposeInternal}. Classes that extend `goog.Disposable` should\n * override {@link #disposeInternal} in order to cleanup references, resources\n * and other disposable objects. Reentrant.\n *\n * @return {void} Nothing.\n * @override\n */\ngoog.Disposable.prototype.dispose = function() {\n  'use strict';\n  if (!this.disposed_) {\n    // Set disposed_ to true first, in case during the chain of disposal this\n    // gets disposed recursively.\n    this.disposed_ = true;\n    this.disposeInternal();\n    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n      var uid = goog.getUid(this);\n      if (goog.Disposable.MONITORING_MODE ==\n              goog.Disposable.MonitoringMode.PERMANENT &&\n          !goog.Disposable.instances_.hasOwnProperty(uid)) {\n        throw new Error(\n            this + ' did not call the goog.Disposable base ' +\n            'constructor or was disposed of after a clearUndisposedObjects ' +\n            'call');\n      }\n      if (goog.Disposable.MONITORING_MODE !=\n              goog.Disposable.MonitoringMode.OFF &&\n          this.onDisposeCallbacks_ && this.onDisposeCallbacks_.length > 0) {\n        throw new Error(\n            this + ' did not empty its onDisposeCallbacks queue. This ' +\n            'probably means it overrode dispose() or disposeInternal() ' +\n            'without calling the superclass\\' method.');\n      }\n      delete goog.Disposable.instances_[uid];\n    }\n  }\n};\n\n\n/**\n * Associates a disposable object with this object so that they will be disposed\n * together.\n * @param {goog.disposable.IDisposable} disposable that will be disposed when\n *     this object is disposed.\n */\ngoog.Disposable.prototype.registerDisposable = function(disposable) {\n  'use strict';\n  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));\n};\n\n\n/**\n * Invokes a callback function when this object is disposed. Callbacks are\n * invoked in the order in which they were added. If a callback is added to\n * an already disposed Disposable, it will be called immediately.\n * @param {function(this:T):?} callback The callback function.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @template T\n */\ngoog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {\n  'use strict';\n  if (this.disposed_) {\n    opt_scope !== undefined ? callback.call(opt_scope) : callback();\n    return;\n  }\n  if (!this.onDisposeCallbacks_) {\n    this.onDisposeCallbacks_ = [];\n  }\n\n  this.onDisposeCallbacks_.push(\n      opt_scope !== undefined ? goog.bind(callback, opt_scope) : callback);\n};\n\n\n/**\n * Performs appropriate cleanup. See description of goog.disposable.IDisposable\n * for examples. Classes that extend `goog.Disposable` should override this\n * method. Not reentrant. To avoid calling it twice, it must only be called from\n * the subclass' `disposeInternal` method. Everywhere else the public `dispose`\n * method must be used. For example:\n *\n * <pre>\n * mypackage.MyClass = function() {\n * mypackage.MyClass.base(this, 'constructor');\n *     // Constructor logic specific to MyClass.\n *     ...\n *   };\n *   goog.inherits(mypackage.MyClass, goog.Disposable);\n *\n *   mypackage.MyClass.prototype.disposeInternal = function() {\n *     // Dispose logic specific to MyClass.\n *     ...\n *     // Call superclass's disposeInternal at the end of the subclass's, like\n *     // in C++, to avoid hard-to-catch issues.\n *     mypackage.MyClass.base(this, 'disposeInternal');\n *   };\n * </pre>\n *\n * @protected\n */\ngoog.Disposable.prototype.disposeInternal = function() {\n  'use strict';\n  if (this.onDisposeCallbacks_) {\n    while (this.onDisposeCallbacks_.length) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\n\n\n/**\n * Returns True if we can verify the object is disposed.\n * Calls `isDisposed` on the argument if it supports it.  If obj\n * is not an object with an isDisposed() method, return false.\n * @param {*} obj The object to investigate.\n * @return {boolean} True if we can verify the object is disposed.\n */\ngoog.Disposable.isDisposed = function(obj) {\n  'use strict';\n  if (obj && typeof obj.isDisposed == 'function') {\n    return obj.isDisposed();\n  }\n  return false;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for manipulating arrays.\n */\n\n\ngoog.module('goog.array');\ngoog.module.declareLegacyNamespace();\n\nconst asserts = goog.require('goog.asserts');\n\n\n/**\n * @define {boolean} NATIVE_ARRAY_PROTOTYPES indicates whether the code should\n * rely on Array.prototype functions, if available.\n *\n * The Array.prototype functions can be defined by external libraries like\n * Prototype and setting this flag to false forces closure to use its own\n * goog.array implementation.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on the prototype functions, specify\n * \"--define goog.NATIVE_ARRAY_PROTOTYPES=false\" to the JSCompiler.\n *\n * Setting goog.TRUSTED_SITE to false will automatically set\n * NATIVE_ARRAY_PROTOTYPES to false.\n */\ngoog.NATIVE_ARRAY_PROTOTYPES =\n    goog.define('goog.NATIVE_ARRAY_PROTOTYPES', goog.TRUSTED_SITE);\n\n\n/**\n * @define {boolean} If true, JSCompiler will use the native implementation of\n * array functions where appropriate (e.g., `Array#filter`) and remove the\n * unused pure JS implementation.\n */\nconst ASSUME_NATIVE_FUNCTIONS = goog.define(\n    'goog.array.ASSUME_NATIVE_FUNCTIONS', goog.FEATURESET_YEAR > 2012);\nexports.ASSUME_NATIVE_FUNCTIONS = ASSUME_NATIVE_FUNCTIONS;\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as {@link goog.array.last}.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\nfunction peek(array) {\n  return array[array.length - 1];\n}\nexports.peek = peek;\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as {@link goog.array.peek}.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\nexports.last = peek;\n\n// NOTE(arv): Since most of the array functions are generic it allows you to\n// pass an array-like object. Strings have a length and are considered array-\n// like. However, the 'in' operator does not work on strings so we cannot just\n// use the array path even if the browser supports indexing into strings. We\n// therefore end up splitting the string.\n\n\n/**\n * Returns the index of the first element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-indexof}\n *\n * @param {IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at index 0.\n * @return {number} The index of the first matching array element.\n * @template T\n */\nconst indexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      const fromIndex = opt_fromIndex == null ?\n          0 :\n          (opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) :\n                               opt_fromIndex);\n\n      if (typeof arr === 'string') {\n        // Array.prototype.indexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.indexOf(obj, fromIndex);\n      }\n\n      for (let i = fromIndex; i < arr.length; i++) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\nexports.indexOf = indexOf;\n\n\n/**\n * Returns the index of the last element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-lastindexof}\n *\n * @param {!IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {?number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at the end of the array.\n * @return {number} The index of the last matching array element.\n * @template T\n */\nconst lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      asserts.assert(arr.length != null);\n\n      // Firefox treats undefined and null as 0 in the fromIndex argument which\n      // leads it to always return -1\n      const fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n      return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      let fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n\n      if (fromIndex < 0) {\n        fromIndex = Math.max(0, arr.length + fromIndex);\n      }\n\n      if (typeof arr === 'string') {\n        // Array.prototype.lastIndexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.lastIndexOf(obj, fromIndex);\n      }\n\n      for (let i = fromIndex; i >= 0; i--) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\nexports.lastIndexOf = lastIndexOf;\n\n\n/**\n * Calls a function for each element in an array. Skips holes in the array.\n * See {@link http://tinyurl.com/developer-mozilla-org-array-foreach}\n *\n * @param {IArrayLike<T>|string} arr Array or array like object over\n *     which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function takes 3 arguments (the element, the index and the\n *     array). The return value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @template T,S\n */\nconst forEach = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      Array.prototype.forEach.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n    };\nexports.forEach = forEach;\n\n\n/**\n * Calls a function for each element in an array, starting from the last\n * element rather than the first.\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function\n *     takes 3 arguments (the element, the index and the array). The return\n *     value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @template T,S\n */\nfunction forEachRight(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = l - 1; i >= 0; --i) {\n    if (i in arr2) {\n      f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n    }\n  }\n}\nexports.forEachRight = forEachRight;\n\n\n/**\n * Calls a function for each element in an array, and if the function returns\n * true adds the element to a new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-filter}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?):boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and must\n *     return a Boolean. If the return value is true the element is added to the\n *     result array. If it is false the element is not included.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {!Array<T>} a new array in which only elements that passed the test\n *     are present.\n * @template T,S\n */\nconst filter = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.filter.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const res = [];\n      let resLength = 0;\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          const val = arr2[i];  // in case f mutates arr2\n          if (f.call(/** @type {?} */ (opt_obj), val, i, arr)) {\n            res[resLength++] = val;\n          }\n        }\n      }\n      return res;\n    };\nexports.filter = filter;\n\n\n/**\n * Calls a function for each element in an array and inserts the result into a\n * new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-map}\n *\n * @param {IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): RESULT} f The function to call\n *     for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return something. The result will be\n *     inserted into a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the results from f.\n * @template THIS, VALUE, RESULT\n */\nconst map = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.map.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const res = new Array(l);\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          res[i] = f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n      return res;\n    };\nexports.map = map;\n\n\n/**\n * Passes every element of an array into a function and accumulates the result.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduce}\n * Note that this implementation differs from the native Array.prototype.reduce\n * in that the initial value is assumed to be defined (the MDN docs linked above\n * recommend not omitting this parameter, although it is technically optional).\n *\n * For example:\n * var a = [1, 2, 3, 4];\n * reduce(a, function(r, v, i, arr) {return r + v;}, 0);\n * returns 10\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {R} Result of evaluating f repeatedly across the values of the array.\n * @template T,S,R\n */\nconst reduce = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ?\n    function(arr, f, val, opt_obj) {\n      asserts.assert(arr.length != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduce.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      let rval = val;\n      forEach(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\nexports.reduce = reduce;\n\n\n/**\n * Passes every element of an array into a function and accumulates the result,\n * starting from the last element and working towards the first.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduceright}\n *\n * For example:\n * var a = ['a', 'b', 'c'];\n * reduceRight(a, function(r, v, i, arr) {return r + v;}, '');\n * returns 'cba'\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {R} Object returned as a result of evaluating f repeatedly across the\n *     values of the array.\n * @template T,S,R\n */\nconst reduceRight = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ?\n    function(arr, f, val, opt_obj) {\n      asserts.assert(arr.length != null);\n      asserts.assert(f != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduceRight.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      let rval = val;\n      forEachRight(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\nexports.reduceRight = reduceRight;\n\n\n/**\n * Calls f for each element of an array. If any call returns true, some()\n * returns true (without checking the remaining elements). If all calls\n * return false, some() returns false.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-some}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} true if any element passes the test.\n * @template T,S\n */\nconst some = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.some.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return true;\n        }\n      }\n      return false;\n    };\nexports.some = some;\n\n\n/**\n * Call f for each element of an array. If all calls return true, every()\n * returns true. If any call returns false, every() returns false and\n * does not continue to check the remaining elements.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-every}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} false if any element fails the test.\n * @template T,S\n */\nconst every = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.every.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2 && !f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return false;\n        }\n      }\n      return true;\n    };\nexports.every = every;\n\n\n/**\n * Counts the array elements that fulfill the predicate, i.e. for which the\n * callback function returns true. Skips holes in the array.\n *\n * @param {!IArrayLike<T>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this: S, T, number, ?): boolean} f The function to call for\n *     every element. Takes 3 arguments (the element, the index and the array).\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @return {number} The number of the matching elements.\n * @template T,S\n */\nfunction count(arr, f, opt_obj) {\n  let count = 0;\n  forEach(arr, function(element, index, arr) {\n    if (f.call(/** @type {?} */ (opt_obj), element, index, arr)) {\n      ++count;\n    }\n  }, opt_obj);\n  return count;\n}\nexports.count = count;\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The first array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\nfunction find(arr, f, opt_obj) {\n  const i = findIndex(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n}\nexports.find = find;\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the first array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\nfunction findIndex(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = 0; i < l; i++) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\nexports.findIndex = findIndex;\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The last array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\nfunction findRight(arr, f, opt_obj) {\n  const i = findIndexRight(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n}\nexports.findRight = findRight;\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the last array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\nfunction findIndexRight(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = l - 1; i >= 0; i--) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\nexports.findIndexRight = findIndexRight;\n\n\n/**\n * Whether the array contains the given object.\n * @param {IArrayLike<?>|string} arr The array to test for the presence of the\n *     element.\n * @param {*} obj The object for which to test.\n * @return {boolean} true if obj is present.\n */\nfunction contains(arr, obj) {\n  return indexOf(arr, obj) >= 0;\n}\nexports.contains = contains;\n\n\n/**\n * Whether the array is empty.\n * @param {IArrayLike<?>|string} arr The array to test.\n * @return {boolean} true if empty.\n */\nfunction isEmpty(arr) {\n  return arr.length == 0;\n}\nexports.isEmpty = isEmpty;\n\n\n/**\n * Clears the array.\n * @param {IArrayLike<?>} arr Array or array like object to clear.\n */\nfunction clear(arr) {\n  // For non real arrays we don't have the magic length so we delete the\n  // indices.\n  if (!Array.isArray(arr)) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n}\nexports.clear = clear;\n\n\n/**\n * Pushes an item into an array, if it's not already in the array.\n * @param {Array<T>} arr Array into which to insert the item.\n * @param {T} obj Value to add.\n * @template T\n */\nfunction insert(arr, obj) {\n  if (!contains(arr, obj)) {\n    arr.push(obj);\n  }\n}\nexports.insert = insert;\n\n\n/**\n * Inserts an object at the given index of the array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {*} obj The object to insert.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\nfunction insertAt(arr, obj, opt_i) {\n  splice(arr, opt_i, 0, obj);\n}\nexports.insertAt = insertAt;\n\n\n/**\n * Inserts at the given index of the array, all elements of another array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {IArrayLike<?>} elementsToAdd The array of elements to add.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\nfunction insertArrayAt(arr, elementsToAdd, opt_i) {\n  goog.partial(splice, arr, opt_i, 0).apply(null, elementsToAdd);\n}\nexports.insertArrayAt = insertArrayAt;\n\n\n/**\n * Inserts an object into an array before a specified object.\n * @param {Array<T>} arr The array to modify.\n * @param {T} obj The object to insert.\n * @param {T=} opt_obj2 The object before which obj should be inserted. If obj2\n *     is omitted or not found, obj is inserted at the end of the array.\n * @template T\n */\nfunction insertBefore(arr, obj, opt_obj2) {\n  let i;\n  if (arguments.length == 2 || (i = indexOf(arr, opt_obj2)) < 0) {\n    arr.push(obj);\n  } else {\n    insertAt(arr, obj, i);\n  }\n}\nexports.insertBefore = insertBefore;\n\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {IArrayLike<T>} arr Array from which to remove\n *     value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\nfunction remove(arr, obj) {\n  const i = indexOf(arr, obj);\n  let rv;\n  if ((rv = i >= 0)) {\n    removeAt(arr, i);\n  }\n  return rv;\n}\nexports.remove = remove;\n\n\n/**\n * Removes the last occurrence of a particular value from an array.\n * @param {!IArrayLike<T>} arr Array from which to remove value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\nfunction removeLast(arr, obj) {\n  const i = lastIndexOf(arr, obj);\n  if (i >= 0) {\n    removeAt(arr, i);\n    return true;\n  }\n  return false;\n}\nexports.removeLast = removeLast;\n\n\n/**\n * Removes from an array the element at index i\n * @param {IArrayLike<?>} arr Array or array like object from which to\n *     remove value.\n * @param {number} i The index to remove.\n * @return {boolean} True if an element was removed.\n */\nfunction removeAt(arr, i) {\n  asserts.assert(arr.length != null);\n\n  // use generic form of splice\n  // splice returns the removed items and if successful the length of that\n  // will be 1\n  return Array.prototype.splice.call(arr, i, 1).length == 1;\n}\nexports.removeAt = removeAt;\n\n\n/**\n * Removes the first value that satisfies the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {boolean} True if an element was removed.\n * @template T,S\n */\nfunction removeIf(arr, f, opt_obj) {\n  const i = findIndex(arr, f, opt_obj);\n  if (i >= 0) {\n    removeAt(arr, i);\n    return true;\n  }\n  return false;\n}\nexports.removeIf = removeIf;\n\n\n/**\n * Removes all values that satisfy the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The number of items removed\n * @template T,S\n */\nfunction removeAllIf(arr, f, opt_obj) {\n  let removedCount = 0;\n  forEachRight(arr, function(val, index) {\n    if (f.call(/** @type {?} */ (opt_obj), val, index, arr)) {\n      if (removeAt(arr, index)) {\n        removedCount++;\n      }\n    }\n  });\n  return removedCount;\n}\nexports.removeAllIf = removeAllIf;\n\n\n/**\n * Returns a new array that is the result of joining the arguments.  If arrays\n * are passed then their items are added, however, if non-arrays are passed they\n * will be added to the return array as is.\n *\n * Note that ArrayLike objects will be added as is, rather than having their\n * items added.\n *\n * concat([1, 2], [3, 4]) -> [1, 2, 3, 4]\n * concat(0, [1, 2]) -> [0, 1, 2]\n * concat([1, 2], null) -> [1, 2, null]\n *\n * @param {...*} var_args Items to concatenate.  Arrays will have each item\n *     added, while primitives and objects will be added as is.\n * @return {!Array<?>} The new resultant array.\n */\nfunction concat(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n}\nexports.concat = concat;\n\n\n/**\n * Returns a new array that contains the contents of all the arrays passed.\n * @param {...!Array<T>} var_args\n * @return {!Array<T>}\n * @template T\n */\nfunction join(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n}\nexports.join = join;\n\n\n/**\n * Converts an object to an array.\n * @param {IArrayLike<T>|string} object  The object to convert to an\n *     array.\n * @return {!Array<T>} The object converted into an array. If object has a\n *     length property, every property indexed with a non-negative number\n *     less than length will be included in the result. If object does not\n *     have a length property, an empty array will be returned.\n * @template T\n */\nfunction toArray(object) {\n  const length = object.length;\n\n  // If length is not a number the following is false. This case is kept for\n  // backwards compatibility since there are callers that pass objects that are\n  // not array like.\n  if (length > 0) {\n    const rv = new Array(length);\n    for (let i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n}\nexports.toArray = toArray;\n\n\n/**\n * Does a shallow copy of an array.\n * @param {IArrayLike<T>|string} arr  Array or array-like object to\n *     clone.\n * @return {!Array<T>} Clone of the input array.\n * @template T\n */\nconst clone = toArray;\nexports.clone = clone;\n\n\n/**\n * Extends an array with another array, element, or \"array like\" object.\n * This function operates 'in-place', it does not create a new Array.\n *\n * Example:\n * var a = [];\n * extend(a, [0, 1]);\n * a; // [0, 1]\n * extend(a, 2);\n * a; // [0, 1, 2]\n *\n * @param {Array<VALUE>} arr1  The array to modify.\n * @param {...(IArrayLike<VALUE>|VALUE)} var_args The elements or arrays of\n *     elements to add to arr1.\n * @template VALUE\n */\nfunction extend(arr1, var_args) {\n  for (let i = 1; i < arguments.length; i++) {\n    const arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      const len1 = arr1.length || 0;\n      const len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (let j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n}\nexports.extend = extend;\n\n\n/**\n * Adds or removes elements from an array. This is a generic version of Array\n * splice. This means that it might work on other objects similar to arrays,\n * such as the arguments object.\n *\n * @param {IArrayLike<T>} arr The array to modify.\n * @param {number|undefined} index The index at which to start changing the\n *     array. If not defined, treated as 0.\n * @param {number} howMany How many elements to remove (0 means no removal. A\n *     value below 0 is treated as zero and so is any other non number. Numbers\n *     are floored).\n * @param {...T} var_args Optional, additional elements to insert into the\n *     array.\n * @return {!Array<T>} the removed elements.\n * @template T\n */\nfunction splice(arr, index, howMany, var_args) {\n  asserts.assert(arr.length != null);\n\n  return Array.prototype.splice.apply(arr, slice(arguments, 1));\n}\nexports.splice = splice;\n\n\n/**\n * Returns a new array from a segment of an array. This is a generic version of\n * Array slice. This means that it might work on other objects similar to\n * arrays, such as the arguments object.\n *\n * @param {IArrayLike<T>|string} arr The array from\n * which to copy a segment.\n * @param {number} start The index of the first element to copy.\n * @param {number=} opt_end The index after the last element to copy.\n * @return {!Array<T>} A new array containing the specified segment of the\n *     original array.\n * @template T\n */\nfunction slice(arr, start, opt_end) {\n  asserts.assert(arr.length != null);\n\n  // passing 1 arg to slice is not the same as passing 2 where the second is\n  // null or undefined (in that case the second argument is treated as 0).\n  // we could use slice on the arguments object and then use apply instead of\n  // testing the length\n  if (arguments.length <= 2) {\n    return Array.prototype.slice.call(arr, start);\n  } else {\n    return Array.prototype.slice.call(arr, start, opt_end);\n  }\n}\nexports.slice = slice;\n\n\n/**\n * Removes all duplicates from an array (retaining only the first\n * occurrence of each array element).  This function modifies the\n * array in place and doesn't change the order of the non-duplicate items.\n *\n * For objects, duplicates are identified as having the same unique ID as\n * defined by {@link goog.getUid}.\n *\n * Alternatively you can specify a custom hash function that returns a unique\n * value for each item in the array it should consider unique.\n *\n * Runtime: N,\n * Worstcase space: 2N (no dupes)\n *\n * @param {IArrayLike<T>} arr The array from which to remove\n *     duplicates.\n * @param {Array=} opt_rv An optional array in which to return the results,\n *     instead of performing the removal inplace.  If specified, the original\n *     array will remain unchanged.\n * @param {function(T):string=} opt_hashFn An optional function to use to\n *     apply to every item in the array. This function should return a unique\n *     value for each item in the array it should consider unique.\n * @template T\n */\nfunction removeDuplicates(arr, opt_rv, opt_hashFn) {\n  const returnArray = opt_rv || arr;\n  const defaultHashFn = function(item) {\n    // Prefix each type with a single character representing the type to\n    // prevent conflicting keys (e.g. true and 'true').\n    return goog.isObject(item) ? 'o' + goog.getUid(item) :\n                                 (typeof item).charAt(0) + item;\n  };\n  const hashFn = opt_hashFn || defaultHashFn;\n\n  let cursorInsert = 0;\n  let cursorRead = 0;\n  const seen = {};\n\n  while (cursorRead < arr.length) {\n    const current = arr[cursorRead++];\n    const key = hashFn(current);\n    if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n      seen[key] = true;\n      returnArray[cursorInsert++] = current;\n    }\n  }\n  returnArray.length = cursorInsert;\n}\nexports.removeDuplicates = removeDuplicates;\n\n\n/**\n * Searches the specified array for the specified target using the binary\n * search algorithm.  If no opt_compareFn is specified, elements are compared\n * using <code>defaultCompare</code>, which compares the elements\n * using the built in < and > operators.  This will produce the expected\n * behavior for homogeneous arrays of String(s) and Number(s). The array\n * specified <b>must</b> be sorted in ascending order (as defined by the\n * comparison function).  If the array is not sorted, results are undefined.\n * If the array contains multiple instances of the specified target value, the\n * left-most instance will be found.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {TARGET} target The sought value.\n * @param {function(TARGET, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, the target value and an element from your array, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @template TARGET, VALUE\n */\nfunction binarySearch(arr, target, opt_compareFn) {\n  return binarySearch_(\n      arr, opt_compareFn || defaultCompare, false /* isEvaluator */, target);\n}\nexports.binarySearch = binarySearch;\n\n\n/**\n * Selects an index in the specified array using the binary search algorithm.\n * The evaluator receives an element and determines whether the desired index\n * is before, at, or after it.  The evaluator must be consistent (formally,\n * map(map(arr, evaluator, opt_obj), goog.math.sign)\n * must be monotonically non-increasing).\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {function(this:THIS, VALUE, number, ?): number} evaluator\n *     Evaluator function that receives 3 arguments (the element, the index and\n *     the array). Should return a negative number, zero, or a positive number\n *     depending on whether the desired index is before, at, or after the\n *     element passed to it.\n * @param {THIS=} opt_obj The object to be used as the value of 'this'\n *     within evaluator.\n * @return {number} Index of the leftmost element matched by the evaluator, if\n *     such exists; otherwise (-(insertion point) - 1). The insertion point is\n *     the index of the first element for which the evaluator returns negative,\n *     or arr.length if no such element exists. The return value is non-negative\n *     iff a match is found.\n * @template THIS, VALUE\n */\nfunction binarySelect(arr, evaluator, opt_obj) {\n  return binarySearch_(\n      arr, evaluator, true /* isEvaluator */, undefined /* opt_target */,\n      opt_obj);\n}\nexports.binarySelect = binarySelect;\n\n\n/**\n * Implementation of a binary search algorithm which knows how to use both\n * comparison functions and evaluators. If an evaluator is provided, will call\n * the evaluator with the given optional data object, conforming to the\n * interface defined in binarySelect. Otherwise, if a comparison function is\n * provided, will call the comparison function against the given data object.\n *\n * This implementation purposefully does not use goog.bind or goog.partial for\n * performance reasons.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<?>} arr The array to be searched.\n * @param {function(?, ?, ?): number | function(?, ?): number} compareFn\n *     Either an evaluator or a comparison function, as defined by binarySearch\n *     and binarySelect above.\n * @param {boolean} isEvaluator Whether the function is an evaluator or a\n *     comparison function.\n * @param {?=} opt_target If the function is a comparison function, then\n *     this is the target to binary search for.\n * @param {Object=} opt_selfObj If the function is an evaluator, this is an\n *     optional this object for the evaluator.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @private\n */\nfunction binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  let left = 0;            // inclusive\n  let right = arr.length;  // exclusive\n  let found;\n  while (left < right) {\n    const middle = left + ((right - left) >>> 1);\n    let compareResult;\n    if (isEvaluator) {\n      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);\n    } else {\n      // NOTE(dimvar): To avoid this cast, we'd have to use function overloading\n      // for the type of binarySearch_, which the type system can't express yet.\n      compareResult = /** @type {function(?, ?): number} */ (compareFn)(\n          opt_target, arr[middle]);\n    }\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // We are looking for the lowest index so we can't return immediately.\n      found = !compareResult;\n    }\n  }\n  // left is the index if found, or the insertion point otherwise.\n  // Avoiding bitwise not operator, as that causes a loss in precision for array\n  // indexes outside the bounds of a 32-bit signed integer.  Array indexes have\n  // a maximum value of 2^32-2 https://tc39.es/ecma262/#array-index\n  return found ? left : -left - 1;\n}\n\n\n/**\n * Sorts the specified array into ascending order.  If no opt_compareFn is\n * specified, elements are compared using\n * <code>defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s), unlike the native sort,\n * but will give unpredictable results for heterogeneous lists of strings and\n * numbers with different numbers of digits.\n *\n * This sort is not guaranteed to be stable.\n *\n * Runtime: Same as `Array.prototype.sort`\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T,T):number=} opt_compareFn Optional comparison\n *     function by which the\n *     array is to be ordered. Should take 2 arguments to compare, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @template T\n */\nfunction sort(arr, opt_compareFn) {\n  // TODO(arv): Update type annotation since null is not accepted.\n  arr.sort(opt_compareFn || defaultCompare);\n}\nexports.sort = sort;\n\n\n/**\n * Sorts the specified array into ascending order in a stable way.  If no\n * opt_compareFn is specified, elements are compared using\n * <code>defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s).\n *\n * Runtime: Same as `Array.prototype.sort`, plus an additional\n * O(n) overhead of copying the array twice.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T, T): number=} opt_compareFn Optional comparison function\n *     by which the array is to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T\n */\nfunction stableSort(arr, opt_compareFn) {\n  const compArr = new Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    compArr[i] = {index: i, value: arr[i]};\n  }\n  const valueCompareFn = opt_compareFn || defaultCompare;\n  function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  }\n  sort(compArr, stableCompareFn);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = compArr[i].value;\n  }\n}\nexports.stableSort = stableSort;\n\n\n/**\n * Sort the specified array into ascending order based on item keys\n * returned by the specified key function.\n * If no opt_compareFn is specified, the keys are compared in ascending order\n * using <code>defaultCompare</code>.\n *\n * Runtime: O(S(f(n)), where S is runtime of <code>sort</code>\n * and f(n) is runtime of the key function.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {function(T): K} keyFn Function taking array element and returning\n *     a key used for sorting this element.\n * @param {?function(K, K): number=} opt_compareFn Optional comparison function\n *     by which the keys are to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T,K\n */\nfunction sortByKey(arr, keyFn, opt_compareFn) {\n  const keyCompareFn = opt_compareFn || defaultCompare;\n  sort(arr, function(a, b) {\n    return keyCompareFn(keyFn(a), keyFn(b));\n  });\n}\nexports.sortByKey = sortByKey;\n\n\n/**\n * Sorts an array of objects by the specified object key and compare\n * function. If no compare function is provided, the key values are\n * compared in ascending order using <code>defaultCompare</code>.\n * This won't work for keys that get renamed by the compiler. So use\n * {'foo': 1, 'bar': 2} rather than {foo: 1, bar: 2}.\n * @param {Array<Object>} arr An array of objects to sort.\n * @param {string} key The object key to sort by.\n * @param {Function=} opt_compareFn The function to use to compare key\n *     values.\n */\nfunction sortObjectsByKey(arr, key, opt_compareFn) {\n  sortByKey(arr, function(obj) {\n    return obj[key];\n  }, opt_compareFn);\n}\nexports.sortObjectsByKey = sortObjectsByKey;\n\n\n/**\n * Tells if the array is sorted.\n * @param {!IArrayLike<T>} arr The array.\n * @param {?function(T,T):number=} opt_compareFn Function to compare the\n *     array elements.\n *     Should take 2 arguments to compare, and return a negative number, zero,\n *     or a positive number depending on whether the first argument is less\n *     than, equal to, or greater than the second.\n * @param {boolean=} opt_strict If true no equal elements are allowed.\n * @return {boolean} Whether the array is sorted.\n * @template T\n */\nfunction isSorted(arr, opt_compareFn, opt_strict) {\n  const compare = opt_compareFn || defaultCompare;\n  for (let i = 1; i < arr.length; i++) {\n    const compareResult = compare(arr[i - 1], arr[i]);\n    if (compareResult > 0 || compareResult == 0 && opt_strict) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isSorted = isSorted;\n\n\n/**\n * Compares two arrays for equality. Two arrays are considered equal if they\n * have the same length and their corresponding elements are equal according to\n * the comparison function.\n *\n * @param {IArrayLike<A>} arr1 The first array to compare.\n * @param {IArrayLike<B>} arr2 The second array to compare.\n * @param {?function(A,B):boolean=} opt_equalsFn Optional comparison function.\n *     Should take 2 arguments to compare, and return true if the arguments\n *     are equal. Defaults to {@link goog.array.defaultCompareEquality} which\n *     compares the elements using the built-in '===' operator.\n * @return {boolean} Whether the two arrays are equal.\n * @template A\n * @template B\n */\nfunction equals(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) ||\n      arr1.length != arr2.length) {\n    return false;\n  }\n  const l = arr1.length;\n  const equalsFn = opt_equalsFn || defaultCompareEquality;\n  for (let i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.equals = equals;\n\n\n/**\n * 3-way array compare function.\n * @param {!IArrayLike<VALUE>} arr1 The first array to\n *     compare.\n * @param {!IArrayLike<VALUE>} arr2 The second array to\n *     compare.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is to be ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template VALUE\n */\nfunction compare3(arr1, arr2, opt_compareFn) {\n  const compare = opt_compareFn || defaultCompare;\n  const l = Math.min(arr1.length, arr2.length);\n  for (let i = 0; i < l; i++) {\n    const result = compare(arr1[i], arr2[i]);\n    if (result != 0) {\n      return result;\n    }\n  }\n  return defaultCompare(arr1.length, arr2.length);\n}\nexports.compare3 = compare3;\n\n\n/**\n * Compares its two arguments for order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second,\n *     respectively.\n * @template VALUE\n */\nfunction defaultCompare(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\nexports.defaultCompare = defaultCompare;\n\n\n/**\n * Compares its two arguments for inverse order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second,\n *     respectively.\n * @template VALUE\n */\nfunction inverseDefaultCompare(a, b) {\n  return -defaultCompare(a, b);\n}\nexports.inverseDefaultCompare = inverseDefaultCompare;\n\n\n/**\n * Compares its two arguments for equality, using the built in === operator.\n * @param {*} a The first object to compare.\n * @param {*} b The second object to compare.\n * @return {boolean} True if the two arguments are equal, false otherwise.\n */\nfunction defaultCompareEquality(a, b) {\n  return a === b;\n}\nexports.defaultCompareEquality = defaultCompareEquality;\n\n\n/**\n * Inserts a value into a sorted array. The array is not modified if the\n * value is already present.\n * @param {IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to insert.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was inserted.\n * @template VALUE\n */\nfunction binaryInsert(array, value, opt_compareFn) {\n  const index = binarySearch(array, value, opt_compareFn);\n  if (index < 0) {\n    insertAt(array, value, -(index + 1));\n    return true;\n  }\n  return false;\n}\nexports.binaryInsert = binaryInsert;\n\n\n/**\n * Removes a value from a sorted array.\n * @param {!IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to remove.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was removed.\n * @template VALUE\n */\nfunction binaryRemove(array, value, opt_compareFn) {\n  const index = binarySearch(array, value, opt_compareFn);\n  return (index >= 0) ? removeAt(array, index) : false;\n}\nexports.binaryRemove = binaryRemove;\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {IArrayLike<T>} array The array.\n * @param {function(this:S, T, number, !IArrayLike<T>):?} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index\n *     and the array) and must return a valid object key (a string, number,\n *     etc), or undefined, if that object should not be placed in a bucket.\n * @param {S=} opt_obj The object to be used as the value of 'this' within\n *     sorter.\n * @return {!Object<!Array<T>>} An object, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template T,S\n */\nfunction bucket(array, sorter, opt_obj) {\n  const buckets = {};\n\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    const key = sorter.call(/** @type {?} */ (opt_obj), value, i, array);\n    if (key !== undefined) {\n      // Push the value to the right bucket, creating it if necessary.\n      const bucket = buckets[key] || (buckets[key] = []);\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n}\nexports.bucket = bucket;\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {!IArrayLike<V>} array The array.\n * @param {function(V, number, !IArrayLike<V>):(K|undefined)} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index,\n *     and the array) and must return a value to use as a key, or undefined, if\n *     that object should not be placed in a bucket.\n * @return {!Map<K, !Array<V>>} A map, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template K,V\n */\nfunction bucketToMap(array, sorter) {\n  const /** !Map<K, !Array<V>> */ buckets = new Map();\n\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    const key = sorter(value, i, array);\n    if (key !== undefined) {\n      // Push the value to the right bucket, creating it if necessary.\n      let bucket = buckets.get(key);\n      if (!bucket) {\n        bucket = [];\n        buckets.set(key, bucket);\n      }\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n}\nexports.bucketToMap = bucketToMap;\n\n\n/**\n * Creates a new object built from the provided array and the key-generation\n * function.\n * @param {IArrayLike<T>} arr Array or array like object over\n *     which to iterate whose elements will be the values in the new object.\n * @param {?function(this:S, T, number, ?) : string} keyFunc The function to\n *     call for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a string that will be used as the\n *     key for the element in the new object. If the function returns the same\n *     key for more than one element, the value for that key is\n *     implementation-defined.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within keyFunc.\n * @return {!Object<T>} The new object.\n * @template T,S\n */\nfunction toObject(arr, keyFunc, opt_obj) {\n  const ret = {};\n  forEach(arr, function(element, index) {\n    ret[keyFunc.call(/** @type {?} */ (opt_obj), element, index, arr)] =\n        element;\n  });\n  return ret;\n}\nexports.toObject = toObject;\n\n\n/**\n * Creates a new ES6 Map built from the provided array and the key-generation\n * function.\n * @param {!IArrayLike<V>} arr Array or array like object over which to iterate\n *     whose elements will be the values in the new object.\n * @param {?function(V, number, ?) : K} keyFunc The function to call for every\n *     element. This function takes 3 arguments (the element, the index, and the\n *     array) and should return a value that will be used as the key for the\n *     element in the new object. If the function returns the same key for more\n *     than one element, the value for that key is implementation-defined.\n * @return {!Map<K, V>} The new map.\n * @template K,V\n */\nfunction toMap(arr, keyFunc) {\n  const /** !Map<K, V> */ map = new Map();\n\n  for (let i = 0; i < arr.length; i++) {\n    const element = arr[i];\n    map.set(keyFunc(element, i, arr), element);\n  }\n\n  return map;\n}\nexports.toMap = toMap;\n\n\n/**\n * Creates a range of numbers in an arithmetic progression.\n *\n * Range takes 1, 2, or 3 arguments:\n * <pre>\n * range(5) is the same as range(0, 5, 1) and produces [0, 1, 2, 3, 4]\n * range(2, 5) is the same as range(2, 5, 1) and produces [2, 3, 4]\n * range(-2, -5, -1) produces [-2, -3, -4]\n * range(-2, -5, 1) produces [], since stepping by 1 wouldn't ever reach -5.\n * </pre>\n *\n * @param {number} startOrEnd The starting value of the range if an end argument\n *     is provided. Otherwise, the start value is 0, and this is the end value.\n * @param {number=} opt_end The optional end value of the range.\n * @param {number=} opt_step The step size between range values. Defaults to 1\n *     if opt_step is undefined or 0.\n * @return {!Array<number>} An array of numbers for the requested range. May be\n *     an empty array if adding the step would not converge toward the end\n *     value.\n */\nfunction range(startOrEnd, opt_end, opt_step) {\n  const array = [];\n  let start = 0;\n  let end = startOrEnd;\n  const step = opt_step || 1;\n  if (opt_end !== undefined) {\n    start = startOrEnd;\n    end = opt_end;\n  }\n\n  if (step * (end - start) < 0) {\n    // Sign mismatch: start + step will never reach the end value.\n    return [];\n  }\n\n  if (step > 0) {\n    for (let i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (let i = start; i > end; i += step) {\n      array.push(i);\n    }\n  }\n  return array;\n}\nexports.range = range;\n\n\n/**\n * Returns an array consisting of the given value repeated N times.\n *\n * @param {VALUE} value The value to repeat.\n * @param {number} n The repeat count.\n * @return {!Array<VALUE>} An array with the repeated value.\n * @template VALUE\n */\nfunction repeat(value, n) {\n  const array = [];\n  for (let i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n}\nexports.repeat = repeat;\n\n\n/**\n * Returns an array consisting of every argument with all arrays\n * expanded in-place recursively.\n *\n * @param {...*} var_args The values to flatten.\n * @return {!Array<?>} An array containing the flattened values.\n */\nfunction flatten(var_args) {\n  const CHUNK_SIZE = 8192;\n\n  const result = [];\n  for (let i = 0; i < arguments.length; i++) {\n    const element = arguments[i];\n    if (Array.isArray(element)) {\n      for (let c = 0; c < element.length; c += CHUNK_SIZE) {\n        const chunk = slice(element, c, c + CHUNK_SIZE);\n        const recurseResult = flatten.apply(null, chunk);\n        for (let r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n}\nexports.flatten = flatten;\n\n\n/**\n * Rotates an array in-place. After calling this method, the element at\n * index i will be the element previously at index (i - n) %\n * array.length, for all values of i between 0 and array.length - 1,\n * inclusive.\n *\n * For example, suppose list comprises [t, a, n, k, s]. After invoking\n * rotate(array, 1) (or rotate(array, -4)), array will comprise [s, t, a, n, k].\n *\n * @param {!Array<T>} array The array to rotate.\n * @param {number} n The amount to rotate.\n * @return {!Array<T>} The array.\n * @template T\n */\nfunction rotate(array, n) {\n  asserts.assert(array.length != null);\n\n  if (array.length) {\n    n %= array.length;\n    if (n > 0) {\n      Array.prototype.unshift.apply(array, array.splice(-n, n));\n    } else if (n < 0) {\n      Array.prototype.push.apply(array, array.splice(0, -n));\n    }\n  }\n  return array;\n}\nexports.rotate = rotate;\n\n\n/**\n * Moves one item of an array to a new position keeping the order of the rest\n * of the items. Example use case: keeping a list of JavaScript objects\n * synchronized with the corresponding list of DOM elements after one of the\n * elements has been dragged to a new position.\n * @param {!IArrayLike<?>} arr The array to modify.\n * @param {number} fromIndex Index of the item to move between 0 and\n *     `arr.length - 1`.\n * @param {number} toIndex Target index between 0 and `arr.length - 1`.\n */\nfunction moveItem(arr, fromIndex, toIndex) {\n  asserts.assert(fromIndex >= 0 && fromIndex < arr.length);\n  asserts.assert(toIndex >= 0 && toIndex < arr.length);\n  // Remove 1 item at fromIndex.\n  const removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  // Insert the removed item at toIndex.\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  // We don't use goog.array.insertAt and goog.array.removeAt, because they're\n  // significantly slower than splice.\n}\nexports.moveItem = moveItem;\n\n\n/**\n * Creates a new array for which the element at position i is an array of the\n * ith element of the provided arrays.  The returned array will only be as long\n * as the shortest array provided; additional values are ignored.  For example,\n * the result of zipping [1, 2] and [3, 4, 5] is [[1,3], [2, 4]].\n *\n * This is similar to the zip() function in Python.  See {@link\n * http://docs.python.org/library/functions.html#zip}\n *\n * @param {...!IArrayLike<?>} var_args Arrays to be combined.\n * @return {!Array<!Array<?>>} A new array of arrays created from\n *     provided arrays.\n */\nfunction zip(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  const result = [];\n  let minLen = arguments[0].length;\n  for (let i = 1; i < arguments.length; i++) {\n    if (arguments[i].length < minLen) {\n      minLen = arguments[i].length;\n    }\n  }\n  for (let i = 0; i < minLen; i++) {\n    const value = [];\n    for (let j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i]);\n    }\n    result.push(value);\n  }\n  return result;\n}\nexports.zip = zip;\n\n\n/**\n * Shuffles the values in the specified array using the Fisher-Yates in-place\n * shuffle (also known as the Knuth Shuffle). By default, calls Math.random()\n * and so resets the state of that random number generator. Similarly, may reset\n * the state of any other specified random number generator.\n *\n * Runtime: O(n)\n *\n * @param {!Array<?>} arr The array to be shuffled.\n * @param {function():number=} opt_randFn Optional random function to use for\n *     shuffling.\n *     Takes no arguments, and returns a random number on the interval [0, 1).\n *     Defaults to Math.random() using JavaScript's built-in Math library.\n */\nfunction shuffle(arr, opt_randFn) {\n  const randFn = opt_randFn || Math.random;\n\n  for (let i = arr.length - 1; i > 0; i--) {\n    // Choose a random array index in [0, i] (inclusive with i).\n    const j = Math.floor(randFn() * (i + 1));\n\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n}\nexports.shuffle = shuffle;\n\n\n/**\n * Returns a new array of elements from arr, based on the indexes of elements\n * provided by index_arr. For example, the result of index copying\n * ['a', 'b', 'c'] with index_arr [1,0,0,2] is ['b', 'a', 'a', 'c'].\n *\n * @param {!IArrayLike<T>} arr The array to get a indexed copy from.\n * @param {!IArrayLike<number>} index_arr An array of indexes to get from arr.\n * @return {!Array<T>} A new array of elements from arr in index_arr order.\n * @template T\n */\nfunction copyByIndex(arr, index_arr) {\n  const result = [];\n  forEach(index_arr, function(index) {\n    result.push(arr[index]);\n  });\n  return result;\n}\nexports.copyByIndex = copyByIndex;\n\n\n/**\n * Maps each element of the input array into zero or more elements of the output\n * array.\n *\n * @param {!IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): !Array<RESULT>} f The function\n *     to call for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return an array. The result will be\n *     used to extend a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the concatenation of all arrays\n *     returned from f.\n * @template THIS, VALUE, RESULT\n */\nfunction concatMap(arr, f, opt_obj) {\n  return concat.apply([], map(arr, f, opt_obj));\n}\nexports.concatMap = concatMap;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A base class for event objects.\n */\n\n\ngoog.provide('goog.events.Event');\n\n/**\n * goog.events.Event no longer depends on goog.Disposable. Keep requiring\n * goog.Disposable here to not break projects which assume this dependency.\n * @suppress {extraRequire}\n */\ngoog.require('goog.Disposable');\ngoog.require('goog.events.EventId');\n\n\n/**\n * A base class for event objects, so that they can support preventDefault and\n * stopPropagation.\n *\n * @param {string|!goog.events.EventId} type Event Type.\n * @param {Object=} opt_target Reference to the object that is the target of\n *     this event. It has to implement the `EventTarget` interface\n *     declared at {@link http://developer.mozilla.org/en/DOM/EventTarget}.\n * @constructor\n */\ngoog.events.Event = function(type, opt_target) {\n  'use strict';\n  /**\n   * Event type.\n   * @type {string}\n   */\n  this.type = type instanceof goog.events.EventId ? String(type) : type;\n\n  /**\n   * TODO(tbreisacher): The type should probably be\n   * EventTarget|goog.events.EventTarget.\n   *\n   * Target of the event.\n   * @type {Object|undefined}\n   */\n  this.target = opt_target;\n\n  /**\n   * Object that had the listener attached.\n   * @type {Object|undefined}\n   */\n  this.currentTarget = this.target;\n\n  /**\n   * Whether to cancel the event in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @private\n   */\n  this.propagationStopped_ = false;\n\n  /**\n   * Whether the default action has been prevented.\n   * This is a property to match the W3C specification at\n   * {@link http://www.w3.org/TR/DOM-Level-3-Events/\n   * #events-event-type-defaultPrevented}.\n   * Must be treated as read-only outside the class.\n   * @type {boolean}\n   */\n  this.defaultPrevented = false;\n};\n\n/**\n * @return {boolean} true iff internal propagation has been stopped.\n */\ngoog.events.Event.prototype.hasPropagationStopped = function() {\n  'use strict';\n  return this.propagationStopped_;\n};\n\n/**\n * Stops event propagation.\n * @return {void}\n */\ngoog.events.Event.prototype.stopPropagation = function() {\n  'use strict';\n  this.propagationStopped_ = true;\n};\n\n\n/**\n * Prevents the default action, for example a link redirecting to a url.\n * @return {void}\n */\ngoog.events.Event.prototype.preventDefault = function() {\n  'use strict';\n  this.defaultPrevented = true;\n};\n\n\n/**\n * Stops the propagation of the event. It is equivalent to\n * `e.stopPropagation()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n * @return {void}\n */\ngoog.events.Event.stopPropagation = function(e) {\n  'use strict';\n  e.stopPropagation();\n};\n\n\n/**\n * Prevents the default action. It is equivalent to\n * `e.preventDefault()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n * @return {void}\n */\ngoog.events.Event.preventDefault = function(e) {\n  'use strict';\n  e.preventDefault();\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Browser capability checks for the events package.\n */\n\ngoog.module('goog.events.BrowserFeature');\ngoog.module.declareLegacyNamespace();\n\n\n/**\n * Tricks Closure Compiler into believing that a function is pure.  The compiler\n * assumes that any `valueOf` function is pure, without analyzing its contents.\n *\n * @param {function(): T} fn\n * @return {T}\n * @template T\n */\nconst purify = (fn) => {\n  return ({valueOf: fn}).valueOf();\n};\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\nexports = {\n  /**\n   * Whether touch is enabled in the browser.\n   */\n  TOUCH_ENABLED:\n      ('ontouchstart' in goog.global ||\n       !!(goog.global['document'] && document.documentElement &&\n          'ontouchstart' in document.documentElement) ||\n       // IE10 uses non-standard touch events, so it has a different check.\n       !!(goog.global['navigator'] &&\n          (goog.global['navigator']['maxTouchPoints'] ||\n           goog.global['navigator']['msMaxTouchPoints']))),\n\n  /**\n   * Whether addEventListener supports W3C standard pointer events.\n   * http://www.w3.org/TR/pointerevents/\n   */\n  POINTER_EVENTS: ('PointerEvent' in goog.global),\n\n  /**\n   * Whether addEventListener supports MSPointer events (only used in IE10).\n   * http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n   * http://msdn.microsoft.com/library/hh673557(v=vs.85).aspx\n   */\n  MSPOINTER_EVENTS: false,\n\n  /**\n   * Whether addEventListener supports {passive: true}.\n   * https://developers.google.com/web/updates/2016/06/passive-event-listeners\n   */\n  PASSIVE_EVENTS: purify(function() {\n    // If we're in a web worker or other custom environment, we can't tell.\n    if (!goog.global.addEventListener || !Object.defineProperty) {  // IE 8\n      return false;\n    }\n\n    var passive = false;\n    var options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n    try {\n      goog.global.addEventListener('test', () => {}, options);\n      goog.global.removeEventListener('test', () => {}, options);\n    } catch (e) {\n    }\n\n    return passive;\n  })\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview String functions called from Closure packages that couldn't\n * depend on each other. Outside Closure, use goog.string function which\n * delegate to these.\n */\n\n\ngoog.provide('goog.string.internal');\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n * @see goog.string.startsWith\n */\ngoog.string.internal.startsWith = function(str, prefix) {\n  'use strict';\n  return str.lastIndexOf(prefix, 0) == 0;\n};\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n * @see goog.string.endsWith\n */\ngoog.string.internal.endsWith = function(str, suffix) {\n  'use strict';\n  const l = str.length - suffix.length;\n  return l >= 0 && str.indexOf(suffix, l) == l;\n};\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveStartsWith\n */\ngoog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {\n  'use strict';\n  return (\n      goog.string.internal.caseInsensitiveCompare(\n          prefix, str.slice(0, prefix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveEndsWith\n */\ngoog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {\n  'use strict';\n  return (\n      goog.string.internal.caseInsensitiveCompare(\n          suffix, str.slice(str.length - suffix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n * @see goog.string.caseInsensitiveEquals\n */\ngoog.string.internal.caseInsensitiveEquals = function(str1, str2) {\n  'use strict';\n  return str1.toLowerCase() == str2.toLowerCase();\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @see goog.string.isEmptyOrWhitespace\n */\ngoog.string.internal.isEmptyOrWhitespace = function(str) {\n  'use strict';\n  // testing length == 0 first is actually slower in all browsers (about the\n  // same in Opera).\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return /^[\\s\\xa0]*$/.test(str);\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.internal.trim =\n    (goog.TRUSTED_SITE && String.prototype.trim) ? function(str) {\n      'use strict';\n      return str.trim();\n    } : function(str) {\n      'use strict';\n      // Since IE doesn't include non-breaking-space (0xa0) in their \\s\n      // character class (as required by section 7.2 of the ECMAScript spec),\n      // we explicitly include it in the regexp to enforce consistent\n      // cross-browser behavior.\n      // NOTE: We don't use String#replace because it might have side effects\n      // causing this function to not compile to 0 bytes.\n      return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n    };\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n * @see goog.string.caseInsensitiveCompare\n */\ngoog.string.internal.caseInsensitiveCompare = function(str1, str2) {\n  'use strict';\n  const test1 = String(str1).toLowerCase();\n  const test2 = String(str2).toLowerCase();\n\n  if (test1 < test2) {\n    return -1;\n  } else if (test1 == test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n * @see goog.string.newLineToBr\n */\ngoog.string.internal.newLineToBr = function(str, opt_xml) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? '<br />' : '<br>');\n};\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars\n * @return {string} An escaped copy of `str`.\n * @see goog.string.htmlEscape\n */\ngoog.string.internal.htmlEscape = function(\n    str, opt_isLikelyToContainHtmlChars) {\n  'use strict';\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.internal.AMP_RE_, '&amp;')\n              .replace(goog.string.internal.LT_RE_, '&lt;')\n              .replace(goog.string.internal.GT_RE_, '&gt;')\n              .replace(goog.string.internal.QUOT_RE_, '&quot;')\n              .replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;')\n              .replace(goog.string.internal.NULL_RE_, '&#0;');\n    return str;\n\n  } else {\n    // quick test helps in the case when there are no chars to replace, in\n    // worst case this makes barely a difference to the time taken\n    if (!goog.string.internal.ALL_RE_.test(str)) return str;\n\n    // str.indexOf is faster than regex.test in this case\n    if (str.indexOf('&') != -1) {\n      str = str.replace(goog.string.internal.AMP_RE_, '&amp;');\n    }\n    if (str.indexOf('<') != -1) {\n      str = str.replace(goog.string.internal.LT_RE_, '&lt;');\n    }\n    if (str.indexOf('>') != -1) {\n      str = str.replace(goog.string.internal.GT_RE_, '&gt;');\n    }\n    if (str.indexOf('\"') != -1) {\n      str = str.replace(goog.string.internal.QUOT_RE_, '&quot;');\n    }\n    if (str.indexOf('\\'') != -1) {\n      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;');\n    }\n    if (str.indexOf('\\x00') != -1) {\n      str = str.replace(goog.string.internal.NULL_RE_, '&#0;');\n    }\n    return str;\n  }\n};\n\n\n/**\n * Regular expression that matches an ampersand, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.AMP_RE_ = /&/g;\n\n\n/**\n * Regular expression that matches a less than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.LT_RE_ = /</g;\n\n\n/**\n * Regular expression that matches a greater than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.GT_RE_ = />/g;\n\n\n/**\n * Regular expression that matches a double quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.QUOT_RE_ = /\"/g;\n\n\n/**\n * Regular expression that matches a single quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.SINGLE_QUOTE_RE_ = /'/g;\n\n\n/**\n * Regular expression that matches null character, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.NULL_RE_ = /\\x00/g;\n\n\n/**\n * Regular expression that matches any character that needs to be escaped.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.ALL_RE_ = /[\\x00&<>\"']/;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n * @see goog.string.whitespaceEscape\n */\ngoog.string.internal.whitespaceEscape = function(str, opt_xml) {\n  'use strict';\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.internal.newLineToBr(\n      str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.contains\n */\ngoog.string.internal.contains = function(str, subString) {\n  'use strict';\n  return str.indexOf(subString) != -1;\n};\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.caseInsensitiveContains\n */\ngoog.string.internal.caseInsensitiveContains = function(str, subString) {\n  'use strict';\n  return goog.string.internal.contains(\n      str.toLowerCase(), subString.toLowerCase());\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n * @see goog.string.compareVersions\n */\ngoog.string.internal.compareVersions = function(version1, version2) {\n  'use strict';\n  let order = 0;\n  // Trim leading and trailing whitespace and split the versions into\n  // subversions.\n  const v1Subs = goog.string.internal.trim(String(version1)).split('.');\n  const v2Subs = goog.string.internal.trim(String(version2)).split('.');\n  const subCount = Math.max(v1Subs.length, v2Subs.length);\n\n  // Iterate over the subversions, as long as they appear to be equivalent.\n  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {\n    let v1Sub = v1Subs[subIdx] || '';\n    let v2Sub = v2Subs[subIdx] || '';\n\n    do {\n      // Split the subversions into pairs of numbers and qualifiers (like 'b').\n      // Two different RegExp objects are use to make it clear the code\n      // is side-effect free\n      const v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || ['', '', '', ''];\n      const v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || ['', '', '', ''];\n      // Break if there are no more matches.\n      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {\n        break;\n      }\n\n      // Parse the numeric part of the subversion. A missing number is\n      // equivalent to 0.\n      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);\n      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);\n\n      // Compare the subversion components. The number has the highest\n      // precedence. Next, if the numbers are equal, a subversion without any\n      // qualifier is always higher than a subversion with any qualifier. Next,\n      // the qualifiers are compared as strings.\n      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) ||\n          goog.string.internal.compareElements_(\n              v1Comp[2].length == 0, v2Comp[2].length == 0) ||\n          goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      // Stop as soon as an inequality is discovered.\n\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (order == 0);\n  }\n\n  return order;\n};\n\n\n/**\n * Compares elements of a version number.\n *\n * @param {string|number|boolean} left An element from a version number.\n * @param {string|number|boolean} right An element from a version number.\n *\n * @return {number}  1 if `left` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `right` is higher.\n * @private\n */\ngoog.string.internal.compareElements_ = function(left, right) {\n  'use strict';\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  }\n  return 0;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n *\n */\n\ngoog.module('goog.labs.userAgent.util');\ngoog.module.declareLegacyNamespace();\n\nconst {caseInsensitiveContains, contains} = goog.require('goog.string.internal');\nconst {useClientHints} = goog.require('goog.labs.userAgent');\n\n/**\n * @const {boolean} If true, use navigator.userAgentData without check.\n * TODO(user): FEATURESET_YEAR >= 2024 if it supports mobile and all the\n * brands we need.  See https://caniuse.com/mdn-api_navigator_useragentdata.\n */\nconst ASSUME_CLIENT_HINTS_SUPPORT = false;\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n */\nfunction getNativeUserAgentString() {\n  const navigator = getNavigator();\n  if (navigator) {\n    const userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n}\n\n/**\n * Gets the native userAgentData object from navigator if it exists.\n * If navigator.userAgentData object is missing returns null.\n * @return {?NavigatorUAData}\n */\nfunction getNativeUserAgentData() {\n  const navigator = getNavigator();\n  // TODO(user): Use navigator?.userAgent ?? null once it's supported.\n  if (navigator) {\n    return navigator.userAgentData || null;\n  }\n  return null;\n}\n\n/**\n * Getter for the native navigator.\n * @return {!Navigator}\n */\nfunction getNavigator() {\n  return goog.global.navigator;\n}\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @type {?string}\n */\nlet userAgentInternal = null;\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgentData but use a specified value for detection instead.\n * @type {?NavigatorUAData}\n */\nlet userAgentDataInternal = getNativeUserAgentData();\n\n/**\n * Override the user agent string with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to use the native browser object instead.\n * @param {?string=} userAgent The userAgent override.\n * @return {void}\n */\nfunction setUserAgent(userAgent = undefined) {\n  userAgentInternal =\n      typeof userAgent === 'string' ? userAgent : getNativeUserAgentString();\n}\n\n/** @return {string} The user agent string. */\nfunction getUserAgent() {\n  return userAgentInternal == null ? getNativeUserAgentString() :\n                                     userAgentInternal;\n}\n\n/**\n * Override the user agent data object with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to specify the absence of userAgentData. Note that this behavior\n * is different from setUserAgent.\n * @param {?NavigatorUAData} userAgentData The userAgentData override.\n */\nfunction setUserAgentData(userAgentData) {\n  userAgentDataInternal = userAgentData;\n}\n\n/**\n * If the user agent data object was overridden using setUserAgentData,\n * reset it so that it uses the native browser object instead, if it exists.\n */\nfunction resetUserAgentData() {\n  userAgentDataInternal = getNativeUserAgentData();\n}\n\n/** @return {?NavigatorUAData} Navigator.userAgentData if exist */\nfunction getUserAgentData() {\n  return userAgentDataInternal;\n}\n\n/**\n * Checks if any string in userAgentData.brands matches str.\n * Returns false if userAgentData is not supported.\n * @param {string} str\n * @return {boolean} Whether any brand string from userAgentData contains the\n *     given string.\n */\nfunction matchUserAgentDataBrand(str) {\n  if (!useClientHints()) return false;\n  const data = getUserAgentData();\n  if (!data) return false;\n  return data.brands.some(({brand}) => brand && contains(brand, str));\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\nfunction matchUserAgent(str) {\n  const userAgent = getUserAgent();\n  return contains(userAgent, str);\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\nfunction matchUserAgentIgnoreCase(str) {\n  const userAgent = getUserAgent();\n  return caseInsensitiveContains(userAgent, str);\n}\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents of\n *     the parenthetical.\n */\nfunction extractVersionTuples(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  const versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '([A-Z][\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  const data = [];\n  let match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n}\n\nexports = {\n  ASSUME_CLIENT_HINTS_SUPPORT,\n  extractVersionTuples,\n  getNativeUserAgentString,\n  getUserAgent,\n  getUserAgentData,\n  matchUserAgent,\n  matchUserAgentDataBrand,\n  matchUserAgentIgnoreCase,\n  resetUserAgentData,\n  setUserAgent,\n  setUserAgentData,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Useful compiler idioms.\n */\n\ngoog.provide('goog.reflect');\n\n\n/**\n * Syntax for object literal casts.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an object literal whose keys need to have the same names\n * as the properties of some class even after they are renamed by the compiler.\n *\n * @param {!Function} type Type to cast to.\n * @param {Object} object Object literal to cast.\n * @return {Object} The object literal.\n */\ngoog.reflect.object = function(type, object) {\n  'use strict';\n  return object;\n};\n\n/**\n * Syntax for renaming property strings.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an need to access a property as a string, but want\n * to also have the property renamed by the compiler. In contrast to\n * goog.reflect.object, this method takes an instance of an object.\n *\n * Properties must be simple names (not qualified names).\n *\n * @param {string} prop Name of the property\n * @param {!Object} object Instance of the object whose type will be used\n *     for renaming\n * @return {string} The renamed property.\n */\ngoog.reflect.objectProperty = function(prop, object) {\n  'use strict';\n  return prop;\n};\n\n/**\n * To assert to the compiler that an operation is needed when it would\n * otherwise be stripped. For example:\n * <code>\n *     // Force a layout\n *     goog.reflect.sinkValue(dialog.offsetHeight);\n * </code>\n * @param {T} x\n * @return {T}\n * @template T\n */\ngoog.reflect.sinkValue = function(x) {\n  'use strict';\n  goog.reflect.sinkValue[' '](x);\n  return x;\n};\n\n\n/**\n * The compiler should optimize this function away iff no one ever uses\n * goog.reflect.sinkValue.\n */\ngoog.reflect.sinkValue[' '] = function() {};\n\n\n/**\n * Check if a property can be accessed without throwing an exception.\n * @param {Object} obj The owner of the property.\n * @param {string} prop The property name.\n * @return {boolean} Whether the property is accessible. Will also return true\n *     if obj is null.\n */\ngoog.reflect.canAccessProperty = function(obj, prop) {\n  'use strict';\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\n\n\n/**\n * Retrieves a value from a cache given a key. The compiler provides special\n * consideration for this call such that it is generally considered side-effect\n * free. However, if the `opt_keyFn` or `valueFn` have side-effects\n * then the entire call is considered to have side-effects.\n *\n * Conventionally storing the value on the cache would be considered a\n * side-effect and preclude unused calls from being pruned, ie. even if\n * the value was never used, it would still always be stored in the cache.\n *\n * Providing a side-effect free `valueFn` and `opt_keyFn`\n * allows unused calls to `goog.reflect.cache` to be pruned.\n *\n * @param {!Object<K, V>} cacheObj The object that contains the cached values.\n * @param {?} key The key to lookup in the cache. If it is not string or number\n *     then a `opt_keyFn` should be provided. The key is also used as the\n *     parameter to the `valueFn`.\n * @param {function(?):V} valueFn The value provider to use to calculate the\n *     value to store in the cache. This function should be side-effect free\n *     to take advantage of the optimization.\n * @param {function(?):K=} opt_keyFn The key provider to determine the cache\n *     map key. This should be used if the given key is not a string or number.\n *     If not provided then the given key is used. This function should be\n *     side-effect free to take advantage of the optimization.\n * @return {V} The cached or calculated value.\n * @template K\n * @template V\n */\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  'use strict';\n  const storedKey = opt_keyFn ? opt_keyFn(key) : key;\n\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n\n  return (cacheObj[storedKey] = valueFn(key));\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Defines an Integer class for representing (potentially)\n * infinite length two's-complement integer values.\n *\n * For the specific case of 64-bit integers, use goog.math.Long, which is more\n * efficient.\n */\n\ngoog.provide('goog.math.Integer');\n\ngoog.require('goog.reflect');\n\n/**\n * Constructs a two's-complement integer an array containing bits of the\n * integer in 32-bit (signed) pieces, given in little-endian order (i.e.,\n * lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing\n * Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed\n * pieces, along with a sign (0 or -1) that indicates the contents of all the\n * other 32-bit pieces out to infinity.  We use 32-bit pieces because these are\n * the size of integers on which JavaScript performs bit-operations.  For\n * operations like addition and multiplication, we split each number into 16-bit\n * pieces, which can easily be multiplied within JavaScript's floating-point\n * representation without overflow or change in sign.\n *\n * @struct\n * @constructor\n * @param {Array<number>} bits Array containing the bits of the number.\n * @param {number} sign The sign of the number: -1 for negative and 0 positive.\n * @final\n */\ngoog.math.Integer = function(bits, sign) {\n  'use strict';\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sign_ = sign;\n\n  // Note: using a local variable while initializing the array helps the\n  // compiler understand that assigning to the array is local side-effect and\n  // that enables the entire constructor to be seen as side-effect free.\n  var localBits = [];\n\n  // Copy the 32-bit signed integer values passed in.  We prune out those at the\n  // top that equal the sign since they are redundant.\n  var top = true;\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    var val = bits[i] | 0;\n    if (!top || val != sign) {\n      localBits[i] = val;\n      top = false;\n    }\n  }\n\n  /**\n   * @type {!Array<number>}\n   * @private\n   * @const\n   */\n  this.bits_ = localBits;\n};\n\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Integer representations of small integer values.\n * @type {!Object<number, !goog.math.Integer>}\n * @private\n */\ngoog.math.Integer.IntCache_ = {};\n\n\n/**\n * Returns an Integer representing the given (32-bit) integer value.\n * @param {number} value A 32-bit integer value.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromInt = function(value) {\n  'use strict';\n  if (-128 <= value && value < 128) {\n    return goog.reflect.cache(\n        goog.math.Integer.IntCache_, value, function(val) {\n          'use strict';\n          return new goog.math.Integer([val | 0], val < 0 ? -1 : 0);\n        });\n  }\n  return new goog.math.Integer([value | 0], value < 0 ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representing the given value, provided that it is a finite\n * number.  Otherwise, zero is returned.\n * @param {number} value The value in question.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromNumber = function(value) {\n  'use strict';\n  if (isNaN(value) || !isFinite(value)) {\n    return goog.math.Integer.ZERO;\n  } else if (value < 0) {\n    return goog.math.Integer.fromNumber(-value).negate();\n  } else {\n    var bits = [];\n    var pow = 1;\n    for (var i = 0; value >= pow; i++) {\n      bits[i] = (value / pow) | 0;\n      pow *= goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return new goog.math.Integer(bits, 0);\n  }\n};\n\n\n/**\n * Returns a Integer representing the value that comes by concatenating the\n * given entries, each is assumed to be 32 signed bits, given in little-endian\n * order (lowest order bits in the lowest index), and sign-extending the highest\n * order 32-bit value.\n * @param {Array<number>} bits The bits of the number, in 32-bit signed pieces,\n *     in little-endian order.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromBits = function(bits) {\n  'use strict';\n  var high = bits[bits.length - 1];\n  return new goog.math.Integer(bits, high & (1 << 31) ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representation of the given string, written using the\n * given radix.\n * @param {string} str The textual representation of the Integer.\n * @param {number=} opt_radix The radix in which the text is written.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromString = function(str, opt_radix) {\n  'use strict';\n  if (str.length == 0) {\n    throw new Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw new Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return goog.math.Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw new Error('number format error: interior \"-\" character');\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));\n\n  var result = goog.math.Integer.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(goog.math.Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n\n/**\n * A number used repeatedly in calculations.  This must appear before the first\n * call to the from* functions below.\n * @type {number}\n * @private\n */\ngoog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);\n\n\n/**  @type {!goog.math.Integer} */\ngoog.math.Integer.ZERO = goog.math.Integer.fromInt(0);\n\n/**  @type {!goog.math.Integer} */\ngoog.math.Integer.ONE = goog.math.Integer.fromInt(1);\n\n\n/**\n * @const\n * @type {!goog.math.Integer}\n * @private\n */\ngoog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);\n\n/**\n * Returns the value, assuming it is a 32-bit integer.\n * @return {number} The corresponding int value.\n */\ngoog.math.Integer.prototype.toInt = function() {\n  'use strict';\n  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;\n};\n\n\n/** @return {number} The closest floating-point representation to this value. */\ngoog.math.Integer.prototype.toNumber = function() {\n  'use strict';\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val = 0;\n    var pow = 1;\n    for (var i = 0; i < this.bits_.length; i++) {\n      val += this.getBitsUnsigned(i) * pow;\n      pow *= goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\n\n\n/**\n * @param {number=} opt_radix The radix in which the text should be written.\n * @return {string} The textual representation of this value.\n * @override\n */\ngoog.math.Integer.prototype.toString = function(opt_radix) {\n  'use strict';\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw new Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  } else if (this.isNegative()) {\n    return '-' + this.negate().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.divide(radixToPower);\n    // The right shifting fixes negative values in the case when\n    // intval >= 2^31; for more details see\n    // https://github.com/google/closure-library/pull/498\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit (signed) piece of the Integer according to\n * little-endian order (i.e., index 0 contains the smallest bits).\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as a signed number.\n */\ngoog.math.Integer.prototype.getBits = function(index) {\n  'use strict';\n  if (index < 0) {\n    return 0;  // Allowing this simplifies bit shifting operations below...\n  } else if (index < this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit piece as an unsigned number.\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as an unsigned number.\n */\ngoog.math.Integer.prototype.getBitsUnsigned = function(index) {\n  'use strict';\n  var val = this.getBits(index);\n  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;\n};\n\n\n/** @return {number} The sign bit of this number, -1 or 0. */\ngoog.math.Integer.prototype.getSign = function() {\n  'use strict';\n  return this.sign_;\n};\n\n\n/** @return {boolean} Whether this value is zero. */\ngoog.math.Integer.prototype.isZero = function() {\n  'use strict';\n  if (this.sign_ != 0) {\n    return false;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    if (this.bits_[i] != 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/** @return {boolean} Whether this value is negative. */\ngoog.math.Integer.prototype.isNegative = function() {\n  'use strict';\n  return this.sign_ == -1;\n};\n\n\n/** @return {boolean} Whether this value is odd. */\ngoog.math.Integer.prototype.isOdd = function() {\n  'use strict';\n  return (this.bits_.length == 0) && (this.sign_ == -1) ||\n      (this.bits_.length > 0) && ((this.bits_[0] & 1) != 0);\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer equals the other.\n */\ngoog.math.Integer.prototype.equals = function(other) {\n  'use strict';\n  if (this.sign_ != other.sign_) {\n    return false;\n  }\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  for (var i = 0; i < len; i++) {\n    if (this.getBits(i) != other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer does not equal the other.\n */\ngoog.math.Integer.prototype.notEquals = function(other) {\n  'use strict';\n  return !this.equals(other);\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than the other.\n */\ngoog.math.Integer.prototype.greaterThan = function(other) {\n  'use strict';\n  return this.compare(other) > 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than or equal to the other.\n */\ngoog.math.Integer.prototype.greaterThanOrEqual = function(other) {\n  'use strict';\n  return this.compare(other) >= 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than the other.\n */\ngoog.math.Integer.prototype.lessThan = function(other) {\n  'use strict';\n  return this.compare(other) < 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than or equal to the other.\n */\ngoog.math.Integer.prototype.lessThanOrEqual = function(other) {\n  'use strict';\n  return this.compare(other) <= 0;\n};\n\n\n/**\n * Compares this Integer with the given one.\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\ngoog.math.Integer.prototype.compare = function(other) {\n  'use strict';\n  var diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\n\n\n/**\n * Returns an integer with only the first numBits bits of this value, sign\n * extended from the final bit.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} The shorted integer value.\n */\ngoog.math.Integer.prototype.shorten = function(numBits) {\n  'use strict';\n  var arr_index = (numBits - 1) >> 5;\n  var bit_index = (numBits - 1) % 32;\n  var bits = [];\n  for (var i = 0; i < arr_index; i++) {\n    bits[i] = this.getBits(i);\n  }\n  var sigBits = bit_index == 31 ? 0xFFFFFFFF : (1 << (bit_index + 1)) - 1;\n  var val = this.getBits(arr_index) & sigBits;\n  if (val & (1 << bit_index)) {\n    val |= 0xFFFFFFFF - sigBits;\n    bits[arr_index] = val;\n    return new goog.math.Integer(bits, -1);\n  } else {\n    bits[arr_index] = val;\n    return new goog.math.Integer(bits, 0);\n  }\n};\n\n\n/** @return {!goog.math.Integer} The negation of this value. */\ngoog.math.Integer.prototype.negate = function() {\n  'use strict';\n  return this.not().add(goog.math.Integer.ONE);\n};\n\n\n/** @return {!goog.math.Integer} The absolute value of this value. */\ngoog.math.Integer.prototype.abs = function() {\n  'use strict';\n  return this.isNegative() ? this.negate() : this;\n};\n\n\n/**\n * Returns the sum of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to add to this.\n * @return {!goog.math.Integer} The Integer result.\n */\ngoog.math.Integer.prototype.add = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  var carry = 0;\n\n  for (var i = 0; i <= len; i++) {\n    var a1 = this.getBits(i) >>> 16;\n    var a0 = this.getBits(i) & 0xFFFF;\n\n    var b1 = other.getBits(i) >>> 16;\n    var b0 = other.getBits(i) & 0xFFFF;\n\n    var c0 = carry + a0 + b0;\n    var c1 = (c0 >>> 16) + a1 + b1;\n    carry = c1 >>> 16;\n    c0 &= 0xFFFF;\n    c1 &= 0xFFFF;\n    arr[i] = (c1 << 16) | c0;\n  }\n  return goog.math.Integer.fromBits(arr);\n};\n\n\n/**\n * Returns the difference of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to subtract from this.\n * @return {!goog.math.Integer} The Integer result.\n */\ngoog.math.Integer.prototype.subtract = function(other) {\n  'use strict';\n  return this.add(other.negate());\n};\n\n\n/**\n * Returns the product of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to multiply against this.\n * @return {!goog.math.Integer} The product of this and the other.\n */\ngoog.math.Integer.prototype.multiply = function(other) {\n  'use strict';\n  if (this.isZero()) {\n    return goog.math.Integer.ZERO;\n  } else if (other.isZero()) {\n    return goog.math.Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both numbers are small, use float multiplication\n  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) &&\n      other.lessThan(goog.math.Integer.TWO_PWR_24_)) {\n    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Fill in an array of 16-bit products.\n  var len = this.bits_.length + other.bits_.length;\n  var arr = [];\n  for (var i = 0; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    for (var j = 0; j < other.bits_.length; j++) {\n      var a1 = this.getBits(i) >>> 16;\n      var a0 = this.getBits(i) & 0xFFFF;\n\n      var b1 = other.getBits(j) >>> 16;\n      var b0 = other.getBits(j) & 0xFFFF;\n\n      arr[2 * i + 2 * j] += a0 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] += a1 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] += a0 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] += a1 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n\n  // Combine the 16-bit values into 32-bit values.\n  for (var i = 0; i < len; i++) {\n    arr[i] = (arr[2 * i + 1] << 16) | arr[2 * i];\n  }\n  for (var i = len; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  return new goog.math.Integer(arr, 0);\n};\n\n\n/**\n * Carries any overflow from the given index into later entries.\n * @param {Array<number>} bits Array of 16-bit values in little-endian order.\n * @param {number} index The index in question.\n * @private\n */\ngoog.math.Integer.carry16_ = function(bits, index) {\n  'use strict';\n  while ((bits[index] & 0xFFFF) != bits[index]) {\n    bits[index + 1] += bits[index] >>> 16;\n    bits[index] &= 0xFFFF;\n    index++;\n  }\n};\n\n\n/**\n * Returns \"this\" Integer divided by the given one. Both \"this\" and the given\n * Integer MUST be positive.\n *\n * This method is only needed for very large numbers (>10^308),\n * for which the original division algorithm gets into an infinite\n * loop (see https://github.com/google/closure-library/issues/500).\n *\n * The algorithm has some possible performance enhancements (or\n * could be rewritten entirely), it's just an initial solution for\n * the issue linked above.\n *\n * @param {!goog.math.Integer} other The Integer to divide \"this\" by.\n * @return {!goog.math.Integer.DivisionResult}\n * @private\n */\ngoog.math.Integer.prototype.slowDivide_ = function(other) {\n  'use strict';\n  if (this.isNegative() || other.isNegative()) {\n    throw new Error('slowDivide_ only works with positive integers.');\n  }\n\n  var twoPower = goog.math.Integer.ONE;\n  var multiple = other;\n\n  // First we have to figure out what the highest bit of the result\n  // is, so we increase \"twoPower\" and \"multiple\" until \"multiple\"\n  // exceeds \"this\".\n  while (multiple.lessThanOrEqual(this)) {\n    twoPower = twoPower.shiftLeft(1);\n    multiple = multiple.shiftLeft(1);\n  }\n\n  // Rewind by one power of two, giving us the highest bit of the\n  // result.\n  var res = twoPower.shiftRight(1);\n  var total = multiple.shiftRight(1);\n\n  // Now we starting decreasing \"multiple\" and \"twoPower\" to find the\n  // rest of the bits of the result.\n  var total2;\n  multiple = multiple.shiftRight(2);\n  twoPower = twoPower.shiftRight(2);\n  while (!multiple.isZero()) {\n    // whenever we can add \"multiple\" to the total and not exceed\n    // \"this\", that means we've found a 1 bit. Else we've found a 0\n    // and don't need to add to the result.\n    total2 = total.add(multiple);\n    if (total2.lessThanOrEqual(this)) {\n      res = res.add(twoPower);\n      total = total2;\n    }\n    multiple = multiple.shiftRight(1);\n    twoPower = twoPower.shiftRight(1);\n  }\n\n\n  // TODO(user): Calculate this more efficiently during the division.\n  // This is kind of a waste since it isn't always needed, but it keeps the\n  // API smooth. Since this is already a slow path it probably isn't a big deal.\n  var remainder = this.subtract(res.multiply(other));\n  return new goog.math.Integer.DivisionResult(res, remainder);\n};\n\n\n/**\n * Returns this Integer divided by the given one.\n * @param {!goog.math.Integer} other The Integer to divide this by.\n * @return {!goog.math.Integer} This value divided by the given one.\n */\ngoog.math.Integer.prototype.divide = function(other) {\n  'use strict';\n  return this.divideAndRemainder(other).quotient;\n};\n\n\n/**\n * A struct for holding the quotient and remainder of a division.\n *\n * @constructor\n * @final\n * @struct\n *\n * @param {!goog.math.Integer} quotient\n * @param {!goog.math.Integer} remainder\n */\ngoog.math.Integer.DivisionResult = function(quotient, remainder) {\n  'use strict';\n  /** @const */\n  this.quotient = quotient;\n\n  /** @const */\n  this.remainder = remainder;\n};\n\n\n/**\n * Returns this Integer divided by the given one, as well as the remainder of\n * that division.\n *\n * @param {!goog.math.Integer} other The Integer to divide this by.\n * @return {!goog.math.Integer.DivisionResult}\n */\ngoog.math.Integer.prototype.divideAndRemainder = function(other) {\n  'use strict';\n  if (other.isZero()) {\n    throw new Error('division by zero');\n  } else if (this.isZero()) {\n    return new goog.math.Integer.DivisionResult(\n        goog.math.Integer.ZERO, goog.math.Integer.ZERO);\n  }\n\n  if (this.isNegative()) {\n    // Do the division on the negative of the numerator...\n    var result = this.negate().divideAndRemainder(other);\n    return new goog.math.Integer.DivisionResult(\n        // ...and flip the sign back after.\n        result.quotient.negate(),\n        // The remainder must always have the same sign as the numerator.\n        result.remainder.negate());\n  } else if (other.isNegative()) {\n    // Do the division on the negative of the denominator...\n    var result = this.divideAndRemainder(other.negate());\n    return new goog.math.Integer.DivisionResult(\n        // ...and flip the sign back after.\n        result.quotient.negate(),\n        // The remainder must always have the same sign as the numerator.\n        result.remainder);\n  }\n\n  // Have to degrade to slowDivide for Very Large Numbers, because\n  // they're out of range for the floating-point approximation\n  // technique used below.\n  if (this.bits_.length > 30) {\n    return this.slowDivide_(other);\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = goog.math.Integer.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = goog.math.Integer.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = goog.math.Integer.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = goog.math.Integer.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return new goog.math.Integer.DivisionResult(res, rem);\n};\n\n\n/**\n * Returns this Integer modulo the given one.\n * @param {!goog.math.Integer} other The Integer by which to mod.\n * @return {!goog.math.Integer} This value modulo the given one.\n */\ngoog.math.Integer.prototype.modulo = function(other) {\n  'use strict';\n  return this.divideAndRemainder(other).remainder;\n};\n\n\n/** @return {!goog.math.Integer} The bitwise-NOT of this value. */\ngoog.math.Integer.prototype.not = function() {\n  'use strict';\n  var len = this.bits_.length;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = ~this.bits_[i];\n  }\n  return new goog.math.Integer(arr, ~this.sign_);\n};\n\n\n/**\n * Returns the bitwise-AND of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to AND with this.\n * @return {!goog.math.Integer} The bitwise-AND of this and the other.\n */\ngoog.math.Integer.prototype.and = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) & other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ & other.sign_);\n};\n\n\n/**\n * Returns the bitwise-OR of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to OR with this.\n * @return {!goog.math.Integer} The bitwise-OR of this and the other.\n */\ngoog.math.Integer.prototype.or = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) | other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ | other.sign_);\n};\n\n\n/**\n * Returns the bitwise-XOR of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to XOR with this.\n * @return {!goog.math.Integer} The bitwise-XOR of this and the other.\n */\ngoog.math.Integer.prototype.xor = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) ^ other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the left by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} This shifted to the left by the given amount.\n */\ngoog.math.Integer.prototype.shiftLeft = function(numBits) {\n  'use strict';\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i - arr_delta) << bit_delta) |\n          (this.getBits(i - arr_delta - 1) >>> (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i - arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the right by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} This shifted to the right by the given amount.\n */\ngoog.math.Integer.prototype.shiftRight = function(numBits) {\n  'use strict';\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length - arr_delta;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i + arr_delta) >>> bit_delta) |\n          (this.getBits(i + arr_delta + 1) << (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i + arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string.internal');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.userAgent.ASSUME_IE = goog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE,\n * referring to EdgeHTML based Edge.\n */\ngoog.userAgent.ASSUME_EDGE = goog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.userAgent.ASSUME_GECKO = goog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.userAgent.ASSUME_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.userAgent.ASSUME_MOBILE_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA,\n * referring to Presto-based Opera.\n */\ngoog.userAgent.ASSUME_OPERA = goog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.userAgent.ASSUME_ANY_VERSION =\n    goog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  'use strict';\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  'use strict';\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  'use strict';\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Presto-based Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Edge Chromium, Opera Chromium, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  'use strict';\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  'use strict';\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.userAgent.ASSUME_MAC = goog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.userAgent.ASSUME_WINDOWS =\n    goog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.userAgent.ASSUME_LINUX = goog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.userAgent.ASSUME_X11 = goog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.userAgent.ASSUME_ANDROID =\n    goog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.userAgent.ASSUME_IPHONE =\n    goog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.userAgent.ASSUME_IPAD = goog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.userAgent.ASSUME_IPOD = goog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on KaiOS.\n */\ngoog.userAgent.ASSUME_KAIOS = goog.define('goog.userAgent.ASSUME_KAIOS', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  'use strict';\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  'use strict';\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.internal.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * Whether the user agent is running on KaiOS.\n * @type {boolean}\n */\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_KAIOS :\n    goog.labs.userAgent.platform.isKaiOS();\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  'use strict';\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?IArrayLike<string>|undefined} The version regex matches from\n *     parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  'use strict';\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  'use strict';\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  'use strict';\n  return goog.string.internal.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  'use strict';\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            'use strict';\n            return goog.string.internal.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  'use strict';\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n *\n * NOTE(user): Support for IE < 7 is long gone, so this is now simplified.\n * It returns document.documentMode for IE and undefined for everything else.\n *\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  'use strict';\n  var doc = goog.global['document'];\n  if (!doc || !goog.userAgent.IE) return undefined;\n  // This must be an IE user agent.\n  var documentMode = goog.userAgent.getDocumentMode_();\n  if (documentMode) return documentMode;\n  // The user agent version string begins with the major version.\n  // Parse the major version and truncate anything following.\n  var ieVersion = parseInt(goog.userAgent.VERSION, 10);\n  return ieVersion || undefined;\n})();\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Closure user agent detection (Browser).\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on rendering engine, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,\n * goog.labs.userAgent.device respectively.)\n */\n\ngoog.module('goog.labs.userAgent.browser');\ngoog.module.declareLegacyNamespace();\n\nconst util = goog.require('goog.labs.userAgent.util');\nconst {AsyncValue, Version} = goog.require('goog.labs.userAgent.highEntropy.highEntropyValue');\nconst {assert, assertExists} = goog.require('goog.asserts');\nconst {compareVersions} = goog.require('goog.string.internal');\nconst {fullVersionList} = goog.require('goog.labs.userAgent.highEntropy.highEntropyData');\nconst {useClientHints} = goog.require('goog.labs.userAgent');\n\n// TODO(nnaze): Refactor to remove excessive exclusion logic in matching\n// functions.\n\n/**\n * A browser brand represents an opaque string that is used for making\n * brand-specific version checks in userAgentData.\n * @enum {string}\n */\nconst Brand = {\n  /**\n   * The browser brand for Android Browser.\n   * Do not depend on the value of this string. Because Android Browser has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  ANDROID_BROWSER: 'Android Browser',\n  /**\n   * The browser brand for Chromium, including Chromium-based Edge and Opera.\n   */\n  CHROMIUM: 'Chromium',\n  /**\n   * The browser brand for Edge.\n   * This brand can be used to get the version of both EdgeHTML and\n   * Chromium-based Edge.\n   */\n  EDGE: 'Microsoft Edge',\n  /**\n   * The browser brand for Firefox.\n   * Do not depend on the value of this string. Because Firefox has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  FIREFOX: 'Firefox',\n  /**\n   * The browser brand for Internet Explorer.\n   * Do not depend on the value of this string. Because IE will never support\n   * userAgentData, the value of this string should be treated as opaque (it's\n   * used internally for legacy-userAgent fallback).\n   */\n  IE: 'Internet Explorer',\n  /**\n   * The browser brand for Opera.\n   * This brand can be used to get the version of both Presto- and\n   * Chromium-based Opera.\n   */\n  OPERA: 'Opera',\n  /**\n   * The browser brand for Safari.\n   * Do not depend on the value of this string. Because Safari has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  SAFARI: 'Safari',\n  /**\n   * The browser brand for Silk.\n   * See\n   * https://docs.aws.amazon.com/silk/latest/developerguide/what-is-silk.html\n   * Do not depend on the value of this string. Because Silk does not\n   * identify itself in userAgentData yet, the value of this string is not\n   * guaranteed to stay the same in future revisions.\n   */\n  SILK: 'Silk',\n};\nexports.Brand = Brand;\n\n/**\n * @param {boolean=} ignoreClientHintsFlag Iff truthy, the `useClientHints`\n *     function will not be called when evaluating if User-Agent Client Hints\n *     Brand data can be used. For existing labs.userAgent API surfaces with\n *     widespread use, this should be a falsy value so that usage of the Client\n *     Hints APIs can be gated behind flags / experiment rollouts.\n * @return {boolean} Whether to use navigator.userAgentData to determine\n * browser's brand.\n */\nfunction useUserAgentDataBrand(ignoreClientHintsFlag = false) {\n  if (util.ASSUME_CLIENT_HINTS_SUPPORT) return true;\n  // High-entropy API surfaces should not be gated behind the useClientHints\n  // check (as in production it is gated behind a define).\n  if (!ignoreClientHintsFlag && !useClientHints()) return false;\n  const userAgentData = util.getUserAgentData();\n  return !!userAgentData && userAgentData.brands.length > 0;\n}\n\n/**\n * @return {boolean} Whether this browser is likely to have the fullVersionList\n * high-entropy Client Hint.\n */\nfunction hasFullVersionList() {\n  // https://chromiumdash.appspot.com/commits?commit=1eb643c3057e64ff4d22468432ad16c4cab12879&platform=Linux\n  // indicates that for all platforms Chromium 98 shipped this feature.\n  // See also\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-CH-UA-Full-Version-List#browser_compatibility\n  return isAtLeast(Brand.CHROMIUM, 98);\n}\n\n/**\n * @return {boolean} Whether the user's browser is Opera. Note: Chromium based\n *     Opera (Opera 15+) is detected as Chrome to avoid unnecessary special\n *     casing.\n */\nfunction matchOpera() {\n  if (useUserAgentDataBrand()) {\n    // Pre-Chromium Edge doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Opera');\n}\n\n/** @return {boolean} Whether the user's browser is IE. */\nfunction matchIE() {\n  if (useUserAgentDataBrand()) {\n    // IE doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Trident') || util.matchUserAgent('MSIE');\n}\n\n/**\n * @return {boolean} Whether the user's browser is Edge. This refers to\n *     EdgeHTML based Edge.\n */\nfunction matchEdgeHtml() {\n  if (useUserAgentDataBrand()) {\n    // Pre-Chromium Edge doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Edge');\n}\n\n/** @return {boolean} Whether the user's browser is Chromium based Edge. */\nfunction matchEdgeChromium() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.EDGE);\n  }\n  return util.matchUserAgent('Edg/');\n}\n\n/** @return {boolean} Whether the user's browser is Chromium based Opera. */\nfunction matchOperaChromium() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.OPERA);\n  }\n  return util.matchUserAgent('OPR');\n}\n\n/** @return {boolean} Whether the user's browser is Firefox. */\nfunction matchFirefox() {\n  // Firefox doesn't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  return util.matchUserAgent('Firefox') || util.matchUserAgent('FxiOS');\n}\n\n/** @return {boolean} Whether the user's browser is Safari. */\nfunction matchSafari() {\n  // Apple-based browsers don't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  return util.matchUserAgent('Safari') &&\n      !(matchChrome() || matchCoast() || matchOpera() || matchEdgeHtml() ||\n        matchEdgeChromium() || matchOperaChromium() || matchFirefox() ||\n        isSilk() || util.matchUserAgent('Android'));\n}\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\nfunction matchCoast() {\n  if (useUserAgentDataBrand()) {\n    // Coast doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Coast');\n}\n\n/** @return {boolean} Whether the user's browser is iOS Webview. */\nfunction matchIosWebview() {\n  // Apple-based browsers don't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  // iOS Webview does not show up as Chrome or Safari.\n  return (util.matchUserAgent('iPad') || util.matchUserAgent('iPhone')) &&\n      !matchSafari() && !matchChrome() && !matchCoast() && !matchFirefox() &&\n      util.matchUserAgent('AppleWebKit');\n}\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium browser. This\n *     returns true for Chrome, Opera 15+, and Edge Chromium.\n */\nfunction matchChrome() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.CHROMIUM);\n  }\n  return ((util.matchUserAgent('Chrome') || util.matchUserAgent('CriOS')) &&\n          !matchEdgeHtml()) ||\n      isSilk();\n}\n\n/** @return {boolean} Whether the user's browser is the Android browser. */\nfunction matchAndroidBrowser() {\n  // Android can appear in the user agent string for Chrome on Android.\n  // This is not the Android standalone browser if it does.\n  return util.matchUserAgent('Android') &&\n      !(isChrome() || isFirefox() || isOpera() || isSilk());\n}\n\n/** @return {boolean} Whether the user's browser is Opera. */\nconst isOpera = matchOpera;\nexports.isOpera = isOpera;\n\n/** @return {boolean} Whether the user's browser is IE. */\nconst isIE = matchIE;\nexports.isIE = isIE;\n\n/** @return {boolean} Whether the user's browser is EdgeHTML based Edge. */\nconst isEdge = matchEdgeHtml;\nexports.isEdge = isEdge;\n\n/** @return {boolean} Whether the user's browser is Chromium based Edge. */\nconst isEdgeChromium = matchEdgeChromium;\nexports.isEdgeChromium = isEdgeChromium;\n\n/** @return {boolean} Whether the user's browser is Chromium based Opera. */\nconst isOperaChromium = matchOperaChromium;\nexports.isOperaChromium = isOperaChromium;\n\n/** @return {boolean} Whether the user's browser is Firefox. */\nconst isFirefox = matchFirefox;\nexports.isFirefox = isFirefox;\n\n/** @return {boolean} Whether the user's browser is Safari. */\nconst isSafari = matchSafari;\nexports.isSafari = isSafari;\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\nconst isCoast = matchCoast;\nexports.isCoast = isCoast;\n\n/** @return {boolean} Whether the user's browser is iOS Webview. */\nconst isIosWebview = matchIosWebview;\nexports.isIosWebview = isIosWebview;\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium based browser (\n *     Chrome, Blink-based Opera (15+) and Edge Chromium).\n */\nconst isChrome = matchChrome;\nexports.isChrome = isChrome;\n\n/** @return {boolean} Whether the user's browser is the Android browser. */\nconst isAndroidBrowser = matchAndroidBrowser;\nexports.isAndroidBrowser = isAndroidBrowser;\n\n/**\n * For more information, see:\n * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n * @return {boolean} Whether the user's browser is Silk.\n */\nfunction isSilk() {\n  // As of Silk 93, Silk does not identify itself in userAgentData.brands.\n  // When Silk changes this behavior, update this method to call\n  // matchUserAgentDataBrand (akin to isChrome, etc.)\n  return util.matchUserAgent('Silk');\n}\nexports.isSilk = isSilk;\n\n/**\n * A helper function that returns a function mapping a list of candidate\n * version tuple keys to the first version string present under a key.\n * Ex:\n * <code>\n * // Arg extracted from \"Foo/1.2.3 Bar/0.2021\"\n * const mapVersion = createVersionMap([[\"Foo\", \"1.2.3\"], [\"Bar\", \"0.2021\"]]);\n * mapVersion([\"Bar\", \"Foo\"]); // returns \"0.2021\"\n * mapVersion([\"Baz\", \"Foo\"]); // returns \"1.2.3\"\n * mapVersion([\"Baz\", \"???\"]); // returns \"\"\n * </code>\n * @param {!Array<!Array<string>>} versionTuples Version tuples pre-extracted\n *     from a user agent string.\n * @return {function(!Array<string>): string} The version string, or empty\n * string if it doesn't exist under the given key.\n */\nfunction createVersionMap(versionTuples) {\n  // Construct a map for easy lookup.\n  const versionMap = {};\n  versionTuples.forEach((tuple) => {\n    // Note that the tuple is of length three, but we only care about the\n    // first two.\n    const key = tuple[0];\n    const value = tuple[1];\n    versionMap[key] = value;\n  });\n\n  // Gives the value with the first key it finds, otherwise empty string.\n  return (keys) => versionMap[keys.find((key) => key in versionMap)] || '';\n}\n\n/**\n * Returns the browser version.\n *\n * Note that for browsers with multiple brands, this function assumes a primary\n * brand and returns the version for that brand.\n *\n * Additionally, this function is not userAgentData-aware and will return\n * incorrect values when the User Agent string is frozen. The current status of\n * User Agent string freezing is available here:\n * https://www.chromestatus.com/feature/5704553745874944\n *\n * To mitigate both of these potential issues, use\n * getVersionStringForLogging() or fullVersionOf() instead.\n *\n * @return {string} The browser version or empty string if version cannot be\n *     determined. Note that for Internet Explorer, this returns the version of\n *     the browser, not the version of the rendering engine. (IE 8 in\n *     compatibility mode will return 8.0 rather than 7.0. To determine the\n *     rendering engine version, look at document.documentMode instead. See\n *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more\n *     details.)\n */\nfunction getVersion() {\n  const userAgentString = util.getUserAgent();\n\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (isIE()) {\n    return getIEVersion(userAgentString);\n  }\n\n  const versionTuples = util.extractVersionTuples(userAgentString);\n  const lookUpValueWithKeys = createVersionMap(versionTuples);\n\n  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.\n  // See\n  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond\n  if (isOpera()) {\n    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.\n    // Opera uses 'OPR' for more recent UAs.\n    return lookUpValueWithKeys(['Version', 'Opera']);\n  }\n\n  // Check Edge before Chrome since it has Chrome in the string.\n  if (isEdge()) {\n    return lookUpValueWithKeys(['Edge']);\n  }\n\n  // Check Chromium Edge before Chrome since it has Chrome in the string.\n  if (isEdgeChromium()) {\n    return lookUpValueWithKeys(['Edg']);\n  }\n\n  // Check Silk before Chrome since it may have Chrome in its string and be\n  // treated as Chrome.\n  if (isSilk()) {\n    return lookUpValueWithKeys(['Silk']);\n  }\n\n  if (isChrome()) {\n    return lookUpValueWithKeys(['Chrome', 'CriOS', 'HeadlessChrome']);\n  }\n\n  // Usually products browser versions are in the third tuple after \"Mozilla\"\n  // and the engine.\n  const tuple = versionTuples[2];\n  return tuple && tuple[1] || '';\n}\nexports.getVersion = getVersion;\n\n/**\n * Returns whether the current browser's version is at least as high as the\n * given one.\n *\n * Note that for browsers with multiple brands, this function assumes a primary\n * brand and checks the version for that brand.\n *\n * Additionally, this function is not userAgentData-aware and will return\n * incorrect values when the User Agent string is frozen. The current status of\n * User Agent string freezing is available here:\n * https://www.chromestatus.com/feature/5704553745874944\n *\n * To mitigate both of these potential issues, use isAtLeast()/isAtMost() or\n * fullVersionOf() instead.\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n * @deprecated Use isAtLeast()/isAtMost() instead.\n */\nfunction isVersionOrHigher(version) {\n  return compareVersions(getVersion(), version) >= 0;\n}\nexports.isVersionOrHigher = isVersionOrHigher;\n\n/**\n * A helper function to determine IE version. More information:\n * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString\n * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\n * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx\n * @param {string} userAgent the User-Agent.\n * @return {string}\n */\nfunction getIEVersion(userAgent) {\n  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade\n  // bug. Example UA:\n  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)\n  // like Gecko.\n  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.\n  const rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n\n  let version = '';\n  const msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this\n    // case, use the Trident version to determine the version of IE. For more\n    // details, see the links above.\n    const tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (msie[1] == '7.0') {\n      if (tridentVersion && tridentVersion[1]) {\n        switch (tridentVersion[1]) {\n          case '4.0':\n            version = '8.0';\n            break;\n          case '5.0':\n            version = '9.0';\n            break;\n          case '6.0':\n            version = '10.0';\n            break;\n          case '7.0':\n            version = '11.0';\n            break;\n        }\n      } else {\n        version = '7.0';\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n}\n\n/**\n * A helper function to return the navigator.userAgent-supplied full version\n * number of the current browser or an empty string, based on whether the\n * current browser is the one specified.\n * @param {string} browser The brand whose version should be returned.\n * @return {string}\n */\nfunction getFullVersionFromUserAgentString(browser) {\n  const userAgentString = util.getUserAgent();\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (browser === Brand.IE) {\n    return isIE() ? getIEVersion(userAgentString) : '';\n  }\n\n  const versionTuples = util.extractVersionTuples(userAgentString);\n  const lookUpValueWithKeys = createVersionMap(versionTuples);\n  switch (browser) {\n    case Brand.OPERA:\n      // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\"\n      // first. Opera uses 'OPR' for more recent UAs.\n      if (isOpera()) {\n        return lookUpValueWithKeys(['Version', 'Opera']);\n      } else if (isOperaChromium()) {\n        return lookUpValueWithKeys(['OPR']);\n      }\n      break;\n    case Brand.EDGE:\n      if (isEdge()) {\n        return lookUpValueWithKeys(['Edge']);\n      } else if (isEdgeChromium()) {\n        return lookUpValueWithKeys(['Edg']);\n      }\n      break;\n    case Brand.CHROMIUM:\n      if (isChrome()) {\n        return lookUpValueWithKeys(['Chrome', 'CriOS', 'HeadlessChrome']);\n      }\n      break;\n  }\n\n  // For the following browsers, the browser version is in the third tuple after\n  // \"Mozilla\" and the engine.\n  if ((browser === Brand.FIREFOX && isFirefox()) ||\n      (browser === Brand.SAFARI && isSafari()) ||\n      (browser === Brand.ANDROID_BROWSER && isAndroidBrowser()) ||\n      (browser === Brand.SILK && isSilk())) {\n    const tuple = versionTuples[2];\n    return tuple && tuple[1] || '';\n  }\n\n  return '';\n}\n\n/**\n * Returns the major version of the given browser brand, or NaN if the current\n * browser is not the given brand.\n * Note that the major version number may be different depending on which\n * browser is specified. The returned value can be used to make browser version\n * comparisons using comparison operators.\n * @private\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {number} The major version number associated with the current\n * browser under the given brand, or NaN if the current browser doesn't match\n * the given brand.\n */\nfunction versionOf_(browser) {\n  let versionParts;\n  // Silk currently does not identify itself in its userAgentData.brands array,\n  // so if checking its version, always fall back to the user agent string.\n  if (useUserAgentDataBrand() && browser !== Brand.SILK) {\n    const data = util.getUserAgentData();\n    const matchingBrand = data.brands.find(({brand}) => brand === browser);\n    if (!matchingBrand || !matchingBrand.version) {\n      return NaN;\n    }\n    versionParts = matchingBrand.version.split('.');\n  } else {\n    const fullVersion = getFullVersionFromUserAgentString(browser);\n    if (fullVersion === '') {\n      return NaN;\n    }\n    versionParts = fullVersion.split('.');\n  }\n  if (versionParts.length === 0) {\n    return NaN;\n  }\n  const majorVersion = versionParts[0];\n  return Number(majorVersion);  // Returns NaN if it is not parseable.\n}\n\n/**\n * Returns true if the current browser matches the given brand and is at least\n * the given major version. The major version must be a whole number (i.e.\n * decimals should not be used to represent a minor version).\n * @param {!Brand} brand The brand whose version should be returned.\n * @param {number} majorVersion The major version number to compare against.\n *     This must be a whole number.\n * @return {boolean} Whether the current browser both matches the given brand\n *     and is at least the given version.\n */\nfunction isAtLeast(brand, majorVersion) {\n  assert(\n      Math.floor(majorVersion) === majorVersion,\n      'Major version must be an integer');\n  return versionOf_(brand) >= majorVersion;\n}\nexports.isAtLeast = isAtLeast;\n\n/**\n * Returns true if the current browser matches the given brand and is at most\n * the given version. The major version must be a whole number (i.e. decimals\n * should not be used to represent a minor version).\n * @param {!Brand} brand The brand whose version should be returned.\n * @param {number} majorVersion The major version number to compare against.\n *     This must be a whole number.\n * @return {boolean} Whether the current browser both matches the given brand\n *     and is at most the given version.\n */\nfunction isAtMost(brand, majorVersion) {\n  assert(\n      Math.floor(majorVersion) === majorVersion,\n      'Major version must be an integer');\n  return versionOf_(brand) <= majorVersion;\n}\nexports.isAtMost = isAtMost;\n\n/**\n * Loads the high-entropy browser brand/version data and wraps the correct\n * version string in a Version object.\n * @implements {AsyncValue<!Version>}\n */\nclass HighEntropyBrandVersion {\n  /**\n   * @param {string} brand The brand whose version is retrieved in this\n   *     container.\n   * @param {boolean} useUach Whether to attempt to use the User-Agent Client\n   *     Hints (UACH) API surface.\n   * @param {string} fallbackVersion The fallback version derived from the\n   *     userAgent string.\n   */\n  constructor(brand, useUach, fallbackVersion) {\n    /** @private @const {string} */\n    this.brand_ = brand;\n\n    /** @private @const {!Version} */\n    this.version_ = new Version(fallbackVersion);\n\n    /** @private @const {boolean} */\n    this.useUach_ = useUach;\n  }\n\n  /**\n   * @return {!Version|undefined}\n   * @override\n   */\n  getIfLoaded() {\n    if (this.useUach_) {\n      const loadedVersionList = fullVersionList.getIfLoaded();\n      if (loadedVersionList !== undefined) {\n        const matchingBrand =\n            loadedVersionList.find(({brand}) => this.brand_ === brand);\n        // We assumed in fullVersionOf that if the fullVersionList is defined\n        // the brands must match. Double-check this here.\n        assertExists(matchingBrand);\n        return new Version(matchingBrand.version);\n      }\n      // Fallthrough to fallback on Pre-UACH implementation\n    }\n    // We want to make sure the loading semantics of the Pre-UACH implementation\n    // match those of the UACH implementation. Loading must happen before any\n    // data can be retrieved from getIfLoaded.\n    // For HighEntropyBrandVersion, loading can either be done by calling #load\n    // or by calling the module-local loadFullVersions function.\n    if (preUachHasLoaded) {\n      return this.version_;\n    }\n    return;\n  }\n\n  /**\n   * @return {!Promise<!Version>}\n   * @override\n   */\n  async load() {\n    if (this.useUach_) {\n      const loadedVersionList = await fullVersionList.load();\n      if (loadedVersionList !== undefined) {\n        const matchingBrand =\n            loadedVersionList.find(({brand}) => this.brand_ === brand);\n        assertExists(matchingBrand);\n        return new Version(matchingBrand.version);\n      }\n      // Fallthrough to fallback on Pre-UACH implementation\n    } else {\n      // Await something so that calling load with or without UACH API\n      // availability results in waiting at least one macrotask before allowing\n      // access to the cached version information.\n      await 0;\n    }\n    // Regardless of whether we are using UACH APIs, we can now allow access to\n    // the fallback case\n    preUachHasLoaded = true;\n    return this.version_;\n  }\n}\n\n/**\n * Whether full version data should be considered available when using UACH\n * fallback implementations. This is flipped to true when either\n * loadFullVersions or HighEntropyBrandVersion.prototype.load are called,\n * matching the global singleton semantics of the UACH codepaths.\n */\nlet preUachHasLoaded = false;\n\n/**\n * Requests all full browser versions to be cached.  When the returned promise\n * resolves, subsequent calls to `fullVersionOf(...).getIfLoaded()` will return\n * a value.\n *\n * This method should be avoided in favor of directly awaiting\n * `fullVersionOf(...).load()` where it is used.\n *\n * @return {!Promise<void>}\n */\nasync function loadFullVersions() {\n  if (useUserAgentDataBrand(true)) {\n    await fullVersionList.load();\n  }\n  preUachHasLoaded = true;\n}\nexports.loadFullVersions = loadFullVersions;\n\n/**\n * Resets module-local caches used by functionality in this module.\n * This is only for use by goog.labs.userAgent.testUtil.resetUserAgent (and\n * labs.userAgent tests).\n * @package\n */\nexports.resetForTesting = () => {\n  preUachHasLoaded = false;\n  fullVersionList.resetForTesting();\n};\n\n\n/**\n * Returns an object that provides access to the full version string of the\n * current browser -- or undefined, based on whether the current browser matches\n * the requested browser brand. Note that the full version string is a\n * high-entropy value, and must be asynchronously loaded before it can be\n * accessed synchronously.\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {!AsyncValue<!Version>|undefined} An object that can be used\n *     to get or load the full version string as a high-entropy value, or\n * undefined if the current browser doesn't match the given brand.\n */\nfunction fullVersionOf(browser) {\n  let fallbackVersionString = '';\n  // If we are reasonably certain now that the browser we are on has the\n  // fullVersionList high-entropy hint, then we can skip computing the fallback\n  // value as we won't end up using it.\n  if (!hasFullVersionList()) {\n    fallbackVersionString = getFullVersionFromUserAgentString(browser);\n  }\n  // Silk has the UACH API surface, but currently does not identify itself in\n  // the userAgentData.brands array. Fallback to using userAgent string version\n  // for Silk.\n  const useUach = browser !== Brand.SILK && useUserAgentDataBrand(true);\n  if (useUach) {\n    const data = util.getUserAgentData();\n    // Operate under the assumption that the low-entropy and high-entropy lists\n    // of brand/version pairs contain an identical set of brands. Therefore, if\n    // the low-entropy list doesn't contain the given brand, return undefined.\n    if (!data.brands.find(({brand}) => brand === browser)) {\n      return undefined;\n    }\n  } else if (fallbackVersionString === '') {\n    return undefined;\n  }\n  return new HighEntropyBrandVersion(browser, useUach, fallbackVersionString);\n}\nexports.fullVersionOf = fullVersionOf;\n\n\n/**\n * Returns a version string for the current browser or undefined, based on\n * whether the current browser is the one specified.\n * This value should ONLY be used for logging/debugging purposes. Do not use it\n * to branch code paths. For comparing versions, use isAtLeast()/isAtMost() or\n * fullVersionOf() instead.\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {string} The version as a string.\n */\nfunction getVersionStringForLogging(browser) {\n  if (useUserAgentDataBrand(true)) {\n    const fullVersionObj = fullVersionOf(browser);\n    if (fullVersionObj) {\n      const fullVersion = fullVersionObj.getIfLoaded();\n      if (fullVersion) {\n        return fullVersion.toVersionStringForLogging();\n      }\n      // No full version, return the major version instead.\n      const data = util.getUserAgentData();\n      const matchingBrand = data.brands.find(({brand}) => brand === browser);\n      // Checking for the existence of matchingBrand is not necessary because\n      // the existence of fullVersionObj implies that there is already a\n      // matching brand.\n      assertExists(matchingBrand);\n      return matchingBrand.version;\n    }\n    // If fullVersionObj is undefined, this doesn't mean that the full version\n    // is unavailable, but rather that the current browser doesn't match the\n    // input `browser` argument.\n    return '';\n  } else {\n    return getFullVersionFromUserAgentString(browser);\n  }\n}\nexports.getVersionStringForLogging = getVersionStringForLogging;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Closure user agent detection.\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and device).\n */\n\ngoog.module('goog.labs.userAgent.engine');\ngoog.module.declareLegacyNamespace();\n\nconst googArray = goog.require('goog.array');\nconst googString = goog.require('goog.string.internal');\nconst util = goog.require('goog.labs.userAgent.util');\n\n/**\n * @return {boolean} Whether the rendering engine is Presto.\n */\nfunction isPresto() {\n  return util.matchUserAgent('Presto');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is Trident.\n */\nfunction isTrident() {\n  // IE only started including the Trident token in IE8.\n  return util.matchUserAgent('Trident') || util.matchUserAgent('MSIE');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is EdgeHTML.\n */\nfunction isEdge() {\n  return util.matchUserAgent('Edge');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is WebKit. This will return\n * true for Chrome, Blink-based Opera (15+), Edge Chromium and Safari.\n */\nfunction isWebKit() {\n  return util.matchUserAgentIgnoreCase('WebKit') && !isEdge();\n}\n\n/**\n * @return {boolean} Whether the rendering engine is Gecko.\n */\nfunction isGecko() {\n  return util.matchUserAgent('Gecko') && !isWebKit() && !isTrident() &&\n      !isEdge();\n}\n\n/**\n * @return {string} The rendering engine's version or empty string if version\n *     can't be determined.\n */\nfunction getVersion() {\n  const userAgentString = util.getUserAgent();\n  if (userAgentString) {\n    const tuples = util.extractVersionTuples(userAgentString);\n\n    const engineTuple = getEngineTuple(tuples);\n    if (engineTuple) {\n      // In Gecko, the version string is either in the browser info or the\n      // Firefox version.  See Gecko user agent string reference:\n      // http://goo.gl/mULqa\n      if (engineTuple[0] == 'Gecko') {\n        return getVersionForKey(tuples, 'Firefox');\n      }\n\n      return engineTuple[1];\n    }\n\n    // MSIE has only one version identifier, and the Trident version is\n    // specified in the parenthetical. IE Edge is covered in the engine tuple\n    // detection.\n    const browserTuple = tuples[0];\n    let info;\n    if (browserTuple && (info = browserTuple[2])) {\n      const match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return '';\n}\n\n/**\n * @param {!Array<!Array<string>>} tuples Extracted version tuples.\n * @return {!Array<string>|undefined} The engine tuple or undefined if not\n *     found.\n */\nfunction getEngineTuple(tuples) {\n  if (!isEdge()) {\n    return tuples[1];\n  }\n  for (let i = 0; i < tuples.length; i++) {\n    const tuple = tuples[i];\n    if (tuple[0] == 'Edge') {\n      return tuple;\n    }\n  }\n}\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the rendering engine version is higher or the same\n *     as the given version.\n */\nfunction isVersionOrHigher(version) {\n  return googString.compareVersions(getVersion(), version) >= 0;\n}\n\n/**\n * @param {!Array<!Array<string>>} tuples Version tuples.\n * @param {string} key The key to look for.\n * @return {string} The version string of the given key, if present.\n *     Otherwise, the empty string.\n */\nfunction getVersionForKey(tuples, key) {\n  // TODO(nnaze): Move to util if useful elsewhere.\n\n  const pair = googArray.find(tuples, function(pair) {\n    return key == pair[0];\n  });\n\n  return pair && pair[1] || '';\n}\n\nexports = {\n  getVersion,\n  isEdge,\n  isGecko,\n  isPresto,\n  isTrident,\n  isVersionOrHigher,\n  isWebKit,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A patched, standardized event object for browser events.\n *\n * <pre>\n * The patched event object contains the following members:\n * - type           {string}    Event type, e.g. 'click'\n * - target         {Object}    The element that actually triggered the event\n * - currentTarget  {Object}    The element the listener is attached to\n * - relatedTarget  {Object}    For mouseover and mouseout, the previous object\n * - offsetX        {number}    X-coordinate relative to target\n * - offsetY        {number}    Y-coordinate relative to target\n * - clientX        {number}    X-coordinate relative to viewport\n * - clientY        {number}    Y-coordinate relative to viewport\n * - screenX        {number}    X-coordinate relative to the edge of the screen\n * - screenY        {number}    Y-coordinate relative to the edge of the screen\n * - button         {number}    Mouse button. Use isButton() to test.\n * - keyCode        {number}    Key-code\n * - ctrlKey        {boolean}   Was ctrl key depressed\n * - altKey         {boolean}   Was alt key depressed\n * - shiftKey       {boolean}   Was shift key depressed\n * - metaKey        {boolean}   Was meta key depressed\n * - pointerId      {number}    Pointer ID\n * - pointerType    {string}    Pointer type, e.g. 'mouse', 'pen', or 'touch'\n * - defaultPrevented {boolean} Whether the default action has been prevented\n * - state          {Object}    History state object\n *\n * NOTE: The keyCode member contains the raw browser keyCode. For normalized\n * key and character code use {@link goog.events.KeyHandler}.\n * </pre>\n */\n\ngoog.provide('goog.events.BrowserEvent');\ngoog.provide('goog.events.BrowserEvent.MouseButton');\ngoog.provide('goog.events.BrowserEvent.PointerType');\n\ngoog.require('goog.debug');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventType');\ngoog.require('goog.reflect');\ngoog.require('goog.userAgent');\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * The content of this object will not be initialized if no event object is\n * provided. If this is the case, init() needs to be invoked separately.\n * @param {Event=} opt_e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  'use strict';\n  goog.events.BrowserEvent.base(this, 'constructor', opt_e ? opt_e.type : '');\n\n  /**\n   * Target that fired the event.\n   * @override\n   * @type {?Node}\n   */\n  this.target = null;\n\n  /**\n   * Node that had the listener attached.\n   * @override\n   * @type {?Node|undefined}\n   */\n  this.currentTarget = null;\n\n  /**\n   * For mouseover and mouseout events, the related object for the event.\n   * @type {?Node}\n   */\n  this.relatedTarget = null;\n\n  /**\n   * X-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetX = 0;\n\n  /**\n   * Y-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetY = 0;\n\n  /**\n   * X-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientX = 0;\n\n  /**\n   * Y-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientY = 0;\n\n  /**\n   * X-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenX = 0;\n\n  /**\n   * Y-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenY = 0;\n\n  /**\n   * Which mouse button was pressed.\n   * @type {number}\n   */\n  this.button = 0;\n\n  /**\n   * Key of key press.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = 0;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.charCode = 0;\n\n  /**\n   * Whether control was pressed at time of event.\n   * @type {boolean}\n   */\n  this.ctrlKey = false;\n\n  /**\n   * Whether alt was pressed at time of event.\n   * @type {boolean}\n   */\n  this.altKey = false;\n\n  /**\n   * Whether shift was pressed at time of event.\n   * @type {boolean}\n   */\n  this.shiftKey = false;\n\n  /**\n   * Whether the meta key was pressed at time of event.\n   * @type {boolean}\n   */\n  this.metaKey = false;\n\n  /**\n   * History state object, only set for PopState events where it's a copy of the\n   * state object provided to pushState or replaceState.\n   * @type {?Object}\n   */\n  this.state = null;\n\n  /**\n   * Whether the default platform modifier key was pressed at time of event.\n   * (This is control for all platforms except Mac, where it's Meta.)\n   * @type {boolean}\n   */\n  this.platformModifierKey = false;\n\n  /**\n   * @type {number}\n   */\n  this.pointerId = 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = '';\n\n  /**\n   * The browser event object.\n   * @private {?Event}\n   */\n  this.event_ = null;\n\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\n\n/**\n * @define {boolean} If true, use the layerX and layerY properties of a native\n * browser event over the offsetX and offsetY properties, which cause expensive\n * reflow. If layerX or layerY is not defined, offsetX and offsetY will be used\n * as usual.\n */\ngoog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY =\n    goog.define('goog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY', false);\n\n\n/**\n * Normalized button constants for the mouse.\n * @enum {number}\n */\ngoog.events.BrowserEvent.MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2,\n  BACK: 3,\n  FORWARD: 4,\n};\n\n\n/**\n * Normalized pointer type constants for pointer events.\n * @enum {string}\n */\ngoog.events.BrowserEvent.PointerType = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch'\n};\n\n\n/**\n * Static data for mapping mouse buttons.\n * @type {!Array<number>}\n * @deprecated Use `goog.events.BrowserEvent.IE_BUTTON_MAP` instead.\n */\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([\n  1,  // LEFT\n  4,  // MIDDLE\n  2   // RIGHT\n]);\n\n\n/**\n * Static data for mapping mouse buttons.\n * @const {!Array<number>}\n */\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\n\n\n/**\n * Static data for mapping MSPointerEvent types to PointerEvent types.\n * @const {!Object<number, goog.events.BrowserEvent.PointerType>}\n */\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({\n  2: goog.events.BrowserEvent.PointerType.TOUCH,\n  3: goog.events.BrowserEvent.PointerType.PEN,\n  4: goog.events.BrowserEvent.PointerType.MOUSE\n});\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * @param {Event} e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n */\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  'use strict';\n  var type = this.type = e.type;\n\n  /**\n   * On touch devices use the first \"changed touch\" as the relevant touch.\n   * @type {?Touch}\n   * @suppress {strictMissingProperties} Added to tighten compiler checks\n   */\n  var relevantTouch =\n      e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;\n\n  // TODO(nicksantos): Change this.target to type EventTarget.\n  this.target = /** @type {Node} */ (e.target) || e.srcElement;\n\n  // TODO(nicksantos): Change this.currentTarget to type EventTarget.\n  this.currentTarget = /** @type {Node} */ (opt_currentTarget);\n\n  var relatedTarget = /** @type {Node} */ (e.relatedTarget);\n  if (relatedTarget) {\n    // There's a bug in FireFox where sometimes, relatedTarget will be a\n    // chrome element, and accessing any property of it will get a permission\n    // denied exception. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=497780\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, 'nodeName')) {\n        relatedTarget = null;\n      }\n    }\n  } else if (type == goog.events.EventType.MOUSEOVER) {\n    relatedTarget = e.fromElement;\n  } else if (type == goog.events.EventType.MOUSEOUT) {\n    relatedTarget = e.toElement;\n  }\n\n  this.relatedTarget = relatedTarget;\n\n  if (relevantTouch) {\n    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX :\n                                                         relevantTouch.pageX;\n    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY :\n                                                         relevantTouch.pageY;\n    this.screenX = relevantTouch.screenX || 0;\n    this.screenY = relevantTouch.screenY || 0;\n  } else {\n    if (goog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY) {\n      this.offsetX = (e.layerX !== undefined) ? e.layerX : e.offsetX;\n      this.offsetY = (e.layerY !== undefined) ? e.layerY : e.offsetY;\n    } else {\n      // Webkit emits a lame warning whenever layerX/layerY is accessed.\n      // http://code.google.com/p/chromium/issues/detail?id=101733\n      this.offsetX = (goog.userAgent.WEBKIT || e.offsetX !== undefined) ?\n          e.offsetX :\n          e.layerX;\n      this.offsetY = (goog.userAgent.WEBKIT || e.offsetY !== undefined) ?\n          e.offsetY :\n          e.layerY;\n    }\n    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;\n    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;\n    this.screenX = e.screenX || 0;\n    this.screenY = e.screenY || 0;\n  }\n\n  this.button = e.button;\n\n  this.keyCode = e.keyCode || 0;\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  this.key = e.key || '';\n  this.charCode = e.charCode || (type == 'keypress' ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  this.state = e.state;\n  this.event_ = e;\n  if (e.defaultPrevented) {\n    // Sync native event state to internal state via super class, where default\n    // prevention is implemented and managed.\n    goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  }\n};\n\n\n/**\n * Tests to see which button was pressed during the event. This is really only\n * useful in IE and Gecko browsers. And in IE, it's only useful for\n * mousedown/mouseup events, because click only fires for the left mouse button.\n *\n * Safari 2 only reports the left button being clicked, and uses the value '1'\n * instead of 0. Opera only reports a mousedown event for the middle button, and\n * no mouse events for the right button. Opera has default behavior for left and\n * middle click that can only be overridden via a configuration setting.\n *\n * There's a nice table of this mess at http://www.unixpapa.com/js/mouse.html.\n *\n * @param {goog.events.BrowserEvent.MouseButton} button The button\n *     to test for.\n * @return {boolean} True if button was pressed.\n */\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  'use strict';\n  return this.event_.button == button;\n};\n\n\n/**\n * Whether this has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @return {boolean} The result.\n */\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  'use strict';\n  // Ctrl+click should never behave like a left-click on mac, regardless of\n  // whether or not the browser will actually ever emit such an event.  If\n  // we see it, treat it like right-click always.\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) &&\n      !(goog.userAgent.MAC && this.ctrlKey);\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble = true;\n  }\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  if (!be.preventDefault) {\n    be.returnValue = false;\n  } else {\n    be.preventDefault();\n  }\n};\n\n\n/**\n * @return {Event} The underlying browser event object.\n */\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  'use strict';\n  return this.event_;\n};\n\n\n/**\n * Extracts the pointer type from the given event.\n * @param {!Event} e\n * @return {string} The pointer type, e.g. 'mouse', 'pen', or 'touch'.\n * @private\n */\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  'use strict';\n  if (typeof (e.pointerType) === 'string') {\n    return e.pointerType;\n  }\n  // IE10 uses integer codes for pointer type.\n  // https://msdn.microsoft.com/en-us/library/hh772359(v=vs.85).aspx\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || '';\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.events.EventType');\n\ngoog.require('goog.events.eventTypeHelpers');\ngoog.require('goog.userAgent');\n\n\n/**\n * Constants for event names.\n * @enum {string}\n */\ngoog.events.EventType = {\n  // Mouse events\n  CLICK: 'click',\n  RIGHTCLICK: 'rightclick',\n  DBLCLICK: 'dblclick',\n  AUXCLICK: 'auxclick',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEOVER: 'mouseover',\n  MOUSEOUT: 'mouseout',\n  MOUSEMOVE: 'mousemove',\n  MOUSEENTER: 'mouseenter',\n  MOUSELEAVE: 'mouseleave',\n\n  // Non-existent event; will never fire. This exists as a mouse counterpart to\n  // POINTERCANCEL.\n  MOUSECANCEL: 'mousecancel',\n\n  // Selection events.\n  // https://www.w3.org/TR/selection-api/\n  SELECTIONCHANGE: 'selectionchange',\n  SELECTSTART: 'selectstart',  // IE, Safari, Chrome\n\n  // Wheel events\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n  WHEEL: 'wheel',\n\n  // Key events\n  KEYPRESS: 'keypress',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n\n  // Focus\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  DEACTIVATE: 'deactivate',  // IE only\n  FOCUSIN: 'focusin',\n  FOCUSOUT: 'focusout',\n\n  // Forms\n  CHANGE: 'change',\n  RESET: 'reset',\n  SELECT: 'select',\n  SUBMIT: 'submit',\n  INPUT: 'input',\n  PROPERTYCHANGE: 'propertychange',  // IE only\n\n  // Drag and drop\n  DRAGSTART: 'dragstart',\n  DRAG: 'drag',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DRAGLEAVE: 'dragleave',\n  DROP: 'drop',\n  DRAGEND: 'dragend',\n\n  // Touch events\n  // Note that other touch events exist, but we should follow the W3C list here.\n  // http://www.w3.org/TR/touch-events/#list-of-touchevent-types\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  TOUCHCANCEL: 'touchcancel',\n\n  // Misc\n  BEFOREUNLOAD: 'beforeunload',\n  CONSOLEMESSAGE: 'consolemessage',\n  CONTEXTMENU: 'contextmenu',\n  DEVICECHANGE: 'devicechange',\n  DEVICEMOTION: 'devicemotion',\n  DEVICEORIENTATION: 'deviceorientation',\n  DOMCONTENTLOADED: 'DOMContentLoaded',\n  ERROR: 'error',\n  HELP: 'help',\n  LOAD: 'load',\n  LOSECAPTURE: 'losecapture',\n  ORIENTATIONCHANGE: 'orientationchange',\n  READYSTATECHANGE: 'readystatechange',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  UNLOAD: 'unload',\n\n  // Media events\n  CANPLAY: 'canplay',\n  CANPLAYTHROUGH: 'canplaythrough',\n  DURATIONCHANGE: 'durationchange',\n  EMPTIED: 'emptied',\n  ENDED: 'ended',\n  LOADEDDATA: 'loadeddata',\n  LOADEDMETADATA: 'loadedmetadata',\n  PAUSE: 'pause',\n  PLAY: 'play',\n  PLAYING: 'playing',\n  PROGRESS: 'progress',\n  RATECHANGE: 'ratechange',\n  SEEKED: 'seeked',\n  SEEKING: 'seeking',\n  STALLED: 'stalled',\n  SUSPEND: 'suspend',\n  TIMEUPDATE: 'timeupdate',\n  VOLUMECHANGE: 'volumechange',\n  WAITING: 'waiting',\n\n  // Media Source Extensions events\n  // https://www.w3.org/TR/media-source/#mediasource-events\n  SOURCEOPEN: 'sourceopen',\n  SOURCEENDED: 'sourceended',\n  SOURCECLOSED: 'sourceclosed',\n  // https://www.w3.org/TR/media-source/#sourcebuffer-events\n  ABORT: 'abort',\n  UPDATE: 'update',\n  UPDATESTART: 'updatestart',\n  UPDATEEND: 'updateend',\n\n  // HTML 5 History events\n  // See http://www.w3.org/TR/html5/browsers.html#event-definitions-0\n  HASHCHANGE: 'hashchange',\n  PAGEHIDE: 'pagehide',\n  PAGESHOW: 'pageshow',\n  POPSTATE: 'popstate',\n\n  // Copy and Paste\n  // Support is limited. Make sure it works on your favorite browser\n  // before using.\n  // http://www.quirksmode.org/dom/events/cutcopypaste.html\n  COPY: 'copy',\n  PASTE: 'paste',\n  CUT: 'cut',\n  BEFORECOPY: 'beforecopy',\n  BEFORECUT: 'beforecut',\n  BEFOREPASTE: 'beforepaste',\n\n  // HTML5 online/offline events.\n  // http://www.w3.org/TR/offline-webapps/#related\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  // HTML 5 worker events\n  MESSAGE: 'message',\n  CONNECT: 'connect',\n\n  // Service Worker Events - ServiceWorkerGlobalScope context\n  // See https://w3c.github.io/ServiceWorker/#execution-context-events\n  // Note: message event defined in worker events section\n  INSTALL: 'install',\n  ACTIVATE: 'activate',\n  FETCH: 'fetch',\n  FOREIGNFETCH: 'foreignfetch',\n  MESSAGEERROR: 'messageerror',\n\n  // Service Worker Events - Document context\n  // See https://w3c.github.io/ServiceWorker/#document-context-events\n  STATECHANGE: 'statechange',\n  UPDATEFOUND: 'updatefound',\n  CONTROLLERCHANGE: 'controllerchange',\n\n  // CSS animation events.\n  ANIMATIONSTART:\n      goog.events.eventTypeHelpers.getVendorPrefixedName('AnimationStart'),\n  ANIMATIONEND:\n      goog.events.eventTypeHelpers.getVendorPrefixedName('AnimationEnd'),\n  ANIMATIONITERATION:\n      goog.events.eventTypeHelpers.getVendorPrefixedName('AnimationIteration'),\n\n  // CSS transition events. Based on the browser support described at:\n  // https://developer.mozilla.org/en/css/css_transitions#Browser_compatibility\n  TRANSITIONEND:\n      goog.events.eventTypeHelpers.getVendorPrefixedName('TransitionEnd'),\n\n  // W3C Pointer Events\n  // http://www.w3.org/TR/pointerevents/\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTERCANCEL: 'pointercancel',\n  POINTERMOVE: 'pointermove',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  GOTPOINTERCAPTURE: 'gotpointercapture',\n  LOSTPOINTERCAPTURE: 'lostpointercapture',\n\n  // IE specific events.\n  // See http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n  // Note: these events will be supplanted in IE11.\n  MSGESTURECHANGE: 'MSGestureChange',\n  MSGESTUREEND: 'MSGestureEnd',\n  MSGESTUREHOLD: 'MSGestureHold',\n  MSGESTURESTART: 'MSGestureStart',\n  MSGESTURETAP: 'MSGestureTap',\n  MSGOTPOINTERCAPTURE: 'MSGotPointerCapture',\n  MSINERTIASTART: 'MSInertiaStart',\n  MSLOSTPOINTERCAPTURE: 'MSLostPointerCapture',\n  MSPOINTERCANCEL: 'MSPointerCancel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  MSPOINTERENTER: 'MSPointerEnter',\n  MSPOINTERHOVER: 'MSPointerHover',\n  MSPOINTERLEAVE: 'MSPointerLeave',\n  MSPOINTERMOVE: 'MSPointerMove',\n  MSPOINTEROUT: 'MSPointerOut',\n  MSPOINTEROVER: 'MSPointerOver',\n  MSPOINTERUP: 'MSPointerUp',\n\n  // Native IMEs/input tools events.\n  TEXT: 'text',\n  // The textInput event is supported in IE9+, but only in lower case. All other\n  // browsers use the camel-case event name.\n  TEXTINPUT: goog.userAgent.IE ? 'textinput' : 'textInput',\n  COMPOSITIONSTART: 'compositionstart',\n  COMPOSITIONUPDATE: 'compositionupdate',\n  COMPOSITIONEND: 'compositionend',\n\n  // The beforeinput event is initially only supported in Safari. See\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=342670 for Chrome\n  // implementation tracking.\n  BEFOREINPUT: 'beforeinput',\n\n  // Fullscreen API events. See https://fullscreen.spec.whatwg.org/.\n  FULLSCREENCHANGE: 'fullscreenchange',\n  // iOS-only fullscreen events. See\n  // https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/ControllingMediaWithJavaScript/ControllingMediaWithJavaScript.html\n  WEBKITBEGINFULLSCREEN: 'webkitbeginfullscreen',\n  WEBKITENDFULLSCREEN: 'webkitendfullscreen',\n\n  // Webview tag events\n  // See https://developer.chrome.com/apps/tags/webview\n  EXIT: 'exit',\n  LOADABORT: 'loadabort',\n  LOADCOMMIT: 'loadcommit',\n  LOADREDIRECT: 'loadredirect',\n  LOADSTART: 'loadstart',\n  LOADSTOP: 'loadstop',\n  RESPONSIVE: 'responsive',\n  SIZECHANGED: 'sizechanged',\n  UNRESPONSIVE: 'unresponsive',\n\n  // HTML5 Page Visibility API.  See details at\n  // `goog.labs.dom.PageVisibilityMonitor`.\n  VISIBILITYCHANGE: 'visibilitychange',\n\n  // LocalStorage event.\n  STORAGE: 'storage',\n\n  // DOM Level 2 mutation events (deprecated).\n  DOMSUBTREEMODIFIED: 'DOMSubtreeModified',\n  DOMNODEINSERTED: 'DOMNodeInserted',\n  DOMNODEREMOVED: 'DOMNodeRemoved',\n  DOMNODEREMOVEDFROMDOCUMENT: 'DOMNodeRemovedFromDocument',\n  DOMNODEINSERTEDINTODOCUMENT: 'DOMNodeInsertedIntoDocument',\n  DOMATTRMODIFIED: 'DOMAttrModified',\n  DOMCHARACTERDATAMODIFIED: 'DOMCharacterDataModified',\n\n  // Print events.\n  BEFOREPRINT: 'beforeprint',\n  AFTERPRINT: 'afterprint',\n\n  // Web app manifest events.\n  BEFOREINSTALLPROMPT: 'beforeinstallprompt',\n  APPINSTALLED: 'appinstalled',\n\n  // Web Animation API (WAAPI) playback events\n  // https://www.w3.org/TR/web-animations-1/#animation-playback-event-types\n  CANCEL: 'cancel',\n  FINISH: 'finish',\n  REMOVE: 'remove'\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An interface for a listenable JavaScript object.\n */\n\ngoog.provide('goog.events.Listenable');\n\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.ListenableKey');\n\n\n/**\n * A listenable interface. A listenable is an object with the ability\n * to dispatch/broadcast events to \"event listeners\" registered via\n * listen/listenOnce.\n *\n * The interface allows for an event propagation mechanism similar\n * to one offered by native browser event targets, such as\n * capture/bubble mechanism, stopping propagation, and preventing\n * default actions. Capture/bubble mechanism depends on the ancestor\n * tree constructed via `#getParentEventTarget`; this tree\n * must be directed acyclic graph. The meaning of default action(s)\n * in preventDefault is specific to a particular use case.\n *\n * Implementations that do not support capture/bubble or can not have\n * a parent listenable can simply not implement any ability to set the\n * parent listenable (and have `#getParentEventTarget` return\n * null).\n *\n * Implementation of this class can be used with or independently from\n * goog.events.\n *\n * Implementation must call `#addImplementation(implClass)`.\n *\n * @interface\n * @see goog.events\n * @see http://www.w3.org/TR/DOM-Level-2-Events/events.html\n */\ngoog.events.Listenable = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * goog.events.Listenable.\n *\n * See addImplementation/isImplementedBy.\n *\n * @type {string}\n * @const\n */\ngoog.events.Listenable.IMPLEMENTED_BY_PROP =\n    'closure_listenable_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * Marks a given class (constructor) as an implementation of\n * Listenable, so that we can query that fact at runtime. The class\n * must have already implemented the interface.\n * @param {function(new:goog.events.Listenable,...)} cls The class constructor.\n *     The corresponding class must have already implemented the interface.\n */\ngoog.events.Listenable.addImplementation = function(cls) {\n  'use strict';\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;\n};\n\n\n/**\n * @param {?Object} obj The object to check.\n * @return {boolean} Whether a given instance implements Listenable. The\n *     class/superclass of the instance must call addImplementation.\n */\ngoog.events.Listenable.isImplementedBy = function(obj) {\n  'use strict';\n  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Adds an event listener that is removed automatically after the\n * listener fired once.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Removes an event listener which was added with listen() or listenOnce().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.Listenable.prototype.unlistenByKey = function(key) {};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {?goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n */\ngoog.events.Listenable.prototype.dispatchEvent = function(e) {};\n\n\n/**\n * Removes all listeners from this listenable. If type is specified,\n * it will only remove listeners of the particular type. otherwise all\n * registered listeners will be removed.\n *\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove,\n *     default is to remove all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.Listenable.prototype.removeAllListeners = function(opt_type) {};\n\n\n/**\n * Returns the parent of this event target to use for capture/bubble\n * mechanism.\n *\n * NOTE(chrishenry): The name reflects the original implementation of\n * custom event target (`goog.events.EventTarget`). We decided\n * that changing the name is not worth it.\n *\n * @return {?goog.events.Listenable} The parent EventTarget or null if\n *     there is no parent.\n */\ngoog.events.Listenable.prototype.getParentEventTarget = function() {};\n\n\n/**\n * Fires all registered listeners in this listenable for the given\n * type and capture mode, passing them the given eventObject. This\n * does not perform actual capture/bubble. Only implementors of the\n * interface should be using this.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.fireListeners = function(\n    type, capture, eventObject) {};\n\n\n/**\n * Gets all listeners in this listenable for the given type and\n * capture mode.\n *\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListeners = function(type, capture) {};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {?goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {};\n\n\n/**\n * Whether there is any active listeners matching the specified\n * signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.hasListener = function(\n    opt_type, opt_capture) {};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An interface that describes a single registered listener.\n */\ngoog.provide('goog.events.ListenableKey');\n\ngoog.requireType('goog.events.Listenable');\n\n\n/**\n * An interface that describes a single registered listener.\n * @interface\n */\ngoog.events.ListenableKey = function() {};\n\n\n/**\n * Counter used to create a unique key\n * @type {number}\n * @private\n */\ngoog.events.ListenableKey.counter_ = 0;\n\n\n/**\n * Reserves a key to be used for ListenableKey#key field.\n * @return {number} A number to be used to fill ListenableKey#key\n *     field.\n */\ngoog.events.ListenableKey.reserveKey = function() {\n  'use strict';\n  return ++goog.events.ListenableKey.counter_;\n};\n\n\n/**\n * The source event target.\n * @type {?Object|?goog.events.Listenable}\n */\ngoog.events.ListenableKey.prototype.src;\n\n\n/**\n * The event type the listener is listening to.\n * @type {string}\n */\ngoog.events.ListenableKey.prototype.type;\n\n\n/**\n * The listener function.\n * @type {function(?):?|{handleEvent:function(?):?}|null}\n */\ngoog.events.ListenableKey.prototype.listener;\n\n\n/**\n * Whether the listener works on capture phase.\n * @type {boolean}\n */\ngoog.events.ListenableKey.prototype.capture;\n\n\n/**\n * The 'this' object for the listener function's scope.\n * @type {?Object|undefined}\n */\ngoog.events.ListenableKey.prototype.handler;\n\n\n/**\n * A globally unique number to identify the key.\n * @type {number}\n */\ngoog.events.ListenableKey.prototype.key;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Listener object.\n * @see ../demos/events.html\n */\n\ngoog.provide('goog.events.Listener');\n\ngoog.require('goog.events.ListenableKey');\ngoog.requireType('goog.events.Listenable');\n\n\n\n/**\n * Simple class that stores information about a listener\n * @param {function(?):?} listener Callback function.\n * @param {Function} proxy Wrapper for the listener that patches the event.\n * @param {EventTarget|goog.events.Listenable} src Source object for\n *     the event.\n * @param {string} type Event type.\n * @param {boolean} capture Whether in capture or bubble phase.\n * @param {Object=} opt_handler Object in whose context to execute the callback.\n * @implements {goog.events.ListenableKey}\n * @constructor\n */\ngoog.events.Listener = function(\n    listener, proxy, src, type, capture, opt_handler) {\n  'use strict';\n  if (goog.events.Listener.ENABLE_MONITORING) {\n    this.creationStack = new Error().stack;\n  }\n\n  /** @override */\n  this.listener = listener;\n\n  /**\n   * A wrapper over the original listener. This is used solely to\n   * handle native browser events (it is used to simulate the capture\n   * phase and to patch the event object).\n   * @type {Function}\n   */\n  this.proxy = proxy;\n\n  /**\n   * Object or node that callback is listening to\n   * @type {EventTarget|goog.events.Listenable}\n   */\n  this.src = src;\n\n  /**\n   * The event type.\n   * @const {string}\n   */\n  this.type = type;\n\n  /**\n   * Whether the listener is being called in the capture or bubble phase\n   * @const {boolean}\n   */\n  this.capture = !!capture;\n\n  /**\n   * Optional object whose context to execute the listener in\n   * @type {Object|undefined}\n   */\n  this.handler = opt_handler;\n\n  /**\n   * The key of the listener.\n   * @const {number}\n   * @override\n   */\n  this.key = goog.events.ListenableKey.reserveKey();\n\n  /**\n   * Whether to remove the listener after it has been called.\n   * @type {boolean}\n   */\n  this.callOnce = false;\n\n  /**\n   * Whether the listener has been removed.\n   * @type {boolean}\n   */\n  this.removed = false;\n};\n\n\n/**\n * @define {boolean} Whether to enable the monitoring of the\n *     goog.events.Listener instances. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.events.Listener.ENABLE_MONITORING =\n    goog.define('goog.events.Listener.ENABLE_MONITORING', false);\n\n\n/**\n * If monitoring the goog.events.Listener instances is enabled, stores the\n * creation stack trace of the Disposable instance.\n * @type {string}\n */\ngoog.events.Listener.prototype.creationStack;\n\n\n/**\n * Marks this listener as removed. This also remove references held by\n * this listener object (such as listener and event source).\n */\ngoog.events.Listener.prototype.markAsRemoved = function() {\n  'use strict';\n  this.removed = true;\n  this.listener = null;\n  this.proxy = null;\n  this.src = null;\n  this.handler = null;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A map of listeners that provides utility functions to\n * deal with listeners on an event target. Used by\n * `goog.events.EventTarget`.\n *\n * WARNING: Do not use this class from outside goog.events package.\n *\n */\n\ngoog.provide('goog.events.ListenerMap');\n\ngoog.require('goog.array');\ngoog.require('goog.events.Listener');\ngoog.require('goog.object');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.Listenable');\ngoog.requireType('goog.events.ListenableKey');\n\n\n\n/**\n * Creates a new listener map.\n * @param {EventTarget|goog.events.Listenable} src The src object.\n * @constructor\n * @final\n */\ngoog.events.ListenerMap = function(src) {\n  'use strict';\n  /** @type {EventTarget|goog.events.Listenable} */\n  this.src = src;\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @type {!Object<string, !Array<!goog.events.Listener>>}\n   */\n  this.listeners = {};\n\n  /**\n   * The count of types in this map that have registered listeners.\n   * @private {number}\n   */\n  this.typeCount_ = 0;\n};\n\n\n/**\n * @return {number} The count of event types in this map that actually\n *     have registered listeners.\n */\ngoog.events.ListenerMap.prototype.getTypeCount = function() {\n  'use strict';\n  return this.typeCount_;\n};\n\n\n/**\n * @return {number} Total number of registered listeners.\n */\ngoog.events.ListenerMap.prototype.getListenerCount = function() {\n  'use strict';\n  var count = 0;\n  for (var type in this.listeners) {\n    count += this.listeners[type].length;\n  }\n  return count;\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n */\ngoog.events.ListenerMap.prototype.add = function(\n    type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  var typeStr = type.toString();\n  var listenerArray = this.listeners[typeStr];\n  if (!listenerArray) {\n    listenerArray = this.listeners[typeStr] = [];\n    this.typeCount_++;\n  }\n\n  var listenerObj;\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    listenerObj = listenerArray[index];\n    if (!callOnce) {\n      // Ensure that, if there is an existing callOnce listener, it is no\n      // longer a callOnce listener.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = new goog.events.Listener(\n        listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);\n    listenerObj.callOnce = callOnce;\n    listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\n\n\n/**\n * Removes a matching listener.\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.ListenerMap.prototype.remove = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  var typeStr = type.toString();\n  if (!(typeStr in this.listeners)) {\n    return false;\n  }\n\n  var listenerArray = this.listeners[typeStr];\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    var listenerObj = listenerArray[index];\n    listenerObj.markAsRemoved();\n    goog.array.removeAt(listenerArray, index);\n    if (listenerArray.length == 0) {\n      delete this.listeners[typeStr];\n      this.typeCount_--;\n    }\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes the given listener object.\n * @param {!goog.events.ListenableKey} listener The listener to remove.\n * @return {boolean} Whether the listener is removed.\n */\ngoog.events.ListenerMap.prototype.removeByKey = function(listener) {\n  'use strict';\n  var type = listener.type;\n  if (!(type in this.listeners)) {\n    return false;\n  }\n\n  var removed = goog.array.remove(this.listeners[type], listener);\n  if (removed) {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n    if (this.listeners[type].length == 0) {\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Removes all listeners from this map. If opt_type is provided, only\n * listeners that match the given type are removed.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n * @return {number} Number of listeners removed.\n */\ngoog.events.ListenerMap.prototype.removeAll = function(opt_type) {\n  'use strict';\n  var typeStr = opt_type && opt_type.toString();\n  var count = 0;\n  for (var type in this.listeners) {\n    if (!typeStr || type == typeStr) {\n      var listenerArray = this.listeners[type];\n      for (var i = 0; i < listenerArray.length; i++) {\n        ++count;\n        listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets all listeners that match the given type and capture mode. The\n * returned array is a copy (but the listener objects are not).\n * @param {string|!goog.events.EventId} type The type of the listeners\n *     to retrieve.\n * @param {boolean} capture The capture mode of the listeners to retrieve.\n * @return {!Array<!goog.events.ListenableKey>} An array of matching\n *     listeners.\n */\ngoog.events.ListenerMap.prototype.getListeners = function(type, capture) {\n  'use strict';\n  var listenerArray = this.listeners[type.toString()];\n  var rv = [];\n  if (listenerArray) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      var listenerObj = listenerArray[i];\n      if (listenerObj.capture == capture) {\n        rv.push(listenerObj);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId} type The type of the listener\n *     to retrieve.\n * @param {!Function} listener The listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n */\ngoog.events.ListenerMap.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  'use strict';\n  var listenerArray = this.listeners[type.toString()];\n  var i = -1;\n  if (listenerArray) {\n    i = goog.events.ListenerMap.findListenerIndex_(\n        listenerArray, listener, capture, opt_listenerScope);\n  }\n  return i > -1 ? listenerArray[i] : null;\n};\n\n\n/**\n * Whether there is a matching listener. If either the type or capture\n * parameters are unspecified, the function will match on the\n * remaining criteria.\n *\n * @param {string|!goog.events.EventId=} opt_type The type of the listener.\n * @param {boolean=} opt_capture The capture mode of the listener.\n * @return {boolean} Whether there is an active listener matching\n *     the requested type and/or capture phase.\n */\ngoog.events.ListenerMap.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  'use strict';\n  var hasType = (opt_type !== undefined);\n  var typeStr = hasType ? opt_type.toString() : '';\n  var hasCapture = (opt_capture !== undefined);\n\n  return goog.object.some(this.listeners, function(listenerArray, type) {\n    'use strict';\n    for (var i = 0; i < listenerArray.length; ++i) {\n      if ((!hasType || listenerArray[i].type == typeStr) &&\n          (!hasCapture || listenerArray[i].capture == opt_capture)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\n\n\n/**\n * Finds the index of a matching goog.events.Listener in the given\n * listenerArray.\n * @param {!Array<!goog.events.Listener>} listenerArray Array of listener.\n * @param {!Function} listener The listener function.\n * @param {boolean=} opt_useCapture The capture flag for the listener.\n * @param {Object=} opt_listenerScope The listener scope.\n * @return {number} The index of the matching listener within the\n *     listenerArray.\n * @private\n */\ngoog.events.ListenerMap.findListenerIndex_ = function(\n    listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listenerObj = listenerArray[i];\n    if (!listenerObj.removed && listenerObj.listener == listener &&\n        listenerObj.capture == !!opt_useCapture &&\n        listenerObj.handler == opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for manipulating objects/maps/hashes.\n */\ngoog.module('goog.object');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Calls a function for each element in an object/map/hash.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):?} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and the return value is ignored.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {void}\n * @template T,K,V\n */\nfunction forEach(obj, f, opt_obj) {\n  for (const key in obj) {\n    f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If that call returns\n * true, adds the element to a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean. If the return value is true the\n *     element is added to the result object. If it is false the element is not\n *     included.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,V>} a new object in which only elements that passed the\n *     test are present.\n * @template T,K,V\n */\nfunction filter(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\n/**\n * For every element in an object/map/hash calls a function and inserts the\n * result into a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):R} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and should return something. The result will be inserted into a\n *     new object.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,R>} a new object with the results from f.\n * @template T,K,V,R\n */\nfunction map(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n  return res;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If any\n * call returns true, returns true (without checking the rest). If\n * all calls return false, returns false.\n * @param {?Object<K,V>} obj The object to check.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} true if any element passes the test.\n * @template T,K,V\n */\nfunction some(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If\n * all calls return true, returns true. If any call returns false, returns\n * false at this point and does not continue to check the remaining elements.\n * @param {?Object<K,V>} obj The object to check.\n * @param {?function(this:T,V,?,?Object<K,V>):boolean} f The function to call\n *     for every element. This function takes 3 arguments (the value, the key\n *     and the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} false if any element fails the test.\n * @template T,K,V\n */\nfunction every(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (!f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns the number of key-value pairs in the object map.\n * @param {?Object} obj The object for which to get the number of key-value\n *     pairs.\n * @return {number} The number of key-value pairs in the object map.\n */\nfunction getCount(obj) {\n  let rv = 0;\n  for (const key in obj) {\n    rv++;\n  }\n  return rv;\n}\n\n/**\n * Returns one key from the object map, if any exists.\n * For map literals the returned key will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object} obj The object to pick a key from.\n * @return {string|undefined} The key or undefined if the object is empty.\n */\nfunction getAnyKey(obj) {\n  for (const key in obj) {\n    return key;\n  }\n}\n\n/**\n * Returns one value from the object map, if any exists.\n * For map literals the returned value will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object<K,V>} obj The object to pick a value from.\n * @return {V|undefined} The value or undefined if the object is empty.\n * @template K,V\n */\nfunction getAnyValue(obj) {\n  for (const key in obj) {\n    return obj[key];\n  }\n}\n\n/**\n * Whether the object/hash/map contains the given object as a value.\n * An alias for containsValue(obj, val).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The object for which to check.\n * @return {boolean} true if val is present.\n * @template K,V\n */\nfunction contains(obj, val) {\n  return containsValue(obj, val);\n}\n\n/**\n * Returns the values of the object/map/hash.\n * @param {?Object<K,V>} obj The object from which to get the values.\n * @return {!Array<V>} The values in the object/map/hash.\n * @template K,V\n */\nfunction getValues(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Returns the keys of the object/map/hash.\n * @param {?Object} obj The object from which to get the keys.\n * @return {!Array<string>} Array of property keys.\n */\nfunction getKeys(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = key;\n  }\n  return res;\n}\n\n/**\n * Get a value from an object multiple levels deep.  This is useful for\n * pulling values from deeply nested objects, such as JSON responses.\n * Example usage: getValueByKeys(jsonObj, 'foo', 'entries', 3)\n * @param {?Object} obj An object to get the value from. Can be array-like.\n * @param {...(string|number|!IArrayLike<number|string>)} var_args A number of\n *     keys (as strings, or numbers, for array-like objects). Can also be\n *     specified as a single array of keys.\n * @return {*} The resulting value. If, at any point, the value for a key in the\n *     current object is null or undefined, returns undefined.\n */\nfunction getValueByKeys(obj, var_args) {\n  const isArrayLike = goog.isArrayLike(var_args);\n  const keys = isArrayLike ?\n      /** @type {!IArrayLike<number|string>} */ (var_args) :\n      arguments;\n\n  // Start with the 2nd parameter for the variable parameters syntax.\n  for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (obj == null) return undefined;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n}\n\n/**\n * Whether the object/map/hash contains the given key.\n * @param {?Object} obj The object in which to look for key.\n * @param {?} key The key for which to check.\n * @return {boolean} true If the map contains the key.\n */\nfunction containsKey(obj, key) {\n  return obj !== null && key in obj;\n}\n\n/**\n * Whether the object/map/hash contains the given value. This is O(n).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The value for which to check.\n * @return {boolean} true If the map contains the value.\n * @template K,V\n */\nfunction containsValue(obj, val) {\n  for (const key in obj) {\n    if (obj[key] == val) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its key.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {string|undefined} The key of an element for which the function\n *     returns true or undefined if no such element is found.\n * @template T,K,V\n */\nfunction findKey(obj, f, thisObj = undefined) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (thisObj), obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its value.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {V} The value of an element for which the function returns true or\n *     undefined if no such element is found.\n * @template T,K,V\n */\nfunction findValue(obj, f, thisObj = undefined) {\n  const key = findKey(obj, f, thisObj);\n  return key && obj[key];\n}\n\n/**\n * Whether the object/map/hash is empty.\n * @param {?Object} obj The object to test.\n * @return {boolean} true if obj is empty.\n */\nfunction isEmpty(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Removes all key value pairs from the object/map/hash.\n * @param {?Object} obj The object to clear.\n * @return {void}\n */\nfunction clear(obj) {\n  for (const i in obj) {\n    delete obj[i];\n  }\n}\n\n/**\n * Removes a key-value pair based on the key.\n * @param {?Object} obj The object from which to remove the key.\n * @param {?} key The key to remove.\n * @return {boolean} Whether an element was removed.\n */\nfunction remove(obj, key) {\n  let rv;\n  if (rv = key in /** @type {!Object} */ (obj)) {\n    delete obj[key];\n  }\n  return rv;\n}\n\n/**\n * Adds a key-value pair to the object. Throws an exception if the key is\n * already in use. Use set if you want to change an existing pair.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} val The value to add.\n * @return {void}\n * @template K,V\n */\nfunction add(obj, key, val) {\n  if (obj !== null && key in obj) {\n    throw new Error(`The object already contains the key \"${key}\"`);\n  }\n  set(obj, key, val);\n}\n\n/**\n * Returns the value for the given key.\n * @param {?Object<K,V>} obj The object from which to get the value.\n * @param {string} key The key for which to get the value.\n * @param {R=} val The value to return if no item is found for the given key\n *     (default is undefined).\n * @return {V|R|undefined} The value for the given key.\n * @template K,V,R\n */\nfunction get(obj, key, val = undefined) {\n  if (obj !== null && key in obj) {\n    return obj[key];\n  }\n  return val;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add.\n * @template K,V\n * @return {void}\n */\nfunction set(obj, key, value) {\n  obj[key] = value;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash if it doesn't exist yet.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setIfUndefined(obj, key, value) {\n  return key in /** @type {!Object} */ (obj) ? obj[key] : (obj[key] = value);\n}\n\n/**\n * Sets a key and value to an object if the key is not set. The value will be\n * the return value of the given function. If the key already exists, the\n * object will not be changed and the function will not be called (the function\n * will be lazily evaluated -- only called if necessary).\n * This function is particularly useful when used with an `Object` which is\n * acting as a cache.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {function():V} f The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setWithReturnValueIfNotSet(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n\n  const val = f();\n  obj[key] = val;\n  return val;\n}\n\n/**\n * Compares two objects for equality using === on the values.\n * @param {!Object<K,V>} a\n * @param {!Object<K,V>} b\n * @return {boolean}\n * @template K,V\n */\nfunction equals(a, b) {\n  for (const k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return false;\n    }\n  }\n  for (const k in b) {\n    if (!(k in a)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns a shallow clone of the object.\n * @param {?Object<K,V>} obj Object to clone.\n * @return {!Object<K,V>} Clone of the input object.\n * @template K,V\n */\nfunction clone(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n * WARNINGS:\n * <code>unsafeClone</code> does not detect reference loops. Objects\n * that refer to themselves will cause infinite recursion.\n * <code>unsafeClone</code> is unaware of unique identifiers, and\n * copies UIDs created by <code>getUid</code> into cloned results.\n * @param {T} obj The value to clone.\n * @return {T} A clone of the input value.\n * @template T\n */\nfunction unsafeClone(obj) {\n  if (!obj || typeof obj !== 'object') return obj;\n  if (typeof obj.clone === 'function') return obj.clone();\n  if (typeof Map !== 'undefined' && obj instanceof Map) {\n    return new Map(obj);\n  } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n    return new Set(obj);\n  } else if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n  const clone = Array.isArray(obj) ? [] :\n      typeof ArrayBuffer === 'function' &&\n          typeof ArrayBuffer.isView === 'function' && ArrayBuffer.isView(obj) &&\n          !(obj instanceof DataView) ?\n                                     new obj.constructor(obj.length) :\n                                     {};\n  for (const key in obj) {\n    clone[key] = unsafeClone(obj[key]);\n  }\n  return clone;\n}\n\n/**\n * Returns a new object in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n * @param {?Object} obj The object to transpose.\n * @return {!Object} The transposed object.\n */\nfunction transpose(obj) {\n  const transposed = {};\n  for (const key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n}\n\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n */\nconst PROTOTYPE_FIELDS = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf',\n];\n\n/**\n * Extends an object with another object.\n * This operates 'in-place'; it does not create a new Object.\n * Example:\n * var o = {};\n * extend(o, {a: 0, b: 1});\n * o; // {a: 0, b: 1}\n * extend(o, {b: 2, c: 3});\n * o; // {a: 0, b: 2, c: 3}\n * @param {?Object} target The object to modify. Existing properties will be\n *     overwritten if they are also present in one of the objects in `var_args`.\n * @param {...(?Object|undefined)} var_args The objects from which values\n *     will be copied.\n * @return {void}\n * @deprecated Prefer Object.assign\n */\nfunction extend(target, var_args) {\n  let key;\n  let source;\n  for (let i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n\n    // For IE the for-in-loop does not contain any properties that are not\n    // enumerable on the prototype object (for example isPrototypeOf from\n    // Object.prototype) and it will also not include 'replace' on objects that\n    // extend String and change 'replace' (not that it is common for anyone to\n    // extend anything except Object).\n\n    for (let j = 0; j < PROTOTYPE_FIELDS.length; j++) {\n      key = PROTOTYPE_FIELDS[j];\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * Creates a new object built from the key-value pairs provided as arguments.\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise even arguments are used as\n *     the property names and odd arguments are used as the property values.\n * @return {!Object} The new object.\n * @throws {!Error} If there are uneven number of arguments or there is only one\n *     non array argument.\n */\nfunction create(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return create.apply(null, arguments[0]);\n  }\n\n  if (argLength % 2) {\n    throw new Error('Uneven number of arguments');\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n}\n\n/**\n * Creates a new object where the property names come from the arguments but\n * the value is always set to true\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise the arguments are used as\n *     the property names.\n * @return {!Object} The new object.\n */\nfunction createSet(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return createSet.apply(null, arguments[0]);\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i++) {\n    rv[arguments[i]] = true;\n  }\n  return rv;\n}\n\n/**\n * Creates an immutable view of the underlying object, if the browser\n * supports immutable objects.\n * In default mode, writes to this view will fail silently. In strict mode,\n * they will throw an error.\n * @param {!Object<K,V>} obj An object.\n * @return {!Object<K,V>} An immutable view of that object, or the original\n *     object if this browser does not support immutables.\n * @template K,V\n */\nfunction createImmutableView(obj) {\n  let result = obj;\n  if (Object.isFrozen && !Object.isFrozen(obj)) {\n    result = Object.create(obj);\n    Object.freeze(result);\n  }\n  return result;\n}\n\n/**\n * @param {!Object} obj An object.\n * @return {boolean} Whether this is an immutable view of the object.\n */\nfunction isImmutableView(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n}\n\n/**\n * Get all properties names on a given Object regardless of enumerability.\n * <p> If the browser does not support `Object.getOwnPropertyNames` nor\n * `Object.getPrototypeOf` then this is equivalent to using\n * `getKeys`\n * @param {?Object} obj The object to get the properties of.\n * @param {boolean=} includeObjectPrototype Whether properties defined on\n *     `Object.prototype` should be included in the result.\n * @param {boolean=} includeFunctionPrototype Whether properties defined on\n *     `Function.prototype` should be included in the result.\n * @return {!Array<string>}\n * @public\n */\nfunction getAllPropertyNames(\n    obj, includeObjectPrototype = undefined,\n    includeFunctionPrototype = undefined) {\n  if (!obj) {\n    return [];\n  }\n\n  // Naively use a for..in loop to get the property names if the browser doesn't\n  // support any other APIs for getting it.\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return getKeys(obj);\n  }\n\n  const visitedSet = {};\n\n  // Traverse the prototype chain and add all properties to the visited set.\n  let proto = obj;\n  while (proto && (proto !== Object.prototype || !!includeObjectPrototype) &&\n         (proto !== Function.prototype || !!includeFunctionPrototype)) {\n    const names = Object.getOwnPropertyNames(proto);\n    for (let i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return getKeys(visitedSet);\n}\n\n/**\n * Given a ES5 or ES6 class reference, return its super class / super\n * constructor.\n * This should be used in rare cases where you need to walk up the inheritance\n * tree (this is generally a bad idea). But this work with ES5 and ES6 classes,\n * unlike relying on the superClass_ property.\n * Note: To start walking up the hierarchy from an instance call this with its\n * `constructor` property; e.g. `getSuperClass(instance.constructor)`.\n * @param {function(new: ?)} constructor\n * @return {?Object}\n */\nfunction getSuperClass(constructor) {\n  const proto = Object.getPrototypeOf(constructor.prototype);\n  return proto && proto.constructor;\n}\n\nexports = {\n  add,\n  clear,\n  clone,\n  contains,\n  containsKey,\n  containsValue,\n  create,\n  createImmutableView,\n  createSet,\n  equals,\n  every,\n  extend,\n  filter,\n  findKey,\n  findValue,\n  forEach,\n  get,\n  getAllPropertyNames,\n  getAnyKey,\n  getAnyValue,\n  getCount,\n  getKeys,\n  getSuperClass,\n  getValueByKeys,\n  getValues,\n  isEmpty,\n  isImmutableView,\n  map,\n  remove,\n  set,\n  setIfUndefined,\n  setWithReturnValueIfNotSet,\n  some,\n  transpose,\n  unsafeClone,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An event manager for both native browser event\n * targets and custom JavaScript event targets\n * (`goog.events.Listenable`). This provides an abstraction\n * over browsers' event systems.\n *\n * It also provides a simulation of W3C event model's capture phase in\n * Internet Explorer (IE 8 and below). Caveat: the simulation does not\n * interact well with listeners registered directly on the elements\n * (bypassing goog.events) or even with listeners registered via\n * goog.events in a separate JS binary. In these cases, we provide\n * no ordering guarantees.\n *\n * The listeners will receive a \"patched\" event object. Such event object\n * contains normalized values for certain event properties that differs in\n * different browsers.\n *\n * Example usage:\n * <pre>\n * goog.events.listen(myNode, 'click', function(e) { alert('woo') });\n * goog.events.listen(myNode, 'mouseover', mouseHandler, true);\n * goog.events.unlisten(myNode, 'mouseover', mouseHandler, true);\n * goog.events.removeAll(myNode);\n * </pre>\n *\n *                                            in IE and event object patching]\n *\n * @see ../demos/events.html\n * @see ../demos/event-propagation.html\n * @see ../demos/stopevent.html\n */\n\n// IMPLEMENTATION NOTES:\n// goog.events stores an auxiliary data structure on each EventTarget\n// source being listened on. This allows us to take advantage of GC,\n// having the data structure GC'd when the EventTarget is GC'd. This\n// GC behavior is equivalent to using W3C DOM Events directly.\n\ngoog.provide('goog.events');\ngoog.provide('goog.events.CaptureSimulationMode');\ngoog.provide('goog.events.Key');\ngoog.provide('goog.events.ListenableType');\n\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.BrowserEvent');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.requireType('goog.debug.ErrorHandler');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.EventWrapper');\ngoog.requireType('goog.events.ListenableKey');\ngoog.requireType('goog.events.Listener');\n\n\n/**\n * @typedef {number|goog.events.ListenableKey}\n */\ngoog.events.Key;\n\n\n/**\n * @typedef {EventTarget|goog.events.Listenable}\n */\ngoog.events.ListenableType;\n\n\n/**\n * Property name on a native event target for the listener map\n * associated with the event target.\n * @private @const {string}\n */\ngoog.events.LISTENER_MAP_PROP_ = 'closure_lm_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * String used to prepend to IE event types.\n * @const\n * @private\n */\ngoog.events.onString_ = 'on';\n\n\n/**\n * Map of computed \"on<eventname>\" strings for IE event types. Caching\n * this removes an extra object allocation in goog.events.listen which\n * improves IE6 performance.\n * @const\n * @dict\n * @private\n */\ngoog.events.onStringMap_ = {};\n\n\n/**\n * @enum {number} Different capture simulation mode for IE8-.\n */\ngoog.events.CaptureSimulationMode = {\n  /**\n   * Does not perform capture simulation. Will asserts in IE8- when you\n   * add capture listeners.\n   */\n  OFF_AND_FAIL: 0,\n\n  /**\n   * Does not perform capture simulation, silently ignore capture\n   * listeners.\n   */\n  OFF_AND_SILENT: 1,\n\n  /**\n   * Performs capture simulation.\n   */\n  ON: 2\n};\n\n\n/**\n * @define {number} The capture simulation mode for IE8-. By default,\n *     this is ON.\n */\ngoog.events.CAPTURE_SIMULATION_MODE =\n    goog.define('goog.events.CAPTURE_SIMULATION_MODE', 2);\n\n\n/**\n * Estimated count of total native listeners.\n * @private {number}\n */\ngoog.events.listenerCountEstimate_ = 0;\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. A listener can only be added once\n * to an object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method, or an object with a handleEvent function.\n *     WARNING: passing an Object is now softly deprecated.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.listen = function(src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (opt_options && opt_options.once) {\n    return goog.events.listenOnce(\n        src, type, listener, opt_options, opt_handler);\n  }\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listen(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ false, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target. A listener can only be added once to an object and if it\n * is added again the key for the listener is returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {EventTarget} src The node to listen to events on.\n * @param {string|?goog.events.EventId<EVENTOBJ>} type Event type.\n * @param {!Function} listener Callback function.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener or otherwise.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} Unique key for the listener.\n * @template EVENTOBJ\n * @private\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.listen_ = function(\n    src, type, listener, callOnce, opt_options, opt_handler) {\n  'use strict';\n  if (!type) {\n    throw new Error('Invalid event type');\n  }\n\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  var listenerMap = goog.events.getListenerMap_(src);\n  if (!listenerMap) {\n    src[goog.events.LISTENER_MAP_PROP_] = listenerMap =\n        new goog.events.ListenerMap(src);\n  }\n\n  var listenerObj = /** @type {goog.events.Listener} */ (\n      listenerMap.add(type, listener, callOnce, capture, opt_handler));\n\n  // If the listenerObj already has a proxy, it has been set up\n  // previously. We simply return.\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n\n  var proxy = goog.events.getProxy();\n  listenerObj.proxy = proxy;\n\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  proxy.src = src;\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  proxy.listener = listenerObj;\n\n  // Attach the proxy through the browser's API\n  if (src.addEventListener) {\n    // Don't pass an object as `capture` if the browser doesn't support that.\n    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {\n      opt_options = capture;\n    }\n    // Don't break tests that expect a boolean.\n    if (opt_options === undefined) opt_options = false;\n    src.addEventListener(type.toString(), proxy, opt_options);\n  } else if (src.attachEvent) {\n    // The else if above used to be an unconditional else. It would call\n    // attachEvent come gws or high water. This would sometimes throw an\n    // exception on IE11, spoiling the day of some callers. The previous\n    // incarnation of this code, from 2007, indicates that it replaced an\n    // earlier still version that caused excess allocations on IE6.\n    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n  } else if (src.addListener && src.removeListener) {\n    // In IE, MediaQueryList uses addListener() insteadd of addEventListener. In\n    // Safari, there is no global for the MediaQueryList constructor, so we just\n    // check whether the object \"looks like\" MediaQueryList.\n    goog.asserts.assert(\n        type === 'change', 'MediaQueryList only has a change event');\n    src.addListener(proxy);\n  } else {\n    throw new Error('addEventListener and attachEvent are unavailable.');\n  }\n\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\n\n\n/**\n * Helper function for returning a proxy function.\n * @return {!Function} A new or reused function object.\n */\ngoog.events.getProxy = function() {\n  'use strict';\n  const proxyCallbackFunction = goog.events.handleBrowserEvent_;\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  const f = function(eventObject) {\n    return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n  };\n  return f;\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. After the event has fired the event\n * listener is removed from the target.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.listenOnce = function(\n    src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listenOnce(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ true, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.Listenable}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.Listenable} src The target to\n *     listen to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @template T\n */\ngoog.events.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  'use strict';\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes an event listener which was added with listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {?boolean} indicating whether the listener was there to remove.\n * @template EVENTOBJ\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return false;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    var listenerObj = listenerMap.getListener(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {goog.events.Key} key The key returned by listen() for this\n *     event listener.\n * @return {boolean} indicating whether the listener was there to remove.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.unlistenByKey = function(key) {\n  'use strict';\n  // TODO(chrishenry): Remove this check when tests that rely on this\n  // are fixed.\n  if (typeof key === 'number') {\n    return false;\n  }\n\n  var listener = key;\n  if (!listener || listener.removed) {\n    return false;\n  }\n\n  var src = listener.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return /** @type {!goog.events.Listenable} */ (src).unlistenByKey(listener);\n  }\n\n  var type = listener.type;\n  /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n  var proxy = listener.proxy;\n  if (src.removeEventListener) {\n    src.removeEventListener(type, proxy, listener.capture);\n  } else if (src.detachEvent) {\n    src.detachEvent(goog.events.getOnString_(type), proxy);\n  } else if (src.addListener && src.removeListener) {\n    src.removeListener(proxy);\n  }\n  goog.events.listenerCountEstimate_--;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  // TODO(chrishenry): Try to remove this conditional and execute the\n  // first branch always. This should be safe.\n  if (listenerMap) {\n    listenerMap.removeByKey(listener);\n    if (listenerMap.getTypeCount() == 0) {\n      // Null the src, just because this is simple to do (and useful\n      // for IE <= 7).\n      listenerMap.src = null;\n      // We don't use delete here because IE does not allow delete\n      // on a window object.\n      src[goog.events.LISTENER_MAP_PROP_] = null;\n    }\n  } else {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n  }\n\n  return true;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n */\ngoog.events.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  'use strict';\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes all listeners from an object. You can also optionally\n * remove listeners of a particular type.\n *\n * @param {Object|undefined} obj Object to remove listeners from. Must be an\n *     EventTarget or a goog.events.Listenable.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n *     Default is all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.removeAll = function(obj, opt_type) {\n  'use strict';\n  // TODO(chrishenry): Change the type of obj to\n  // (!EventTarget|!goog.events.Listenable).\n\n  if (!obj) {\n    return 0;\n  }\n\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {?} */ (obj).removeAllListeners(opt_type);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  if (!listenerMap) {\n    return 0;\n  }\n\n  var count = 0;\n  var typeStr = opt_type && opt_type.toString();\n  for (var type in listenerMap.listeners) {\n    if (!typeStr || type == typeStr) {\n      // Clone so that we don't need to worry about unlistenByKey\n      // changing the content of the ListenerMap.\n      var listeners = listenerMap.listeners[type].concat();\n      for (var i = 0; i < listeners.length; ++i) {\n        if (goog.events.unlistenByKey(listeners[i])) {\n          ++count;\n        }\n      }\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets the listeners for a given object, type and capture phase.\n *\n * @param {Object} obj Object to get listeners for.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Capture phase?.\n * @return {!Array<!goog.events.Listener>} Array of listener objects.\n */\ngoog.events.getListeners = function(obj, type, capture) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).getListeners(\n        type, capture);\n  } else {\n    if (!obj) {\n      // TODO(chrishenry): We should tighten the API to accept\n      // !EventTarget|goog.events.Listenable, and add an assertion here.\n      return [];\n    }\n\n    var listenerMap = goog.events.getListenerMap_(\n        /** @type {!EventTarget} */ (obj));\n    return listenerMap ? listenerMap.getListeners(type, capture) : [];\n  }\n};\n\n\n/**\n * Gets the goog.events.Listener for the event or null if no such listener is\n * in use.\n *\n * @param {EventTarget|goog.events.Listenable} src The target from\n *     which to get listeners.\n * @param {?string|!goog.events.EventId<EVENTOBJ>} type The type of the event.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to get.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *                            whether the listener is fired during the\n *                            capture or bubble phase of the event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template EVENTOBJ\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {\n  'use strict';\n  // TODO(chrishenry): Change type from ?string to string, or add assertion.\n  type = /** @type {string} */ (type);\n  listener = goog.events.wrapListener(listener);\n  var capture = !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return null;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    return listenerMap.getListener(type, listener, capture, opt_handler);\n  }\n  return null;\n};\n\n\n/**\n * Returns whether an event target has any active listeners matching the\n * specified signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {EventTarget|goog.events.Listenable} obj Target to get\n *     listeners for.\n * @param {string|!goog.events.EventId=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble-phase\n *     listeners.\n * @return {boolean} Whether an event target has one or more listeners matching\n *     the requested type and/or capture phase.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.hasListener = function(obj, opt_type, opt_capture) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);\n};\n\n\n/**\n * Provides a nice string showing the normalized event objects public members\n * @param {Object} e Event Object.\n * @return {string} String of the public members of the normalized event object.\n */\ngoog.events.expose = function(e) {\n  'use strict';\n  var str = [];\n  for (var key in e) {\n    if (e[key] && e[key].id) {\n      str.push(key + ' = ' + e[key] + ' (' + e[key].id + ')');\n    } else {\n      str.push(key + ' = ' + e[key]);\n    }\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Returns a string with on prepended to the specified type. This is used for IE\n * which expects \"on\" to be prepended. This function caches the string in order\n * to avoid extra allocations in steady state.\n * @param {string} type Event type.\n * @return {string} The type string with 'on' prepended.\n * @private\n */\ngoog.events.getOnString_ = function(type) {\n  'use strict';\n  if (type in goog.events.onStringMap_) {\n    return goog.events.onStringMap_[type];\n  }\n  return goog.events.onStringMap_[type] = goog.events.onString_ + type;\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase\n *\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n */\ngoog.events.fireListeners = function(obj, type, capture, eventObject) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).fireListeners(\n        type, capture, eventObject);\n  }\n\n  return goog.events.fireListeners_(obj, type, capture, eventObject);\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase.\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n * @private\n */\ngoog.events.fireListeners_ = function(obj, type, capture, eventObject) {\n  'use strict';\n  /** @type {boolean} */\n  var retval = true;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {EventTarget} */ (obj));\n  if (listenerMap) {\n    // TODO(chrishenry): Original code avoids array creation when there\n    // is no listener, so we do the same. If this optimization turns\n    // out to be not required, we can replace this with\n    // listenerMap.getListeners(type, capture) instead, which is simpler.\n    var listenerArray = listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray = listenerArray.concat();\n      for (var i = 0; i < listenerArray.length; i++) {\n        var listener = listenerArray[i];\n        // We might not have a listener if the listener was removed.\n        if (listener && listener.capture == capture && !listener.removed) {\n          var result = goog.events.fireListener(listener, eventObject);\n          retval = retval && (result !== false);\n        }\n      }\n    }\n  }\n  return retval;\n};\n\n\n/**\n * Fires a listener with a set of arguments\n *\n * @param {goog.events.Listener} listener The listener object to call.\n * @param {Object} eventObject The event object to pass to the listener.\n * @return {*} Result of listener.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.fireListener = function(listener, eventObject) {\n  'use strict';\n  var listenerFn = listener.listener;\n  var listenerHandler = listener.handler || listener.src;\n\n  if (listener.callOnce) {\n    goog.events.unlistenByKey(listener);\n  }\n  return listenerFn.call(listenerHandler, eventObject);\n};\n\n\n/**\n * Gets the total number of listeners currently in the system.\n * @return {number} Number of listeners.\n * @deprecated This returns estimated count, now that Closure no longer\n * stores a central listener registry. We still return an estimation\n * to keep existing listener-related tests passing. In the near future,\n * this function will be removed.\n */\ngoog.events.getTotalListenerCount = function() {\n  'use strict';\n  return goog.events.listenerCountEstimate_;\n};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.Listenable} src The event target.\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the handlers returns false) this will also return false.\n *     If there are no handlers, or if all handlers return true, this returns\n *     true.\n */\ngoog.events.dispatchEvent = function(src, e) {\n  'use strict';\n  goog.asserts.assert(\n      goog.events.Listenable.isImplementedBy(src),\n      'Can not use goog.events.dispatchEvent with ' +\n          'non-goog.events.Listenable instance.');\n  return src.dispatchEvent(e);\n};\n\n\n/**\n * Installs exception protection for the browser event entry point using the\n * given error handler.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point.\n */\ngoog.events.protectBrowserEventEntryPoint = function(errorHandler) {\n  'use strict';\n  goog.events.handleBrowserEvent_ =\n      errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\n\n\n/**\n * Handles an event and dispatches it to the correct listeners. This\n * function is a proxy for the real listener the user specified.\n *\n * @param {goog.events.Listener} listener The listener object.\n * @param {Event=} opt_evt Optional event object that gets passed in via the\n *     native event handlers.\n * @return {*} Result of the event handler.\n * @this {EventTarget} The object or Element that fired the event.\n * @private\n */\ngoog.events.handleBrowserEvent_ = function(listener, opt_evt) {\n  'use strict';\n  if (listener.removed) {\n    return true;\n  }\n\n  // Otherwise, simply fire the listener.\n  return goog.events.fireListener(\n      listener, new goog.events.BrowserEvent(opt_evt, this));\n};\n\n\n/**\n * This is used to mark the IE event object so we do not do the Closure pass\n * twice for a bubbling event.\n * @param {Event} e The IE browser event.\n * @private\n */\ngoog.events.markIeEvent_ = function(e) {\n  'use strict';\n  // Only the keyCode and the returnValue can be changed. We use keyCode for\n  // non keyboard events.\n  // event.returnValue is a bit more tricky. It is undefined by default. A\n  // boolean false prevents the default action. In a window.onbeforeunload and\n  // the returnValue is non undefined it will be alerted. However, we will only\n  // modify the returnValue for keyboard events. We can get a problem if non\n  // closure events sets the keyCode or the returnValue\n\n  var useReturnValue = false;\n\n  if (e.keyCode == 0) {\n    // We cannot change the keyCode in case that srcElement is input[type=file].\n    // We could test that that is the case but that would allocate 3 objects.\n    // If we use try/catch we will only allocate extra objects in the case of a\n    // failure.\n\n    try {\n      e.keyCode = -1;\n      return;\n    } catch (ex) {\n      useReturnValue = true;\n    }\n  }\n\n  if (useReturnValue ||\n      /** @type {boolean|undefined} */ (e.returnValue) == undefined) {\n    e.returnValue = true;\n  }\n};\n\n\n/**\n * This is used to check if an IE event has already been handled by the Closure\n * system so we do not do the Closure pass twice for a bubbling event.\n * @param {Event} e  The IE browser event.\n * @return {boolean} True if the event object has been marked.\n * @private\n */\ngoog.events.isMarkedIeEvent_ = function(e) {\n  'use strict';\n  return e.keyCode < 0 || e.returnValue != undefined;\n};\n\n\n/**\n * Counter to create unique event ids.\n * @private {number}\n */\ngoog.events.uniqueIdCounter_ = 0;\n\n\n/**\n * Creates a unique event id.\n *\n * @param {string} identifier The identifier.\n * @return {string} A unique identifier.\n * @idGenerator {unique}\n */\ngoog.events.getUniqueId = function(identifier) {\n  'use strict';\n  return identifier + '_' + goog.events.uniqueIdCounter_++;\n};\n\n\n/**\n * @param {EventTarget} src The source object.\n * @return {goog.events.ListenerMap} A listener map for the given\n *     source object, or null if none exists.\n * @private\n */\ngoog.events.getListenerMap_ = function(src) {\n  'use strict';\n  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];\n  // IE serializes the property as well (e.g. when serializing outer\n  // HTML). So we must check that the value is of the correct type.\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\n\n\n/**\n * Expando property for listener function wrapper for Object with\n * handleEvent.\n * @private @const {string}\n */\ngoog.events.LISTENER_WRAPPER_PROP_ =\n    '__closure_events_fn_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * @param {Object|Function} listener The listener function or an\n *     object that contains handleEvent method.\n * @return {!Function} Either the original function or a function that\n *     calls obj.handleEvent. If the same listener is passed to this\n *     function more than once, the same function is guaranteed to be\n *     returned.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.events.wrapListener = function(listener) {\n  'use strict';\n  goog.asserts.assert(listener, 'Listener can not be null.');\n\n  if (typeof listener === 'function') {\n    return listener;\n  }\n\n  goog.asserts.assert(\n      listener.handleEvent, 'An object listener must have handleEvent method.');\n  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {\n    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {\n      'use strict';\n      return /** @type {?} */ (listener).handleEvent(e);\n    };\n  }\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\n\n\n// Register the browser event handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      'use strict';\n      goog.events.handleBrowserEvent_ =\n          transformer(goog.events.handleBrowserEvent_);\n    });\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.ListenableKey');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  'use strict';\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {?goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  'use strict';\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  'use strict';\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * @param {?goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @override\n */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  'use strict';\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n * @protected\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  'use strict';\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/**\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n * @override\n */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  'use strict';\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/**\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove,\n *     default is to remove all types.\n * @return {number} Number of listeners removed.\n * @override\n */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  'use strict';\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  'use strict';\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && !eventObject.defaultPrevented;\n};\n\n\n/**\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  'use strict';\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {?goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  'use strict';\n  var id = (opt_type !== undefined) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  'use strict';\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  'use strict';\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  'use strict';\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (typeof e === 'string') {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1;\n         !e.hasPropagationStopped() && i >= 0; i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.hasPropagationStopped()) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.hasPropagationStopped()) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.hasPropagationStopped() && i < opt_ancestorsTree.length;\n         i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview JSON utility functions.\n */\n\n\ngoog.provide('goog.json');\ngoog.provide('goog.json.Replacer');\ngoog.provide('goog.json.Reviver');\ngoog.provide('goog.json.Serializer');\n\n\n/**\n * @define {boolean} If true, use the native JSON parsing API.\n * NOTE: The default `goog.json.parse` implementation is able to handle\n * invalid JSON. JSPB used to produce invalid JSON which is not the case\n * anymore so this is safe to enable for parsing JSPB. Using native JSON is\n * faster and safer than the default implementation using `eval`.\n */\ngoog.json.USE_NATIVE_JSON = goog.define('goog.json.USE_NATIVE_JSON', false);\n\n\n/**\n * Tests if a string is an invalid JSON string. This only ensures that we are\n * not using any invalid characters\n * @param {string} s The string to test.\n * @return {boolean} True if the input is a valid JSON string.\n */\ngoog.json.isValid = function(s) {\n  'use strict';\n  // All empty whitespace is not valid.\n  if (/^\\s*$/.test(s)) {\n    return false;\n  }\n\n  // This is taken from http://www.json.org/json2.js which is released to the\n  // public domain.\n  // Changes: We dissallow \\u2028 Line separator and \\u2029 Paragraph separator\n  // inside strings.  We also treat \\u2028 and \\u2029 as whitespace which they\n  // are in the RFC but IE and Safari does not match \\s to these so we need to\n  // include them in the reg exps in all places where whitespace is allowed.\n  // We allowed \\x7f inside strings because some tools don't escape it,\n  // e.g. http://www.json.org/java/org/json/JSONObject.java\n\n  // Parsing happens in three stages. In the first stage, we run the text\n  // against regular expressions that look for non-JSON patterns. We are\n  // especially concerned with '()' and 'new' because they can cause invocation,\n  // and '=' because it can cause mutation. But just to be safe, we want to\n  // reject all unexpected forms.\n\n  // We split the first stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace all backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters, but only when followed\n  // by a colon, comma, closing bracket or end of string. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  // Don't make these static since they have the global flag.\n  const backslashesRe = /\\\\[\"\\\\\\/bfnrtu]/g;\n  const simpleValuesRe =\n      /(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g;\n  const openBracketsRe = /(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g;\n  const remainderRe = /^[\\],:{}\\s\\u2028\\u2029]*$/;\n\n  return remainderRe.test(\n      s.replace(backslashesRe, '@')\n          .replace(simpleValuesRe, ']')\n          .replace(openBracketsRe, ''));\n};\n\n/**\n * Logs a parsing error in `JSON.parse` solvable by using `eval`.\n * @private {function(string, !Error)} The first parameter is the error message,\n *     the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.errorLogger_ = () => {};\n\n\n/**\n * Sets an error logger to use if there's a recoverable parsing error.\n * @param {function(string, !Error)} errorLogger The first parameter is the\n *     error message, the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.setErrorLogger = function(errorLogger) {\n  'use strict';\n  goog.json.errorLogger_ = errorLogger;\n};\n\n\n/**\n * Parses a JSON string and returns the result. This throws an exception if\n * the string is an invalid JSON string.\n *\n * Note that this is very slow on large strings. Use JSON.parse if possible.\n *\n * @param {*} s The JSON string to parse.\n * @throws Error if s is invalid JSON.\n * @return {Object} The object generated from the JSON string, or null.\n * @deprecated Use JSON.parse.\n */\ngoog.json.parse = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*):Object} */ (goog.global['JSON']['parse']) :\n    function(s) {\n      'use strict';\n      let error;\n      try {\n        return goog.global['JSON']['parse'](s);\n      } catch (ex) {\n        error = ex;\n      }\n      const o = String(s);\n      if (goog.json.isValid(o)) {\n\n        try {\n          const result = /** @type {?Object} */ (eval('(' + o + ')'));\n          if (error) {\n            goog.json.errorLogger_('Invalid JSON: ' + o, error);\n          }\n          return result;\n        } catch (ex) {\n        }\n      }\n      throw new Error('Invalid JSON string: ' + o);\n    };\n\n\n/**\n * JSON replacer, as defined in Section 15.12.3 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * TODO(nicksantos): Array should also be a valid replacer.\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Replacer;\n\n\n/**\n * JSON reviver, as defined in Section 15.12.2 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Reviver;\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @param {?goog.json.Replacer=} opt_replacer A replacer function\n *     called for each (key, value) pair that determines how the value\n *     should be serialized. By defult, this just returns the value\n *     and allows default serialization to kick in.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.serialize = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*, ?goog.json.Replacer=):string} */\n    (goog.global['JSON']['stringify']) :\n    function(object, opt_replacer) {\n      'use strict';\n      // NOTE(nicksantos): Currently, we never use JSON.stringify.\n      //\n      // The last time I evaluated this, JSON.stringify had subtle bugs and\n      // behavior differences on all browsers, and the performance win was not\n      // large enough to justify all the issues. This may change in the future\n      // as browser implementations get better.\n      //\n      // assertSerialize in json_test contains if branches for the cases\n      // that fail.\n      return new goog.json.Serializer(opt_replacer).serialize(object);\n    };\n\n\n\n/**\n * Class that is used to serialize JSON objects to a string.\n * @param {?goog.json.Replacer=} opt_replacer Replacer.\n * @constructor\n */\ngoog.json.Serializer = function(opt_replacer) {\n  'use strict';\n  /**\n   * @type {goog.json.Replacer|null|undefined}\n   * @private\n   */\n  this.replacer_ = opt_replacer;\n};\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.Serializer.prototype.serialize = function(object) {\n  'use strict';\n  const sb = [];\n  this.serializeInternal(object, sb);\n  return sb.join('');\n};\n\n\n/**\n * Serializes a generic value to a JSON string\n * @protected\n * @param {*} object The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @throws Error if there are loops in the object graph.\n */\ngoog.json.Serializer.prototype.serializeInternal = function(object, sb) {\n  'use strict';\n  if (object == null) {\n    // undefined == null so this branch covers undefined as well as null\n    sb.push('null');\n    return;\n  }\n\n  if (typeof object == 'object') {\n    if (Array.isArray(object)) {\n      this.serializeArray(object, sb);\n      return;\n    } else if (\n        object instanceof String || object instanceof Number ||\n        object instanceof Boolean) {\n      object = object.valueOf();\n      // Fall through to switch below.\n    } else {\n      this.serializeObject_(/** @type {!Object} */ (object), sb);\n      return;\n    }\n  }\n\n  switch (typeof object) {\n    case 'string':\n      this.serializeString_(object, sb);\n      break;\n    case 'number':\n      this.serializeNumber_(object, sb);\n      break;\n    case 'boolean':\n      sb.push(String(object));\n      break;\n    case 'function':\n      sb.push('null');\n      break;\n    default:\n      throw new Error('Unknown type: ' + typeof object);\n  }\n};\n\n\n/**\n * Character mappings used internally for goog.string.quote\n * @private\n * @type {!Object}\n */\ngoog.json.Serializer.charToJsonCharCache_ = {\n  '\\\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '/': '\\\\/',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n\n  '\\x0B': '\\\\u000b'  // '\\v' is not supported in JScript\n};\n\n\n/**\n * Regular expression used to match characters that need to be replaced.\n * The S60 browser has a bug where unicode characters are not matched by\n * regular expressions. The condition below detects such behaviour and\n * adjusts the regular expression accordingly.\n * @private\n * @type {!RegExp}\n */\ngoog.json.Serializer.charsToReplace_ = /\\uffff/.test('\\uffff') ?\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g :\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n\n\n/**\n * Serializes a string to a JSON string\n * @private\n * @param {string} s The string to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeString_ = function(s, sb) {\n  'use strict';\n  // The official JSON implementation does not work with international\n  // characters.\n  sb.push('\"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    'use strict';\n    // caching the result improves performance by a factor 2-3\n    let rv = goog.json.Serializer.charToJsonCharCache_[c];\n    if (!rv) {\n      rv = '\\\\u' + (c.charCodeAt(0) | 0x10000).toString(16).slice(1);\n      goog.json.Serializer.charToJsonCharCache_[c] = rv;\n    }\n    return rv;\n  }), '\"');\n};\n\n\n/**\n * Serializes a number to a JSON string\n * @private\n * @param {number} n The number to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {\n  'use strict';\n  sb.push(isFinite(n) && !isNaN(n) ? String(n) : 'null');\n};\n\n\n/**\n * Serializes an array to a JSON string\n * @param {Array<string>} arr The array to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @protected\n */\ngoog.json.Serializer.prototype.serializeArray = function(arr, sb) {\n  'use strict';\n  const l = arr.length;\n  sb.push('[');\n  let sep = '';\n  for (let i = 0; i < l; i++) {\n    sb.push(sep);\n\n    const value = arr[i];\n    this.serializeInternal(\n        this.replacer_ ? this.replacer_.call(arr, String(i), value) : value,\n        sb);\n\n    sep = ',';\n  }\n  sb.push(']');\n};\n\n\n/**\n * Serializes an object to a JSON string\n * @private\n * @param {!Object} obj The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {\n  'use strict';\n  sb.push('{');\n  let sep = '';\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const value = obj[key];\n      // Skip functions.\n      if (typeof value != 'function') {\n        sb.push(sep);\n        this.serializeString_(key, sb);\n        sb.push(':');\n\n        this.serializeInternal(\n            this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);\n\n        sep = ',';\n      }\n    }\n  }\n  sb.push('}');\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Simple freelist.\n *\n * An anterative to goog.structs.SimplePool, it imposes the requirement that the\n * objects in the list contain a \"next\" property that can be used to maintain\n * the pool.\n */\ngoog.module('goog.async.FreeList');\ngoog.module.declareLegacyNamespace();\n\n/** @template ITEM */\nclass FreeList {\n  /**\n   * @param {function():ITEM} create\n   * @param {function(ITEM):void} reset\n   * @param {number} limit\n   */\n  constructor(create, reset, limit) {\n    /** @private @const {number} */\n    this.limit_ = limit;\n    /** @private @const {function()} */\n    this.create_ = create;\n    /** @private @const {function(ITEM):void} */\n    this.reset_ = reset;\n\n    /** @private {number} */\n    this.occupants_ = 0;\n    /** @private {ITEM} */\n    this.head_ = null;\n  }\n\n  /** @return {ITEM} */\n  get() {\n    let item;\n    if (this.occupants_ > 0) {\n      this.occupants_--;\n      item = this.head_;\n      this.head_ = item.next;\n      item.next = null;\n    } else {\n      item = this.create_();\n    }\n    return item;\n  }\n\n  /** @param {ITEM} item An item available for possible future reuse. */\n  put(item) {\n    this.reset_(item);\n    if (this.occupants_ < this.limit_) {\n      this.occupants_++;\n      item.next = this.head_;\n      this.head_ = item;\n    }\n  }\n\n  /**\n   * Visible for testing.\n   * @return {number}\n   * @package\n   */\n  occupants() {\n    return this.occupants_;\n  }\n}\n\nexports = FreeList;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.module('goog.async.WorkQueue');\ngoog.module.declareLegacyNamespace();\n\nconst FreeList = goog.require('goog.async.FreeList');\nconst {assert} = goog.require('goog.asserts');\n\n// TODO(johnlenz): generalize the WorkQueue if this is used by more\n// than goog.async.run.\n\n\n/**\n * A low GC workqueue. The key elements of this design:\n *   - avoids the need for goog.bind or equivalent by carrying scope\n *   - avoids the need for array reallocation by using a linked list\n *   - minimizes work entry objects allocation by recycling objects\n * @final\n * @struct\n */\nclass WorkQueue {\n  constructor() {\n    this.workHead_ = null;\n    this.workTail_ = null;\n  }\n\n  /**\n   * @param {function()} fn\n   * @param {Object|null|undefined} scope\n   */\n  add(fn, scope) {\n    const item = this.getUnusedItem_();\n    item.set(fn, scope);\n\n    if (this.workTail_) {\n      this.workTail_.next = item;\n      this.workTail_ = item;\n    } else {\n      assert(!this.workHead_);\n      this.workHead_ = item;\n      this.workTail_ = item;\n    }\n  }\n\n  /**\n   * @return {?WorkItem}\n   */\n  remove() {\n    let item = null;\n\n    if (this.workHead_) {\n      item = this.workHead_;\n      this.workHead_ = this.workHead_.next;\n      if (!this.workHead_) {\n        this.workTail_ = null;\n      }\n      item.next = null;\n    }\n    return item;\n  }\n\n  /**\n   * @param {!WorkItem} item\n   */\n  returnUnused(item) {\n    WorkQueue.freelist_.put(item);\n  }\n\n  /**\n   * @return {!WorkItem}\n   * @private\n   */\n  getUnusedItem_() {\n    return WorkQueue.freelist_.get();\n  }\n}\n\n/** @define {number} The maximum number of entries to keep for recycling. */\nWorkQueue.DEFAULT_MAX_UNUSED =\n    goog.define('goog.async.WorkQueue.DEFAULT_MAX_UNUSED', 100);\n\n/** @const @private {!FreeList<!WorkItem>} */\nWorkQueue.freelist_ = new FreeList(\n    () => new WorkItem(), item => item.reset(), WorkQueue.DEFAULT_MAX_UNUSED);\n\n/**\n * @final\n * @struct\n */\nclass WorkItem {\n  constructor() {\n    /** @type {?function()} */\n    this.fn = null;\n    /** @type {?Object|null|undefined} */\n    this.scope = null;\n    /** @type {?WorkItem} */\n    this.next = null;\n  }\n\n  /**\n   * @param {function()} fn\n   * @param {Object|null|undefined} scope\n   */\n  set(fn, scope) {\n    this.fn = fn;\n    this.scope = scope;\n    this.next = null;\n  }\n\n  /** Reset the work item so they don't prevent GC before reuse */\n  reset() {\n    this.fn = null;\n    this.scope = null;\n    this.next = null;\n  }\n}\n\nexports = WorkQueue;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\ngoog.module('goog.async.run');\ngoog.module.declareLegacyNamespace();\n\nconst WorkQueue = goog.require('goog.async.WorkQueue');\nconst asyncStackTag = goog.require('goog.debug.asyncStackTag');\nconst nextTick = goog.require('goog.async.nextTick');\nconst throwException = goog.require('goog.async.throwException');\n\n/**\n * @define {boolean} If true, use the global Promise to implement run\n * assuming either the native, or polyfill version will be used. Does still\n * permit tests to use forceNextTick.\n */\ngoog.ASSUME_NATIVE_PROMISE = goog.define('goog.ASSUME_NATIVE_PROMISE', false);\n\n/**\n * The function used to schedule work asynchronousely.\n * @private {function()}\n */\nlet schedule;\n\n/** @private {boolean} */\nlet workQueueScheduled = false;\n\n/** @type {!WorkQueue} */\nlet workQueue = new WorkQueue();\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} context Object to use as the \"this value\" when calling the\n *     provided function.\n * @template THIS\n */\nlet run = (callback, context = undefined) => {\n  if (!schedule) {\n    initializeRunner();\n  }\n  if (!workQueueScheduled) {\n    // Nothing is currently scheduled, schedule it now.\n    schedule();\n    workQueueScheduled = true;\n  }\n  callback = asyncStackTag.wrap(callback, 'goog.async.run');\n\n  workQueue.add(callback, context);\n};\n\n/** Initializes the function to use to process the work queue. */\nlet initializeRunner = () => {\n  if (goog.ASSUME_NATIVE_PROMISE ||\n      (goog.global.Promise && goog.global.Promise.resolve)) {\n    // Use goog.global.Promise instead of just Promise because the relevant\n    // externs may be missing, and don't alias it because this could confuse the\n    // compiler into thinking the polyfill is required when it should be treated\n    // as optional.\n    const promise = goog.global.Promise.resolve(undefined);\n    schedule = () => {\n      promise.then(run.processWorkQueue);\n    };\n  } else {\n    schedule = () => {\n      nextTick(run.processWorkQueue);\n    };\n  }\n};\n\n/**\n * Forces run to use nextTick instead of Promise.\n * This should only be done in unit tests. It's useful because MockClock\n * replaces nextTick, but not the browser Promise implementation, so it allows\n * Promise-based code to be tested with MockClock.\n * However, we also want to run promises if the MockClock is no longer in\n * control so we schedule a backup \"setTimeout\" to the unmocked timeout if\n * provided.\n * @param {function(function())=} realSetTimeout\n */\nrun.forceNextTick = (realSetTimeout = undefined) => {\n  schedule = () => {\n    nextTick(run.processWorkQueue);\n    if (realSetTimeout) {\n      realSetTimeout(run.processWorkQueue);\n    }\n  };\n};\n\nif (goog.DEBUG) {\n  /** Reset the work queue. Only available for tests in debug mode. */\n  run.resetQueue = () => {\n    workQueueScheduled = false;\n    workQueue = new WorkQueue();\n  };\n\n  /** Resets the scheduler. Only available for tests in debug mode. */\n  run.resetSchedulerForTest = () => {\n    initializeRunner();\n  };\n}\n\n/**\n * Run any pending run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * nextTick.\n */\nrun.processWorkQueue = () => {\n  // NOTE: additional work queue items may be added while processing.\n  let item = null;\n  while (item = workQueue.remove()) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      throwException(e);\n    }\n    workQueue.returnUnused(item);\n  }\n\n  // There are no more work items, allow processing to be scheduled again.\n  workQueueScheduled = false;\n};\n\nexports = run;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for string manipulation.\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.internal');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.string.DETECT_DOUBLE_ESCAPING =\n    goog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING =\n    goog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0',\n  ZERO_WIDTH_SPACE: '\\u200b'  // This is equivalent to <wbr>.\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = goog.string.internal.startsWith;\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = goog.string.internal.endsWith;\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith =\n    goog.string.internal.caseInsensitiveStartsWith;\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith =\n    goog.string.internal.caseInsensitiveEndsWith;\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  'use strict';\n  const splitParts = str.split('%s');\n  let returnString = '';\n\n  const subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  'use strict';\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  'use strict';\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  'use strict';\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  'use strict';\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  'use strict';\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  'use strict';\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  'use strict';\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  'use strict';\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  'use strict';\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim = goog.string.internal.trim;\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare =\n    goog.string.internal.caseInsensitiveCompare;\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  'use strict';\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  const tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  const tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  const count = Math.min(tokens1.length, tokens2.length);\n\n  for (let i = 0; i < count; i++) {\n    const a = tokens1[i];\n    const b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      const num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        const num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  'use strict';\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  'use strict';\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(user):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  'use strict';\n  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str = str.replace(goog.string.E_RE_, '&#101;');\n  }\n  return str;\n};\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  'use strict';\n  /** @type {!Object<string, string>} */\n  const seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  /** @type {!Element} */\n  let div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    'use strict';\n    // Check for cached entity.\n    let value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      const n = Number('0' + entity.slice(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      goog.dom.safe.setInnerHtml(\n          div,\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from('Single HTML entity.'), s + ' '));\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  'use strict';\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    'use strict';\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          const n = Number('0' + entity.slice(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  'use strict';\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  'use strict';\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --> 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --> 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  'use strict';\n  const length = quoteChars.length;\n  for (let i = 0; i < length; i++) {\n    const quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    const endPoint = str.length - opt_trailingChars;\n    const startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    let half = Math.floor(chars / 2);\n    const endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n  '<': '\\\\u003C'  // NOTE: JSON.parse crashes on '\\\\x3c'.\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  'use strict';\n  s = String(s);\n  const sb = ['\"'];\n  for (let i = 0; i < s.length; i++) {\n    const ch = s.charAt(i);\n    const cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  'use strict';\n  const sb = [];\n  for (let i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  'use strict';\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  let rv = c;\n  const cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = goog.string.internal.contains;\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains =\n    goog.string.internal.caseInsensitiveContains;\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  'use strict';\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  'use strict';\n  let resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.slice(0, index) + s.slice(index + stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  'use strict';\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  'use strict';\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  'use strict';\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  'use strict';\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  'use strict';\n  if (!Number.isFinite(num)) return String(num);\n  let s =\n      (opt_precision !== undefined) ? num.toFixed(opt_precision) : String(num);\n  let index = s.indexOf('.');\n  if (index === -1) {\n    index = s.length;\n  }\n  const sign = s[0] === '-' ? '-' : '';\n  if (sign) {\n    s = s.substring(1);\n  }\n  return sign + goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  'use strict';\n  return obj == null ? '' : String(obj);\n};\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust JavaScript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  'use strict';\n  const x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = goog.string.internal.compareVersions;\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  'use strict';\n  let result = 0;\n  for (let i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  'use strict';\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than JavaScript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  'use strict';\n  const num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  'use strict';\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  'use strict';\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  'use strict';\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    'use strict';\n    return match.toUpperCase();\n  });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  'use strict';\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  'use strict';\n  let delimiters = (typeof opt_delimiters === 'string') ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  const regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(regexp, function(all, p1, p2) {\n    'use strict';\n    return p1 + p2.toUpperCase();\n  });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  'use strict';\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.slice(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  'use strict';\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (typeof value === 'string') {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  'use strict';\n  const parts = str.split(separator);\n  const returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  'use strict';\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  let lastSeparatorIndex = -1;\n  for (let i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    const currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  'use strict';\n  const v0 = [];\n  const v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (let i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (let j = 0; j < b.length; j++) {\n      const cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (let j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Wrapper class for handling XmlHttpRequests.\n *\n * One off requests can be sent through goog.net.XhrIo.send() or an\n * instance can be created to send multiple requests.  Each request uses its\n * own XmlHttpRequest object and handles clearing of the event callback to\n * ensure no leaks.\n *\n * XhrIo is event based, it dispatches events on success, failure, finishing,\n * ready-state change, or progress (download and upload).\n *\n * The ready-state or timeout event fires first, followed by\n * a generic completed event. Then the abort, error, or success event\n * is fired as appropriate. Progress events are fired as they are\n * received. Lastly, the ready event will fire to indicate that the\n * object may be used to make another request.\n *\n * The error event may also be called before completed and\n * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.\n *\n * This class does not support multiple requests, queuing, or prioritization.\n *\n * When progress events are supported by the browser, and progress is\n * enabled via .setProgressEventsEnabled(true), the\n * goog.net.EventType.PROGRESS event will be the re-dispatched browser\n * progress event. Additionally, a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event\n * will be fired for download and upload progress respectively.\n */\n\n\ngoog.provide('goog.net.XhrIo');\ngoog.provide('goog.net.XhrIo.ResponseType');\n\ngoog.require('goog.Timer');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json.hybrid');\ngoog.require('goog.log');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.uri.utils');\ngoog.require('goog.userAgent');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.debug.ErrorHandler');\ngoog.requireType('goog.net.XhrLike');\ngoog.requireType('goog.net.XmlHttpFactory');\n\ngoog.scope(function() {\n\n'use strict';\n/**\n * Basic class for handling XMLHttpRequests.\n * @param {goog.net.XmlHttpFactory=} opt_xmlHttpFactory Factory to use when\n *     creating XMLHttpRequest objects.\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.net.XhrIo = function(opt_xmlHttpFactory) {\n  'use strict';\n  XhrIo.base(this, 'constructor');\n\n  /**\n   * Map of default headers to add to every request, use:\n   * XhrIo.headers.set(name, value)\n   * @type {!Map<string,string>}\n   */\n  this.headers = new Map();\n\n  /**\n   * Optional XmlHttpFactory\n   * @private {goog.net.XmlHttpFactory}\n   */\n  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;\n\n  /**\n   * Whether XMLHttpRequest is active.  A request is active from the time send()\n   * is called until onReadyStateChange() is complete, or error() or abort()\n   * is called.\n   * @private {boolean}\n   */\n  this.active_ = false;\n\n  /**\n   * The XMLHttpRequest object that is being used for the transfer.\n   * @private {?goog.net.XhrLike.OrNative}\n   */\n  this.xhr_ = null;\n\n  /**\n   * The options to use with the current XMLHttpRequest object.\n   * @private {?Object}\n   */\n  this.xhrOptions_ = null;\n\n  /**\n   * Last URL that was requested.\n   * @private {string|goog.Uri}\n   */\n  this.lastUri_ = '';\n\n  /**\n   * Method for the last request.\n   * @private {string}\n   */\n  this.lastMethod_ = '';\n\n  /**\n   * Last error code.\n   * @private {!goog.net.ErrorCode}\n   */\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n\n  /**\n   * Last error message.\n   * @private {Error|string}\n   */\n  this.lastError_ = '';\n\n  /**\n   * Used to ensure that we don't dispatch an multiple ERROR events. This can\n   * happen in IE when it does a synchronous load and one error is handled in\n   * the ready state change and one is handled due to send() throwing an\n   * exception.\n   * @private {boolean}\n   */\n  this.errorDispatched_ = false;\n\n  /**\n   * Used to make sure we don't fire the complete event from inside a send call.\n   * @private {boolean}\n   */\n  this.inSend_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.open.\n   * @private {boolean}\n   */\n  this.inOpen_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.abort.\n   * @private {boolean}\n   */\n  this.inAbort_ = false;\n\n  /**\n   * Number of milliseconds after which an incomplete request will be aborted\n   * and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no timeout\n   * is set.\n   * @private {number}\n   */\n  this.timeoutInterval_ = 0;\n\n  /**\n   * Timer to track request timeout.\n   * @private {?number}\n   */\n  this.timeoutId_ = null;\n\n  /**\n   * The requested type for the response. The empty string means use the default\n   * XHR behavior.\n   * @private {goog.net.XhrIo.ResponseType}\n   */\n  this.responseType_ = ResponseType.DEFAULT;\n\n  /**\n   * Whether a \"credentialed\" request is to be sent (one that is aware of\n   * cookies and authentication). This is applicable only for cross-domain\n   * requests and more recent browsers that support this part of the HTTP Access\n   * Control standard.\n   *\n   * @see http://www.w3.org/TR/XMLHttpRequest/#the-withcredentials-attribute\n   *\n   * @private {boolean}\n   */\n  this.withCredentials_ = false;\n\n  /**\n   * Whether progress events are enabled for this request. This is\n   * disabled by default because setting a progress event handler\n   * causes pre-flight OPTIONS requests to be sent for CORS requests,\n   * even in cases where a pre-flight request would not otherwise be\n   * sent.\n   *\n   * @see http://xhr.spec.whatwg.org/#security-considerations\n   *\n   * Note that this can cause problems for Firefox 22 and below, as an\n   * older \"LSProgressEvent\" will be dispatched by the browser. That\n   * progress event is no longer supported, and can lead to failures,\n   * including throwing exceptions.\n   *\n   * @see http://bugzilla.mozilla.org/show_bug.cgi?id=845631\n   * @see b/23469793\n   *\n   * @private {boolean}\n   */\n  this.progressEventsEnabled_ = false;\n\n  /**\n   * True if we can use XMLHttpRequest's timeout directly.\n   * @private {boolean}\n   */\n  this.useXhr2Timeout_ = false;\n\n  /**\n   * Specification for Trust Token operations (issuance, signing, and\n   * redemption).\n   * @private {?TrustTokenAttributeType}\n   */\n  this.trustToken_ = null;\n};\ngoog.inherits(goog.net.XhrIo, goog.events.EventTarget);\n\nconst XhrIo = goog.net.XhrIo;\n\n/**\n * Response types that may be requested for XMLHttpRequests.\n * @enum {string}\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute\n */\ngoog.net.XhrIo.ResponseType = {\n  DEFAULT: '',\n  TEXT: 'text',\n  DOCUMENT: 'document',\n  // Not supported as of Chrome 10.0.612.1 dev\n  BLOB: 'blob',\n  ARRAY_BUFFER: 'arraybuffer',\n};\n\nconst ResponseType = goog.net.XhrIo.ResponseType;\n\n\n/**\n * A reference to the XhrIo logger\n * @private {?goog.log.Logger}\n * @const\n */\ngoog.net.XhrIo.prototype.logger_ = goog.log.getLogger('goog.net.XhrIo');\n\n\n/**\n * The Content-Type HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TYPE_HEADER = 'Content-Type';\n\n\n/**\n * The Content-Transfer-Encoding HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n\n\n/**\n * The pattern matching the 'http' and 'https' URI schemes\n * @type {!RegExp}\n */\ngoog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;\n\nconst HTTP_SCHEME_PATTERN = goog.net.XhrIo.HTTP_SCHEME_PATTERN;\n\n\n/**\n * The methods that typically come along with form data.  We set different\n * headers depending on whether the HTTP action is one of these.\n * @type {!Array<string>}\n */\ngoog.net.XhrIo.METHODS_WITH_FORM_DATA = ['POST', 'PUT'];\n\n\n/**\n * The Content-Type HTTP header value for a url-encoded form\n * @type {string}\n */\ngoog.net.XhrIo.FORM_CONTENT_TYPE =\n    'application/x-www-form-urlencoded;charset=utf-8';\n\n\n/**\n * The XMLHttpRequest Level two timeout delay ms property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_TIMEOUT_ = 'timeout';\n\n\n/**\n * The XMLHttpRequest Level two ontimeout handler property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_ON_TIMEOUT_ = 'ontimeout';\n\n\n/**\n * All non-disposed instances of goog.net.XhrIo created\n * by {@link goog.net.XhrIo.send} are in this Array.\n * @see goog.net.XhrIo.cleanup\n * @private {!Array<!goog.net.XhrIo>}\n */\ngoog.net.XhrIo.sendInstances_ = [];\n\n\n/**\n * Static send that creates a short lived instance of XhrIo to send the\n * request.\n * @see goog.net.XhrIo.cleanup\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {?function(this:goog.net.XhrIo, ?)=} opt_callback Callback function\n *     for when request is complete.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {(?Object|?goog.collections.maps.MapLike<string, string>)=}\n *     opt_headers Map of headers to add to the request.\n * @param {number=} opt_timeoutInterval Number of milliseconds after which an\n *     incomplete request will be aborted; 0 means no timeout is set.\n * @param {boolean=} opt_withCredentials Whether to send credentials with the\n *     request. Default to false. See {@link goog.net.XhrIo#setWithCredentials}.\n * @return {!goog.net.XhrIo} The sent XhrIo.\n */\ngoog.net.XhrIo.send = function(\n    url, opt_callback, opt_method, opt_content, opt_headers,\n    opt_timeoutInterval, opt_withCredentials) {\n  'use strict';\n  const x = new goog.net.XhrIo();\n  goog.net.XhrIo.sendInstances_.push(x);\n  if (opt_callback) {\n    x.listen(goog.net.EventType.COMPLETE, opt_callback);\n  }\n  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n  if (opt_timeoutInterval) {\n    x.setTimeoutInterval(opt_timeoutInterval);\n  }\n  if (opt_withCredentials) {\n    x.setWithCredentials(opt_withCredentials);\n  }\n  x.send(url, opt_method, opt_content, opt_headers);\n  return x;\n};\n\n\n/**\n * Disposes all non-disposed instances of goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send}.\n * {@link goog.net.XhrIo.send} cleans up the goog.net.XhrIo instance\n * it creates when the request completes or fails.  However, if\n * the request never completes, then the goog.net.XhrIo is not disposed.\n * This can occur if the window is unloaded before the request completes.\n * We could have {@link goog.net.XhrIo.send} return the goog.net.XhrIo\n * it creates and make the client of {@link goog.net.XhrIo.send} be\n * responsible for disposing it in this case.  However, this makes things\n * significantly more complicated for the client, and the whole point\n * of {@link goog.net.XhrIo.send} is that it's simple and easy to use.\n * Clients of {@link goog.net.XhrIo.send} should call\n * {@link goog.net.XhrIo.cleanup} when doing final\n * cleanup on window unload.\n */\ngoog.net.XhrIo.cleanup = function() {\n  'use strict';\n  const instances = goog.net.XhrIo.sendInstances_;\n  while (instances.length) {\n    instances.pop().dispose();\n  }\n};\n\n\n/**\n * Installs exception protection for all entry point introduced by\n * goog.net.XhrIo instances which are not protected by\n * {@link goog.debug.ErrorHandler#protectWindowSetTimeout},\n * {@link goog.debug.ErrorHandler#protectWindowSetInterval}, or\n * {@link goog.events.protectBrowserEventEntryPoint}.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point(s).\n */\ngoog.net.XhrIo.protectEntryPoints = function(errorHandler) {\n  'use strict';\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n      errorHandler.protectEntryPoint(\n          goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n};\n\n\n/**\n * Disposes of the specified goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send} and removes it from\n * {@link goog.net.XhrIo.pendingStaticSendInstances_}.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanupSend_ = function() {\n  'use strict';\n  this.dispose();\n  goog.array.remove(goog.net.XhrIo.sendInstances_, this);\n};\n\n\n/**\n * Returns the number of milliseconds after which an incomplete request will be\n * aborted, or 0 if no timeout is set.\n * @return {number} Timeout interval in milliseconds.\n */\ngoog.net.XhrIo.prototype.getTimeoutInterval = function() {\n  'use strict';\n  return this.timeoutInterval_;\n};\n\n\n/**\n * Sets the number of milliseconds after which an incomplete request will be\n * aborted and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no\n * timeout is set.\n * @param {number} ms Timeout interval in milliseconds; 0 means none.\n */\ngoog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {\n  'use strict';\n  this.timeoutInterval_ = Math.max(0, ms);\n};\n\n\n/**\n * Sets the desired type for the response. At time of writing, this is only\n * supported in very recent versions of WebKit (10.0.612.1 dev and later).\n *\n * If this is used, the response may only be accessed via {@link #getResponse}.\n *\n * @param {goog.net.XhrIo.ResponseType} type The desired type for the response.\n */\ngoog.net.XhrIo.prototype.setResponseType = function(type) {\n  'use strict';\n  this.responseType_ = type;\n};\n\n\n/**\n * Gets the desired type for the response.\n * @return {goog.net.XhrIo.ResponseType} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getResponseType = function() {\n  'use strict';\n  return this.responseType_;\n};\n\n\n/**\n * Sets whether a \"credentialed\" request that is aware of cookie and\n * authentication information should be made. This option is only supported by\n * browsers that support HTTP Access Control. As of this writing, this option\n * is not supported in IE.\n *\n * @param {boolean} withCredentials Whether this should be a \"credentialed\"\n *     request.\n */\ngoog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {\n  'use strict';\n  this.withCredentials_ = withCredentials;\n};\n\n\n/**\n * Gets whether a \"credentialed\" request is to be sent.\n * @return {boolean} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getWithCredentials = function() {\n  'use strict';\n  return this.withCredentials_;\n};\n\n\n/**\n * Sets whether progress events are enabled for this request. Note\n * that progress events require pre-flight OPTIONS request handling\n * for CORS requests, and may cause trouble with older browsers. See\n * progressEventsEnabled_ for details.\n * @param {boolean} enabled Whether progress events should be enabled.\n */\ngoog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {\n  'use strict';\n  this.progressEventsEnabled_ = enabled;\n};\n\n\n/**\n * Gets whether progress events are enabled.\n * @return {boolean} Whether progress events are enabled for this request.\n */\ngoog.net.XhrIo.prototype.getProgressEventsEnabled = function() {\n  'use strict';\n  return this.progressEventsEnabled_;\n};\n\n/**\n * Specify a Trust Tokens operation to execute alongside the request.\n * @param {!TrustTokenAttributeType} trustToken a Trust Tokens operation to\n *     execute.\n */\ngoog.net.XhrIo.prototype.setTrustToken = function(trustToken) {\n  'use strict';\n  this.trustToken_ = trustToken;\n};\n\n/**\n * Instance send that actually uses XMLHttpRequest to make a server call.\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {(?Object|?goog.collections.maps.MapLike<string, string>)=}\n *     opt_headers Map of headers to add to the request.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters for opt_headers.\n */\ngoog.net.XhrIo.prototype.send = function(\n    url, opt_method, opt_content, opt_headers) {\n  'use strict';\n  if (this.xhr_) {\n    throw new Error(\n        '[goog.net.XhrIo] Object is active with another request=' +\n        this.lastUri_ + '; newUri=' + url);\n  }\n\n  const method = opt_method ? opt_method.toUpperCase() : 'GET';\n\n  this.lastUri_ = url;\n  this.lastError_ = '';\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastMethod_ = method;\n  this.errorDispatched_ = false;\n  this.active_ = true;\n\n  // Use the factory to create the XHR object and options\n  this.xhr_ = this.createXhr();\n  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() :\n                                            goog.net.XmlHttp.getOptions();\n\n  // Set up the onreadystatechange callback\n  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);\n\n  // Set up upload/download progress events, if progress events are supported.\n  if (this.getProgressEventsEnabled() && 'onprogress' in this.xhr_) {\n    /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n    this.xhr_.onprogress = goog.bind(function(e) {\n      'use strict';\n      this.onProgressHandler_(e, true);\n    }, this);\n    if (this.xhr_.upload) {\n      /**\n       * @suppress {strictMissingProperties} Added to tighten compiler checks\n       */\n      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);\n    }\n  }\n\n  /**\n   * Try to open the XMLHttpRequest (always async), if an error occurs here it\n   * is generally permission denied\n   */\n  try {\n    goog.log.fine(this.logger_, this.formatMsg_('Opening Xhr'));\n    this.inOpen_ = true;\n    this.xhr_.open(method, String(url), true);  // Always async!\n    this.inOpen_ = false;\n  } catch (err) {\n    goog.log.fine(\n        this.logger_, this.formatMsg_('Error opening Xhr: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n    return;\n  }\n\n  // We can't use null since this won't allow requests with form data to have a\n  // content length specified which will cause some proxies to return a 411\n  // error.\n  const content = opt_content || '';\n\n  const headers = new Map(this.headers);\n\n  // Add headers specific to this request\n  if (opt_headers) {\n    if (Object.getPrototypeOf(opt_headers) === Object.prototype) {\n      for (let key in opt_headers) {\n        headers.set(key, opt_headers[key]);\n      }\n    } else if (\n        typeof opt_headers.keys === 'function' &&\n        typeof opt_headers.get === 'function') {\n      for (const key of opt_headers.keys()) {\n        headers.set(key, opt_headers.get(key));\n      }\n    } else {\n      throw new Error(\n          'Unknown input type for opt_headers: ' + String(opt_headers));\n    }\n  }\n\n  // Find whether a content type header is set, ignoring case.\n  // HTTP header names are case-insensitive.  See:\n  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n  const contentTypeKey =\n      Array.from(headers.keys())\n          .find(\n              header => goog.string.caseInsensitiveEquals(\n                  goog.net.XhrIo.CONTENT_TYPE_HEADER, header));\n\n  const contentIsFormData =\n      (goog.global['FormData'] && (content instanceof goog.global['FormData']));\n  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) &&\n      !contentTypeKey && !contentIsFormData) {\n    // For requests typically with form data, default to the url-encoded form\n    // content type unless this is a FormData request.  For FormData,\n    // the browser will automatically add a multipart/form-data content type\n    // with an appropriate multipart boundary.\n    headers.set(\n        goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n  }\n\n  // Add the headers to the Xhr object\n  for (const [key, value] of headers) {\n    this.xhr_.setRequestHeader(key, value);\n  }\n\n  if (this.responseType_) {\n    this.xhr_.responseType = this.responseType_;\n  }\n  // Set xhr_.withCredentials only when the value is different, or else in\n  // synchronous XMLHtppRequest.open Firefox will throw an exception.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=736340\n  if ('withCredentials' in this.xhr_ &&\n      this.xhr_.withCredentials !== this.withCredentials_) {\n    /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n    this.xhr_.withCredentials = this.withCredentials_;\n  }\n\n  if ('setTrustToken' in this.xhr_ && this.trustToken_) {\n    try {\n      this.xhr_.setTrustToken(this.trustToken_);\n    } catch (err) {\n      goog.log.fine(\n          this.logger_, this.formatMsg_('Error SetTrustToken: ' + err.message));\n    }\n  }\n  /**\n   * Try to send the request, or other wise report an error (404 not found).\n   */\n  try {\n    this.cleanUpTimeoutTimer_();  // Paranoid, should never be running.\n    if (this.timeoutInterval_ > 0) {\n      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);\n      goog.log.fine(\n          this.logger_,\n          this.formatMsg_(\n              'Will abort after ' + this.timeoutInterval_ +\n              'ms if incomplete, xhr2 ' + this.useXhr2Timeout_));\n      if (this.useXhr2Timeout_) {\n        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;\n        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] =\n            goog.bind(this.timeout_, this);\n      } else {\n        this.timeoutId_ =\n            goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);\n      }\n    }\n    goog.log.fine(this.logger_, this.formatMsg_('Sending request'));\n    this.inSend_ = true;\n    this.xhr_.send(content);\n    this.inSend_ = false;\n\n  } catch (err) {\n    goog.log.fine(this.logger_, this.formatMsg_('Send error: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n  }\n};\n\n\n/**\n * Determines if the argument is an XMLHttpRequest that supports the level 2\n * timeout value and event.\n *\n * Currently, FF 21.0 OS X has the fields but won't actually call the timeout\n * handler.  Perhaps the confusion in the bug referenced below hasn't\n * entirely been resolved.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=525816\n *\n * @param {!goog.net.XhrLike.OrNative} xhr The request.\n * @return {boolean} True if the request supports level 2 timeout.\n * @private\n */\ngoog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {\n  'use strict';\n  return goog.userAgent.IE &&\n      typeof xhr[goog.net.XhrIo.XHR2_TIMEOUT_] === 'number' &&\n      xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_] !== undefined;\n};\n\n\n/**\n * Creates a new XHR object.\n * @return {!goog.net.XhrLike.OrNative} The newly created XHR object.\n * @protected\n */\ngoog.net.XhrIo.prototype.createXhr = function() {\n  'use strict';\n  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() :\n                                goog.net.XmlHttp();\n};\n\n\n/**\n * The request didn't complete after {@link goog.net.XhrIo#timeoutInterval_}\n * milliseconds; raises a {@link goog.net.EventType.TIMEOUT} event and aborts\n * the request.\n * @private\n */\ngoog.net.XhrIo.prototype.timeout_ = function() {\n  'use strict';\n  if (typeof goog == 'undefined') {\n    // If goog is undefined then the callback has occurred as the application\n    // is unloading and will error.  Thus we let it silently fail.\n  } else if (this.xhr_) {\n    this.lastError_ =\n        'Timed out after ' + this.timeoutInterval_ + 'ms, aborting';\n    this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;\n    goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));\n    this.dispatchEvent(goog.net.EventType.TIMEOUT);\n    this.abort(goog.net.ErrorCode.TIMEOUT);\n  }\n};\n\n\n/**\n * Something errorred, so inactivate, fire error callback and clean up\n * @param {goog.net.ErrorCode} errorCode The error code.\n * @param {Error} err The error object.\n * @private\n */\ngoog.net.XhrIo.prototype.error_ = function(errorCode, err) {\n  'use strict';\n  this.active_ = false;\n  if (this.xhr_) {\n    this.inAbort_ = true;\n    this.xhr_.abort();  // Ensures XHR isn't hung (FF)\n    this.inAbort_ = false;\n  }\n  this.lastError_ = err;\n  this.lastErrorCode_ = errorCode;\n  this.dispatchErrors_();\n  this.cleanUpXhr_();\n};\n\n\n/**\n * Dispatches COMPLETE and ERROR in case of an error. This ensures that we do\n * not dispatch multiple error events.\n * @private\n */\ngoog.net.XhrIo.prototype.dispatchErrors_ = function() {\n  'use strict';\n  if (!this.errorDispatched_) {\n    this.errorDispatched_ = true;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ERROR);\n  }\n};\n\n\n/**\n * Abort the current XMLHttpRequest\n * @param {goog.net.ErrorCode=} opt_failureCode Optional error code to use -\n *     defaults to ABORT.\n */\ngoog.net.XhrIo.prototype.abort = function(opt_failureCode) {\n  'use strict';\n  if (this.xhr_ && this.active_) {\n    goog.log.fine(this.logger_, this.formatMsg_('Aborting'));\n    this.active_ = false;\n    this.inAbort_ = true;\n    this.xhr_.abort();\n    this.inAbort_ = false;\n    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ABORT);\n    this.cleanUpXhr_();\n  }\n};\n\n\n/**\n * Nullifies all callbacks to reduce risks of leaks.\n * @override\n * @protected\n */\ngoog.net.XhrIo.prototype.disposeInternal = function() {\n  'use strict';\n  if (this.xhr_) {\n    // We explicitly do not call xhr_.abort() unless active_ is still true.\n    // This is to avoid unnecessarily aborting a successful request when\n    // dispose() is called in a callback triggered by a complete response, but\n    // in which browser cleanup has not yet finished.\n    // (See http://b/issue?id=1684217.)\n    if (this.active_) {\n      this.active_ = false;\n      this.inAbort_ = true;\n      this.xhr_.abort();\n      this.inAbort_ = false;\n    }\n    this.cleanUpXhr_(true);\n  }\n\n  XhrIo.base(this, 'disposeInternal');\n};\n\n\n/**\n * Internal handler for the XHR object's readystatechange event.  This method\n * checks the status and the readystate and fires the correct callbacks.\n * If the request has ended, the handlers are cleaned up and the XHR object is\n * nullified.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChange_ = function() {\n  'use strict';\n  if (this.isDisposed()) {\n    // This method is the target of an untracked goog.Timer.callOnce().\n    return;\n  }\n  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {\n    // Were not being called from within a call to this.xhr_.send\n    // this.xhr_.abort, or this.xhr_.open, so this is an entry point\n    this.onReadyStateChangeEntryPoint_();\n  } else {\n    this.onReadyStateChangeHelper_();\n  }\n};\n\n\n/**\n * Used to protect the onreadystatechange handler entry point.  Necessary\n * as {#onReadyStateChange_} maybe called from within send or abort, this\n * method is only called when {#onReadyStateChange_} is called as an\n * entry point.\n * {@see #protectEntryPoints}\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {\n  'use strict';\n  this.onReadyStateChangeHelper_();\n};\n\n\n/**\n * Helper for {@link #onReadyStateChange_}.  This is used so that\n * entry point calls to {@link #onReadyStateChange_} can be routed through\n * {@link #onReadyStateChangeEntryPoint_}.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {\n  'use strict';\n  if (!this.active_) {\n    // can get called inside abort call\n    return;\n  }\n\n  if (typeof goog == 'undefined') {\n    // NOTE(user): If goog is undefined then the callback has occurred as the\n    // application is unloading and will error.  Thus we let it silently fail.\n\n  } else if (\n      this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] &&\n      this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      this.getStatus() == 2) {\n    // NOTE(user): In IE if send() errors on a *local* request the readystate\n    // is still changed to COMPLETE.  We need to ignore it and allow the\n    // try/catch around send() to pick up the error.\n    goog.log.fine(\n        this.logger_,\n        this.formatMsg_('Local request error detected and ignored'));\n\n  } else {\n    // In IE when the response has been cached we sometimes get the callback\n    // from inside the send call and this usually breaks code that assumes that\n    // XhrIo is asynchronous.  If that is the case we delay the callback\n    // using a timer.\n    if (this.inSend_ &&\n        this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n      return;\n    }\n\n    this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);\n\n    // readyState indicates the transfer has finished\n    if (this.isComplete()) {\n      goog.log.fine(this.logger_, this.formatMsg_('Request complete'));\n\n      this.active_ = false;\n\n      try {\n        // Call the specific callbacks for success or failure. Only call the\n        // success if the status is 200 (HTTP_OK) or 304 (HTTP_CACHED)\n        if (this.isSuccess()) {\n          this.dispatchEvent(goog.net.EventType.COMPLETE);\n          this.dispatchEvent(goog.net.EventType.SUCCESS);\n        } else {\n          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;\n          this.lastError_ =\n              this.getStatusText() + ' [' + this.getStatus() + ']';\n          this.dispatchErrors_();\n        }\n      } finally {\n        this.cleanUpXhr_();\n      }\n    }\n  }\n};\n\n\n/**\n * Internal handler for the XHR object's onprogress event. Fires both a generic\n * PROGRESS event and either a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event to\n * allow specific binding for each XHR progress event.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {boolean=} opt_isDownload Whether the current progress event is from a\n *     download. Used to determine whether DOWNLOAD_PROGRESS or UPLOAD_PROGRESS\n *     event should be dispatched.\n * @private\n */\ngoog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {\n  'use strict';\n  goog.asserts.assert(\n      e.type === goog.net.EventType.PROGRESS,\n      'goog.net.EventType.PROGRESS is of the same type as raw XHR progress.');\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(\n      e,\n      opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS :\n                       goog.net.EventType.UPLOAD_PROGRESS));\n};\n\n\n/**\n * Creates a representation of the native ProgressEvent. IE doesn't support\n * constructing ProgressEvent via \"new\", and the alternatives (e.g.,\n * ProgressEvent.initProgressEvent) are non-standard or deprecated.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {!goog.net.EventType} eventType The type of the event.\n * @return {!ProgressEvent} The progress event.\n * @private\n */\ngoog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {\n  'use strict';\n  return /** @type {!ProgressEvent} */ ({\n    type: eventType,\n    lengthComputable: e.lengthComputable,\n    loaded: e.loaded,\n    total: e.total,\n  });\n};\n\n\n/**\n * Remove the listener to protect against leaks, and nullify the XMLHttpRequest\n * object.\n * @param {boolean=} opt_fromDispose If this is from the dispose (don't want to\n *     fire any events).\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {\n  'use strict';\n  if (this.xhr_) {\n    // Cancel any pending timeout event handler.\n    this.cleanUpTimeoutTimer_();\n\n    // Save reference so we can mark it as closed after the READY event.  The\n    // READY event may trigger another request, thus we must nullify this.xhr_\n    const xhr = this.xhr_;\n    const clearedOnReadyStateChange =\n        this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ?\n        () => {} :\n        null;\n    this.xhr_ = null;\n    this.xhrOptions_ = null;\n\n    if (!opt_fromDispose) {\n      this.dispatchEvent(goog.net.EventType.READY);\n    }\n\n    try {\n      // NOTE(user): Not nullifying in FireFox can still leak if the callbacks\n      // are defined in the same scope as the instance of XhrIo. But, IE doesn't\n      // allow you to set the onreadystatechange to NULL so nullFunction is\n      // used.\n      xhr.onreadystatechange = clearedOnReadyStateChange;\n    } catch (e) {\n      // This seems to occur with a Gears HTTP request. Delayed the setting of\n      // this onreadystatechange until after READY is sent out and catching the\n      // error to see if we can track down the problem.\n      goog.log.error(\n          this.logger_,\n          'Problem encountered resetting onreadystatechange: ' + e.message);\n    }\n  }\n};\n\n\n/**\n * Make sure the timeout timer isn't running.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {\n  'use strict';\n  if (this.xhr_ && this.useXhr2Timeout_) {\n    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;\n  }\n  if (this.timeoutId_) {\n    goog.Timer.clear(this.timeoutId_);\n    this.timeoutId_ = null;\n  }\n};\n\n\n/**\n * @return {boolean} Whether there is an active request.\n */\ngoog.net.XhrIo.prototype.isActive = function() {\n  'use strict';\n  return !!this.xhr_;\n};\n\n\n/**\n * @return {boolean} Whether the request has completed.\n */\ngoog.net.XhrIo.prototype.isComplete = function() {\n  'use strict';\n  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n};\n\n\n/**\n * @return {boolean} Whether the request completed with a success.\n */\ngoog.net.XhrIo.prototype.isSuccess = function() {\n  'use strict';\n  const status = this.getStatus();\n  // A zero status code is considered successful for local files.\n  return goog.net.HttpStatus.isSuccess(status) ||\n      status === 0 && !this.isLastUriEffectiveSchemeHttp_();\n};\n\n\n/**\n * @return {boolean} whether the effective scheme of the last URI that was\n *     fetched was 'http' or 'https'.\n * @private\n */\ngoog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {\n  'use strict';\n  const scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n  return HTTP_SCHEME_PATTERN.test(scheme);\n};\n\n\n/**\n * Get the readystate from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {goog.net.XmlHttp.ReadyState} goog.net.XmlHttp.ReadyState.*.\n */\ngoog.net.XhrIo.prototype.getReadyState = function() {\n  'use strict';\n  return this.xhr_ ?\n      /** @type {goog.net.XmlHttp.ReadyState} */ (this.xhr_.readyState) :\n      goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n};\n\n\n/**\n * Get the status from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {number} Http status.\n */\ngoog.net.XhrIo.prototype.getStatus = function() {\n  'use strict';\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.status :\n        -1;\n  } catch (e) {\n    return -1;\n  }\n};\n\n\n/**\n * Get the status text from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {string} Status text.\n */\ngoog.net.XhrIo.prototype.getStatusText = function() {\n  'use strict';\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.statusText :\n        '';\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get status: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the last Uri that was requested\n * @return {string} Last Uri.\n */\ngoog.net.XhrIo.prototype.getLastUri = function() {\n  'use strict';\n  return String(this.lastUri_);\n};\n\n\n/**\n * Get the response text from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {string} Result from the server, or '' if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseText = function() {\n  'use strict';\n  try {\n    return this.xhr_ ? this.xhr_.responseText : '';\n  } catch (e) {\n    // http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\n    // states that responseText should return '' (and responseXML null)\n    // when the state is not LOADING or DONE. Instead, IE can\n    // throw unexpected exceptions, for example when a request is aborted\n    // or no data is available yet.\n    goog.log.fine(this.logger_, 'Can not get responseText: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the response body from the Xhr object. This property is only available\n * in IE since version 7 according to MSDN:\n * http://msdn.microsoft.com/en-us/library/ie/ms534368(v=vs.85).aspx\n * Will only return correct result when called from the context of a callback.\n *\n * One option is to construct a VBArray from the returned object and convert\n * it to a JavaScript array using the toArray method:\n * `(new window['VBArray'](xhrIo.getResponseBody())).toArray()`\n * This will result in an array of numbers in the range of [0..255]\n *\n * Another option is to use the VBScript CStr method to convert it into a\n * string as outlined in http://stackoverflow.com/questions/1919972\n *\n * @return {Object} Binary result from the server or null if not available.\n */\ngoog.net.XhrIo.prototype.getResponseBody = function() {\n  'use strict';\n  try {\n    if (this.xhr_ && 'responseBody' in this.xhr_) {\n      return this.xhr_['responseBody'];\n    }\n  } catch (e) {\n    // IE can throw unexpected exceptions, for example when a request is aborted\n    // or no data is yet available.\n    goog.log.fine(this.logger_, 'Can not get responseBody: ' + e.message);\n  }\n  return null;\n};\n\n\n/**\n * Get the response XML from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {Document} The DOM Document representing the XML file, or null\n * if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseXml = function() {\n  'use strict';\n  try {\n    return this.xhr_ ? this.xhr_.responseXML : null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get responseXML: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the response and evaluates it as JSON from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @param {string=} opt_xssiPrefix Optional XSSI prefix string to use for\n *     stripping of the response before parsing. This needs to be set only if\n *     your backend server prepends the same prefix string to the JSON response.\n * @throws Error if the response text is invalid JSON.\n * @return {Object|undefined} JavaScript object.\n */\ngoog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {\n  'use strict';\n  if (!this.xhr_) {\n    return undefined;\n  }\n\n  let responseText = this.xhr_.responseText;\n  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {\n    responseText = responseText.substring(opt_xssiPrefix.length);\n  }\n\n  return goog.json.hybrid.parse(responseText);\n};\n\n\n/**\n * Get the response as the type specificed by {@link #setResponseType}. At time\n * of writing, this is only directly supported in very recent versions of WebKit\n * (10.0.612.1 dev and later). If the field is not supported directly, we will\n * try to emulate it.\n *\n * Emulating the response means following the rules laid out at\n * http://www.w3.org/TR/XMLHttpRequest/#the-response-attribute\n *\n * On browsers with no support for this (Chrome < 10, Firefox < 4, etc), only\n * response types of DEFAULT or TEXT may be used, and the response returned will\n * be the text response.\n *\n * On browsers with Mozilla's draft support for array buffers (Firefox 4, 5),\n * only response types of DEFAULT, TEXT, and ARRAY_BUFFER may be used, and the\n * response returned will be either the text response or the Mozilla\n * implementation of the array buffer response.\n *\n * On browsers will full support, any valid response type supported by the\n * browser may be used, and the response provided by the browser will be\n * returned.\n *\n * @return {*} The response.\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\ngoog.net.XhrIo.prototype.getResponse = function() {\n  'use strict';\n  try {\n    if (!this.xhr_) {\n      return null;\n    }\n    if ('response' in this.xhr_) {\n      return this.xhr_.response;\n    }\n    switch (this.responseType_) {\n      case ResponseType.DEFAULT:\n      case ResponseType.TEXT:\n        return this.xhr_.responseText;\n      // DOCUMENT and BLOB don't need to be handled here because they are\n      // introduced in the same spec that adds the .response field, and would\n      // have been caught above.\n      // ARRAY_BUFFER needs an implementation for Firefox 4, where it was\n      // implemented using a draft spec rather than the final spec.\n      case ResponseType.ARRAY_BUFFER:\n        if ('mozResponseArrayBuffer' in this.xhr_) {\n          return this.xhr_.mozResponseArrayBuffer;\n        }\n    }\n    // Fell through to a response type that is not supported on this browser.\n    goog.log.error(\n        this.logger_,\n        'Response type ' + this.responseType_ + ' is not ' +\n            'supported on this browser');\n    return null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get response: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object\n * Will only return correct result when called from the context of a callback\n * and the request has completed\n * @param {string} key The name of the response-header to retrieve.\n * @return {string|undefined} The value of the response-header named key.\n */\ngoog.net.XhrIo.prototype.getResponseHeader = function(key) {\n  'use strict';\n  if (!this.xhr_ || !this.isComplete()) {\n    return undefined;\n  }\n\n  const value = this.xhr_.getResponseHeader(key);\n  return value === null ? undefined : value;\n};\n\n\n/**\n * Gets the text of all the headers in the response.\n * Will only return correct result after ready state reaches `LOADED` (i.e.\n * `HEADERS_RECEIVED` as per MDN).\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllResponseHeaders = function() {\n  'use strict';\n  // getAllResponseHeaders can return null if no response has been received,\n  // ensure we always return an empty string.\n  return this.xhr_ &&\n          this.getReadyState() >= goog.net.XmlHttp.ReadyState.LOADED ?\n      (this.xhr_.getAllResponseHeaders() || '') :\n      '';\n};\n\n\n/**\n * Returns all response headers as a key-value map.\n * Multiple values for the same header key can be combined into one,\n * separated by a comma and a space.\n * Note that the native getResponseHeader method for retrieving a single header\n * does a case insensitive match on the header name. This method does not\n * include any case normalization logic, it will just return a key-value\n * representation of the headers.\n * See: http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n * @return {!Object<string, string>} An object with the header keys as keys\n *     and header values as values.\n */\ngoog.net.XhrIo.prototype.getResponseHeaders = function() {\n  'use strict';\n  // TODO(user): Make this function parse headers as per the spec\n  // (https://tools.ietf.org/html/rfc2616#section-4.2).\n\n  const headersObject = {};\n  const headersArray = this.getAllResponseHeaders().split('\\r\\n');\n  for (let i = 0; i < headersArray.length; i++) {\n    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {\n      continue;\n    }\n    const keyValue =\n        goog.string.splitLimit(headersArray[i], ':', /* maxSplitCount= */ 1);\n    const key = keyValue[0];\n    let value = keyValue[1];\n\n    if (typeof value !== 'string') {\n      // There must be a value but it can be the empty string.\n      continue;\n    }\n\n    // Whitespace at the start and end of the value is meaningless.\n    value = value.trim();\n    // The key should not contain whitespace but we currently ignore that.\n\n    const values = headersObject[key] || [];\n    headersObject[key] = values;\n    values.push(value);\n  }\n\n  return goog.object.map(headersObject, function(values) {\n    'use strict';\n    return values.join(', ');\n  });\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object.\n * As opposed to {@link #getResponseHeader}, this method does not require that\n * the request has completed.\n * @param {string} key The name of the response-header to retrieve.\n * @return {?string} The value of the response-header, or null if it is\n *     unavailable.\n */\ngoog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {\n  'use strict';\n  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n};\n\n\n/**\n * Gets the text of all the headers in the response. As opposed to\n * {@link #getAllResponseHeaders}, this method does not require that the request\n * has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {\n  'use strict';\n  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : '';\n};\n\n\n/**\n * Get the last error message\n * @return {!goog.net.ErrorCode} Last error code.\n */\ngoog.net.XhrIo.prototype.getLastErrorCode = function() {\n  'use strict';\n  return this.lastErrorCode_;\n};\n\n\n/**\n * Get the last error message\n * @return {string} Last error message.\n */\ngoog.net.XhrIo.prototype.getLastError = function() {\n  'use strict';\n  return typeof this.lastError_ === 'string' ? this.lastError_ :\n                                               String(this.lastError_);\n};\n\n\n/**\n * Adds the last method, status and URI to the message.  This is used to add\n * this information to the logging calls.\n * @param {string} msg The message text that we want to add the extra text to.\n * @return {string} The message with the extra text appended.\n * @private\n */\ngoog.net.XhrIo.prototype.formatMsg_ = function(msg) {\n  'use strict';\n  return msg + ' [' + this.lastMethod_ + ' ' + this.lastUri_ + ' ' +\n      this.getStatus() + ']';\n};\n\n\n// Register the xhr handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      'use strict';\n      goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n          transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n    });\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a function to throw an error without interrupting\n * the current execution context.\n */\n\ngoog.module('goog.async.throwException');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nfunction throwException(exception) {\n  // Each throw needs to be in its own context.\n  goog.global.setTimeout(() => {\n    throw exception;\n  }, 0);\n}\nexports = throwException;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A timer class to which other classes and objects can listen on.\n * This is only an abstraction above `setInterval`.\n *\n * @see ../demos/timers.html\n */\n\ngoog.provide('goog.Timer');\n\ngoog.require('goog.Promise');\ngoog.require('goog.events.EventTarget');\ngoog.requireType('goog.Thenable');\n\n\n\n/**\n * Class for handling timing events.\n *\n * @param {number=} opt_interval Number of ms between ticks (default: 1ms).\n * @param {Object=} opt_timerObject  An object that has `setTimeout`,\n *     `setInterval`, `clearTimeout` and `clearInterval`\n *     (e.g., `window`).\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.Timer = function(opt_interval, opt_timerObject) {\n  'use strict';\n  goog.events.EventTarget.call(this);\n\n  /**\n   * Number of ms between ticks\n   * @private {number}\n   */\n  this.interval_ = opt_interval || 1;\n\n  /**\n   * An object that implements `setTimeout`, `setInterval`,\n   * `clearTimeout` and `clearInterval`. We default to the window\n   * object. Changing this on {@link goog.Timer.prototype} changes the object\n   * for all timer instances which can be useful if your environment has some\n   * other implementation of timers than the `window` object.\n   * @private {{setTimeout:!Function, clearTimeout:!Function}}\n   */\n  this.timerObject_ = /** @type {{setTimeout, clearTimeout}} */ (\n      opt_timerObject || goog.Timer.defaultTimerObject);\n\n  /**\n   * Cached `tick_` bound to the object for later use in the timer.\n   * @private {Function}\n   * @const\n   */\n  this.boundTick_ = goog.bind(this.tick_, this);\n\n  /**\n   * Firefox browser often fires the timer event sooner (sometimes MUCH sooner)\n   * than the requested timeout. So we compare the time to when the event was\n   * last fired, and reschedule if appropriate. See also\n   * {@link goog.Timer.intervalScale}.\n   * @private {number}\n   */\n  this.last_ = goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\n\n\n/**\n * Maximum timeout value.\n *\n * Timeout values too big to fit into a signed 32-bit integer may cause overflow\n * in FF, Safari, and Chrome, resulting in the timeout being scheduled\n * immediately. It makes more sense simply not to schedule these timeouts, since\n * 24.8 days is beyond a reasonable expectation for the browser to stay open.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.MAX_TIMEOUT_ = 2147483647;\n\n\n/**\n * A timer ID that cannot be returned by any known implementation of\n * `window.setTimeout`. Passing this value to `window.clearTimeout`\n * should therefore be a no-op.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.INVALID_TIMEOUT_ID_ = -1;\n\n\n/**\n * Whether this timer is enabled\n * @type {boolean}\n */\ngoog.Timer.prototype.enabled = false;\n\n\n/**\n * An object that implements `setTimeout`, `setInterval`,\n * `clearTimeout` and `clearInterval`. We default to the global\n * object. Changing `goog.Timer.defaultTimerObject` changes the object for\n * all timer instances which can be useful if your environment has some other\n * implementation of timers you'd like to use.\n * @type {{setTimeout, clearTimeout}}\n */\ngoog.Timer.defaultTimerObject = goog.global;\n\n\n/**\n * Variable that controls the timer error correction. If the timer is called\n * before the requested interval times `intervalScale`, which often\n * happens on Mozilla, the timer is rescheduled.\n * @see {@link #last_}\n * @type {number}\n */\ngoog.Timer.intervalScale = 0.8;\n\n\n/**\n * Variable for storing the result of `setInterval`.\n * @private {?number}\n */\ngoog.Timer.prototype.timer_ = null;\n\n\n/**\n * Gets the interval of the timer.\n * @return {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.getInterval = function() {\n  'use strict';\n  return this.interval_;\n};\n\n\n/**\n * Sets the interval of the timer.\n * @param {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.setInterval = function(interval) {\n  'use strict';\n  this.interval_ = interval;\n  if (this.timer_ && this.enabled) {\n    // Stop and then start the timer to reset the interval.\n    this.stop();\n    this.start();\n  } else if (this.timer_) {\n    this.stop();\n  }\n};\n\n\n/**\n * Callback for the `setTimeout` used by the timer.\n * @private\n */\ngoog.Timer.prototype.tick_ = function() {\n  'use strict';\n  if (this.enabled) {\n    var elapsed = goog.now() - this.last_;\n    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {\n      this.timer_ = this.timerObject_.setTimeout(\n          this.boundTick_, this.interval_ - elapsed);\n      return;\n    }\n\n    // Prevents setInterval from registering a duplicate timeout when called\n    // in the timer event handler.\n    if (this.timer_) {\n      this.timerObject_.clearTimeout(this.timer_);\n      this.timer_ = null;\n    }\n\n    this.dispatchTick();\n    // The timer could be stopped in the timer event handler.\n    if (this.enabled) {\n      // Stop and start to ensure there is always only one timeout even if\n      // start is called in the timer event handler.\n      this.stop();\n      this.start();\n    }\n  }\n};\n\n\n/**\n * Dispatches the TICK event. This is its own method so subclasses can override.\n */\ngoog.Timer.prototype.dispatchTick = function() {\n  'use strict';\n  this.dispatchEvent(goog.Timer.TICK);\n};\n\n\n/**\n * Starts the timer.\n */\ngoog.Timer.prototype.start = function() {\n  'use strict';\n  this.enabled = true;\n\n  // If there is no interval already registered, start it now\n  if (!this.timer_) {\n    // IMPORTANT!\n    // window.setInterval in FireFox has a bug - it fires based on\n    // absolute time, rather than on relative time. What this means\n    // is that if a computer is sleeping/hibernating for 24 hours\n    // and the timer interval was configured to fire every 1000ms,\n    // then after the PC wakes up the timer will fire, in rapid\n    // succession, 3600*24 times.\n    // This bug is described here and is already fixed, but it will\n    // take time to propagate, so for now I am switching this over\n    // to setTimeout logic.\n    //     https://bugzilla.mozilla.org/show_bug.cgi?id=376643\n    //\n    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n    this.last_ = goog.now();\n  }\n};\n\n\n/**\n * Stops the timer.\n */\ngoog.Timer.prototype.stop = function() {\n  'use strict';\n  this.enabled = false;\n  if (this.timer_) {\n    this.timerObject_.clearTimeout(this.timer_);\n    this.timer_ = null;\n  }\n};\n\n\n/** @override */\ngoog.Timer.prototype.disposeInternal = function() {\n  'use strict';\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\n\n\n/**\n * Constant for the timer's event type.\n * @const\n */\ngoog.Timer.TICK = 'tick';\n\n\n/**\n * Calls the given function once, after the optional pause.\n * <p>\n * The function is always called asynchronously, even if the delay is 0. This\n * is a common trick to schedule a function to run after a batch of browser\n * event processing.\n *\n * @param {function(this:SCOPE)|{handleEvent:function()}|null} listener Function\n *     or object that has a handleEvent method.\n * @param {number=} opt_delay Milliseconds to wait; default is 0.\n * @param {SCOPE=} opt_handler Object in whose scope to call the listener.\n * @return {number} A handle to the timer ID.\n * @template SCOPE\n */\ngoog.Timer.callOnce = function(listener, opt_delay, opt_handler) {\n  'use strict';\n  if (typeof listener === 'function') {\n    if (opt_handler) {\n      listener = goog.bind(listener, opt_handler);\n    }\n  } else if (listener && typeof listener.handleEvent == 'function') {\n    // using typeof to prevent strict js warning\n    listener = goog.bind(listener.handleEvent, listener);\n  } else {\n    throw new Error('Invalid listener argument');\n  }\n\n  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {\n    // Timeouts greater than MAX_INT return immediately due to integer\n    // overflow in many browsers.  Since MAX_INT is 24.8 days, just don't\n    // schedule anything at all.\n    return goog.Timer.INVALID_TIMEOUT_ID_;\n  } else {\n    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n  }\n};\n\n\n/**\n * Clears a timeout initiated by {@link #callOnce}.\n * @param {?number} timerId A timer ID.\n */\ngoog.Timer.clear = function(timerId) {\n  'use strict';\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\n\n\n/**\n * @param {number} delay Milliseconds to wait.\n * @param {(RESULT|goog.Thenable<RESULT>|Thenable)=} opt_result The value\n *     with which the promise will be resolved.\n * @return {!goog.Promise<RESULT>} A promise that will be resolved after\n *     the specified delay, unless it is canceled first.\n * @template RESULT\n */\ngoog.Timer.promise = function(delay, opt_result) {\n  'use strict';\n  var timerKey = null;\n  return new goog\n      .Promise(function(resolve, reject) {\n        'use strict';\n        timerKey = goog.Timer.callOnce(function() {\n          'use strict';\n          resolve(opt_result);\n        }, delay);\n        if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {\n          reject(new Error('Failed to schedule timer.'));\n        }\n      })\n      .thenCatch(function(error) {\n        'use strict';\n        // Clear the timer. The most likely reason is \"cancel\" signal.\n        goog.Timer.clear(timerKey);\n        throw error;\n      });\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the goog.async.Throttle class.\n *\n * @see ../demos/timers.html\n */\n\ngoog.module('goog.async.Throttle');\ngoog.module.declareLegacyNamespace();\n\nconst Disposable = goog.require('goog.Disposable');\nconst Timer = goog.require('goog.Timer');\n\n\n/**\n * Throttle will perform an action that is passed in no more than once\n * per interval (specified in milliseconds). If it gets multiple signals\n * to perform the action while it is waiting, it will only perform the action\n * once at the end of the interval.\n * @final\n * @template T\n */\nclass Throttle extends Disposable {\n  /**\n   * @param {function(this: T, ...?)} listener Function to callback when the\n   *     action is triggered.\n   * @param {number} interval Interval over which to throttle. The listener can\n   *     only be called once per interval.\n   * @param {T=} handler Object in whose scope to call the listener.\n   */\n  constructor(listener, interval, handler) {\n    super();\n    /**\n     * Function to callback\n     * @type {function(this: T, ...?)}\n     * @private\n     */\n    this.listener_ = handler != null ? listener.bind(handler) : listener;\n\n    /**\n     * Interval for the throttle time\n     * @type {number}\n     * @private\n     */\n    this.interval_ = interval;\n\n    /**\n     * The last arguments passed into `fire`, or null if there is no pending\n     * call.\n     * @private {?IArrayLike}\n     */\n    this.args_ = null;\n\n    /**\n     * Indicates that the action is pending and needs to be fired.\n     * @type {boolean}\n     * @private\n     */\n    this.shouldFire_ = false;\n\n    /**\n     * Indicates the count of nested pauses currently in effect on the throttle.\n     * When this count is not zero, fired actions will be postponed until the\n     * throttle is resumed enough times to drop the pause count to zero.\n     * @type {number}\n     * @private\n     */\n    this.pauseCount_ = 0;\n\n    /**\n     * Timer for scheduling the next callback\n     * @type {?number}\n     * @private\n     */\n    this.timer_ = null;\n  }\n\n  /**\n   * Notifies the throttle that the action has happened. It will throttle\n   * the call so that the callback is not called too often according to the\n   * interval parameter passed to the constructor, passing the arguments\n   * from the last call of this function into the throttled function.\n   * @param {...?} var_args Arguments to pass on to the throttled function.\n   */\n  fire(var_args) {\n    this.args_ = arguments;\n    if (!this.timer_ && !this.pauseCount_) {\n      this.doAction_();\n    } else {\n      this.shouldFire_ = true;\n    }\n  }\n\n  /**\n   * Cancels any pending action callback. The throttle can be restarted by\n   * calling {@link #fire}.\n   */\n  stop() {\n    if (this.timer_) {\n      Timer.clear(this.timer_);\n      this.timer_ = null;\n      this.shouldFire_ = false;\n      this.args_ = null;\n    }\n  }\n\n  /**\n   * Pauses the throttle.  All pending and future action callbacks will be\n   * delayed until the throttle is resumed.  Pauses can be nested.\n   */\n  pause() {\n    this.pauseCount_++;\n  }\n\n  /**\n   * Resumes the throttle.  If doing so drops the pausing count to zero,\n   * pending action callbacks will be executed as soon as possible, but\n   * still no sooner than an interval's delay after the previous call.\n   * Future action callbacks will be executed as normal.\n   */\n  resume() {\n    this.pauseCount_--;\n    if (!this.pauseCount_ && this.shouldFire_ && !this.timer_) {\n      this.shouldFire_ = false;\n      this.doAction_();\n    }\n  }\n\n  /** @override */\n  disposeInternal() {\n    super.disposeInternal();\n    this.stop();\n  }\n\n  /**\n   * Handler for the timer to fire the throttle\n   * @private\n   */\n  onTimer_() {\n    this.timer_ = null;\n\n    if (this.shouldFire_ && !this.pauseCount_) {\n      this.shouldFire_ = false;\n      this.doAction_();\n    }\n  }\n\n  /**\n   * Calls the callback\n   * @private\n   */\n  doAction_() {\n    this.timer_ = Timer.callOnce(() => this.onTimer_(), this.interval_);\n    const args = this.args_;\n    // release memory first so it always happens even if listener throws\n    this.args_ = null;\n    this.listener_.apply(null, args);\n  }\n}\n\nexports = Throttle;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Class to create objects which want to handle multiple events\n * and have their listeners easily cleaned up via a dispose method.\n *\n * Example:\n * <pre>\n * function Something() {\n *   Something.base(this);\n *\n *   ... set up object ...\n *\n *   // Add event listeners\n *   this.listen(this.starEl, goog.events.EventType.CLICK, this.handleStar);\n *   this.listen(this.headerEl, goog.events.EventType.CLICK, this.expand);\n *   this.listen(this.collapseEl, goog.events.EventType.CLICK, this.collapse);\n *   this.listen(this.infoEl, goog.events.EventType.MOUSEOVER, this.showHover);\n *   this.listen(this.infoEl, goog.events.EventType.MOUSEOUT, this.hideHover);\n * }\n * goog.inherits(Something, goog.events.EventHandler);\n *\n * Something.prototype.disposeInternal = function() {\n *   Something.base(this, 'disposeInternal');\n *   goog.dom.removeNode(this.container);\n * };\n *\n *\n * // Then elsewhere:\n *\n * var activeSomething = null;\n * function openSomething() {\n *   activeSomething = new Something();\n * }\n *\n * function closeSomething() {\n *   if (activeSomething) {\n *     activeSomething.dispose();  // Remove event listeners\n *     activeSomething = null;\n *   }\n * }\n * </pre>\n */\n\ngoog.provide('goog.events.EventHandler');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.events');\ngoog.require('goog.object');\ngoog.requireType('goog.events.Event');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventTarget');\ngoog.requireType('goog.events.EventWrapper');\n\n\n\n/**\n * Super class for objects that want to easily manage a number of event\n * listeners.  It allows a short cut to listen and also provides a quick way\n * to remove all events listeners belonging to this object.\n * @param {SCOPE=} opt_scope Object in whose scope to call the listeners.\n * @constructor\n * @extends {goog.Disposable}\n * @template SCOPE\n */\ngoog.events.EventHandler = function(opt_scope) {\n  'use strict';\n  goog.Disposable.call(this);\n  // TODO(mknichel): Rename this to this.scope_ and fix the classes in google3\n  // that access this private variable. :(\n  this.handler_ = opt_scope;\n\n  /**\n   * Keys for events that are being listened to.\n   * @type {!Object<!goog.events.Key>}\n   * @private\n   */\n  this.keys_ = {};\n};\ngoog.inherits(goog.events.EventHandler, goog.Disposable);\n\n\n/**\n * Utility array used to unify the cases of listening for an array of types\n * and listening for a single event, without using recursion or allocating\n * an array each time.\n * @type {!Array<string>}\n * @const\n * @private\n */\ngoog.events.EventHandler.typeArray_ = [];\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:SCOPE, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n *     opt_fn Optional callback function to be used as the listener or an object\n *     with handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listen = function(\n    src, type, opt_fn, opt_options) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  return self.listen_(src, type, opt_fn, opt_options);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(this:T, ?):?}|\n *     null|undefined} fn Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|!AddEventListenerOptions|undefined} options\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenWithScope = function(\n    src, type, fn, options, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listen_(src, type, fn, options, scope);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null=} opt_fn\n *     Optional callback function to be used as the listener or an object with\n *     handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listen_ = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (!Array.isArray(type)) {\n    if (type) {\n      goog.events.EventHandler.typeArray_[0] = type.toString();\n    }\n    type = goog.events.EventHandler.typeArray_;\n  }\n  for (var i = 0; i < type.length; i++) {\n    var listenerObj = goog.events.listen(\n        src, type[i], opt_fn || self.handleEvent, opt_options || false,\n        opt_scope || self.handler_ || self);\n\n    if (!listenerObj) {\n      // When goog.events.listen run on OFF_AND_FAIL or OFF_AND_SILENT\n      // (goog.events.CaptureSimulationMode) in IE8-, it will return null\n      // value.\n      return self;\n    }\n\n    /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n    var key = listenerObj.key;\n    self.keys_[key] = listenerObj;\n  }\n\n  return self;\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired the\n * event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:SCOPE, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n * opt_fn\n *    Optional callback function to be used as the listener or an object with\n *    handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenOnce = function(\n    src, type, opt_fn, opt_options) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  return self.listenOnce_(src, type, opt_fn, opt_options);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired the\n * event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(this:T, ?):?}|\n *     null|undefined} fn Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|undefined} capture Optional whether to use capture phase.\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenOnceWithScope = function(\n    src, type, fn, capture, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listenOnce_(src, type, fn, capture, scope);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired\n * the event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null=} opt_fn\n *    Optional callback function to be used as the listener or an object with\n *    handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listenOnce_ = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var listenerObj = goog.events.listenOnce(\n        src, type, opt_fn || self.handleEvent, opt_options,\n        opt_scope || self.handler_ || self);\n    if (!listenerObj) {\n      // When goog.events.listen run on OFF_AND_FAIL or OFF_AND_SILENT\n      // (goog.events.CaptureSimulationMode) in IE8-, it will return null\n      // value.\n      return self;\n    }\n\n    /** @suppress {strictMissingProperties} Added to tighten compiler checks */\n    var key = listenerObj.key;\n    self.keys_[key] = listenerObj;\n  }\n\n  return self;\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:SCOPE, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n */\ngoog.events.EventHandler.prototype.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Remove the opt_scope from this function and then\n  // templatize it.\n  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(this:T, ?):?}|null}\n *     listener Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|undefined} capture Optional whether to use capture phase.\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, THIS\n */\ngoog.events.EventHandler.prototype.listenWithWrapperAndScope = function(\n    src, wrapper, listener, capture, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener Callback\n *     method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {Object=} opt_scope Element in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listenWithWrapper_ = function(\n    src, wrapper, listener, opt_capt, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  wrapper.listen(\n      src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\n\n\n/**\n * @return {number} Number of listeners registered by this handler.\n */\ngoog.events.EventHandler.prototype.getListenerCount = function() {\n  'use strict';\n  var count = 0;\n  for (var key in this.keys_) {\n    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {\n      count++;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Unlistens on an event.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(this:?, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n *     opt_fn Optional callback function to be used as the listener or an object\n *     with handleEvent function.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.unlisten = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    var listener = goog.events.getListener(\n        src, type, opt_fn || self.handleEvent, capture,\n        opt_scope || self.handler_ || self);\n\n    if (listener) {\n      goog.events.unlistenByKey(listener);\n      delete self.keys_[listener.key];\n    }\n  }\n\n  return self;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.EventTarget} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_scope Element in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n */\ngoog.events.EventHandler.prototype.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  wrapper.unlisten(\n      src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\n\n\n/**\n * Unlistens to all events.\n */\ngoog.events.EventHandler.prototype.removeAll = function() {\n  'use strict';\n  goog.object.forEach(this.keys_, function(listenerObj, key) {\n    'use strict';\n    if (this.keys_.hasOwnProperty(key)) {\n      goog.events.unlistenByKey(listenerObj);\n    }\n  }, this);\n\n  this.keys_ = {};\n};\n\n\n/**\n * Disposes of this EventHandler and removes all listeners that it registered.\n * @override\n * @protected\n */\ngoog.events.EventHandler.prototype.disposeInternal = function() {\n  'use strict';\n  goog.events.EventHandler.superClass_.disposeInternal.call(this);\n  this.removeAll();\n};\n\n\n/**\n * Default event handler\n * @param {goog.events.Event} e Event object.\n */\ngoog.events.EventHandler.prototype.handleEvent = function(e) {\n  'use strict';\n  throw new Error('EventHandler.handleEvent not implemented');\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a utility for tracing and debugging WebChannel\n *     requests.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WebChannelDebug');\n\ngoog.require('goog.json');\ngoog.require('goog.log');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.net.XmlHttp.ReadyState');\n\n\n\n/**\n * Logs and keeps a buffer of debugging info for the Channel.\n *\n * @constructor\n * @struct\n * @final\n */\ngoog.labs.net.webChannel.WebChannelDebug = function() {\n  'use strict';\n  /**\n   * The logger instance.\n   * @const\n   * @private {?goog.log.Logger}\n   */\n  this.logger_ = goog.log.getLogger('goog.labs.net.webChannel.WebChannelDebug');\n\n  /**\n   * Whether to enable redact. Defaults to true.\n   * @private {boolean}\n   */\n  this.redactEnabled_ = true;\n};\n\n\ngoog.scope(function() {\n'use strict';\nvar WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\n\n\n/**\n * Turns off redact.\n */\nWebChannelDebug.prototype.disableRedact = function() {\n  'use strict';\n  this.redactEnabled_ = false;\n};\n\n\n/**\n * Logs that the browser went offline during the lifetime of a request.\n * @param {goog.Uri} url The URL being requested.\n */\nWebChannelDebug.prototype.browserOfflineResponse = function(url) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'BROWSER_OFFLINE: ' + url;\n  });\n};\n\n\n/**\n * Logs an XmlHttp request..\n * @param {string} verb The request type (GET/POST).\n * @param {goog.Uri} uri The request destination.\n * @param {string|number|undefined} id The request id.\n * @param {number} attempt Which attempt # the request was.\n * @param {?string} postData The data posted in the request.\n */\nWebChannelDebug.prototype.xmlHttpChannelRequest = function(\n    verb, uri, id, attempt, postData) {\n  'use strict';\n  var self = this;\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP REQ (' + id + ') [attempt ' + attempt + ']: ' + verb +\n        '\\n' + uri + '\\n' + self.maybeRedactPostData_(postData);\n  });\n};\n\n\n/**\n * Logs the meta data received from an XmlHttp request.\n * @param {string} verb The request type (GET/POST).\n * @param {goog.Uri} uri The request destination.\n * @param {string|number|undefined} id The request id.\n * @param {number} attempt Which attempt # the request was.\n * @param {goog.net.XmlHttp.ReadyState} readyState The ready state.\n * @param {number} statusCode The HTTP status code.\n */\nWebChannelDebug.prototype.xmlHttpChannelResponseMetaData = function(\n    verb, uri, id, attempt, readyState, statusCode) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP RESP (' + id + ') [ attempt ' + attempt + ']: ' + verb +\n        '\\n' + uri + '\\n' + readyState + ' ' + statusCode;\n  });\n};\n\n\n/**\n * Logs the response data received from an XmlHttp request.\n * @param {string|number|undefined} id The request id.\n * @param {?string} responseText The response text.\n * @param {?string=} opt_desc Optional request description.\n */\nWebChannelDebug.prototype.xmlHttpChannelResponseText = function(\n    id, responseText, opt_desc) {\n  'use strict';\n  var self = this;\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP TEXT (' + id + '): ' + self.redactResponse_(responseText) +\n        (opt_desc ? ' ' + opt_desc : '');\n  });\n};\n\n\n/**\n * Logs a request timeout.\n * @param {goog.Uri} uri The uri that timed out.\n */\nWebChannelDebug.prototype.timeoutResponse = function(uri) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'TIMEOUT: ' + uri;\n  });\n};\n\n\n/**\n * Logs a debug message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.debug = function(text) {\n  'use strict';\n  goog.log.fine(this.logger_, text);\n};\n\n\n/**\n * Logs an exception\n * @param {Error} e The error or error event.\n * @param {goog.log.Loggable=} opt_msg The optional message,\n *     defaults to 'Exception'.\n */\nWebChannelDebug.prototype.dumpException = function(e, opt_msg) {\n  'use strict';\n  goog.log.error(this.logger_, opt_msg || 'Exception', e);\n};\n\n\n/**\n * Logs an info message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.info = function(text) {\n  'use strict';\n  goog.log.info(this.logger_, text);\n};\n\n\n/**\n * Logs a warning message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.warning = function(text) {\n  'use strict';\n  goog.log.warning(this.logger_, text);\n};\n\n\n/**\n * Logs a severe message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.severe = function(text) {\n  'use strict';\n  goog.log.error(this.logger_, text);\n};\n\n\n/**\n * Removes potentially private data from a response so that we don't\n * accidentally save private and personal data to the server logs.\n * @param {?string} responseText A JSON response to clean.\n * @return {?string} The cleaned response.\n * @private\n * @suppress {strictMissingProperties} Added to tighten compiler checks\n */\nWebChannelDebug.prototype.redactResponse_ = function(responseText) {\n  'use strict';\n  if (!this.redactEnabled_) {\n    return responseText;\n  }\n\n  if (!responseText) {\n    return null;\n  }\n\n  try {\n    var responseArray = JSON.parse(responseText);\n    if (responseArray) {\n      for (var i = 0; i < responseArray.length; i++) {\n        if (Array.isArray(responseArray[i])) {\n          this.maybeRedactArray_(responseArray[i]);\n        }\n      }\n    }\n\n    return goog.json.serialize(responseArray);\n  } catch (e) {\n    this.debug('Exception parsing expected JS array - probably was not JS');\n    return responseText;\n  }\n};\n\n\n/**\n * Removes data from a response array that may be sensitive.\n * @param {!Array<?>} array The array to clean.\n * @private\n */\nWebChannelDebug.prototype.maybeRedactArray_ = function(array) {\n  'use strict';\n  if (array.length < 2) {\n    return;\n  }\n  var dataPart = array[1];\n  if (!Array.isArray(dataPart)) {\n    return;\n  }\n  if (dataPart.length < 1) {\n    return;\n  }\n\n  var type = dataPart[0];\n  if (type != 'noop' && type != 'stop' && type != 'close') {\n    // redact all fields in the array\n    for (var i = 1; i < dataPart.length; i++) {\n      dataPart[i] = '';\n    }\n  }\n};\n\n\n/**\n * Removes potentially private data from a request POST body so that we don't\n * accidentally save private and personal data to the server logs.\n * @param {?string} data The data string to clean.\n * @return {?string} The data string with sensitive data replaced by 'redacted'.\n * @private\n */\nWebChannelDebug.prototype.maybeRedactPostData_ = function(data) {\n  'use strict';\n  if (!this.redactEnabled_) {\n    return data;\n  }\n\n  if (!data) {\n    return null;\n  }\n  var out = '';\n  var params = data.split('&');\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    var keyValue = param.split('=');\n    if (keyValue.length > 1) {\n      var key = keyValue[0];\n      var value = keyValue[1];\n\n      var keyParts = key.split('_');\n      if (keyParts.length >= 2 && keyParts[1] == 'type') {\n        out += key + '=' + value + '&';\n      } else {\n        out += key + '=' +\n            'redacted' +\n            '&';\n      }\n    }\n  }\n  return out;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Static utilities for collecting stats associated with\n * ChannelRequest.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.requestStats');\ngoog.provide('goog.labs.net.webChannel.requestStats.Event');\ngoog.provide('goog.labs.net.webChannel.requestStats.ServerReachability');\ngoog.provide('goog.labs.net.webChannel.requestStats.ServerReachabilityEvent');\ngoog.provide('goog.labs.net.webChannel.requestStats.Stat');\ngoog.provide('goog.labs.net.webChannel.requestStats.StatEvent');\ngoog.provide('goog.labs.net.webChannel.requestStats.TimingEvent');\n\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\n\n\ngoog.scope(function() {\n'use strict';\nconst requestStats = goog.labs.net.webChannel.requestStats;\n\n\n/**\n * Events fired.\n * @const\n */\nrequestStats.Event = {};\n\n\n/**\n * Singleton event target for firing stat events\n * @type {?goog.events.EventTarget}\n * @private\n */\nrequestStats.eventTarget_ = null;\n\n/**\n * Singleton event target for firing stat events\n * @return {!goog.events.EventTarget}\n * @private\n */\nrequestStats.getStatEventTarget_ = function() {\n  'use strict';\n  requestStats.eventTarget_ =\n      requestStats.eventTarget_ || new goog.events.EventTarget();\n  return requestStats.eventTarget_;\n};\n\n/**\n * The type of event that occurs every time some information about how reachable\n * the server is is discovered.\n */\nrequestStats.Event.SERVER_REACHABILITY_EVENT = 'serverreachability';\n\n\n/**\n * Types of events which reveal information about the reachability of the\n * server.\n * @enum {number}\n */\nrequestStats.ServerReachability = {\n  REQUEST_MADE: 1,\n  REQUEST_SUCCEEDED: 2,\n  REQUEST_FAILED: 3,\n  BACK_CHANNEL_ACTIVITY: 4  // any response data received\n};\n\n\n\n/**\n * Event class for SERVER_REACHABILITY_EVENT.\n *\n * @param {goog.events.EventTarget} target The stat event target for\n       the channel.\n * @param {requestStats.ServerReachability} reachabilityType\n *     The reachability event type.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.ServerReachabilityEvent = function(target, reachabilityType) {\n  'use strict';\n  goog.events.Event.call(\n      this, requestStats.Event.SERVER_REACHABILITY_EVENT, target);\n\n  /**\n   * @type {requestStats.ServerReachability}\n   */\n  this.reachabilityType = reachabilityType;\n};\ngoog.inherits(requestStats.ServerReachabilityEvent, goog.events.Event);\n\n\n/**\n * Notify the channel that a particular fine grained network event has occurred.\n * Should be considered package-private.\n * @param {requestStats.ServerReachability} reachabilityType\n *     The reachability event type.\n */\nrequestStats.notifyServerReachabilityEvent = function(reachabilityType) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(\n      new requestStats.ServerReachabilityEvent(target, reachabilityType));\n};\n\n\n/**\n * Stat Event that fires when things of interest happen that may be useful for\n * applications to know about for stats or debugging purposes.\n */\nrequestStats.Event.STAT_EVENT = 'statevent';\n\n\n/**\n * Enum that identifies events for statistics that are interesting to track.\n * @enum {number}\n */\nrequestStats.Stat = {\n  /** Event indicating a new connection attempt. */\n  CONNECT_ATTEMPT: 0,\n\n  /** Event indicating a connection error due to a general network problem. */\n  ERROR_NETWORK: 1,\n\n  /**\n   * Event indicating a connection error that isn't due to a general network\n   * problem.\n   */\n  ERROR_OTHER: 2,\n\n  /** Event indicating the start of test stage one. */\n  TEST_STAGE_ONE_START: 3,\n\n  /** Event indicating the start of test stage two. */\n  TEST_STAGE_TWO_START: 4,\n\n  /** Event indicating the first piece of test data was received. */\n  TEST_STAGE_TWO_DATA_ONE: 5,\n\n  /**\n   * Event indicating that the second piece of test data was received and it was\n   * received separately from the first.\n   */\n  TEST_STAGE_TWO_DATA_TWO: 6,\n\n  /** Event indicating both pieces of test data were received simultaneously. */\n  TEST_STAGE_TWO_DATA_BOTH: 7,\n\n  /** Event indicating stage one of the test request failed. */\n  TEST_STAGE_ONE_FAILED: 8,\n\n  /** Event indicating stage two of the test request failed. */\n  TEST_STAGE_TWO_FAILED: 9,\n\n  /**\n   * Event indicating that a buffering proxy is likely between the client and\n   * the server.\n   */\n  PROXY: 10,\n\n  /**\n   * Event indicating that no buffering proxy is likely between the client and\n   * the server.\n   */\n  NOPROXY: 11,\n\n  /** Event indicating an unknown SID error. */\n  REQUEST_UNKNOWN_SESSION_ID: 12,\n\n  /** Event indicating a bad status code was received. */\n  REQUEST_BAD_STATUS: 13,\n\n  /** Event indicating incomplete data was received */\n  REQUEST_INCOMPLETE_DATA: 14,\n\n  /** Event indicating bad data was received */\n  REQUEST_BAD_DATA: 15,\n\n  /** Event indicating no data was received when data was expected. */\n  REQUEST_NO_DATA: 16,\n\n  /** Event indicating a request timeout. */\n  REQUEST_TIMEOUT: 17,\n\n  /**\n   * Event indicating that the server never received our hanging GET and so it\n   * is being retried.\n   */\n  BACKCHANNEL_MISSING: 18,\n\n  /**\n   * Event indicating that we have determined that our hanging GET is not\n   * receiving data when it should be. Thus it is dead dead and will be retried.\n   */\n  BACKCHANNEL_DEAD: 19,\n\n  /**\n   * The browser declared itself offline during the lifetime of a request, or\n   * was offline when a request was initially made.\n   */\n  BROWSER_OFFLINE: 20\n};\n\n\n\n/**\n * Event class for STAT_EVENT.\n *\n * @param {goog.events.EventTarget} eventTarget The stat event target for\n       the channel.\n * @param {requestStats.Stat} stat The stat.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.StatEvent = function(eventTarget, stat) {\n  'use strict';\n  goog.events.Event.call(this, requestStats.Event.STAT_EVENT, eventTarget);\n\n  /**\n   * The stat\n   * @type {requestStats.Stat}\n   */\n  this.stat = stat;\n};\ngoog.inherits(requestStats.StatEvent, goog.events.Event);\n\n\n/**\n * Returns the singleton event target for stat events.\n * @return {!goog.events.EventTarget} The event target for stat events.\n */\nrequestStats.getStatEventTarget = function() {\n  'use strict';\n  return requestStats.getStatEventTarget_();\n};\n\n\n/**\n * Helper function to call the stat event callback.\n * @param {requestStats.Stat} stat The stat.\n */\nrequestStats.notifyStatEvent = function(stat) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(new requestStats.StatEvent(target, stat));\n};\n\n\n/**\n * An event that fires when POST requests complete successfully, indicating\n * the size of the POST and the round trip time.\n */\nrequestStats.Event.TIMING_EVENT = 'timingevent';\n\n\n\n/**\n * Event class for requestStats.Event.TIMING_EVENT\n *\n * @param {goog.events.EventTarget} target The stat event target for\n       the channel.\n * @param {number} size The number of characters in the POST data.\n * @param {number} rtt The total round trip time from POST to response in MS.\n * @param {number} retries The number of times the POST had to be retried.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.TimingEvent = function(target, size, rtt, retries) {\n  'use strict';\n  goog.events.Event.call(this, requestStats.Event.TIMING_EVENT, target);\n\n  /**\n   * @type {number}\n   */\n  this.size = size;\n\n  /**\n   * @type {number}\n   */\n  this.rtt = rtt;\n\n  /**\n   * @type {number}\n   */\n  this.retries = retries;\n};\ngoog.inherits(requestStats.TimingEvent, goog.events.Event);\n\n\n/**\n * Helper function to notify listeners about POST request performance.\n *\n * @param {number} size Number of characters in the POST data.\n * @param {number} rtt The amount of time from POST start to response.\n * @param {number} retries The number of times the POST had to be retried.\n */\nrequestStats.notifyTimingEvent = function(size, rtt, retries) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(\n      new requestStats.TimingEvent(target, size, rtt, retries));\n};\n\n\n/**\n * Allows the application to set an execution hooks for when a channel\n * starts processing requests. This is useful to track timing or logging\n * special information. The function takes no parameters and return void.\n * @param {Function} startHook  The function for the start hook.\n */\nrequestStats.setStartThreadExecutionHook = function(startHook) {\n  'use strict';\n  requestStats.startExecutionHook_ = startHook;\n};\n\n\n/**\n * Allows the application to set an execution hooks for when a channel\n * stops processing requests. This is useful to track timing or logging\n * special information. The function takes no parameters and return void.\n * @param {Function} endHook  The function for the end hook.\n */\nrequestStats.setEndThreadExecutionHook = function(endHook) {\n  'use strict';\n  requestStats.endExecutionHook_ = endHook;\n};\n\n\n/**\n * Application provided execution hook for the start hook.\n *\n * @type {Function}\n * @private\n */\nrequestStats.startExecutionHook_ = function() {};\n\n\n/**\n * Application provided execution hook for the end hook.\n *\n * @type {Function}\n * @private\n */\nrequestStats.endExecutionHook_ = function() {};\n\n\n/**\n * Helper function to call the start hook\n */\nrequestStats.onStartExecution = function() {\n  'use strict';\n  requestStats.startExecutionHook_();\n};\n\n\n/**\n * Helper function to call the end hook\n */\nrequestStats.onEndExecution = function() {\n  'use strict';\n  requestStats.endExecutionHook_();\n};\n\n\n/**\n * Wrapper around SafeTimeout which calls the start and end execution hooks\n * with a try...finally block.\n * @param {Function} fn The callback function.\n * @param {number} ms The time in MS for the timer.\n * @return {number} The ID of the timer.\n */\nrequestStats.setTimeout = function(fn, ms) {\n  'use strict';\n  if (typeof fn !== 'function') {\n    throw new Error('Fn must not be null and must be a function');\n  }\n  return goog.global.setTimeout(function() {\n    'use strict';\n    requestStats.onStartExecution();\n    try {\n      fn();\n    } finally {\n      requestStats.onEndExecution();\n    }\n  }, ms);\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Error codes shared between goog.net.IframeIo and\n * goog.net.XhrIo.\n */\n\ngoog.provide('goog.net.ErrorCode');\n\n\n/**\n * Error codes\n * @enum {number}\n */\ngoog.net.ErrorCode = {\n\n  /**\n   * There is no error condition.\n   */\n  NO_ERROR: 0,\n\n  /**\n   * The most common error from iframeio, unfortunately, is that the browser\n   * responded with an error page that is classed as a different domain. The\n   * situations, are when a browser error page  is shown -- 404, access denied,\n   * DNS failure, connection reset etc.)\n   *\n   */\n  ACCESS_DENIED: 1,\n\n  /**\n   * Currently the only case where file not found will be caused is when the\n   * code is running on the local file system and a non-IE browser makes a\n   * request to a file that doesn't exist.\n   */\n  FILE_NOT_FOUND: 2,\n\n  /**\n   * If Firefox shows a browser error page, such as a connection reset by\n   * server or access denied, then it will fail silently without the error or\n   * load handlers firing.\n   */\n  FF_SILENT_ERROR: 3,\n\n  /**\n   * Custom error provided by the client through the error check hook.\n   */\n  CUSTOM_ERROR: 4,\n\n  /**\n   * Exception was thrown while processing the request.\n   */\n  EXCEPTION: 5,\n\n  /**\n   * The Http response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 6,\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 7,\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 8,\n\n  /**\n   * The resource is not available offline.\n   */\n  OFFLINE: 9,\n};\n\n\n/**\n * Returns a friendly error message for an error code. These messages are for\n * debugging and are not localized.\n * @param {goog.net.ErrorCode} errorCode An error code.\n * @return {string} A message for debugging.\n */\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  'use strict';\n  switch (errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return 'No Error';\n\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return 'Access denied to content document';\n\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return 'File not found';\n\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return 'Firefox silently errored';\n\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return 'Application custom error';\n\n    case goog.net.ErrorCode.EXCEPTION:\n      return 'An exception occurred';\n\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return 'Http response at 400 or 500 level';\n\n    case goog.net.ErrorCode.ABORT:\n      return 'Request was aborted';\n\n    case goog.net.ErrorCode.TIMEOUT:\n      return 'Request timed out';\n\n    case goog.net.ErrorCode.OFFLINE:\n      return 'The resource is not available offline';\n\n    default:\n      return 'Unrecognized error code';\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Common events for the network classes.\n */\n\n\ngoog.provide('goog.net.EventType');\n\n\n/**\n * Event names for network events\n * @enum {string}\n */\ngoog.net.EventType = {\n  COMPLETE: 'complete',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  ABORT: 'abort',\n  READY: 'ready',\n  READY_STATE_CHANGE: 'readystatechange',\n  TIMEOUT: 'timeout',\n  INCREMENTAL_DATA: 'incrementaldata',\n  PROGRESS: 'progress',\n  // DOWNLOAD_PROGRESS and UPLOAD_PROGRESS are special events dispatched by\n  // goog.net.XhrIo to allow binding listeners specific to each type of\n  // progress.\n  DOWNLOAD_PROGRESS: 'downloadprogress',\n  UPLOAD_PROGRESS: 'uploadprogress',\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interface for a factory for creating XMLHttpRequest objects\n * and metadata about them.\n */\n\ngoog.provide('goog.net.XmlHttpFactory');\n\n/** @suppress {extraRequire} Typedef. */\ngoog.require('goog.net.XhrLike');\n\n\n\n/**\n * Abstract base class for an XmlHttpRequest factory.\n * @constructor\n */\ngoog.net.XmlHttpFactory = function() {};\n\n\n/**\n * Cache of options - we only actually call internalGetOptions once.\n * @type {?Object}\n * @private\n */\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ = null;\n\n\n/**\n * @return {!goog.net.XhrLike.OrNative} A new XhrLike instance.\n */\ngoog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;\n\n\n/**\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n */\ngoog.net.XmlHttpFactory.prototype.getOptions = function() {\n  'use strict';\n  return this.cachedOptions_ ||\n      (this.cachedOptions_ = this.internalGetOptions());\n};\n\n\n/**\n * Override this method in subclasses to preserve the caching offered by\n * getOptions().\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n * @protected\n */\ngoog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The API spec for the WebChannel messaging library.\n *\n * Similar to HTML5 WebSocket, WebChannel offers an abstraction for\n * point-to-point socket-like communication between a browser client and\n * a remote origin.\n *\n * WebChannels are created via <code>WebChannel</code>. Multiple WebChannels\n * may be multiplexed over the same WebChannelTransport, which encapsulates\n * the underlying physical connectivity over standard wire protocols\n * such as HTTP.\n *\n * A WebChannel in turn represents a logical communication channel between\n * the client and server endpoint. A WebChannel remains open for as long\n * as the client or server endpoint allows.\n *\n * Messages are delivered in-order and reliably over the same WebChannel,\n * and the choice of the underlying wire protocols is completely transparent\n * to the API users.\n *\n * Note that we have no immediate plan to move this API out of labs. While\n * the implementation is production ready, the API is subject to change.\n */\n\ngoog.provide('goog.net.WebChannel');\ngoog.provide('goog.net.WebChannel.Options');\n\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * A WebChannel represents a logical bi-directional channel over which the\n * client communicates with a remote server that holds the other endpoint\n * of the channel. A WebChannel is always created in the context of a shared\n * {@link WebChannelTransport} instance. It is up to the underlying client-side\n * and server-side implementations to decide how or when multiplexing is\n * to be enabled.\n *\n * @interface\n * @extends {goog.events.Listenable}\n */\ngoog.net.WebChannel = function() {};\n\n\n\n/**\n * This interface defines a pluggable API to allow WebChannel runtime to support\n * customized algorithms in order to recover from transient failures such as\n * those failures caused by network or proxies (intermediaries).\n *\n * The algorithm may also choose to fail-fast, e.g. switch the client to some\n * offline mode.\n *\n * Extra measurements and logging could also be implemented in the custom\n * module, which has the full knowledge of all the state transitions\n * (due to failures).\n *\n * A default algorithm will be provided by the webchannel library itself. Custom\n * algorithms are expected to be tailored to specific client platforms or\n * networking environments, e.g. mobile, cellular network.\n *\n * @interface\n */\ngoog.net.WebChannel.FailureRecovery = function() {};\n\n\n/**\n * Configuration spec for newly created WebChannel instances.\n *\n * WebChannels are configured in the context of the containing\n * {@link WebChannelTransport}. The configuration parameters are specified\n * when a new instance of WebChannel is created via {@link WebChannelTransport}.\n * @record\n */\ngoog.net.WebChannel.Options = function() {};\n\n/**\n * Transport-metadata support.\n *\n * Custom HTTP headers to be added to every message sent to the server. This\n * object is mutable, and custom headers may be changed, removed, or added\n * during the runtime after a channel has been opened.\n *\n * Custom headers may trigger CORS preflight. See other related options.\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageHeaders;\n\n/**\n * Transport-metadata support.\n *\n * Similar to messageHeaders, but any custom HTTP headers will be sent only once\n * when the channel is opened as part of the handshake request. Typical usage is\n * to send an auth header to the server, which only checks the auth header at\n * the time during the handshake when the channel is opened.\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.initMessageHeaders;\n\n/**\n * Sent as initMessageHeaders via X-WebChannel-Content-Type,\n * to inform the server the MIME type of WebChannel messages.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageContentType;\n\n/**\n * Transport-metadata support.\n *\n * Custom url query parameters to be added to every message sent to the server.\n * This object is mutable, and custom parameters may be changed, removed or\n * added during the runtime after a channel has been opened.\n *\n * TODO: initMessageUrlParams\n * TODO: closeMessageUrlParams  (custom url query params to be added to the\n * channel-close message. Custom headers are not supported due to the use of\n * SendBeacon)\n *\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageUrlParams;\n\n/**\n * Whether a special header should be added to\n * each message so that the server can dispatch webchannel messages without\n * knowing the URL path prefix. Defaults to false.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.clientProtocolHeaderRequired;\n\n/**\n * The maximum number of in-flight HTTP requests allowed\n * when SPDY is enabled. Currently we only detect SPDY in Chrome.\n * This parameter defaults to 10. When SPDY is not enabled, this parameter\n * will have no effect.\n * @type {number|undefined}\n */\ngoog.net.WebChannel.Options.prototype.concurrentRequestLimit;\n\n/**\n * Setting this to true to allow the use of sub-domains\n * (as configured by the server) to send XHRs with the CORS withCredentials\n * bit set to true.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.supportsCrossDomainXhr;\n\n/**\n * Whether to bypass v8 encoding of client-sent messages.\n * This defaults to false now due to legacy servers. New applications should\n * always configure this option to true.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.sendRawJson;\n\n/**\n * The URL parameter name that contains the session id (for sticky routing of\n * HTTP requests). When this param is specified, a server that supports this\n * option will respond with an opaque session id as part of the initial\n * handshake (via the X-HTTP-Session-Id header); and all the subsequent requests\n * will contain the httpSessionIdParam. This option will take precedence over\n * any duplicated parameter specified with messageUrlParams, whose value will be\n * ignored.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.httpSessionIdParam;\n\n/**\n * The URL parameter name to allow custom HTTP\n * headers to be overwritten as a URL param to bypass CORS preflight.\n *\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.httpHeadersOverwriteParam;\n\n/**\n * Whether to encode Options.initMessageHeaders in the HTTP request body.\n * This option defaults to false. If true, Options.httpHeadersOverwriteParam\n * will be ignored.\n *\n * This option should not be set if Options.fastHandshake is set (which\n * uses GET for handshake).\n *\n * Web-only feature.\n *\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.encodeInitMessageHeaders;\n\n/**\n * Whether to force long-polling from client to server.\n * This defaults to false. Long-polling may be necessary when a (MITM) proxy\n * is buffering data sent by the server.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.forceLongPolling;\n\n/**\n * Whether to enable automatic detection of buffering proxies. In the presence\n * of any buffering proxy, webchannel will use long-polling to send messages\n * from the server to the client. This option defaults to false.\n * Currently when fastHandshake is enabled, this option will be ignored.\n * Compared to \"forceLongPolling\", this option may introduce up to 2-RTT\n * extra latency for delivering messages generated immediately after the\n * handshake.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.detectBufferingProxy;\n\n/**\n * This option informs the server the desired maximum timeout interval (in\n * Milliseconds) to complete a long-polling GET response, e.g. to accommodate\n * the timeout enforced by a proxy. The WebChannel server may adjust the\n * specified timeout or may ignore this client-configured timeout.\n * @type {number|undefined}\n */\ngoog.net.WebChannel.Options.prototype.longPollingTimeout;\n\n/**\n * Enable true 0-RTT message delivery, including\n * leveraging QUIC 0-RTT (which requires GET to be used). This option\n * defaults to false. Note it is allowed to send messages before Open event is\n * received, after a channel has been opened. In order to enable 0-RTT,\n * messages will be encoded as part of URL and therefore there needs be a size\n * limit for those initial messages that are sent immediately as part of the\n * GET handshake request. With sendRawJson=true, this limit is currently set\n * to 4K chars and data beyond this limit will be buffered till the handshake\n * (1-RTT) finishes. With sendRawJson=false, it's up to the application\n * to limit the amount of data that is sent as part of the handshake.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.fastHandshake;\n\n/**\n * Enable the blocking RPC semantics for the handshake:\n * 1) the completion of handshake is blocked by the server-side application\n * logic for handling the handshake (HTTP) request; 2) the client application\n * will inspect the handshake (HTTP) response headers as generated\n * by the server application (v.s. by only the webchannel runtime). This option\n * defaults to false.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.blockingHandshake;\n\n/**\n * Whether to disable logging redact. By default, redact is\n * enabled to remove any message payload or user-provided info\n * from closure logs.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.disableRedact;\n\n/**\n * Inform the server about the client profile to enable\n * customized configs that are optimized for certain clients or environments.\n * Currently this information is sent via X-WebChannel-Client-Profile header.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.clientProfile;\n\n/**\n * The internal channel parameter name to allow\n * experimental channel configurations. Supported options include fastfail,\n * baseRetryDelayMs, retryDelaySeedMs, forwardChannelMaxRetries and\n * forwardChannelRequestTimeoutMs. Note that these options are subject to\n * change.\n * @type {!Object<string, boolean|number>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.internalChannelParams;\n\n/**\n * Allows the caller to override the factory used to create\n * XMLHttpRequest objects. This is introduced to disable CORS on firefox OS.\n * @type {!goog.net.XmlHttpFactory|undefined}\n */\ngoog.net.WebChannel.Options.prototype.xmlHttpFactory;\n\n/**\n * Client-side thresholds that decide when to refresh\n * an underlying HTTP request, to limit memory consumption due to XHR buffering\n * or compression context. The client-side thresholds should be significantly\n * smaller than the server-side thresholds. This allows the client to eliminate\n * any latency introduced by request refreshing, i.e. an RTT window during which\n * messages may be buffered on the server-side. Supported params include\n * totalBytesReceived, totalDurationMs.\n * @type {!Object<string, number>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.requestRefreshThresholds;\n\n/**\n * This is an experimental feature to use WHATWG Fetch/streams (when supported)\n * for the backchannel. If a custom 'xmlHttpFactory' is speficied, this option\n * will not be effective. This option defaults to false now and will eventually\n * be turned on by default.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.useFetchStreams;\n\n/**\n * Opt-in to enable Chrome origin trials from the WebChannel client. See\n * https://github.com/GoogleChrome/OriginTrials\n *\n * Origin trial history:\n * - fetch upload (11/2020 - 07/2021)\n * https://developers.chrome.com/origintrials/#/view_trial/3524066708417413121\n *\n * Participating in the origin trials will help Chrome to release new Web\n * platform features sooner, which will in turn help improve WebChannel\n * performance.\n *\n * Origin trials are not expected to interfere with WebChannel wire messages\n * and should not introduce any noticeable overhead.\n *\n * This is enabled by default with any on-going origin-trial.\n *\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.enableOriginTrials;\n\n\n/**\n * Types that are allowed as message data.\n *\n * Note that JS objects (sent by the client) can only have string encoded\n * values due to the limitation of the current wire protocol.\n *\n * Unicode strings (sent by the server) may or may not need be escaped, as\n * decided by the server.\n *\n * @typedef {(!ArrayBuffer|!Blob|!Object<string, !Object|string>|!Array|string)}\n */\ngoog.net.WebChannel.MessageData;\n\n\n/**\n * Open the WebChannel against the URI specified in the constructor.\n */\ngoog.net.WebChannel.prototype.open = goog.abstractMethod;\n\n\n/**\n * Close the WebChannel.\n *\n * This is a full close (shutdown) with no guarantee of FIFO delivery in respect\n * to any in-flight messages sent to the server.\n *\n * If you need such a guarantee, see the Half the halfClose() method.\n */\ngoog.net.WebChannel.prototype.close = goog.abstractMethod;\n\n\n/**\n * Half-close the WebChannel.\n *\n * Half-close semantics:\n * 1. delivered as a regular message in FIFO programming order\n * 2. the server is expected to return a half-close too (with or without\n *    application involved), which will trigger a full close (shutdown)\n *    on the client side\n * 3. for now, the half-close event defined for server-initiated\n *    half-close is not exposed to the client application\n * 4. a client-side half-close may be triggered internally when the client\n *    receives a half-close from the server; and the client is expected to\n *    do a full close after the half-close is acked and delivered\n *    on the server-side.\n * 5. Full close is always a forced one. See the close() method.\n *\n * New messages sent after halfClose() will be dropped.\n *\n * NOTE: This is not yet implemented, and will throw an exception if called.\n */\ngoog.net.WebChannel.prototype.halfClose = goog.abstractMethod;\n\n\n/**\n * Sends a message to the server that maintains the other endpoint of\n * the WebChannel.\n *\n * O-RTT behavior:\n * 1. messages sent before open() is called will always be delivered as\n *    part of the handshake, i.e. with 0-RTT\n * 2. messages sent after open() is called but before the OPEN event\n *    is received will be delivered as part of the handshake if\n *    send() is called from the same execution context as open().\n * 3. otherwise, those messages will be buffered till the handshake\n *    is completed (which will fire the OPEN event).\n *\n * @param {!goog.net.WebChannel.MessageData} message The message to send.\n */\ngoog.net.WebChannel.prototype.send = goog.abstractMethod;\n\n\n/**\n * Common events fired by WebChannels.\n * @enum {string}\n */\ngoog.net.WebChannel.EventType = {\n  /** Dispatched when the channel is opened. */\n  OPEN: goog.events.getUniqueId('open'),\n\n  /** Dispatched when the channel is closed. */\n  CLOSE: goog.events.getUniqueId('close'),\n\n  /**\n   * Dispatched when the channel is aborted due to errors.\n   *\n   * For backward compatibility reasons, a CLOSE event will also be\n   * dispatched, following the ERROR event, which indicates that the channel\n   * has been completely shutdown .\n   */\n  ERROR: goog.events.getUniqueId('error'),\n\n  /** Dispatched when the channel has received a new message. */\n  MESSAGE: goog.events.getUniqueId('message')\n};\n\n\n\n/**\n * The event interface for the MESSAGE event.\n *\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.net.WebChannel.MessageEvent = function() {\n  'use strict';\n  goog.net.WebChannel.MessageEvent.base(\n      this, 'constructor', goog.net.WebChannel.EventType.MESSAGE);\n};\ngoog.inherits(goog.net.WebChannel.MessageEvent, goog.events.Event);\n\n\n/**\n * The content of the message received from the server.\n *\n * @type {!goog.net.WebChannel.MessageData}\n */\ngoog.net.WebChannel.MessageEvent.prototype.data;\n\n\n/**\n * The metadata key when the MESSAGE event represents a metadata message.\n *\n * @type {string|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.metadataKey;\n\n\n/**\n * Metadata as HTTP status code. Typically sent before the channel is\n * half-closed by the server.\n *\n * @type {number|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.statusCode;\n\n\n/**\n * Metadata as HTTP headers. Typically sent before the channel is\n * half-closed by the server.\n *\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.headers;\n\n\n/**\n * WebChannel level error conditions.\n *\n * Summary of error debugging and reporting in WebChannel:\n *\n * Network Error\n * 1. By default the webchannel library will set the error status to\n *    NETWORK_ERROR when a channel has to be aborted or closed. NETWORK_ERROR\n *    may be recovered by the application by retrying and opening a new channel.\n * 2. There may be lost messages (not acked by the server) when a channel is\n *    aborted. Currently we don't have a public API to retrieve messages that\n *    are waiting to be acked on the client side. File a bug if you think it\n *    is useful to expose such an API.\n * 3. Details of why a channel fails are available via closure debug logs,\n *    and stats events (see webchannel/requeststats.js). Those are internal\n *    stats and are subject to change. File a bug if you think it's useful to\n *    version and expose such stats as part of the WebChannel API.\n *\n * Server Error\n * 1. SERVER_ERROR is intended to indicate a non-recoverable condition, e.g.\n *    when auth fails.\n * 2. We don't currently generate any such errors, because most of the time\n *    it's the responsibility of upper-layer frameworks or the application\n *    itself to indicate to the client why a webchannel has been failed\n *    by the server.\n * 3. When a channel is failed by the server explicitly, we still signal\n *    NETWORK_ERROR to the client. Explicit server failure may happen when the\n *    server does a fail-over, or becomes overloaded, or conducts a forced\n *    shutdown etc.\n * 4. We use some heuristic to decide if the network (aka cloud) is down\n *    v.s. the actual server is down.\n *\n *  RuntimeProperties.getLastStatusCode is a useful state that we expose to\n *  the client to indicate the HTTP response status code of the last HTTP\n *  request initiated by the WebChannel client library, for debugging\n *  purposes only.\n *\n *  See WebChannel.Options.backChannelFailureRecovery and\n *  WebChannel.FailureRecovery to install a custom failure-recovery algorithm.\n *\n * @enum {number}\n */\ngoog.net.WebChannel.ErrorStatus = {\n  /** No error has occurred. */\n  OK: 0,\n\n  /** Communication to the server has failed. */\n  NETWORK_ERROR: 1,\n\n  /** The server fails to accept or process the WebChannel. */\n  SERVER_ERROR: 2\n};\n\n\n\n/**\n * The event interface for the ERROR event.\n *\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.net.WebChannel.ErrorEvent = function() {\n  'use strict';\n  goog.net.WebChannel.ErrorEvent.base(\n      this, 'constructor', goog.net.WebChannel.EventType.ERROR);\n};\ngoog.inherits(goog.net.WebChannel.ErrorEvent, goog.events.Event);\n\n\n/**\n * The error status.\n *\n * @type {!goog.net.WebChannel.ErrorStatus}\n */\ngoog.net.WebChannel.ErrorEvent.prototype.status;\n\n\n/**\n * @return {!goog.net.WebChannel.RuntimeProperties} The runtime properties\n * of the WebChannel instance.\n */\ngoog.net.WebChannel.prototype.getRuntimeProperties = goog.abstractMethod;\n\n\n\n/**\n * The runtime properties of the WebChannel instance.\n *\n * This class is defined for debugging and monitoring purposes, as well as for\n * runtime functions that the application may choose to manage by itself.\n *\n * @interface\n */\ngoog.net.WebChannel.RuntimeProperties = function() {};\n\n\n/**\n * @return {number} The effective limit for the number of concurrent HTTP\n * requests that are allowed to be made for sending messages from the client\n * to the server. When SPDY is not enabled, this limit will be one.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getConcurrentRequestLimit =\n    goog.abstractMethod;\n\n\n/**\n * For applications that need support multiple channels (e.g. from\n * different tabs) to the same origin, use this method to decide if SPDY is\n * enabled and therefore it is safe to open multiple channels.\n *\n * If SPDY is disabled, the application may choose to limit the number of active\n * channels to one or use other means such as sub-domains to work around\n * the browser connection limit.\n *\n * @return {boolean} Whether SPDY is enabled for the origin against which\n * the channel is created.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.isSpdyEnabled =\n    goog.abstractMethod;\n\n\n/**\n * @return {number} The number of requests (for sending messages to the server)\n * that are pending. If this number is approaching the value of\n * getConcurrentRequestLimit(), client-to-server message delivery may experience\n * a higher latency.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getPendingRequestCount =\n    goog.abstractMethod;\n\n\n/**\n * For applications to query the current HTTP session id, sent by the server\n * during the initial handshake.\n *\n * @return {?string} the HTTP session id or null if no HTTP session is in use.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getHttpSessionId =\n    goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method generates an in-band commit request to the server, which will\n * ack the commit request as soon as all messages sent prior to this commit\n * request have been committed by the application.\n *\n * Committing a message has a stronger semantics than delivering a message\n * to the application. Detail spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * Timeout or cancellation is not supported and the application is expected to\n * abort the channel if the commit-ack fails to arrive in time.\n *\n * ===\n *\n * This is currently implemented only in the client layer and the commit\n * callback will be invoked after all the pending client-sent messages have been\n * delivered by the server-side webchannel endpoint. This semantics is\n * different and weaker than what's required for end-to-end ack which requires\n * the server application to ack the in-order delivery of messages that are sent\n * before the commit request is issued.\n *\n * Commit should only be called after the channel open event is received.\n * Duplicated commits are allowed and only the last callback is guaranteed.\n * Commit called after the channel has been closed will be ignored.\n *\n * @param {function()} callback The callback will be invoked once an\n * ack has been received for the current commit or any newly issued commit.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.commit = goog.abstractMethod;\n\n\n/**\n * This method may be used by the application to recover from a peer failure\n * or to enable sender-initiated flow-control.\n *\n * Detail spec: https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * Note that the caller should NOT modify the list of returned messages.\n *\n * @return {!Array<!goog.net.WebChannel.MessageData>} The list of messages that\n * have not received commit-ack from the server; or if no commit has been\n * issued, the list of messages that have not been delivered to the server\n * application.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getNonAckedMessages =\n    goog.abstractMethod;\n\n\n/**\n * A low water-mark message count to notify the application when the\n * flow-control condition is cleared, that is, when the application is\n * able to send more messages.\n *\n * We expect the application to configure a high water-mark message count,\n * which is checked via getNonAckedMessageCount(). When the high water-mark\n * is exceeded, the application should install a callback via this method\n * to be notified when to start to send new messages.\n *\n * This is not yet implemented.\n *\n * @param {number} count The low water-mark count. It is an error to pass\n * a non-positive value.\n * @param {function()} callback The call back to notify the application\n * when NonAckedMessageCount is below the specified low water-mark count.\n * Any previously registered callback is cleared. This new callback will\n * be cleared once it has been fired, or when the channel is closed or aborted.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.notifyNonAckedMessageCount =\n    goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method registers a callback to handle the commit request sent\n * by the server. Commit protocol spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * This is not yet implemented.\n *\n * @param {function(!Object)} callback The callback will take an opaque\n * commitId which needs be passed back to the server when an ack-commit\n * response is generated by the client application, via ackCommit().\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.onCommit = goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method is used by the application to generate an ack-commit response\n * for the given commitId. Commit protocol spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * This is not yet implemented.\n *\n * @param {!Object} commitId The commitId which denotes the commit request\n * from the server that needs be ack'ed.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.ackCommit = goog.abstractMethod;\n\n\n/**\n * Transport-metadata support.\n *\n * Responses from the channel-close (abort) message are not available.\n *\n * In future when client-side half-close is supported, its response headers\n * will be available via this API too.\n * @return {!Object<string, string>|undefined} The response headers received\n * with the non-200 HTTP status code that causes the channel to be aborted.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getLastResponseHeaders =\n    goog.abstractMethod;\n\n/**\n * Transport-metadata support.\n *\n * TODO: getInitStatusCode   (handshake)\n * TODO: getInitResponseHeaders  (handshake)\n *\n * Note that response headers from client-initiated close (abort) are not\n * available.\n *\n * In future when client-initiated half-close is supported, its response status\n * will be available via this API.\n *\n * @return {number} The non-200 HTTP status code received that causes the\n * channel to be aborted.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getLastStatusCode =\n    goog.abstractMethod;\n\n\n/**\n * Enum to indicate the current recovery state.\n *\n * @enum {string}\n */\ngoog.net.WebChannel.FailureRecovery.State = {\n  /** Initial state. */\n  INIT: 'init',\n\n  /** Once a failure has been detected. */\n  FAILED: 'failed',\n\n  /**\n   * Once a recovery operation has been issued, e.g. a new request to resume\n   * communication.\n   */\n  RECOVERING: 'recovering',\n\n  /** The channel has been closed.  */\n  CLOSED: 'closed'\n};\n\n\n/**\n * Enum to indicate different failure conditions as detected by the webchannel\n * runtime.\n *\n * This enum is to be used only between the runtime and FailureRecovery module,\n * and new states are expected to be introduced in future.\n *\n * @enum {string}\n */\ngoog.net.WebChannel.FailureRecovery.FailureCondition = {\n  /**\n   * The HTTP response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 'http_error',\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 'abort',\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 'timeout',\n\n  /**\n   * Exception was thrown while processing the request/response.\n   */\n  EXCEPTION: 'exception'\n};\n\n\n/**\n * @return {!goog.net.WebChannel.FailureRecovery.State} the current state,\n * mainly for debugging use.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.getState = goog.abstractMethod;\n\n\n/**\n * This method is for WebChannel runtime to set the current failure condition\n * and to provide a callback for the algorithm to signal to the runtime\n * when it is time to issue a recovery operation, e.g. a new request to the\n * server.\n *\n * Supported transitions include:\n *   INIT->FAILED\n *   FAILED->FAILED (re-entry ok)\n *   RECOVERY->FAILED.\n *\n * Ignored if state == CLOSED.\n *\n * Advanced implementations are expected to track all the state transitions\n * and their timestamps for monitoring purposes.\n *\n * @param {!goog.net.WebChannel.FailureRecovery.FailureCondition} failure The\n * new failure condition generated by the WebChannel runtime.\n * @param {!Function} operation The callback function to the WebChannel\n * runtime to issue a recovery operation, e.g. a new request. E.g. the default\n * recovery algorithm will issue timeout-based recovery operations.\n * Post-condition for the callback: state transition to RECOVERING.\n *\n * @return {!goog.net.WebChannel.FailureRecovery.State} The updated state\n * as decided by the failure recovery module. Upon a recoverable failure event,\n * the state is transitioned to RECOVERING; or the state is transitioned to\n * FAILED which indicates a fail-fast decision for the runtime to execute.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.setFailure = goog.abstractMethod;\n\n\n/**\n * The Webchannel runtime needs call this method when webchannel is closed or\n * aborted.\n *\n * Once the instance is closed, any access to the instance will be a no-op.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.close = goog.abstractMethod;\n\n\n/**\n * A request header to indicate to the server the messaging protocol\n * each HTTP message is speaking.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_PROTOCOL = 'X-Client-Protocol';\n\n\n/**\n * The value for x-client-protocol when the messaging protocol is WebChannel.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL = 'webchannel';\n\n\n/**\n * A response header for the server to signal the wire-protocol that\n * the browser establishes with the server (or proxy), e.g. \"spdy\" (aka http/2)\n * \"quic\". This information avoids the need to use private APIs to decide if\n * HTTP requests are multiplexed etc.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_WIRE_PROTOCOL = 'X-Client-Wire-Protocol';\n\n\n/**\n * A response header for the server to send back the HTTP session id as part of\n * the initial handshake. The value of the HTTP session id is opaque to the\n * WebChannel protocol.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_HTTP_SESSION_ID = 'X-HTTP-Session-Id';\n\n\n/**\n * A response header for the server to send back any initial response data as a\n * header to avoid any possible buffering by an intermediary, which may\n * be undesired during the handshake.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_HTTP_INITIAL_RESPONSE = 'X-HTTP-Initial-Response';\n\n\n/**\n * A request header for specifying the content-type of WebChannel messages,\n * e.g. application-defined JSON encoding styles. Currently this header\n * is sent by the client via initMessageHeaders when the channel is opened.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE = 'X-WebChannel-Content-Type';\n\n\n/**\n * A request header for specifying the client profile in order to apply\n * customized config params on the server side, e.g. timeouts.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE = 'X-WebChannel-Client-Profile';\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Low level handling of XMLHttpRequest.\n */\n\ngoog.provide('goog.net.DefaultXmlHttpFactory');\ngoog.provide('goog.net.XmlHttp');\ngoog.provide('goog.net.XmlHttp.OptionType');\ngoog.provide('goog.net.XmlHttp.ReadyState');\ngoog.provide('goog.net.XmlHttpDefines');\n\ngoog.require('goog.asserts');\ngoog.require('goog.net.WrapperXmlHttpFactory');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.requireType('goog.net.XhrLike');\n\n\n/**\n * Static class for creating XMLHttpRequest objects.\n * @return {!goog.net.XhrLike.OrNative} A new XMLHttpRequest object.\n */\ngoog.net.XmlHttp = function() {\n  'use strict';\n  return goog.net.XmlHttp.factory_.createInstance();\n};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true bypasses the ActiveX probing code.\n * NOTE(ruilopes): Due to the way JSCompiler works, this define *will not* strip\n * out the ActiveX probing code from binaries.  To achieve this, use\n * `goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR` instead.\n * TODO(ruilopes): Collapse both defines.\n */\ngoog.net.XmlHttp.ASSUME_NATIVE_XHR =\n    goog.define('goog.net.XmlHttp.ASSUME_NATIVE_XHR', false);\n\n\n/** @const */\ngoog.net.XmlHttpDefines = {};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true eliminates the ActiveX probing code.\n */\ngoog.net.XmlHttpDefines.ASSUME_NATIVE_XHR =\n    goog.define('goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR', false);\n\n\n/**\n * Gets the options to use with the XMLHttpRequest objects obtained using\n * the static methods.\n * @return {Object} The options.\n */\ngoog.net.XmlHttp.getOptions = function() {\n  'use strict';\n  return goog.net.XmlHttp.factory_.getOptions();\n};\n\n\n/**\n * Type of options that an XmlHttp object can have.\n * @enum {number}\n */\ngoog.net.XmlHttp.OptionType = {\n  /**\n   * Whether a no-op function should be used to clear the onreadystatechange\n   * handler instead of null.\n   */\n  USE_NULL_FUNCTION: 0,\n\n  /**\n   * NOTE(user): In IE if send() errors on a *local* request the readystate\n   * is still changed to COMPLETE.  We need to ignore it and allow the\n   * try/catch around send() to pick up the error.\n   */\n  LOCAL_REQUEST_ERROR: 1,\n};\n\n\n/**\n * Status constants for XMLHTTP, matches:\n * https://msdn.microsoft.com/en-us/library/ms534361(v=vs.85).aspx\n * @enum {number}\n */\ngoog.net.XmlHttp.ReadyState = {\n  /**\n   * Constant for when xmlhttprequest.readyState is uninitialized\n   */\n  UNINITIALIZED: 0,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loading.\n   */\n  LOADING: 1,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loaded.\n   */\n  LOADED: 2,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is in an interactive state.\n   */\n  INTERACTIVE: 3,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is completed\n   */\n  COMPLETE: 4,\n};\n\n\n/**\n * The global factory instance for creating XMLHttpRequest objects.\n * @type {goog.net.XmlHttpFactory}\n * @private\n */\ngoog.net.XmlHttp.factory_;\n\n\n/**\n * Sets the factories for creating XMLHttpRequest objects and their options.\n * @param {Function} factory The factory for XMLHttpRequest objects.\n * @param {Function} optionsFactory The factory for options.\n * @deprecated Use setGlobalFactory instead.\n */\ngoog.net.XmlHttp.setFactory = function(factory, optionsFactory) {\n  'use strict';\n  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(\n      goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\n\n\n/**\n * Sets the global factory object.\n * @param {!goog.net.XmlHttpFactory} factory New global factory object.\n */\ngoog.net.XmlHttp.setGlobalFactory = function(factory) {\n  'use strict';\n  goog.net.XmlHttp.factory_ = factory;\n};\n\n\n\n/**\n * Default factory to use when creating xhr objects.  You probably shouldn't be\n * instantiating this directly, but rather using it via goog.net.XmlHttp.\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n */\ngoog.net.DefaultXmlHttpFactory = function() {\n  'use strict';\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {\n  'use strict';\n  const progId = this.getProgId_();\n  if (progId) {\n    return new ActiveXObject(progId);\n  } else {\n    return new XMLHttpRequest();\n  }\n};\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {\n  'use strict';\n  const progId = this.getProgId_();\n  const options = {};\n  if (progId) {\n    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;\n    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;\n  }\n  return options;\n};\n\n\n/**\n * The ActiveX PROG ID string to use to create xhr's in IE. Lazily initialized.\n * @type {string|undefined}\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.ieProgId_;\n\n\n/**\n * Initialize the private state used by other functions.\n * @return {string} The ActiveX PROG ID string to use to create xhr's in IE.\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {\n  'use strict';\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR ||\n      goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return '';\n  }\n\n  // The following blog post describes what PROG IDs to use to create the\n  // XMLHTTP object in Internet Explorer:\n  // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n  // However we do not (yet) fully trust that this will be OK for old versions\n  // of IE on Win9x so we therefore keep the last 2.\n  if (!this.ieProgId_ && typeof XMLHttpRequest == 'undefined' &&\n      typeof ActiveXObject != 'undefined') {\n    // Candidate Active X types.\n    const ACTIVE_X_IDENTS = [\n      'MSXML2.XMLHTTP.6.0',\n      'MSXML2.XMLHTTP.3.0',\n      'MSXML2.XMLHTTP',\n      'Microsoft.XMLHTTP',\n    ];\n    for (let i = 0; i < ACTIVE_X_IDENTS.length; i++) {\n      const candidate = ACTIVE_X_IDENTS[i];\n\n      try {\n        new ActiveXObject(candidate);\n        // NOTE(user): cannot assign progid and return candidate in one line\n        // because JSCompiler complaings: BUG 658126\n        this.ieProgId_ = candidate;\n        return candidate;\n      } catch (e) {\n        // do nothing; try next choice\n      }\n    }\n\n    // couldn't find any matches\n    throw new Error(\n        'Could not create ActiveXObject. ActiveX might be disabled,' +\n        ' or MSXML might not be installed');\n  }\n\n  return /** @type {string} */ (this.ieProgId_);\n};\n\n\n// Set the global factory to an instance of the default factory.\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the ChannelRequest class. The request\n * object encapsulates the logic for making a single request, either for the\n * forward channel, back channel, or test channel, to the server. It contains\n * the logic for the two types of transports we use:\n * XMLHTTP and Image request. It provides timeout detection. More transports\n * to be added in future, such as Fetch, WebSocket.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.ChannelRequest');\n\ngoog.require('goog.Timer');\ngoog.require('goog.asserts');\ngoog.require('goog.async.Throttle');\ngoog.require('goog.dispose');\ngoog.require('goog.events.EventHandler');\ngoog.require('goog.labs.net.webChannel.Channel');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\ngoog.require('goog.labs.net.webChannel.environment');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.events.Event');\ngoog.requireType('goog.labs.net.webChannel.Wire.QueuedMap');\ngoog.requireType('goog.net.XhrIo');\n\n\n\n/**\n * A new ChannelRequest is created for each request to the server.\n *\n * @param {goog.labs.net.webChannel.Channel} channel\n *     The channel that owns this request.\n * @param {goog.labs.net.webChannel.WebChannelDebug} channelDebug A\n *     WebChannelDebug to use for logging.\n * @param {string=} opt_sessionId The session id for the channel.\n * @param {string|number=} opt_requestId The request id for this request.\n * @param {number=} opt_retryId The retry id for this request.\n * @constructor\n * @struct\n * @final\n */\ngoog.labs.net.webChannel.ChannelRequest = function(\n    channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {\n  'use strict';\n  /**\n   * The channel object that owns the request.\n   * @private {goog.labs.net.webChannel.Channel}\n   */\n  this.channel_ = channel;\n\n  /**\n   * The channel debug to use for logging\n   * @private {goog.labs.net.webChannel.WebChannelDebug}\n   */\n  this.channelDebug_ = channelDebug;\n\n  /**\n   * The Session ID for the channel.\n   * @private {string|undefined}\n   */\n  this.sid_ = opt_sessionId;\n\n  /**\n   * The RID (request ID) for the request.\n   * @private {string|number|undefined}\n   */\n  this.rid_ = opt_requestId;\n\n  /**\n   * The attempt number of the current request.\n   * @private {number}\n   */\n  this.retryId_ = opt_retryId || 1;\n\n  /**\n   * An object to keep track of the channel request event listeners.\n   * @private {!goog.events.EventHandler<\n   *     !goog.labs.net.webChannel.ChannelRequest>}\n   */\n  this.eventHandler_ = new goog.events.EventHandler(this);\n\n  /**\n   * The timeout in ms before failing the request.\n   * @private {number}\n   */\n  this.timeout_ = goog.labs.net.webChannel.ChannelRequest.TIMEOUT_MS_;\n\n  /**\n   * A timer for polling responseText in browsers that don't fire\n   * onreadystatechange during incremental loading of responseText.\n   * @private {goog.Timer}\n   */\n  this.pollingTimer_ =\n      new goog.Timer(goog.labs.net.webChannel.environment.getPollingInterval());\n\n  /**\n   * Extra HTTP headers to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraHeaders_ = null;\n\n\n  /**\n   * Whether the request was successful. This is only set to true after the\n   * request successfully completes.\n   * @private {boolean}\n   */\n  this.successful_ = false;\n\n\n  /**\n   * The TimerID of the timer used to detect if the request has timed-out.\n   * @type {?number}\n   * @private\n   */\n  this.watchDogTimerId_ = null;\n\n  /**\n   * The time in the future when the request will timeout.\n   * @private {?number}\n   */\n  this.watchDogTimeoutTime_ = null;\n\n  /**\n   * The time the request started.\n   * @private {?number}\n   */\n  this.requestStartTime_ = null;\n\n  /**\n   * The type of request (XMLHTTP, IMG)\n   * @private {?number}\n   */\n  this.type_ = null;\n\n  /**\n   * The base Uri for the request. The includes all the parameters except the\n   * one that indicates the retry number.\n   * @private {?goog.Uri}\n   */\n  this.baseUri_ = null;\n\n  /**\n   * The request Uri that was actually used for the most recent request attempt.\n   * @private {?goog.Uri}\n   */\n  this.requestUri_ = null;\n\n  /**\n   * The post data, if the request is a post.\n   * @private {?string}\n   */\n  this.postData_ = null;\n\n  /**\n   * An array of pending messages that we have either received a non-successful\n   * response for, or no response at all, and which therefore may or may not\n   * have been received by the server.\n   * @private {!Array<goog.labs.net.webChannel.Wire.QueuedMap>}\n   */\n  this.pendingMessages_ = [];\n\n  /**\n   * The XhrLte request if the request is using XMLHTTP\n   * @private {?goog.net.XhrIo}\n   */\n  this.xmlHttp_ = null;\n\n  /**\n   * The position of where the next unprocessed chunk starts in the response\n   * text.\n   * @private {number}\n   */\n  this.xmlHttpChunkStart_ = 0;\n\n  /**\n   * The verb (Get or Post) for the request.\n   * @private {?string}\n   */\n  this.verb_ = null;\n\n  /**\n   * The last error if the request failed.\n   * @private {?goog.labs.net.webChannel.ChannelRequest.Error}\n   */\n  this.lastError_ = null;\n\n  /**\n   * The response headers received along with the non-200 status.\n   *\n   * @private {!Object<string, string>|undefined}\n   */\n  this.errorResponseHeaders_ = undefined;\n\n  /**\n   * The last status code received.\n   * @private {number}\n   */\n  this.lastStatusCode_ = -1;\n\n  /**\n   * Whether the request has been cancelled due to a call to cancel.\n   * @private {boolean}\n   */\n  this.cancelled_ = false;\n\n  /**\n   * A throttle time in ms for readystatechange events for the backchannel.\n   * Useful for throttling when ready state is INTERACTIVE (partial data).\n   * If set to zero no throttle is used.\n   *\n   * See WebChannelBase.prototype.readyStateChangeThrottleMs_\n   *\n   * @private {number}\n   */\n  this.readyStateChangeThrottleMs_ = 0;\n\n  /**\n   * The throttle for readystatechange events for the current request, or null\n   * if there is none.\n   * @private {?goog.async.Throttle}\n   */\n  this.readyStateChangeThrottle_ = null;\n\n  /**\n   * Whether to the result is expected to be encoded for chunking and thus\n   * requires decoding.\n   * @private {boolean}\n   */\n  this.decodeChunks_ = false;\n\n  /**\n   * Whether to decode x-http-initial-response.\n   * @private {boolean}\n   */\n  this.decodeInitialResponse_ = false;\n\n  /**\n   * Whether x-http-initial-response has been decoded (dispatched).\n   * @private {boolean}\n   */\n  this.initialResponseDecoded_ = false;\n\n  /**\n   * Whether the first byte of response body has arrived, for a successful\n   * response.\n   * @private {boolean}\n   */\n  this.firstByteReceived_ = false;\n\n  /**\n   * The current state of fetch responses if webchannel is using WHATWG\n   * fetch/streams.\n   * @private {!goog.labs.net.webChannel.FetchResponseState}\n   */\n  this.fetchResponseState_ = new goog.labs.net.webChannel.FetchResponseState();\n};\n\n/**\n * A collection of fetch/stream properties.\n * @struct\n * @constructor\n */\ngoog.labs.net.webChannel.FetchResponseState = function() {\n  'use strict';\n  /**\n   * The TextDecoder for decoding Uint8Array responses from fetch request.\n   * @type {?goog.global.TextDecoder}\n   */\n  this.textDecoder = null;\n\n  /**\n   * The unconsumed response text from the fetch requests.\n   * @type {string}\n   */\n  this.responseBuffer = '';\n\n  /**\n   * Whether or not the response body has arrived.\n   * @type {boolean}\n   */\n  this.responseArrivedForFetch = false;\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WebChannel = goog.net.WebChannel;\nconst Channel = goog.labs.net.webChannel.Channel;\nconst ChannelRequest = goog.labs.net.webChannel.ChannelRequest;\nconst FetchResponseState = goog.labs.net.webChannel.FetchResponseState;\nconst requestStats = goog.labs.net.webChannel.requestStats;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\nconst environment = goog.labs.net.webChannel.environment;\n\n/**\n * Default timeout in MS for a request. The server must return data within this\n * time limit for the request to not timeout.\n * @private {number}\n */\nChannelRequest.TIMEOUT_MS_ = 45 * 1000;\n\n\n/**\n * Enum for channel requests type\n * @enum {number}\n * @private\n */\nChannelRequest.Type_ = {\n  /**\n   * XMLHTTP requests.\n   */\n  XML_HTTP: 1,\n\n  /**\n   * IMG requests.\n   */\n  CLOSE_REQUEST: 2\n};\n\n\n/**\n * Enum type for identifying an error.\n * @enum {number}\n */\nChannelRequest.Error = {\n  /**\n   * Errors due to a non-200 status code.\n   */\n  STATUS: 0,\n\n  /**\n   * Errors due to no data being returned.\n   */\n  NO_DATA: 1,\n\n  /**\n   * Errors due to a timeout.\n   */\n  TIMEOUT: 2,\n\n  /**\n   * Errors due to the server returning an unknown.\n   */\n  UNKNOWN_SESSION_ID: 3,\n\n  /**\n   * Errors due to bad data being received.\n   */\n  BAD_DATA: 4,\n\n  /**\n   * Errors due to the handler throwing an exception.\n   */\n  HANDLER_EXCEPTION: 5,\n\n  /**\n   * The browser declared itself offline during the request.\n   */\n  BROWSER_OFFLINE: 6\n};\n\n\n/**\n * Returns a useful error string for debugging based on the specified error\n * code.\n * @param {?ChannelRequest.Error} errorCode The error code.\n * @param {number} statusCode The HTTP status code.\n * @return {string} The error string for the given code combination.\n */\nChannelRequest.errorStringFromCode = function(errorCode, statusCode) {\n  'use strict';\n  switch (errorCode) {\n    case ChannelRequest.Error.STATUS:\n      return 'Non-200 return code (' + statusCode + ')';\n    case ChannelRequest.Error.NO_DATA:\n      return 'XMLHTTP failure (no data)';\n    case ChannelRequest.Error.TIMEOUT:\n      return 'HttpConnection timeout';\n    default:\n      return 'Unknown error';\n  }\n};\n\n\n/**\n * Sentinel value used to indicate an invalid chunk in a multi-chunk response.\n * @private {!Object}\n */\nChannelRequest.INVALID_CHUNK_ = {};\n\n\n/**\n * Sentinel value used to indicate an incomplete chunk in a multi-chunk\n * response.\n * @private {!Object}\n */\nChannelRequest.INCOMPLETE_CHUNK_ = {};\n\n\n/**\n * Returns whether XHR streaming is supported on this browser.\n *\n * @return {boolean} Whether XHR streaming is supported.\n * @see http://code.google.com/p/closure-library/issues/detail?id=346\n */\nChannelRequest.supportsXhrStreaming = function() {\n  'use strict';\n  return !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(10);\n};\n\n\n/**\n * Sets extra HTTP headers to add to all the requests sent to the server.\n *\n * @param {Object} extraHeaders The HTTP headers.\n */\nChannelRequest.prototype.setExtraHeaders = function(extraHeaders) {\n  'use strict';\n  this.extraHeaders_ = extraHeaders;\n};\n\n\n/**\n * Overrides the default HTTP method.\n *\n * @param {string} verb The HTTP method\n */\nChannelRequest.prototype.setVerb = function(verb) {\n  'use strict';\n  this.verb_ = verb;\n};\n\n\n/**\n * Sets the timeout for a request\n *\n * @param {number} timeout   The timeout in MS for when we fail the request.\n */\nChannelRequest.prototype.setTimeout = function(timeout) {\n  'use strict';\n  this.timeout_ = timeout;\n};\n\n\n/**\n * Sets the throttle for handling onreadystatechange events for the request.\n *\n * @param {number} throttle The throttle in ms.  A value of zero indicates\n *     no throttle.\n */\nChannelRequest.prototype.setReadyStateChangeThrottle = function(throttle) {\n  'use strict';\n  this.readyStateChangeThrottleMs_ = throttle;\n};\n\n\n/**\n * Sets the pending messages that this request is handling.\n *\n * @param {!Array<goog.labs.net.webChannel.Wire.QueuedMap>} pendingMessages\n *     The pending messages for this request.\n */\nChannelRequest.prototype.setPendingMessages = function(pendingMessages) {\n  'use strict';\n  this.pendingMessages_ = pendingMessages;\n};\n\n\n/**\n * Gets the pending messages that this request is handling, in case of a retry.\n *\n * @return {!Array<goog.labs.net.webChannel.Wire.QueuedMap>} The pending\n *     messages for this request.\n */\nChannelRequest.prototype.getPendingMessages = function() {\n  'use strict';\n  return this.pendingMessages_;\n};\n\n\n/**\n * Uses XMLHTTP to send an HTTP POST to the server.\n *\n * @param {goog.Uri} uri  The uri of the request.\n * @param {?string} postData  The data for the post body.\n * @param {boolean} decodeChunks  Whether to the result is expected to be\n *     encoded for chunking and thus requires decoding.\n */\nChannelRequest.prototype.xmlHttpPost = function(uri, postData, decodeChunks) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.XML_HTTP;\n  this.baseUri_ = uri.clone().makeUnique();\n  this.postData_ = postData;\n  this.decodeChunks_ = decodeChunks;\n  this.sendXmlHttp_(null /* hostPrefix */);\n};\n\n\n/**\n * Uses XMLHTTP to send an HTTP GET to the server.\n *\n * @param {goog.Uri} uri  The uri of the request.\n * @param {boolean} decodeChunks  Whether to the result is expected to be\n *     encoded for chunking and thus requires decoding.\n * @param {?string} hostPrefix  The host prefix, if we might be using a\n *     secondary domain.  Note that it should also be in the URL, adding this\n *     won't cause it to be added to the URL.\n */\nChannelRequest.prototype.xmlHttpGet = function(uri, decodeChunks, hostPrefix) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.XML_HTTP;\n  this.baseUri_ = uri.clone().makeUnique();\n  this.postData_ = null;\n  this.decodeChunks_ = decodeChunks;\n\n  this.sendXmlHttp_(hostPrefix);\n};\n\n\n/**\n * Sends a request via XMLHTTP according to the current state of the request\n * object.\n *\n * @param {?string} hostPrefix The host prefix, if we might be using a secondary\n *     domain.\n * @private\n */\nChannelRequest.prototype.sendXmlHttp_ = function(hostPrefix) {\n  'use strict';\n  this.requestStartTime_ = Date.now();\n  this.ensureWatchDogTimer_();\n\n  // clone the base URI to create the request URI. The request uri has the\n  // attempt number as a parameter which helps in debugging.\n  this.requestUri_ = this.baseUri_.clone();\n  this.requestUri_.setParameterValues('t', this.retryId_);\n\n  // send the request either as a POST or GET\n  this.xmlHttpChunkStart_ = 0;\n  const useSecondaryDomains = this.channel_.shouldUseSecondaryDomains();\n  this.fetchResponseState_ = new FetchResponseState();\n  // If the request is a GET request, start a backchannel to transfer streaming\n  // data. Note that WebChannel GET request can also be used for closing the\n  // channel as in method ChannelRequest#sendCloseRequest.\n  // The second parameter of Channel#createXhrIo is JS only.\n  this.xmlHttp_ = this.channel_.createXhrIo(\n      useSecondaryDomains ? hostPrefix : null, !this.postData_);\n\n  if (this.readyStateChangeThrottleMs_ > 0) {\n    this.readyStateChangeThrottle_ = new goog.async.Throttle(\n        goog.bind(this.xmlHttpHandler_, this, this.xmlHttp_),\n        this.readyStateChangeThrottleMs_);\n  }\n\n  this.eventHandler_.listen(\n      this.xmlHttp_, goog.net.EventType.READY_STATE_CHANGE,\n      this.readyStateChangeHandler_);\n\n  const headers =\n      this.extraHeaders_ ? goog.object.clone(this.extraHeaders_) : {};\n  if (this.postData_) {\n    if (!this.verb_) {\n      this.verb_ = 'POST';\n    }\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    this.xmlHttp_.send(this.requestUri_, this.verb_, this.postData_, headers);\n  } else {\n    this.verb_ = 'GET';\n    this.xmlHttp_.send(this.requestUri_, this.verb_, null, headers);\n  }\n  requestStats.notifyServerReachabilityEvent(\n      requestStats.ServerReachability.REQUEST_MADE);\n  this.channelDebug_.xmlHttpChannelRequest(\n      this.verb_, this.requestUri_, this.rid_, this.retryId_, this.postData_);\n};\n\n\n/**\n * Handles a readystatechange event.\n * @param {goog.events.Event} evt The event.\n * @private\n */\nChannelRequest.prototype.readyStateChangeHandler_ = function(evt) {\n  'use strict';\n  const xhr = /** @type {goog.net.XhrIo} */ (evt.target);\n  const throttle = this.readyStateChangeThrottle_;\n  if (throttle &&\n      xhr.getReadyState() == goog.net.XmlHttp.ReadyState.INTERACTIVE) {\n    // Only throttle in the partial data case.\n    this.channelDebug_.debug('Throttling readystatechange.');\n    throttle.fire();\n  } else {\n    // If we haven't throttled, just handle response directly.\n    this.xmlHttpHandler_(xhr);\n  }\n};\n\n\n/**\n * XmlHttp handler\n * @param {goog.net.XhrIo} xmlhttp The XhrIo object for the current request.\n * @private\n */\nChannelRequest.prototype.xmlHttpHandler_ = function(xmlhttp) {\n  'use strict';\n  requestStats.onStartExecution();\n\n  try {\n    if (xmlhttp == this.xmlHttp_) {\n      this.onXmlHttpReadyStateChanged_();\n    } else {\n      this.channelDebug_.warning(\n          'Called back with an ' +\n          'unexpected xmlhttp');\n    }\n  } catch (ex) {\n    this.channelDebug_.debug('Failed call to OnXmlHttpReadyStateChanged_');\n    if (this.hasResponseBody_()) {\n      const channelRequest = this;\n      this.channelDebug_.dumpException(ex, function() {\n        'use strict';\n        return 'ResponseText: ' + channelRequest.xmlHttp_.getResponseText();\n      });\n    } else {\n      this.channelDebug_.dumpException(ex, 'No response text');\n    }\n  } finally {\n    requestStats.onEndExecution();\n  }\n};\n\n\n/**\n * Called by the readystate handler for XMLHTTP requests.\n *\n * @private\n */\nChannelRequest.prototype.onXmlHttpReadyStateChanged_ = function() {\n  'use strict';\n  const readyState = this.xmlHttp_.getReadyState();\n  const errorCode = this.xmlHttp_.getLastErrorCode();\n  const statusCode = this.xmlHttp_.getStatus();\n\n  // we get partial results in browsers that support ready state interactive.\n  // We also make sure that getResponseText is not null in interactive mode\n  // before we continue.\n  if (readyState < goog.net.XmlHttp.ReadyState.INTERACTIVE ||\n      (readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE &&\n       !environment.isPollingRequired() &&  // otherwise, go on to startPolling\n       !this.hasResponseBody_())) {\n    return;  // not yet ready\n  }\n\n  // Dispatch any appropriate network events.\n  if (!this.cancelled_ && readyState == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      errorCode != goog.net.ErrorCode.ABORT) {\n    // Pretty conservative, these are the only known scenarios which we'd\n    // consider indicative of a truly non-functional network connection.\n    if (errorCode == goog.net.ErrorCode.TIMEOUT || statusCode <= 0) {\n      requestStats.notifyServerReachabilityEvent(\n          requestStats.ServerReachability.REQUEST_FAILED);\n    } else {\n      requestStats.notifyServerReachabilityEvent(\n          requestStats.ServerReachability.REQUEST_SUCCEEDED);\n    }\n  }\n\n  // got some data so cancel the watchdog timer\n  this.cancelWatchDogTimer_();\n\n  const status = this.xmlHttp_.getStatus();\n  this.lastStatusCode_ = status;\n  const responseText = this.decodeXmlHttpResponse_();\n\n  if (!this.hasResponseBody_()) {\n    const channelRequest = this;\n    this.channelDebug_.debug(function() {\n      'use strict';\n      return 'No response text for uri ' + channelRequest.requestUri_ +\n          ' status ' + status;\n    });\n  }\n  this.successful_ = (status == 200);\n\n  this.channelDebug_.xmlHttpChannelResponseMetaData(\n      /** @type {string} */ (this.verb_), this.requestUri_, this.rid_,\n      this.retryId_, readyState, status);\n\n  if (!this.successful_) {\n    this.errorResponseHeaders_ = this.xmlHttp_.getResponseHeaders();\n    if (status == 400 && responseText.indexOf('Unknown SID') > 0) {\n      // the server error string will include 'Unknown SID' which indicates the\n      // server doesn't know about the session (maybe it got restarted, maybe\n      // the user got moved to another server, etc.,). Handlers can special\n      // case this error\n      this.lastError_ = ChannelRequest.Error.UNKNOWN_SESSION_ID;\n      requestStats.notifyStatEvent(\n          requestStats.Stat.REQUEST_UNKNOWN_SESSION_ID);\n      this.channelDebug_.warning('XMLHTTP Unknown SID (' + this.rid_ + ')');\n    } else {\n      this.lastError_ = ChannelRequest.Error.STATUS;\n      requestStats.notifyStatEvent(requestStats.Stat.REQUEST_BAD_STATUS);\n      this.channelDebug_.warning(\n          'XMLHTTP Bad status ' + status + ' (' + this.rid_ + ')');\n    }\n    this.cleanup_();\n    this.dispatchFailure_();\n    return;\n  }\n\n  if (this.shouldCheckInitialResponse_()) {\n    const initialResponse = this.getInitialResponse_();\n    if (initialResponse) {\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, initialResponse,\n          'Initial handshake response via ' +\n              WebChannel.X_HTTP_INITIAL_RESPONSE);\n      this.initialResponseDecoded_ = true;\n      this.safeOnRequestData_(initialResponse);\n    } else {\n      this.successful_ = false;\n      this.lastError_ = ChannelRequest.Error.UNKNOWN_SESSION_ID;  // fail-fast\n      requestStats.notifyStatEvent(\n          requestStats.Stat.REQUEST_UNKNOWN_SESSION_ID);\n      this.channelDebug_.warning(\n          'XMLHTTP Missing X_HTTP_INITIAL_RESPONSE' +\n          ' (' + this.rid_ + ')');\n      this.cleanup_();\n      this.dispatchFailure_();\n      return;\n    }\n  }\n\n  if (this.decodeChunks_) {\n    this.decodeNextChunks_(readyState, responseText);\n    if (environment.isPollingRequired() && this.successful_ &&\n        readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE) {\n      this.startPolling_();\n    }\n  } else {\n    this.channelDebug_.xmlHttpChannelResponseText(\n        this.rid_, responseText, null);\n    this.safeOnRequestData_(responseText);\n  }\n\n  if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n    this.cleanup_();\n  }\n\n  if (!this.successful_) {\n    return;\n  }\n\n  if (!this.cancelled_) {\n    if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      this.channel_.onRequestComplete(this);\n    } else {\n      // The default is false, the result from this callback shouldn't carry\n      // over to the next callback, otherwise the request looks successful if\n      // the watchdog timer gets called\n      this.successful_ = false;\n      this.ensureWatchDogTimer_();\n    }\n  }\n};\n\n\n/**\n * Whether we need check the initial-response header that is sent during the\n * fast handshake.\n *\n * @return {boolean} true if the initial-response header is yet to be processed.\n * @private\n */\nChannelRequest.prototype.shouldCheckInitialResponse_ = function() {\n  'use strict';\n  return this.decodeInitialResponse_ && !this.initialResponseDecoded_;\n};\n\n\n/**\n * Queries the initial response header that is sent during the handshake.\n *\n * @return {?string} The non-empty header value or null.\n * @private\n */\nChannelRequest.prototype.getInitialResponse_ = function() {\n  'use strict';\n  if (this.xmlHttp_) {\n    const value = this.xmlHttp_.getStreamingResponseHeader(\n        WebChannel.X_HTTP_INITIAL_RESPONSE);\n    if (value && !goog.string.isEmptyOrWhitespace(value)) {\n      return value;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Check if the initial response header has been handled.\n *\n * @return {boolean} true if X_HTTP_INITIAL_RESPONSE has been handled.\n */\nChannelRequest.prototype.isInitialResponseDecoded = function() {\n  'use strict';\n  return this.initialResponseDecoded_;\n};\n\n\n/**\n * Decodes X_HTTP_INITIAL_RESPONSE if present.\n */\nChannelRequest.prototype.setDecodeInitialResponse = function() {\n  'use strict';\n  this.decodeInitialResponse_ = true;\n};\n\n\n\n/**\n * Decodes the responses from XhrIo object.\n * @returns {string} responseText\n * @private\n */\nChannelRequest.prototype.decodeXmlHttpResponse_ = function() {\n  'use strict';\n  if (!this.useFetchStreamsForResponse_()) {\n    return this.xmlHttp_.getResponseText();\n  }\n  const responseChunks =\n      /** @type {!Array<!Uint8Array>} */ (this.xmlHttp_.getResponse());\n  let responseText = '';\n  const responseLength = responseChunks.length;\n  const requestCompleted =\n      this.xmlHttp_.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n  if (!this.fetchResponseState_.textDecoder) {\n    if (typeof TextDecoder === 'undefined') {\n      this.channelDebug_.severe(\n          'TextDecoder is not supported by this browser.');\n      this.cleanup_();\n      this.dispatchFailure_();\n      return '';\n    }\n    this.fetchResponseState_.textDecoder = new goog.global.TextDecoder();\n  }\n  for (let i = 0; i < responseLength; i++) {\n    this.fetchResponseState_.responseArrivedForFetch = true;\n    const isLastChunk = requestCompleted && i == responseLength - 1;\n    responseText += this.fetchResponseState_.textDecoder.decode(\n        responseChunks[i], {stream: isLastChunk});\n  }\n  responseChunks.splice(0, responseLength);\n  this.fetchResponseState_.responseBuffer += responseText;\n  this.xmlHttpChunkStart_ = 0;\n  return this.fetchResponseState_.responseBuffer;\n};\n\n\n/**\n * Whether or not the response has response body.\n * @private\n * @returns {boolean}\n */\nChannelRequest.prototype.hasResponseBody_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return false;\n  }\n  if (this.fetchResponseState_.responseArrivedForFetch) {\n    return true;\n  }\n  return !(!this.xmlHttp_.getResponseText() && !this.xmlHttp_.getResponse());\n};\n\n/**\n * Whether or not the response body is streamed.\n * @private\n * @returns {boolean}\n */\nChannelRequest.prototype.useFetchStreamsForResponse_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return false;\n  }\n  return (\n      this.verb_ == 'GET' && this.type_ != ChannelRequest.Type_.CLOSE_REQUEST &&\n      this.channel_.usesFetchStreams());\n};\n\n\n/**\n * Resets the response buffer if the saved chunk has been processed.\n * @private\n * @param {string|!Object|undefined} chunkText\n */\nChannelRequest.prototype.maybeResetBuffer_ = function(chunkText) {\n  'use strict';\n  if (this.useFetchStreamsForResponse_() &&\n      chunkText != ChannelRequest.INCOMPLETE_CHUNK_ &&\n      chunkText != ChannelRequest.INVALID_CHUNK_) {\n    this.fetchResponseState_.responseBuffer = '';\n    this.xmlHttpChunkStart_ = 0;\n  }\n};\n\n\n/**\n * Decodes the next set of available chunks in the response.\n * @param {number} readyState The value of readyState.\n * @param {string} responseText The value of responseText.\n * @private\n */\nChannelRequest.prototype.decodeNextChunks_ = function(\n    readyState, responseText) {\n  'use strict';\n  let decodeNextChunksSuccessful = true;\n\n  let chunkText;\n  while (!this.cancelled_ && this.xmlHttpChunkStart_ < responseText.length) {\n    chunkText = this.getNextChunk_(responseText);\n    if (chunkText == ChannelRequest.INCOMPLETE_CHUNK_) {\n      if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n        // should have consumed entire response when the request is done\n        this.lastError_ = ChannelRequest.Error.BAD_DATA;\n        requestStats.notifyStatEvent(requestStats.Stat.REQUEST_INCOMPLETE_DATA);\n        decodeNextChunksSuccessful = false;\n      }\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, null, '[Incomplete Response]');\n      break;\n    } else if (chunkText == ChannelRequest.INVALID_CHUNK_) {\n      this.lastError_ = ChannelRequest.Error.BAD_DATA;\n      requestStats.notifyStatEvent(requestStats.Stat.REQUEST_BAD_DATA);\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, responseText, '[Invalid Chunk]');\n      decodeNextChunksSuccessful = false;\n      break;\n    } else {\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, /** @type {string} */ (chunkText), null);\n      this.safeOnRequestData_(/** @type {string} */ (chunkText));\n    }\n  }\n\n  this.maybeResetBuffer_(chunkText);\n\n  if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      responseText.length == 0 &&\n      !this.fetchResponseState_.responseArrivedForFetch) {\n    // also an error if we didn't get any response\n    this.lastError_ = ChannelRequest.Error.NO_DATA;\n    requestStats.notifyStatEvent(requestStats.Stat.REQUEST_NO_DATA);\n    decodeNextChunksSuccessful = false;\n  }\n\n  this.successful_ = this.successful_ && decodeNextChunksSuccessful;\n\n  if (!decodeNextChunksSuccessful) {\n    // malformed response - we make this trigger retry logic\n    this.channelDebug_.xmlHttpChannelResponseText(\n        this.rid_, responseText, '[Invalid Chunked Response]');\n    this.cleanup_();\n    this.dispatchFailure_();\n  } else {\n    if (responseText.length > 0 && !this.firstByteReceived_) {\n      this.firstByteReceived_ = true;\n      this.channel_.onFirstByteReceived(this, responseText);\n    }\n  }\n};\n\n\n/**\n * Polls the response for new data.\n * @private\n */\nChannelRequest.prototype.pollResponse_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return;  // already closed\n  }\n  const readyState = this.xmlHttp_.getReadyState();\n  const responseText = this.xmlHttp_.getResponseText();\n  if (this.xmlHttpChunkStart_ < responseText.length) {\n    this.cancelWatchDogTimer_();\n    this.decodeNextChunks_(readyState, responseText);\n    if (this.successful_ &&\n        readyState != goog.net.XmlHttp.ReadyState.COMPLETE) {\n      this.ensureWatchDogTimer_();\n    }\n  }\n};\n\n\n/**\n * Starts a polling interval for changes to responseText of the\n * XMLHttpRequest, for browsers that don't fire onreadystatechange\n * as data comes in incrementally.  This timer is disabled in\n * cleanup_().\n * @private\n */\nChannelRequest.prototype.startPolling_ = function() {\n  'use strict';\n  this.eventHandler_.listen(\n      this.pollingTimer_, goog.Timer.TICK, this.pollResponse_);\n  this.pollingTimer_.start();\n};\n\n\n/**\n * Returns the next chunk of a chunk-encoded response. This is not standard\n * HTTP chunked encoding because browsers don't expose the chunk boundaries to\n * the application through XMLHTTP. So we have an additional chunk encoding at\n * the application level that lets us tell where the beginning and end of\n * individual responses are so that we can only try to eval a complete JS array.\n *\n * The encoding is the size of the chunk encoded as a decimal string followed\n * by a newline followed by the data.\n *\n * @param {string} responseText The response text from the XMLHTTP response.\n * @return {string|!Object} The next chunk string or a sentinel object\n *                         indicating a special condition.\n * @private\n */\nChannelRequest.prototype.getNextChunk_ = function(responseText) {\n  'use strict';\n  const sizeStartIndex = this.xmlHttpChunkStart_;\n  const sizeEndIndex = responseText.indexOf('\\n', sizeStartIndex);\n  if (sizeEndIndex == -1) {\n    return ChannelRequest.INCOMPLETE_CHUNK_;\n  }\n\n  const sizeAsString = responseText.substring(sizeStartIndex, sizeEndIndex);\n  const size = Number(sizeAsString);\n  if (isNaN(size)) {\n    return ChannelRequest.INVALID_CHUNK_;\n  }\n\n  const chunkStartIndex = sizeEndIndex + 1;\n  if (chunkStartIndex + size > responseText.length) {\n    return ChannelRequest.INCOMPLETE_CHUNK_;\n  }\n\n  const chunkText = responseText.slice(chunkStartIndex, chunkStartIndex + size);\n  this.xmlHttpChunkStart_ = chunkStartIndex + size;\n  return chunkText;\n};\n\n\n/**\n * Uses an IMG tag or navigator.sendBeacon to send an HTTP get to the server.\n *\n * This is only currently used to terminate the connection, as an IMG tag is\n * the most reliable way to send something to the server while the page\n * is getting torn down.\n *\n * Navigator.sendBeacon is available on Chrome and Firefox as a formal\n * solution to ensure delivery without blocking window close. See\n * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon\n *\n * For Chrome Apps, sendBeacon is always necessary due to Content Security\n * Policy (CSP) violation of using an IMG tag.\n *\n * For react-native, we use xhr to send the actual close request, and assume\n * there is no page-close issue with react-native.\n *\n * @param {goog.Uri} uri The uri to send a request to.\n */\nChannelRequest.prototype.sendCloseRequest = function(uri) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.CLOSE_REQUEST;\n  this.baseUri_ = uri.clone().makeUnique();\n\n  let requestSent = false;\n\n  if (goog.global.navigator && goog.global.navigator.sendBeacon) {\n    try {\n      // empty string body to avoid 413 error on chrome < 41\n      requestSent =\n          goog.global.navigator.sendBeacon(this.baseUri_.toString(), '');\n    } catch {\n      // Intentionally left empty; sendBeacon might throw TypeError in certain\n      // unexpected cases.\n    }\n  }\n\n  if (!requestSent && goog.global.Image) {\n    const eltImg = new Image();\n    eltImg.src = this.baseUri_;\n    requestSent = true;\n  }\n\n  if (!requestSent) {\n    // no handler is set to match the sendBeacon/Image behavior\n    this.xmlHttp_ = this.channel_.createXhrIo(null);\n    this.xmlHttp_.send(this.baseUri_);\n  }\n\n  this.requestStartTime_ = Date.now();\n  this.ensureWatchDogTimer_();\n};\n\n\n/**\n * Cancels the request no matter what the underlying transport is.\n */\nChannelRequest.prototype.cancel = function() {\n  'use strict';\n  this.cancelled_ = true;\n  this.cleanup_();\n};\n\n\n/**\n * Resets the timeout.\n *\n * @param {number=} opt_timeout The new timeout\n */\nChannelRequest.prototype.resetTimeout = function(opt_timeout) {\n  'use strict';\n  if (opt_timeout) {\n    this.setTimeout(opt_timeout);\n  }\n  // restart only if a timer is currently set\n  if (this.watchDogTimerId_) {\n    this.cancelWatchDogTimer_();\n    this.ensureWatchDogTimer_();\n  }\n};\n\n\n/**\n * Ensures that there is watchdog timeout which is used to ensure that\n * the connection completes in time.\n *\n * @private\n */\nChannelRequest.prototype.ensureWatchDogTimer_ = function() {\n  'use strict';\n  this.watchDogTimeoutTime_ = Date.now() + this.timeout_;\n  this.startWatchDogTimer_(this.timeout_);\n};\n\n\n/**\n * Starts the watchdog timer which is used to ensure that the connection\n * completes in time.\n * @param {number} time The number of milliseconds to wait.\n * @private\n */\nChannelRequest.prototype.startWatchDogTimer_ = function(time) {\n  'use strict';\n  if (this.watchDogTimerId_ != null) {\n    // assertion\n    throw new Error('WatchDog timer not null');\n  }\n  this.watchDogTimerId_ =\n      requestStats.setTimeout(goog.bind(this.onWatchDogTimeout_, this), time);\n};\n\n\n/**\n * Cancels the watchdog timer if it has been started.\n *\n * @private\n */\nChannelRequest.prototype.cancelWatchDogTimer_ = function() {\n  'use strict';\n  if (this.watchDogTimerId_) {\n    goog.global.clearTimeout(this.watchDogTimerId_);\n    this.watchDogTimerId_ = null;\n  }\n};\n\n\n/**\n * Called when the watchdog timer is triggered. It also handles a case where it\n * is called too early which we suspect may be happening sometimes\n * (not sure why)\n *\n * @private\n */\nChannelRequest.prototype.onWatchDogTimeout_ = function() {\n  'use strict';\n  this.watchDogTimerId_ = null;\n  const now = Date.now();\n  goog.asserts.assert(\n      this.watchDogTimeoutTime_, 'WatchDog timeout time missing?');\n  if (now - this.watchDogTimeoutTime_ >= 0) {\n    this.handleTimeout_();\n  } else {\n    // got called too early for some reason\n    this.channelDebug_.warning('WatchDog timer called too early');\n    this.startWatchDogTimer_(this.watchDogTimeoutTime_ - now);\n  }\n};\n\n\n/**\n * Called when the request has actually timed out. Will cleanup and notify the\n * channel of the failure.\n *\n * @private\n */\nChannelRequest.prototype.handleTimeout_ = function() {\n  'use strict';\n  if (this.successful_) {\n    // Should never happen.\n    this.channelDebug_.severe(\n        'Received watchdog timeout even though request loaded successfully');\n  }\n\n  this.channelDebug_.timeoutResponse(this.requestUri_);\n\n  // IMG or SendBeacon requests never notice if they were successful,\n  // and always 'time out'. This fact says nothing about reachability.\n  if (this.type_ != ChannelRequest.Type_.CLOSE_REQUEST) {\n    requestStats.notifyServerReachabilityEvent(\n        requestStats.ServerReachability.REQUEST_FAILED);\n    requestStats.notifyStatEvent(requestStats.Stat.REQUEST_TIMEOUT);\n  }\n\n  this.cleanup_();\n\n  // Set error and dispatch failure.\n  // This is called for CLOSE_REQUEST too to ensure channel_.onRequestComplete.\n  this.lastError_ = ChannelRequest.Error.TIMEOUT;\n  this.dispatchFailure_();\n};\n\n\n/**\n * Notifies the channel that this request failed.\n * @private\n */\nChannelRequest.prototype.dispatchFailure_ = function() {\n  'use strict';\n  if (this.channel_.isClosed() || this.cancelled_) {\n    return;\n  }\n\n  this.channel_.onRequestComplete(this);\n};\n\n\n/**\n * Cleans up the objects used to make the request. This function is\n * idempotent.\n *\n * @private\n */\nChannelRequest.prototype.cleanup_ = function() {\n  'use strict';\n  this.cancelWatchDogTimer_();\n\n  goog.dispose(this.readyStateChangeThrottle_);\n  this.readyStateChangeThrottle_ = null;\n\n  // Stop the polling timer, if necessary.\n  this.pollingTimer_.stop();\n\n  // Unhook all event handlers.\n  this.eventHandler_.removeAll();\n\n  if (this.xmlHttp_) {\n    // clear out this.xmlHttp_ before aborting so we handle getting reentered\n    // inside abort\n    const xmlhttp = this.xmlHttp_;\n    this.xmlHttp_ = null;\n    xmlhttp.abort();\n    xmlhttp.dispose();\n  }\n};\n\n\n/**\n * Indicates whether the request was successful. Only valid after the handler\n * is called to indicate completion of the request.\n *\n * @return {boolean} True if the request succeeded.\n */\nChannelRequest.prototype.getSuccess = function() {\n  'use strict';\n  return this.successful_;\n};\n\n\n/**\n * If the request was not successful, returns the reason.\n *\n * @return {?ChannelRequest.Error}  The last error.\n */\nChannelRequest.prototype.getLastError = function() {\n  'use strict';\n  return this.lastError_;\n};\n\n\n/**\n * @return {!Object<string, string>|undefined} Response headers received\n *     along with the non-200 status, as a key-value map.\n */\nChannelRequest.prototype.getErrorResponseHeaders = function() {\n  'use strict';\n  return this.errorResponseHeaders_;\n};\n\n\n/**\n * Returns the status code of the last request.\n *\n * @return {number} The status code of the last request.\n */\nChannelRequest.prototype.getLastStatusCode = function() {\n  'use strict';\n  return this.lastStatusCode_;\n};\n\n\n/**\n * Returns the session id for this channel.\n *\n * @return {string|undefined} The session ID.\n */\nChannelRequest.prototype.getSessionId = function() {\n  'use strict';\n  return this.sid_;\n};\n\n\n/**\n * Returns the request id for this request. Each request has a unique request\n * id and the request IDs are a sequential increasing count.\n *\n * @return {string|number|undefined} The request ID.\n */\nChannelRequest.prototype.getRequestId = function() {\n  'use strict';\n  return this.rid_;\n};\n\n\n/**\n * Returns the data for a post, if this request is a post.\n *\n * @return {?string} The POST data provided by the request initiator.\n */\nChannelRequest.prototype.getPostData = function() {\n  'use strict';\n  return this.postData_;\n};\n\n\n/**\n * Returns the XhrIo request object.\n *\n * @return {?goog.net.XhrIo} Any XhrIo request created for this object.\n */\nChannelRequest.prototype.getXhr = function() {\n  'use strict';\n  return this.xmlHttp_;\n};\n\n\n/**\n * Returns the time that the request started, if it has started.\n *\n * @return {?number} The time the request started, as returned by Date.now().\n */\nChannelRequest.prototype.getRequestStartTime = function() {\n  'use strict';\n  return this.requestStartTime_;\n};\n\n\n/**\n * Helper to call the callback's onRequestData, which catches any\n * exception.\n * @param {string} data The request data.\n * @private\n */\nChannelRequest.prototype.safeOnRequestData_ = function(data) {\n  'use strict';\n  try {\n    this.channel_.onRequestData(this, data);\n    const stats = requestStats.ServerReachability;\n    requestStats.notifyServerReachabilityEvent(stats.BACK_CHANNEL_ACTIVITY);\n  } catch (e) {\n    // Dump debug info, but keep going without closing the channel.\n    this.channelDebug_.dumpException(e, 'Error in httprequest callback');\n  }\n};\n\n\n/**\n * Convenience factory method.\n *\n * @param {Channel} channel The channel object that owns this request.\n * @param {WebChannelDebug} channelDebug A WebChannelDebug to use for logging.\n * @param {string=} opt_sessionId  The session id for the channel.\n * @param {string|number=} opt_requestId  The request id for this request.\n * @param {number=} opt_retryId  The retry id for this request.\n * @return {!ChannelRequest} The created channel request.\n */\nChannelRequest.createChannelRequest = function(\n    channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {\n  'use strict';\n  return new ChannelRequest(\n      channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId);\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A single module to define user-agent specific environment\n * details.\n *\n */\n\ngoog.module('goog.labs.net.webChannel.environment');\n\ngoog.module.declareLegacyNamespace();\n\nvar userAgent = goog.require('goog.userAgent');\n\n\n/**\n * The default polling interval in millis for Edge.\n *\n * Currently on edge, new-chunk events may be not be fired (at all) if a new\n * chunk arrives within 50ms following the previous chunk. This may be fixed\n * in future, which requires changes to the whatwg spec too.\n *\n * @private @const {number}\n */\nvar EDGE_POLLING_INTERVAL_ = 125;\n\n\n/**\n * History:\n *\n * IE11 is still using Trident, the traditional engine for IE.\n * Edge is using EdgeHTML, a fork of Trident. We are seeing the same issue\n * on IE-11 (reported in 2017), so treat IE the same as Edge for now.\n *\n * We used to do polling for Opera (only) with an 250ms interval, because Opera\n * only fires readyState == INTERACTIVE once. Opera switched to WebKit in 2013,\n * and then to Blink (chrome).\n *\n * TODO(user): check the raw UA string to keep polling for old, mobile operas\n * that may still be affected. For old Opera, double the polling interval\n * to 250ms.\n *\n * @return {boolean} True if polling is required with XHR.\n */\nexports.isPollingRequired = function() {\n  return userAgent.EDGE_OR_IE;\n};\n\n\n/**\n * How often to poll (in MS) for changes to responseText in browsers that don't\n * fire onreadystatechange during incremental loading of the response body.\n *\n * @return {number|undefined} The polling interval (MS) for the current U-A;\n * or undefined if polling is not supposed to be enabled.\n */\nexports.getPollingInterval = function() {\n  if (userAgent.EDGE_OR_IE) {\n    return EDGE_POLLING_INTERVAL_;\n  }\n\n  return undefined;\n};\n\n/**\n * Origin trial token for google.com\n *\n * https://developers.chrome.com/origintrials/#/trials\n *\n * http://googlechrome.github.io/OriginTrials/check-token.html\n * Origin: https://google.com:443\n * Matches Subdomains? Yes\n * Matches Third-party? Yes\n * Feature: FetchUploadStreaming\n * Up to Chrome 95 (ends with the rollout of next Chrome release), no later\n * than Nov 9, 2021\n *\n * Token for googleapis.com will be registered after google.com's is deployed.\n *\n */\nconst OT_TOKEN_GOOGLE_COM =\n    'A0eNbltY1nd4MP7XTHXnTxWogDL6mWTdgIIKfKOTJoUHNbFFMZQBoiHHjJ9UK9lgYndWFaxOWR7ld8uUjcWmcwIAAAB/eyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkZldGNoVXBsb2FkU3RyZWFtaW5nIiwiZXhwaXJ5IjoxNjM2NTAyMzk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==';\n\n\n/**\n * Creates ReadableStream to upload\n * @return {!ReadableStream} ReadableStream to upload\n */\nfunction createStream() {\n  const encoder = new goog.global.TextEncoder();\n  return new goog.global.ReadableStream({\n    start: controller => {\n      for (const obj of ['test\\r\\n', 'test\\r\\n']) {\n        controller.enqueue(encoder.encode(obj));\n      }\n      controller.close();\n    }\n  });\n}\n\n/**\n * Detect the user agent is chrome and its version is higher than M90.\n * This code is hard-coded from goog.labs.userAgent.browser to avoid file size\n * increasing.\n * @return {boolean} Whether the above is true.\n */\nfunction isChromeM90OrHigher() {\n  const userAgentStr = function() {\n    const navigator = goog.global.navigator;\n    if (navigator) {\n      const userAgent = navigator.userAgent;\n      if (userAgent) {\n        return userAgent;\n      }\n    }\n    return '';\n  }();\n\n  const matchUserAgent = function(str) {\n    return userAgentStr.indexOf(str) != -1;\n  };\n\n  if (!matchUserAgent('Chrome') || matchUserAgent('Edg')) {\n    return false;\n  }\n\n  const match = /Chrome\\/(\\d+)/.exec(userAgentStr);\n  const chromeVersion = parseInt(match[1], 10);\n  return chromeVersion >= 90;\n}\n\n/**\n * Detect the URL origin is *.google.com.\n * @param {string} url The target URL.\n * @return {boolean} Whether the above is true.\n */\nfunction isUrlGoogle(url) {\n  const match = /\\/\\/([^\\/]+)\\//.exec(url);\n  if (!match) {\n    return false;\n  }\n  const origin = match[1];\n  return origin.endsWith('google.com');\n}\n\n/**\n * The flag to run the origin trials code only once.\n */\nlet isStartOriginTrialsCalled = false;\n\n/**\n * For Fetch/upload OT, make three requests against the server endpoint.\n * POST requests contain only dummy payload.\n *\n * https://developers.chrome.com/origintrials/#/view_trial/3524066708417413121\n *\n * This function is expected to be called from background during the handshake.\n * Exceptions will be logged by the caller.\n *\n * No stats or logs are collected on the client-side. To be disabled once the\n * OT is expired.\n *\n * @param {string} path The base URL path for the requests\n * @param {function(*)} logError A function to execute when exceptions are\n *     caught.\n */\nexports.startOriginTrials = function(path, logError) {\n  if (isStartOriginTrialsCalled) {\n    return;\n  }\n  isStartOriginTrialsCalled = true;\n  // NE: may need check if path has already contains query params?\n\n  // Accept only Chrome M90 or later due to service worker support.\n  if (!isChromeM90OrHigher()) {\n    return;\n  }\n\n  // Accept only only google.com and subdoamins.\n  if (!isUrlGoogle(path)) {\n    return;\n  }\n  // Since 3P OT is not supported yet, we should check the current page matches\n  // the path (absolute one?) to disable this OT for cross-origin calls\n  if (!window || !window.document || !isUrlGoogle(window.document.URL)) {\n    return;\n  }\n\n  // Enable origin trial by injecting OT <meta> tag\n  const tokenElement =\n      /** @type {! HTMLMetaElement} */ (document.createElement('meta'));\n  tokenElement.httpEquiv = 'origin-trial';\n  tokenElement.content = OT_TOKEN_GOOGLE_COM;\n  // appendChild() synchronously enables OT.\n  document.head.appendChild(tokenElement);\n\n  // Check if fetch upload stream is actually enabled.\n  // By the spec, Streaming request doesn't has the Content-Type header:\n  // https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n  // If Chrome doesn't support Streaming, the body stream is converted to a\n  // string \"[object ReadableStream]\" for fallback then it has \"Content-Type:\n  // text/plain;charset=UTF-8\".\n  const supportsRequestStreams = !new Request('', {\n                                    body: new ReadableStream(),\n                                    method: 'POST',\n                                  }).headers.has('Content-Type');\n\n  if (supportsRequestStreams) {\n    logError('OriginTrial unexpected.');\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Base WebChannel implementation.\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WebChannelBase');\n\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.async.run');\ngoog.require('goog.collections.maps');\ngoog.require('goog.json');\ngoog.require('goog.labs.net.webChannel.Channel');\ngoog.require('goog.labs.net.webChannel.ChannelRequest');\ngoog.require('goog.labs.net.webChannel.ConnectionState');\ngoog.require('goog.labs.net.webChannel.ForwardChannelRequestPool');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.labs.net.webChannel.WireV8');\ngoog.require('goog.labs.net.webChannel.environment');\ngoog.require('goog.labs.net.webChannel.netUtils');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.XhrIo');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.require('goog.net.rpc.HttpCors');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.structs');\n\ngoog.scope(function() {\n'use strict';\nconst WebChannel = goog.net.WebChannel;\nconst ChannelRequest = goog.labs.net.webChannel.ChannelRequest;\nconst ConnectionState = goog.labs.net.webChannel.ConnectionState;\nconst ForwardChannelRequestPool =\n    goog.labs.net.webChannel.ForwardChannelRequestPool;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\nconst Wire = goog.labs.net.webChannel.Wire;\nconst WireV8 = goog.labs.net.webChannel.WireV8;\nconst environment = goog.labs.net.webChannel.environment;\nconst netUtils = goog.labs.net.webChannel.netUtils;\nconst requestStats = goog.labs.net.webChannel.requestStats;\n\nconst httpCors = goog.module.get('goog.net.rpc.HttpCors');\n\n/**\n * @define {boolean} If WebChannel should compile with Origin Trial features.\n */\nconst ALLOW_ORIGIN_TRIAL_FEATURES =\n    goog.define('goog.net.webChannel.ALLOW_ORIGIN_TRIAL_FEATURES', false);\n\n/**\n * Gets an internal channel parameter in a type-safe way.\n *\n * @param {string} paramName the key of the parameter to fetch.\n * @param {!T} defaultValue the default value to return\n * @param {!goog.net.WebChannel.Options=} options Configuration for the\n *        WebChannel instance.\n * @return {T}\n * @template T\n */\nfunction getInternalChannelParam(paramName, defaultValue, options) {\n  if (!options || !options.internalChannelParams) {\n    return defaultValue;\n  }\n  return /** @type {T} */ (options.internalChannelParams[paramName]) ||\n      defaultValue;\n}\n\n/**\n * This WebChannel implementation is branched off goog.net.BrowserChannel\n * for now. Ongoing changes to goog.net.BrowserChannel will be back\n * ported to this implementation as needed.\n *\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *        WebChannel instance.\n * @param {number=} opt_clientVersion An application-specific version number\n *        that is sent to the server when connected.\n * @param {!ConnectionState=} opt_conn Previously determined connection\n *        conditions.\n * @constructor\n * @struct\n * @implements {goog.labs.net.webChannel.Channel}\n */\ngoog.labs.net.webChannel.WebChannelBase = function(\n    opt_options, opt_clientVersion, opt_conn) {\n  'use strict';\n  /**\n   * The client library version (capabilities).\n   * @private {number}\n   */\n  this.clientVersion_ = opt_clientVersion || 0;\n\n  /**\n   * The server library version (capabilities).\n   * @private {number}\n   */\n  this.serverVersion_ = 0;\n\n\n  /**\n   * An array of queued maps that need to be sent to the server.\n   * @private {!Array<Wire.QueuedMap>}\n   */\n  this.outgoingMaps_ = [];\n\n  /**\n   * The channel debug used for logging\n   * @private {!WebChannelDebug}\n   */\n  this.channelDebug_ = new WebChannelDebug();\n\n  /**\n   * Connectivity state.\n   * @private {!ConnectionState}\n   */\n  this.connState_ = opt_conn || new ConnectionState();\n\n  /**\n   * Extra HTTP headers to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraHeaders_ = null;\n\n  /**\n   * Extra HTTP headers to add to the init request(s) sent to the server.\n   * @private {?Object}\n   */\n  this.initHeaders_ = null;\n\n  /**\n   * @private {?string} The URL param name to overwrite custom HTTP headers\n   * to bypass CORS preflight.\n   */\n  this.httpHeadersOverwriteParam_ = null;\n\n  /**\n   * Extra parameters to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraParams_ = null;\n\n  /**\n   * Parameter name for the http session id.\n   * @private {?string}\n   */\n  this.httpSessionIdParam_ = null;\n\n  /**\n   * The http session id, to be sent with httpSessionIdParam_ with each\n   * request after the initial handshake.\n   * @private {?string}\n   */\n  this.httpSessionId_ = null;\n\n  /**\n   * The ChannelRequest object for the backchannel.\n   * @private {?ChannelRequest}\n   */\n  this.backChannelRequest_ = null;\n\n  /**\n   * The relative path (in the context of the page hosting the browser channel)\n   * for making requests to the server.\n   * @private {?string}\n   */\n  this.path_ = null;\n\n  /**\n   * The absolute URI for the forwardchannel request.\n   * @private {?goog.Uri}\n   */\n  this.forwardChannelUri_ = null;\n\n  /**\n   * The absolute URI for the backchannel request.\n   * @private {?goog.Uri}\n   */\n  this.backChannelUri_ = null;\n\n  /**\n   * A subdomain prefix for using a subdomain in IE for the backchannel\n   * requests.\n   * @private {?string}\n   */\n  this.hostPrefix_ = null;\n\n  /**\n   * Whether we allow the use of a subdomain in IE for the backchannel requests.\n   * @private {boolean}\n   */\n  this.allowHostPrefix_ = true;\n\n  /**\n   * The next id to use for the RID (request identifier) parameter. This\n   * identifier uniquely identifies the forward channel request.\n   * @private {number}\n   */\n  this.nextRid_ = 0;\n\n  /**\n   * The id to use for the next outgoing map. This identifier uniquely\n   * identifies a sent map.\n   * @private {number}\n   */\n  this.nextMapId_ = 0;\n\n  /**\n   * Whether to fail forward-channel requests after one try or a few tries.\n   * @private {boolean}\n   */\n  this.failFast_ = getInternalChannelParam('failFast', false, opt_options);\n\n  /**\n   * The handler that receive callbacks for state changes and data.\n   * @private {?goog.labs.net.webChannel.WebChannelBase.Handler}\n   */\n  this.handler_ = null;\n\n  /**\n   * Timer identifier for asynchronously making a forward channel request.\n   * This is set to true if the func is scheduled with async.run, which\n   * is equivalent to setTimeout(0).\n   * @private {?number|?boolean}\n   */\n  this.forwardChannelTimerId_ = null;\n\n  /**\n   * Timer identifier for asynchronously making a back channel request.\n   * @private {?number}\n   */\n  this.backChannelTimerId_ = null;\n\n  /**\n   * Timer identifier for the timer that waits for us to retry the backchannel\n   * in the case where it is dead and no longer receiving data.\n   * @private {?number}\n   */\n  this.deadBackChannelTimerId_ = null;\n\n  /**\n   * Whether the client's network conditions can support streamed responses.\n   * @private {?boolean}\n   */\n  this.enableStreaming_ = null;\n\n  /**\n   * Whether streaming mode is allowed. In certain debugging situations, it's\n   * useful to disable this.\n   * @private {boolean}\n   */\n  this.allowStreamingMode_ = true;\n\n  /**\n   * The array identifier of the last array received from the server for the\n   * backchannel request.\n   * @private {number}\n   */\n  this.lastArrayId_ = -1;\n\n  /**\n   * The array id of the last array sent by the server that we know about.\n   * @private {number}\n   */\n  this.lastPostResponseArrayId_ = -1;\n\n  /**\n   * The non-200 status code received that causes the channel to be aborted.\n   * @private {number}\n   */\n  this.errorResponseStatusCode_ = -1;\n\n  /**\n   * The response headers received along with the non-200 status.\n   * @private {!Object<string, string>|undefined}\n   */\n  this.errorResponseHeaders_ = undefined;\n\n  /**\n   * Number of times we have retried the current forward channel request.\n   * @private {number}\n   */\n  this.forwardChannelRetryCount_ = 0;\n\n  /**\n   * Number of times in a row that we have retried the current back channel\n   * request and received no data.\n   * @private {number}\n   */\n  this.backChannelRetryCount_ = 0;\n\n  /**\n   * The attempt id for the current back channel request. Starts at 1 and\n   * increments for each reconnect. The server uses this to log if our\n   * connection is flaky or not.\n   * @private {number}\n   */\n  this.backChannelAttemptId_ = 0;\n\n  /**\n   * The base part of the time before firing next retry request. Default is 5\n   * seconds. Note that a random delay is added (see {@link retryDelaySeedMs_})\n   * for all retries, and linear backoff is applied to the sum for subsequent\n   * retries.\n   * @private {number}\n   */\n  this.baseRetryDelayMs_ =\n      getInternalChannelParam('baseRetryDelayMs', 5 * 1000, opt_options);\n\n  /**\n   * A random time between 0 and this number of MS is added to the\n   * {@link baseRetryDelayMs_}. Default is 10 seconds.\n   * @private {number}\n   */\n  this.retryDelaySeedMs_ =\n      getInternalChannelParam('retryDelaySeedMs', 10 * 1000, opt_options);\n\n  /**\n   * Maximum number of attempts to connect to the server for forward channel\n   * requests. Defaults to 2.\n   * @private {number}\n   */\n  this.forwardChannelMaxRetries_ =\n      getInternalChannelParam('forwardChannelMaxRetries', 2, opt_options);\n\n  /**\n   * The timeout in milliseconds for a forward channel request. Defaults to 20\n   * seconds. Note that part of this timeout can be randomized.\n   * @private {number}\n   */\n  this.forwardChannelRequestTimeoutMs_ = getInternalChannelParam(\n      'forwardChannelRequestTimeoutMs', 20 * 1000, opt_options);\n\n  /**\n   * The custom factory used to create XMLHttpRequest objects.\n   * @private {!goog.net.XmlHttpFactory | undefined}\n   */\n  this.xmlHttpFactory_ =\n      (opt_options && opt_options.xmlHttpFactory) || undefined;\n\n  /**\n   * Whether or not this channel uses WHATWG Fetch/streams.\n   * @private {boolean}\n   */\n  this.usesFetchStreams_ =\n      (opt_options && opt_options.useFetchStreams) || false;\n\n  /**\n   * The timeout in milliseconds for a back channel request. Defaults to using\n   * the timeout configured in ChannelRequest (45s). If server-side\n   * keepaliveInterval is known to the client, set the backchannel request\n   * timeout to 1.5 * keepaliveInterval (ms).\n   *\n   * @private {number|undefined}\n   */\n  this.backChannelRequestTimeoutMs_ = undefined;\n\n  /**\n   * A throttle time in ms for readystatechange events for the backchannel.\n   * Useful for throttling when ready state is INTERACTIVE (partial data).\n   *\n   * This throttle is useful if the server sends large data chunks down the\n   * backchannel.  It prevents examining XHR partial data on every readystate\n   * change event.  This is useful because large chunks can trigger hundreds\n   * of readystatechange events, each of which takes ~5ms or so to handle,\n   * in turn making the UI unresponsive for a significant period.\n   *\n   * If set to zero no throttle is used.\n   * @private {number}\n   */\n  this.readyStateChangeThrottleMs_ = 0;\n\n  /**\n   * Whether cross origin requests are supported for the channel.\n   *\n   * See {@link goog.net.XhrIo#setWithCredentials}.\n   * @private {boolean}\n   */\n  this.supportsCrossDomainXhrs_ =\n      (opt_options && opt_options.supportsCrossDomainXhr) || false;\n\n  /**\n   * The current session id.\n   * @private {string}\n   */\n  this.sid_ = '';\n\n  /**\n   * The current ChannelRequest pool for the forward channel.\n   * @private {!ForwardChannelRequestPool}\n   */\n  this.forwardChannelRequestPool_ = new ForwardChannelRequestPool(\n      opt_options && opt_options.concurrentRequestLimit);\n\n  /**\n   * The V8 codec.\n   * @private {!WireV8}\n   */\n  this.wireCodec_ = new WireV8();\n\n  /**\n   * Whether to turn on the fast handshake behavior.\n   *\n   * @private {boolean}\n   */\n  this.fastHandshake_ = (opt_options && opt_options.fastHandshake) || false;\n\n  /**\n   * Whether to encode initMessageHeaders in the body.\n   *\n   * @private {boolean}\n   */\n  this.encodeInitMessageHeaders_ =\n      (opt_options && opt_options.encodeInitMessageHeaders) || false;\n\n  if (this.fastHandshake_ && this.encodeInitMessageHeaders_) {\n    this.channelDebug_.warning(\n        'Ignore encodeInitMessageHeaders because fastHandshake is set.');\n    this.encodeInitMessageHeaders_ = false;\n  }\n\n  /**\n   * Whether to signal to the server to enable blocking handshake.\n   *\n   * @private {boolean}\n   */\n  this.blockingHandshake_ =\n      (opt_options && opt_options.blockingHandshake) || false;\n\n\n  if (opt_options && opt_options.disableRedact) {\n    this.channelDebug_.disableRedact();\n  }\n\n  if (opt_options && opt_options.forceLongPolling) {\n    this.allowStreamingMode_ = false;\n  }\n\n  /**\n   * Whether to detect buffering proxies.\n   *\n   * fastHandshake + detectBufferingProxy are yet to be implemented.\n   *\n   * @private {boolean}\n   */\n  this.detectBufferingProxy_ =\n      (!this.fastHandshake_ && this.allowStreamingMode_ && opt_options &&\n       opt_options.detectBufferingProxy) ||\n      false;\n\n  /**\n   * Long polling timeout interval for the server to complete the handing GET.\n   *\n   * @private {number|undefined}\n   */\n  this.longPollingTimeout_ = undefined;\n\n  if (opt_options && opt_options.longPollingTimeout &&\n      opt_options.longPollingTimeout > 0) {\n    this.longPollingTimeout_ = opt_options.longPollingTimeout;\n  }\n\n  /**\n   * Callback when all the pending client-sent messages have been flushed.\n   *\n   * @private {function()|undefined}\n   */\n  this.forwardChannelFlushedCallback_ = undefined;\n\n  /**\n   * TODO(user): move all backchannel states to its own class similar to\n   * forwardchannelrequestpool.js and log more stats.\n   *\n   * The estimated handshake RTT (ms) as measured from when the handshake\n   * request is sent and when the handshake response headers are received.\n   * If the value is 0, the RTT is unknown.\n   *\n   * @private {number}\n   */\n  this.handshakeRttMs_ = 0;\n\n  /**\n   * If BP detection is done or still in progress.\n   * Should only be checked when detectBufferingProxy is turned on.\n   * @private {boolean}\n   */\n  this.bpDetectionDone_ = false;\n\n  /**\n   * The timer for detecting buffering proxy. This needs be reset with each\n   * backchannel request. If this is not null, bpDetectionDone_ == false.\n   * @private {?number}\n   */\n  this.bpDetectionTimerId_ = null;\n\n  /***\n   * Whether to attempt Chrome Origin Trials as part of the handshake.\n   * @private @const {boolean}\n   */\n  this.enableOriginTrials_ = ALLOW_ORIGIN_TRIAL_FEATURES &&\n      (!opt_options || opt_options.enableOriginTrials !== false);\n\n  /**\n   * The array of non-acked maps at the time of channel close. Refer to\n   * `getNonAckedMessagesWithClosedChannel()` API for definitions of non-acked\n   * messages.\n   *\n   * @private {?Array<!Wire.QueuedMap>}\n   */\n  this.nonAckedMapsAtChannelClose_ = null;\n};\n\nconst WebChannelBase = goog.labs.net.webChannel.WebChannelBase;\n\n\n/**\n * The channel version that we negotiated with the server for this session.\n * Starts out as the version we request, and then is changed to the negotiated\n * version after the initial open.\n * @private {number}\n */\nWebChannelBase.prototype.channelVersion_ = Wire.LATEST_CHANNEL_VERSION;\n\n\n/**\n * Enum type for the channel state machine.\n * @enum {number}\n */\nWebChannelBase.State = {\n  /** The channel is closed. */\n  CLOSED: 0,\n\n  /** The channel has been initialized but hasn't yet initiated a connection. */\n  INIT: 1,\n\n  /** The channel is in the process of opening a connection to the server. */\n  OPENING: 2,\n\n  /** The channel is open. */\n  OPENED: 3\n};\n\n\n/**\n * The current state of the WebChannel.\n * @private {!WebChannelBase.State}\n */\nWebChannelBase.prototype.state_ = WebChannelBase.State.INIT;\n\n\n/**\n * The timeout in milliseconds for a forward channel request.\n * @type {number}\n */\nWebChannelBase.FORWARD_CHANNEL_RETRY_TIMEOUT = 20 * 1000;\n\n\n/**\n * Maximum number of attempts to connect to the server for back channel\n * requests.\n * @type {number}\n */\nWebChannelBase.BACK_CHANNEL_MAX_RETRIES = 3;\n\n\n/**\n * A number in MS of how long we guess the maxmium amount of time a round trip\n * to the server should take. In the future this could be substituted with a\n * real measurement of the RTT.\n * @type {number}\n */\nWebChannelBase.RTT_ESTIMATE = 3 * 1000;\n\n\n/**\n * When retrying for an inactive channel, we will multiply the total delay by\n * this number.\n * @type {number}\n */\nWebChannelBase.INACTIVE_CHANNEL_RETRY_FACTOR = 2;\n\n\n/**\n * Enum type for identifying an error.\n * @enum {number}\n */\nWebChannelBase.Error = {\n  /** Value that indicates no error has occurred. */\n  OK: 0,\n\n  /** An error due to a request failing. */\n  REQUEST_FAILED: 2,\n\n  /** An error due to the user being logged out. */\n  LOGGED_OUT: 4,\n\n  /** An error due to server response which contains no data. */\n  NO_DATA: 5,\n\n  /** An error due to a server response indicating an unknown session id */\n  UNKNOWN_SESSION_ID: 6,\n\n  /** An error due to a server response requesting to stop the channel. */\n  STOP: 7,\n\n  /** A general network error. */\n  NETWORK: 8,\n\n  /** An error due to bad data being returned from the server. */\n  BAD_DATA: 10,\n\n  /** An error due to a response that is not parsable. */\n  BAD_RESPONSE: 11\n};\n\n\n/**\n * Internal enum type for the two channel types.\n * @enum {number}\n * @private\n */\nWebChannelBase.ChannelType_ = {\n  FORWARD_CHANNEL: 1,\n\n  BACK_CHANNEL: 2\n};\n\n\n/**\n * The maximum number of maps that can be sent in one POST. Should match\n * MAX_MAPS_PER_REQUEST on the server code.\n * @type {number}\n * @private\n */\nWebChannelBase.MAX_MAPS_PER_REQUEST_ = 1000;\n\n\n/**\n * The maximum number of utf-8 chars that can be sent in one GET to enable 0-RTT\n * handshake.\n *\n *  @const @private {number}\n */\nWebChannelBase.MAX_CHARS_PER_GET_ = 4 * 1024;\n\n\n/**\n * A guess at a cutoff at which to no longer assume the backchannel is dead\n * when we are slow to receive data. Number in bytes.\n *\n * Assumption: The worst bandwidth we work on is 50 kilobits/sec\n * 50kbits/sec * (1 byte / 8 bits) * 6 sec dead backchannel timeout\n * @type {number}\n */\nWebChannelBase.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF = 37500;\n\n\n/**\n * @return {number} The server version or 0 if undefined\n */\nWebChannelBase.prototype.getServerVersion = function() {\n  'use strict';\n  return this.serverVersion_;\n};\n\n\n/**\n * @return {!ForwardChannelRequestPool} The forward channel request pool.\n */\nWebChannelBase.prototype.getForwardChannelRequestPool = function() {\n  'use strict';\n  return this.forwardChannelRequestPool_;\n};\n\n\n/**\n * @return {!Object} The codec object.\n */\nWebChannelBase.prototype.getWireCodec = function() {\n  'use strict';\n  return this.wireCodec_;\n};\n\n\n/**\n * Returns the logger.\n *\n * @return {!WebChannelDebug} The channel debug object.\n */\nWebChannelBase.prototype.getChannelDebug = function() {\n  'use strict';\n  return this.channelDebug_;\n};\n\n\n/**\n * Sets the logger.\n *\n * @param {!WebChannelDebug} channelDebug The channel debug object.\n */\nWebChannelBase.prototype.setChannelDebug = function(channelDebug) {\n  'use strict';\n  this.channelDebug_ = channelDebug;\n};\n\n\n/**\n * Starts the channel. This initiates connections to the server.\n *\n * @param {string} channelPath  The path for the channel connection.\n * @param {!Object=} opt_extraParams Extra parameter keys and values to add to\n *     the requests.\n * @param {string=} opt_oldSessionId  Session ID from a previous session.\n * @param {number=} opt_oldArrayId  The last array ID from a previous session.\n */\nWebChannelBase.prototype.connect = function(\n    channelPath, opt_extraParams, opt_oldSessionId, opt_oldArrayId) {\n  'use strict';\n  this.channelDebug_.debug('connect()');\n\n  this.startOriginTrials_(channelPath);\n\n  requestStats.notifyStatEvent(requestStats.Stat.CONNECT_ATTEMPT);\n\n  this.path_ = channelPath;\n  this.extraParams_ = opt_extraParams || {};\n\n  // Attach parameters about the previous session if reconnecting.\n  if (opt_oldSessionId && opt_oldArrayId !== undefined) {\n    this.extraParams_['OSID'] = opt_oldSessionId;\n    this.extraParams_['OAID'] = opt_oldArrayId;\n  }\n\n  this.enableStreaming_ = this.allowStreamingMode_;\n  this.connectChannel_();\n};\n\n\n/**\n * Disconnects and closes the channel.\n */\nWebChannelBase.prototype.disconnect = function() {\n  'use strict';\n  this.channelDebug_.debug('disconnect()');\n\n  this.cancelRequests_();\n\n  if (this.state_ == WebChannelBase.State.OPENED) {\n    const rid = this.nextRid_++;\n    const uri = this.forwardChannelUri_.clone();\n    uri.setParameterValue('SID', this.sid_);\n    uri.setParameterValue('RID', rid);\n    uri.setParameterValue('TYPE', 'terminate');\n\n    this.addAdditionalParams_(uri);\n\n    const request = ChannelRequest.createChannelRequest(\n        this, this.channelDebug_, this.sid_, rid);\n    request.sendCloseRequest(uri);\n  }\n\n  this.onClose_();\n};\n\n\n/**\n * Returns the session id of the channel. Only available after the\n * channel has been opened.\n * @return {string} Session ID.\n */\nWebChannelBase.prototype.getSessionId = function() {\n  'use strict';\n  return this.sid_;\n};\n\n\n/**\n * Starts the connection.\n * @private\n */\nWebChannelBase.prototype.connectChannel_ = function() {\n  'use strict';\n  this.channelDebug_.debug('connectChannel_()');\n  this.ensureInState_(WebChannelBase.State.INIT, WebChannelBase.State.CLOSED);\n  this.forwardChannelUri_ =\n      this.getForwardChannelUri(/** @type {string} */ (this.path_));\n  this.ensureForwardChannel_();\n};\n\n\n/**\n * Starts the Origin Trials.\n * @param {string} channelPath  The path for the channel connection.\n * @private\n */\nWebChannelBase.prototype.startOriginTrials_ = function(channelPath) {\n  'use strict';\n\n  if (!this.enableOriginTrials_) {\n    return;\n  }\n\n  this.channelDebug_.info('Origin Trials enabled.');\n  goog.async.run(goog.bind(this.runOriginTrials_, this, channelPath));\n};\n\n\n/**\n * Runs the Origin Trials.\n * @param {string} channelPath  The path for the channel connection.\n * @private\n */\nWebChannelBase.prototype.runOriginTrials_ = function(channelPath) {\n  'use strict';\n\n  try {\n    // Since startOriginTrials might throw exceptions asynchronously, we should\n    // capture it in promise-catch.\n    environment.startOriginTrials(channelPath, e => {\n      this.channelDebug_.dumpException(\n          /** @type {?Error} */ (e), 'Error in running origin trials');\n    });\n    this.channelDebug_.info('Origin Trials invoked: ' + channelPath);\n  } catch (e) {\n    this.channelDebug_.dumpException(e, 'Error in running origin trials');\n  }\n};\n\n\n/**\n * Cancels backchannel request.\n * @private\n */\nWebChannelBase.prototype.cancelBackChannelRequest_ = function() {\n  'use strict';\n  if (this.backChannelRequest_) {\n    this.clearBpDetectionTimer_();\n    this.backChannelRequest_.cancel();\n    this.backChannelRequest_ = null;\n  }\n};\n\n\n/**\n * Cancels all outstanding requests.\n * @private\n */\nWebChannelBase.prototype.cancelRequests_ = function() {\n  'use strict';\n  this.cancelBackChannelRequest_();\n\n  if (this.backChannelTimerId_) {\n    goog.global.clearTimeout(this.backChannelTimerId_);\n    this.backChannelTimerId_ = null;\n  }\n\n  this.clearDeadBackchannelTimer_();\n\n  this.forwardChannelRequestPool_.cancel();\n\n  if (this.forwardChannelTimerId_) {\n    this.clearForwardChannelTimer_();\n  }\n};\n\n\n/**\n * Clears the forward channel timer.\n * @private\n */\nWebChannelBase.prototype.clearForwardChannelTimer_ = function() {\n  'use strict';\n  if (typeof this.forwardChannelTimerId_ === 'number') {\n    goog.global.clearTimeout(this.forwardChannelTimerId_);\n  }\n\n  this.forwardChannelTimerId_ = null;\n};\n\n\n/**\n * Returns the extra HTTP headers to add to all the requests sent to the server.\n *\n * @return {Object} The HTTP headers, or null.\n */\nWebChannelBase.prototype.getExtraHeaders = function() {\n  'use strict';\n  return this.extraHeaders_;\n};\n\n\n/**\n * Sets extra HTTP headers to add to all the requests sent to the server.\n *\n * @param {Object} extraHeaders The HTTP headers, or null.\n */\nWebChannelBase.prototype.setExtraHeaders = function(extraHeaders) {\n  'use strict';\n  this.extraHeaders_ = extraHeaders;\n};\n\n\n/**\n * Returns the extra HTTP headers to add to the init requests\n * sent to the server.\n *\n * @return {Object} The HTTP headers, or null.\n */\nWebChannelBase.prototype.getInitHeaders = function() {\n  'use strict';\n  return this.initHeaders_;\n};\n\n\n/**\n * Sets extra HTTP headers to add to the init requests sent to the server.\n *\n * @param {Object} initHeaders The HTTP headers, or null.\n */\nWebChannelBase.prototype.setInitHeaders = function(initHeaders) {\n  'use strict';\n  this.initHeaders_ = initHeaders;\n};\n\n\n/**\n * Sets the URL param name to overwrite custom HTTP headers.\n *\n * @param {string} httpHeadersOverwriteParam The URL param name.\n */\nWebChannelBase.prototype.setHttpHeadersOverwriteParam = function(\n    httpHeadersOverwriteParam) {\n  'use strict';\n  this.httpHeadersOverwriteParam_ = httpHeadersOverwriteParam;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.setHttpSessionIdParam = function(httpSessionIdParam) {\n  'use strict';\n  this.httpSessionIdParam_ = httpSessionIdParam;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getHttpSessionIdParam = function() {\n  'use strict';\n  return this.httpSessionIdParam_;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.setHttpSessionId = function(httpSessionId) {\n  'use strict';\n  this.httpSessionId_ = httpSessionId;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getHttpSessionId = function() {\n  'use strict';\n  return this.httpSessionId_;\n};\n\n\n/**\n * Sets the throttle for handling onreadystatechange events for the request.\n *\n * @param {number} throttle The throttle in ms.  A value of zero indicates\n *     no throttle.\n */\nWebChannelBase.prototype.setReadyStateChangeThrottle = function(throttle) {\n  'use strict';\n  this.readyStateChangeThrottleMs_ = throttle;\n};\n\n\n/**\n * Sets whether cross origin requests are supported for the channel.\n *\n * Setting this allows the creation of requests to secondary domains and\n * sends XHRs with the CORS withCredentials bit set to true.\n *\n * In order for cross-origin requests to work, the server will also need to set\n * CORS response headers as per:\n * https://developer.mozilla.org/en-US/docs/HTTP_access_control\n *\n * See {@link goog.net.XhrIo#setWithCredentials}.\n * @param {boolean} supportCrossDomain Whether cross domain XHRs are supported.\n */\nWebChannelBase.prototype.setSupportsCrossDomainXhrs = function(\n    supportCrossDomain) {\n  'use strict';\n  this.supportsCrossDomainXhrs_ = supportCrossDomain;\n};\n\n\n/**\n * Returns the handler used for channel callback events.\n *\n * @return {WebChannelBase.Handler} The handler.\n */\nWebChannelBase.prototype.getHandler = function() {\n  'use strict';\n  return this.handler_;\n};\n\n\n/**\n * Sets the handler used for channel callback events.\n * @param {WebChannelBase.Handler} handler The handler to set.\n */\nWebChannelBase.prototype.setHandler = function(handler) {\n  'use strict';\n  this.handler_ = handler;\n};\n\n\n/**\n * Returns whether the channel allows the use of a subdomain. There may be\n * cases where this isn't allowed.\n * @return {boolean} Whether a host prefix is allowed.\n */\nWebChannelBase.prototype.getAllowHostPrefix = function() {\n  'use strict';\n  return this.allowHostPrefix_;\n};\n\n\n/**\n * Sets whether the channel allows the use of a subdomain. There may be cases\n * where this isn't allowed, for example, logging in with troutboard where\n * using a subdomain causes Apache to force the user to authenticate twice.\n * @param {boolean} allowHostPrefix Whether a host prefix is allowed.\n */\nWebChannelBase.prototype.setAllowHostPrefix = function(allowHostPrefix) {\n  'use strict';\n  this.allowHostPrefix_ = allowHostPrefix;\n};\n\n\n/**\n * Returns whether the channel is buffered or not.  This may be\n * queried in the WebChannelBase.okToMakeRequest() callback.\n *\n * @return {boolean} Whether the channel is buffered.\n */\nWebChannelBase.prototype.isBuffered = function() {\n  'use strict';\n  return !this.enableStreaming_;\n};\n\n\n/**\n * Returns whether streaming mode is allowed. In certain debugging situations,\n * it's useful for the application to have a way to disable streaming mode for a\n * user.\n\n * @return {boolean} Whether streaming mode is allowed.\n */\nWebChannelBase.prototype.getAllowStreamingMode = function() {\n  'use strict';\n  return this.allowStreamingMode_;\n};\n\n\n/**\n * Sets whether streaming mode is allowed. In certain debugging situations, it's\n * useful for the application to have a way to disable streaming mode for a\n * user.\n * @param {boolean} allowStreamingMode  Whether streaming mode is allowed.\n */\nWebChannelBase.prototype.setAllowStreamingMode = function(allowStreamingMode) {\n  'use strict';\n  this.allowStreamingMode_ = allowStreamingMode;\n};\n\n\n/**\n * Sends a request to the server. The format of the request is a Map data\n * structure of key/value pairs. These maps are then encoded in a format\n * suitable for the wire and then reconstituted as a Map data structure that\n * the server can process.\n * @param {!Object|!goog.collections.maps.MapLike} map The map to send.\n * @param {!Object=} opt_context The context associated with the map.\n */\nWebChannelBase.prototype.sendMap = function(map, opt_context) {\n  'use strict';\n  goog.asserts.assert(\n      this.state_ != WebChannelBase.State.CLOSED,\n      'Invalid operation: sending map when state is closed');\n\n  // We can only send 1000 maps per POST, but typically we should never have\n  // that much to send, so warn if we exceed that (we still send all the maps).\n  if (this.outgoingMaps_.length == WebChannelBase.MAX_MAPS_PER_REQUEST_) {\n    // severe() is temporary so that we get these uploaded and can figure out\n    // what's causing them. Afterwards can change to warning().\n    this.channelDebug_.severe(function() {\n      'use strict';\n      return 'Already have ' + WebChannelBase.MAX_MAPS_PER_REQUEST_ +\n          ' queued maps upon queueing ' + goog.json.serialize(map);\n    });\n  }\n\n  this.outgoingMaps_.push(\n      new Wire.QueuedMap(this.nextMapId_++, map, opt_context));\n\n  // Messages need be buffered during OPENING to avoid server-side race\n  if (this.state_ == WebChannelBase.State.OPENED) {\n    this.ensureForwardChannel_();\n  }\n};\n\n\n/**\n * When set to true, this changes the behavior of the forward channel so it\n * will not retry requests; it will fail after one network failure, and if\n * there was already one network failure, the request will fail immediately.\n * @param {boolean} failFast  Whether or not to fail fast.\n */\nWebChannelBase.prototype.setFailFast = function(failFast) {\n  'use strict';\n  this.failFast_ = failFast;\n  this.channelDebug_.info('setFailFast: ' + failFast);\n  if ((this.forwardChannelRequestPool_.hasPendingRequest() ||\n       this.forwardChannelTimerId_) &&\n      this.forwardChannelRetryCount_ > this.getForwardChannelMaxRetries()) {\n    const self = this;\n    this.channelDebug_.info(function() {\n      'use strict';\n      return 'Retry count ' + self.forwardChannelRetryCount_ +\n          ' > new maxRetries ' + self.getForwardChannelMaxRetries() +\n          '. Fail immediately!';\n    });\n\n    if (!this.forwardChannelRequestPool_.forceComplete(\n            goog.bind(this.onRequestComplete, this))) {\n      // i.e., this.forwardChannelTimerId_\n      this.clearForwardChannelTimer_();\n      // The error code from the last failed request is gone, so just use a\n      // generic one.\n      this.signalError_(WebChannelBase.Error.REQUEST_FAILED);\n    }\n  }\n};\n\n\n/**\n * @return {number} The max number of forward-channel retries, which will be 0\n * in fail-fast mode.\n */\nWebChannelBase.prototype.getForwardChannelMaxRetries = function() {\n  'use strict';\n  return this.failFast_ ? 0 : this.forwardChannelMaxRetries_;\n};\n\n\n/**\n * Sets the maximum number of attempts to connect to the server for forward\n * channel requests.\n * @param {number} retries The maximum number of attempts.\n */\nWebChannelBase.prototype.setForwardChannelMaxRetries = function(retries) {\n  'use strict';\n  this.forwardChannelMaxRetries_ = retries;\n};\n\n\n/**\n * Sets the timeout for a forward channel request.\n * @param {number} timeoutMs The timeout in milliseconds.\n */\nWebChannelBase.prototype.setForwardChannelRequestTimeout = function(timeoutMs) {\n  'use strict';\n  this.forwardChannelRequestTimeoutMs_ = timeoutMs;\n};\n\n\n/**\n * @return {number} The max number of back-channel retries, which is a constant.\n */\nWebChannelBase.prototype.getBackChannelMaxRetries = function() {\n  'use strict';\n  // Back-channel retries is a constant.\n  return WebChannelBase.BACK_CHANNEL_MAX_RETRIES;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.isClosed = function() {\n  'use strict';\n  return this.state_ == WebChannelBase.State.CLOSED;\n};\n\n\n/**\n * Returns the channel state.\n * @return {WebChannelBase.State} The current state of the channel.\n */\nWebChannelBase.prototype.getState = function() {\n  'use strict';\n  return this.state_;\n};\n\n\n/**\n * @return {!Object<string, string>|undefined} The response headers received\n * along with the non-200 status.\n */\nWebChannelBase.prototype.getLastResponseHeaders = function() {\n  'use strict';\n  return this.errorResponseHeaders_;\n};\n\n\n/**\n * @return {number} The non-200 status code received that causes the channel to\n * be aborted.\n */\nWebChannelBase.prototype.getLastStatusCode = function() {\n  'use strict';\n  return this.errorResponseStatusCode_;\n};\n\n\n/**\n * @return {number} The last array id received.\n */\nWebChannelBase.prototype.getLastArrayId = function() {\n  'use strict';\n  return this.lastArrayId_;\n};\n\n\n/**\n * Returns whether there are outstanding requests servicing the channel.\n * @return {boolean} true if there are outstanding requests.\n */\nWebChannelBase.prototype.hasOutstandingRequests = function() {\n  'use strict';\n  return this.getOutstandingRequests_() != 0;\n};\n\n\n/**\n * Returns the number of outstanding requests.\n * @return {number} The number of outstanding requests to the server.\n * @private\n */\nWebChannelBase.prototype.getOutstandingRequests_ = function() {\n  'use strict';\n  let count = 0;\n  if (this.backChannelRequest_) {\n    count++;\n  }\n  count += this.forwardChannelRequestPool_.getRequestCount();\n  return count;\n};\n\n\n/**\n * Ensures that a forward channel request is scheduled.\n * @private\n */\nWebChannelBase.prototype.ensureForwardChannel_ = function() {\n  'use strict';\n  if (this.forwardChannelRequestPool_.isFull()) {\n    // enough connection in process - no need to start a new request\n    return;\n  }\n\n  if (this.forwardChannelTimerId_) {\n    // no need to start a new request - one is already scheduled\n    return;\n  }\n\n  // Use async.run instead of setTimeout(0) to avoid the 1s message delay\n  // from chrome/firefox background tabs\n  this.forwardChannelTimerId_ = true;\n  goog.async.run(this.onStartForwardChannelTimer_, this);\n\n  this.forwardChannelRetryCount_ = 0;\n};\n\n\n/**\n * Schedules a forward-channel retry for the specified request, unless the max\n * retries has been reached.\n * @param {!ChannelRequest} request The failed request to retry.\n * @return {boolean} true iff a retry was scheduled.\n * @private\n */\nWebChannelBase.prototype.maybeRetryForwardChannel_ = function(request) {\n  'use strict';\n  if (this.forwardChannelRequestPool_.getRequestCount() >=\n      this.forwardChannelRequestPool_.getMaxSize() -\n          (this.forwardChannelTimerId_ ? 1 : 0)) {\n    // Should be impossible to be called in this state.\n    this.channelDebug_.severe('Unexpected retry request is scheduled.');\n    return false;\n  }\n\n  if (this.forwardChannelTimerId_) {\n    this.channelDebug_.debug(\n        'Use the retry request that is already scheduled.');\n    this.outgoingMaps_ =\n        request.getPendingMessages().concat(this.outgoingMaps_);\n    return true;\n  }\n\n  // No retry for open_() and fail-fast\n  if (this.state_ == WebChannelBase.State.INIT ||\n      this.state_ == WebChannelBase.State.OPENING ||\n      (this.forwardChannelRetryCount_ >= this.getForwardChannelMaxRetries())) {\n    return false;\n  }\n\n  this.channelDebug_.debug('Going to retry POST');\n\n  this.forwardChannelTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onStartForwardChannelTimer_, this, request),\n      this.getRetryTime_(this.forwardChannelRetryCount_));\n  this.forwardChannelRetryCount_++;\n  return true;\n};\n\n\n/**\n * Timer callback for ensureForwardChannel\n * @param {ChannelRequest=} opt_retryRequest A failed request\n * to retry.\n * @private\n */\nWebChannelBase.prototype.onStartForwardChannelTimer_ = function(\n    opt_retryRequest) {\n  'use strict';\n  // null is possible if scheduled with async.run\n  if (this.forwardChannelTimerId_) {\n    this.forwardChannelTimerId_ = null;\n    this.startForwardChannel_(opt_retryRequest);\n  }\n};\n\n\n/**\n * Begins a new forward channel operation to the server.\n * @param {ChannelRequest=} opt_retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.startForwardChannel_ = function(opt_retryRequest) {\n  'use strict';\n  this.channelDebug_.debug('startForwardChannel_');\n  if (!this.okToMakeRequest_()) {\n    return;  // channel is cancelled\n  } else if (this.state_ == WebChannelBase.State.INIT) {\n    if (opt_retryRequest) {\n      this.channelDebug_.severe('Not supposed to retry the open');\n      return;\n    }\n    this.open_();\n    this.state_ = WebChannelBase.State.OPENING;\n  } else if (this.state_ == WebChannelBase.State.OPENED) {\n    if (opt_retryRequest) {\n      this.makeForwardChannelRequest_(opt_retryRequest);\n      return;\n    }\n\n    if (this.outgoingMaps_.length == 0) {\n      this.channelDebug_.debug(\n          'startForwardChannel_ returned: ' +\n          'nothing to send');\n      // no need to start a new forward channel request\n      return;\n    }\n\n    if (this.forwardChannelRequestPool_.isFull()) {\n      // Should be impossible to be called in this state.\n      this.channelDebug_.severe(\n          'startForwardChannel_ returned: ' +\n          'connection already in progress');\n      return;\n    }\n\n    this.makeForwardChannelRequest_();\n    this.channelDebug_.debug('startForwardChannel_ finished, sent request');\n  }\n};\n\n\n/**\n * Establishes a new channel session with the server.\n * @private\n */\nWebChannelBase.prototype.open_ = function() {\n  'use strict';\n  this.channelDebug_.debug('open_()');\n  this.nextRid_ = Math.floor(Math.random() * 100000);\n\n  const rid = this.nextRid_++;\n  const request =\n      ChannelRequest.createChannelRequest(this, this.channelDebug_, '', rid);\n\n  // mix the init headers\n  let extraHeaders = this.extraHeaders_;\n  if (this.initHeaders_) {\n    if (extraHeaders) {\n      extraHeaders = goog.object.clone(extraHeaders);\n      goog.object.extend(extraHeaders, this.initHeaders_);\n    } else {\n      extraHeaders = this.initHeaders_;\n    }\n  }\n\n  if (this.httpHeadersOverwriteParam_ === null &&\n      !this.encodeInitMessageHeaders_) {\n    request.setExtraHeaders(extraHeaders);\n    extraHeaders = null;\n  }\n\n  let requestText = this.dequeueOutgoingMaps_(\n      request,\n      this.fastHandshake_ ? this.getMaxNumMessagesForFastHandshake_() :\n                            WebChannelBase.MAX_MAPS_PER_REQUEST_);\n\n  const uri = this.forwardChannelUri_.clone();\n  uri.setParameterValue('RID', rid);\n\n  if (this.clientVersion_ > 0) {\n    uri.setParameterValue('CVER', this.clientVersion_);\n  }\n\n  // http-session-id to be generated as the response\n  if (this.getHttpSessionIdParam()) {\n    uri.setParameterValue(\n        WebChannel.X_HTTP_SESSION_ID, this.getHttpSessionIdParam());\n  }\n\n  this.addAdditionalParams_(uri);\n\n  if (extraHeaders) {\n    if (this.encodeInitMessageHeaders_) {\n      let encodedHeaders =\n          httpCors.generateEncodedHttpHeadersOverwriteParam(extraHeaders);\n      requestText = 'headers=' + encodedHeaders + '&' + requestText;\n    } else if (this.httpHeadersOverwriteParam_) {\n      httpCors.setHttpHeadersWithOverwriteParam(\n          uri, this.httpHeadersOverwriteParam_, extraHeaders);\n    }  // else - should not happen\n  }\n\n  this.forwardChannelRequestPool_.addRequest(request);\n\n  if (this.blockingHandshake_) {\n    uri.setParameterValue('TYPE', 'init');  // default to blocking in future\n  }\n\n  // Check the option and use GET to enable QUIC 0-RTT\n  if (this.fastHandshake_) {\n    uri.setParameterValue('$req', requestText);\n\n    // enable handshake upgrade\n    uri.setParameterValue('SID', 'null');\n    request.setDecodeInitialResponse();\n\n    request.xmlHttpPost(uri, null, true);  // Send as a GET\n  } else {\n    request.xmlHttpPost(uri, requestText, true);\n  }\n};\n\n\n/**\n * @return {number} The number of raw JSON messages to be encoded\n * with the fast-handshake (GET) request, including zero. If messages are not\n * encoded as raw JSON data, return WebChannelBase.MAX_MAPS_PER_REQUEST_\n * @private\n */\nWebChannelBase.prototype.getMaxNumMessagesForFastHandshake_ = function() {\n  'use strict';\n  let total = 0;\n  for (let i = 0; i < this.outgoingMaps_.length; i++) {\n    const map = this.outgoingMaps_[i];\n    const size = map.getRawDataSize();\n    if (size === undefined) {\n      break;\n    }\n    total += size;\n\n    if (total > WebChannelBase.MAX_CHARS_PER_GET_) {\n      return i;\n    }\n\n    if (total === WebChannelBase.MAX_CHARS_PER_GET_ ||\n        i === this.outgoingMaps_.length - 1) {\n      return i + 1;\n    }\n  }\n\n  return WebChannelBase.MAX_MAPS_PER_REQUEST_;\n};\n\n\n\n/**\n * Makes a forward channel request using XMLHTTP.\n * @param {!ChannelRequest=} opt_retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.makeForwardChannelRequest_ = function(\n    opt_retryRequest) {\n  'use strict';\n  let rid;\n  if (opt_retryRequest) {\n    rid = opt_retryRequest.getRequestId();  // Reuse the same RID for a retry\n  } else {\n    rid = this.nextRid_++;\n  }\n\n  const uri = this.forwardChannelUri_.clone();\n  uri.setParameterValue('SID', this.sid_);\n  uri.setParameterValue('RID', rid);\n  uri.setParameterValue('AID', this.lastArrayId_);\n\n  this.addAdditionalParams_(uri);\n\n  if (this.httpHeadersOverwriteParam_ && this.extraHeaders_) {\n    httpCors.setHttpHeadersWithOverwriteParam(\n        uri, this.httpHeadersOverwriteParam_, this.extraHeaders_);\n  }\n\n  const request = ChannelRequest.createChannelRequest(\n      this, this.channelDebug_, this.sid_, rid,\n      this.forwardChannelRetryCount_ + 1);\n\n  if (this.httpHeadersOverwriteParam_ === null) {\n    request.setExtraHeaders(this.extraHeaders_);\n  }\n\n  let requestText;\n  if (opt_retryRequest) {\n    this.requeuePendingMaps_(opt_retryRequest);\n  }\n  requestText =\n      this.dequeueOutgoingMaps_(request, WebChannelBase.MAX_MAPS_PER_REQUEST_);\n\n  // Randomize from 50%-100% of the forward channel timeout to avoid\n  // a big hit if servers happen to die at once.\n  request.setTimeout(\n      Math.round(this.forwardChannelRequestTimeoutMs_ * 0.50) +\n      Math.round(this.forwardChannelRequestTimeoutMs_ * 0.50 * Math.random()));\n  this.forwardChannelRequestPool_.addRequest(request);\n  request.xmlHttpPost(uri, requestText, true);\n};\n\n\n/**\n * Adds additional query parameters from `extraParams_` and `handler_` to the\n * given URI.\n * @param {!goog.Uri} uri The URI to add the parameters to.\n * @private\n */\nWebChannelBase.prototype.addAdditionalParams_ = function(uri) {\n  'use strict';\n  if (this.extraParams_) {\n    goog.object.forEach(this.extraParams_, function(value, key) {\n      'use strict';\n      uri.setParameterValue(key, value);\n    });\n  }\n\n  if (this.handler_) {\n    const params = this.handler_.getAdditionalParams(this);\n    if (params) {\n      goog.structs.forEach(params, function(value, key, coll) {\n        'use strict';\n        uri.setParameterValue(key, value);\n      });\n    }\n  }\n};\n\n\n/**\n * Returns the request text from the outgoing maps and resets it.\n * @param {!ChannelRequest} request The new request for sending the messages.\n * @param {number} maxNum The maximum number of messages to be encoded\n * @return {string} The encoded request text created from all the currently\n *                  queued outgoing maps.\n * @private\n */\nWebChannelBase.prototype.dequeueOutgoingMaps_ = function(request, maxNum) {\n  'use strict';\n  const count = Math.min(this.outgoingMaps_.length, maxNum);\n\n  const badMapHandler = this.handler_ ?\n      goog.bind(this.handler_.badMapError, this.handler_, this) :\n      null;\n  const result = this.wireCodec_.encodeMessageQueue(\n      this.outgoingMaps_, count, badMapHandler);\n\n  request.setPendingMessages(this.outgoingMaps_.splice(0, count));\n\n  return result;\n};\n\n\n/**\n * Requeues unacknowledged sent arrays for retransmission in the next forward\n * channel request.\n * @param {!ChannelRequest} retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.requeuePendingMaps_ = function(retryRequest) {\n  'use strict';\n  this.outgoingMaps_ =\n      retryRequest.getPendingMessages().concat(this.outgoingMaps_);\n};\n\n\n/**\n * Ensures there is a backchannel request for receiving data from the server.\n * @private\n */\nWebChannelBase.prototype.ensureBackChannel_ = function() {\n  'use strict';\n  if (this.backChannelRequest_) {\n    // already have one\n    return;\n  }\n\n  if (this.backChannelTimerId_) {\n    // no need to start a new request - one is already scheduled\n    return;\n  }\n\n  this.backChannelAttemptId_ = 1;\n\n  // Use async.run instead of setTimeout(0) to avoid the 1s message delay\n  // from chrome/firefox background tabs\n  // backChannelTimerId_ stays unset, as with setTimeout(0)\n  goog.async.run(this.onStartBackChannelTimer_, this);\n\n  this.backChannelRetryCount_ = 0;\n};\n\n\n/**\n * Schedules a back-channel retry, unless the max retries has been reached.\n * @return {boolean} true iff a retry was scheduled.\n * @private\n */\nWebChannelBase.prototype.maybeRetryBackChannel_ = function() {\n  'use strict';\n  if (this.backChannelRequest_ || this.backChannelTimerId_) {\n    // Should be impossible to be called in this state.\n    this.channelDebug_.severe('Request already in progress');\n    return false;\n  }\n\n  if (this.backChannelRetryCount_ >= this.getBackChannelMaxRetries()) {\n    return false;\n  }\n\n  this.channelDebug_.debug('Going to retry GET');\n\n  this.backChannelAttemptId_++;\n  this.backChannelTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onStartBackChannelTimer_, this),\n      this.getRetryTime_(this.backChannelRetryCount_));\n  this.backChannelRetryCount_++;\n  return true;\n};\n\n\n/**\n * Timer callback for ensureBackChannel_.\n * @private\n */\nWebChannelBase.prototype.onStartBackChannelTimer_ = function() {\n  'use strict';\n  this.backChannelTimerId_ = null;\n  this.startBackChannel_();\n\n  if (!this.detectBufferingProxy_) {\n    return;\n  }\n\n  if (this.bpDetectionDone_) {\n    return;\n  }\n\n  if (this.backChannelRequest_ == null || this.handshakeRttMs_ <= 0) {\n    this.channelDebug_.warning(\n        'Skip bpDetectionTimerId_ ' + this.backChannelRequest_ + ' ' +\n        this.handshakeRttMs_);\n    return;\n  }\n\n  // This goes with each new request until bpDetectionDone_\n  const bpDetectionTimeout = 2 * this.handshakeRttMs_;\n  this.channelDebug_.info('BP detection timer enabled: ' + bpDetectionTimeout);\n\n  this.bpDetectionTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onBpDetectionTimer_, this), bpDetectionTimeout);\n};\n\n\n/**\n * Timer callback for bpDetection.\n * @private\n */\nWebChannelBase.prototype.onBpDetectionTimer_ = function() {\n  'use strict';\n  if (!this.bpDetectionTimerId_) {\n    this.channelDebug_.warning('Invalid operation.');\n    return;\n  }\n\n  this.bpDetectionTimerId_ = null;\n  this.channelDebug_.info('BP detection timeout reached.');\n\n  goog.asserts.assert(\n      this.backChannelRequest_ != null,\n      'Invalid state: no backchannel request');\n\n  // We wait for extra response payload in addition to just headers to\n  // cancel the timer.\n  if (this.backChannelRequest_.getXhr() != null) {\n    const responseData = this.backChannelRequest_.getXhr().getResponseText();\n    if (responseData) {\n      this.channelDebug_.warning(\n          'Timer should have been cancelled : ' + responseData);\n    }\n  }\n\n  // Enable long-polling\n  this.channelDebug_.info(\n      'Buffering proxy detected and switch to long-polling!');\n  this.enableStreaming_ = false;\n\n  this.bpDetectionDone_ = true;\n  requestStats.notifyStatEvent(requestStats.Stat.PROXY);\n\n  // Cancel the request and start a new one immediately\n  this.cancelBackChannelRequest_();\n  this.startBackChannel_();\n};\n\n\n/**\n * Clears the timer for BP detection.\n * @private\n */\nWebChannelBase.prototype.clearBpDetectionTimer_ = function() {\n  'use strict';\n  if (this.bpDetectionTimerId_ != null) {\n    this.channelDebug_.debug('Cancel the BP detection timer.');\n    goog.global.clearTimeout(this.bpDetectionTimerId_);\n    this.bpDetectionTimerId_ = null;\n  }\n};\n\n\n/**\n * Begins a new back channel operation to the server.\n * @private\n */\nWebChannelBase.prototype.startBackChannel_ = function() {\n  'use strict';\n  if (!this.okToMakeRequest_()) {\n    // channel is cancelled\n    return;\n  }\n\n  this.channelDebug_.debug('Creating new HttpRequest');\n  this.backChannelRequest_ = ChannelRequest.createChannelRequest(\n      this, this.channelDebug_, this.sid_, 'rpc', this.backChannelAttemptId_);\n\n  if (this.httpHeadersOverwriteParam_ === null) {\n    this.backChannelRequest_.setExtraHeaders(this.extraHeaders_);\n  }\n\n  this.backChannelRequest_.setReadyStateChangeThrottle(\n      this.readyStateChangeThrottleMs_);\n  const uri = this.backChannelUri_.clone();\n  uri.setParameterValue('RID', 'rpc');\n  uri.setParameterValue('SID', this.sid_);\n  uri.setParameterValue('AID', this.lastArrayId_);\n\n  uri.setParameterValue('CI', this.enableStreaming_ ? '0' : '1');\n  if (!this.enableStreaming_ && this.longPollingTimeout_) {\n    uri.setParameterValue('TO', this.longPollingTimeout_);\n  }\n\n  uri.setParameterValue('TYPE', 'xmlhttp');\n\n  this.addAdditionalParams_(uri);\n\n  if (this.httpHeadersOverwriteParam_ && this.extraHeaders_) {\n    httpCors.setHttpHeadersWithOverwriteParam(\n        uri, this.httpHeadersOverwriteParam_, this.extraHeaders_);\n  }\n\n  if (this.backChannelRequestTimeoutMs_) {\n    this.backChannelRequest_.setTimeout(this.backChannelRequestTimeoutMs_);\n  }\n\n  this.backChannelRequest_.xmlHttpGet(\n      uri, true /* decodeChunks */, this.hostPrefix_);\n\n  this.channelDebug_.debug('New Request created');\n};\n\n\n/**\n * Gives the handler a chance to return an error code and stop channel\n * execution. A handler might want to do this to check that the user is still\n * logged in, for example.\n * @private\n * @return {boolean} If it's OK to make a request.\n */\nWebChannelBase.prototype.okToMakeRequest_ = function() {\n  'use strict';\n  if (this.handler_) {\n    const result = this.handler_.okToMakeRequest(this);\n    if (result != WebChannelBase.Error.OK) {\n      this.channelDebug_.debug(\n          'Handler returned error code from okToMakeRequest');\n      this.signalError_(result);\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.onFirstByteReceived = function(request, responseText) {\n  'use strict';\n  if (this.backChannelRequest_ == request && this.detectBufferingProxy_) {\n    if (!this.bpDetectionDone_) {\n      this.channelDebug_.info(\n          'Great, no buffering proxy detected. Bytes received: ' +\n          responseText.length);\n      goog.asserts.assert(\n          this.bpDetectionTimerId_, 'Timer should not have been cancelled.');\n      this.clearBpDetectionTimer_();\n      this.bpDetectionDone_ = true;\n      requestStats.notifyStatEvent(requestStats.Stat.NOPROXY);\n    }\n  }\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.onRequestData = function(request, responseText) {\n  'use strict';\n  if (this.state_ == WebChannelBase.State.CLOSED ||\n      (this.backChannelRequest_ != request &&\n       !this.forwardChannelRequestPool_.hasRequest(request))) {\n    // either CLOSED or a request we don't know about (perhaps an old request)\n    return;\n  }\n\n  // first to check if request has been upgraded to backchannel\n  if (!request.isInitialResponseDecoded() &&\n      this.forwardChannelRequestPool_.hasRequest(request) &&\n      this.state_ == WebChannelBase.State.OPENED) {\n    let response;\n    try {\n      response = this.wireCodec_.decodeMessage(responseText);\n    } catch (ex) {\n      response = null;\n    }\n    if (Array.isArray(response) && response.length == 3) {\n      this.handlePostResponse_(/** @type {!Array<?>} */ (response), request);\n      this.onForwardChannelFlushed_();\n    } else {\n      this.channelDebug_.debug('Bad POST response data returned');\n      this.signalError_(WebChannelBase.Error.BAD_RESPONSE);\n    }\n  } else {\n    if (request.isInitialResponseDecoded() ||\n        this.backChannelRequest_ == request) {\n      this.clearDeadBackchannelTimer_();\n    }\n\n    if (!goog.string.isEmptyOrWhitespace(responseText)) {\n      let response = this.wireCodec_.decodeMessage(responseText);\n      this.onInput_(/** @type {!Array<?>} */ (response), request);\n    }\n  }\n};\n\n\n/**\n * Checks if we need call the flush callback.\n *\n * @private\n */\nWebChannelBase.prototype.onForwardChannelFlushed_ = function() {\n  'use strict';\n  if (this.forwardChannelRequestPool_.getRequestCount() <= 1) {\n    if (this.forwardChannelFlushedCallback_) {\n      try {\n        this.forwardChannelFlushedCallback_();\n      } catch (ex) {\n        this.channelDebug_.dumpException(\n            ex, 'Exception from forwardChannelFlushedCallback_ ');\n      }\n      // reset\n      this.forwardChannelFlushedCallback_ = undefined;\n    }\n  }\n};\n\n\n/**\n * Handles a POST response from the server.\n * @param {Array<number>} responseValues The key value pairs in\n *     the POST response.\n * @param {!ChannelRequest} forwardReq The forward channel request that\n * triggers this function call.\n * @private\n */\nWebChannelBase.prototype.handlePostResponse_ = function(\n    responseValues, forwardReq) {\n  'use strict';\n  // The first response value is set to 0 if server is missing backchannel.\n  if (responseValues[0] == 0) {\n    this.handleBackchannelMissing_(forwardReq);\n    return;\n  }\n  this.lastPostResponseArrayId_ = responseValues[1];\n  const outstandingArrays = this.lastPostResponseArrayId_ - this.lastArrayId_;\n  if (0 < outstandingArrays) {\n    const numOutstandingBackchannelBytes = responseValues[2];\n    this.channelDebug_.debug(\n        numOutstandingBackchannelBytes + ' bytes (in ' + outstandingArrays +\n        ' arrays) are outstanding on the BackChannel');\n    if (!this.shouldRetryBackChannel_(numOutstandingBackchannelBytes)) {\n      return;\n    }\n    if (!this.deadBackChannelTimerId_) {\n      // We expect to receive data within 2 RTTs or we retry the backchannel.\n      this.deadBackChannelTimerId_ = requestStats.setTimeout(\n          goog.bind(this.onBackChannelDead_, this),\n          2 * WebChannelBase.RTT_ESTIMATE);\n    }\n  }\n};\n\n\n/**\n * Handles a POST response from the server telling us that it has detected that\n * we have no hanging GET connection.\n * @param {!ChannelRequest} forwardReq The forward channel request that\n * triggers this function call.\n * @private\n * @suppress {strictPrimitiveOperators}\n */\nWebChannelBase.prototype.handleBackchannelMissing_ = function(forwardReq) {\n  'use strict';\n  // As long as the back channel was started before the POST was sent,\n  // we should retry the backchannel. We give a slight buffer of RTT_ESTIMATE\n  // so as not to excessively retry the backchannel\n  this.channelDebug_.debug('Server claims our backchannel is missing.');\n  if (this.backChannelTimerId_) {\n    this.channelDebug_.debug('But we are currently starting the request.');\n    return;\n  } else if (!this.backChannelRequest_) {\n    this.channelDebug_.warning('We do not have a BackChannel established');\n  } else if (\n      this.backChannelRequest_.getRequestStartTime() +\n          WebChannelBase.RTT_ESTIMATE <\n      forwardReq.getRequestStartTime()) {\n    this.clearDeadBackchannelTimer_();\n    this.cancelBackChannelRequest_();\n  } else {\n    return;\n  }\n  this.maybeRetryBackChannel_();\n  requestStats.notifyStatEvent(requestStats.Stat.BACKCHANNEL_MISSING);\n};\n\n\n/**\n * Determines whether we should start the process of retrying a possibly\n * dead backchannel.\n * @param {number} outstandingBytes The number of bytes for which the server has\n *     not yet received acknowledgement.\n * @return {boolean} Whether to start the backchannel retry timer.\n * @private\n */\nWebChannelBase.prototype.shouldRetryBackChannel_ = function(outstandingBytes) {\n  'use strict';\n  // Not too many outstanding bytes, not buffered and not after a retry.\n  return outstandingBytes <\n      WebChannelBase.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF &&\n      !this.isBuffered() && this.backChannelRetryCount_ == 0;\n};\n\n\n/**\n * Decides which host prefix should be used, if any.  If there is a handler,\n * allows the handler to validate a host prefix provided by the server, and\n * optionally override it.\n * @param {?string} serverHostPrefix The host prefix provided by the server.\n * @return {?string} The host prefix to actually use, if any. Will return null\n *     if the use of host prefixes was disabled via setAllowHostPrefix().\n * @override\n */\nWebChannelBase.prototype.correctHostPrefix = function(serverHostPrefix) {\n  'use strict';\n  if (this.allowHostPrefix_) {\n    if (this.handler_) {\n      return this.handler_.correctHostPrefix(serverHostPrefix);\n    }\n    return serverHostPrefix;\n  }\n  return null;\n};\n\n\n/**\n * Handles the timer that indicates that our backchannel is no longer able to\n * successfully receive data from the server.\n * @private\n */\nWebChannelBase.prototype.onBackChannelDead_ = function() {\n  'use strict';\n  if (this.deadBackChannelTimerId_ != null) {\n    this.deadBackChannelTimerId_ = null;\n    this.cancelBackChannelRequest_();\n    this.maybeRetryBackChannel_();\n    requestStats.notifyStatEvent(requestStats.Stat.BACKCHANNEL_DEAD);\n  }\n};\n\n\n/**\n * Clears the timer that indicates that our backchannel is no longer able to\n * successfully receive data from the server.\n * @private\n */\nWebChannelBase.prototype.clearDeadBackchannelTimer_ = function() {\n  'use strict';\n  if (this.deadBackChannelTimerId_ != null) {\n    goog.global.clearTimeout(this.deadBackChannelTimerId_);\n    this.deadBackChannelTimerId_ = null;\n  }\n};\n\n\n/**\n * Returns whether or not the given error/status combination is fatal or not.\n * On fatal errors we immediately close the session rather than retrying the\n * failed request.\n * @param {?ChannelRequest.Error} error The error code for the\n * failed request.\n * @param {number} statusCode The last HTTP status code.\n * @return {boolean} Whether or not the error is fatal.\n * @private\n */\nWebChannelBase.isFatalError_ = function(error, statusCode) {\n  'use strict';\n  return error == ChannelRequest.Error.UNKNOWN_SESSION_ID ||\n      (error == ChannelRequest.Error.STATUS && statusCode > 0);\n};\n\n\n/**\n * @override\n * @suppress {strictPrimitiveOperators}\n */\nWebChannelBase.prototype.onRequestComplete = function(request) {\n  'use strict';\n  this.channelDebug_.debug('Request complete');\n  let type;\n  let pendingMessages = null;\n  if (this.backChannelRequest_ == request) {\n    this.clearDeadBackchannelTimer_();\n    this.clearBpDetectionTimer_();\n    this.backChannelRequest_ = null;\n    type = WebChannelBase.ChannelType_.BACK_CHANNEL;\n  } else if (this.forwardChannelRequestPool_.hasRequest(request)) {\n    pendingMessages = request.getPendingMessages();\n    this.forwardChannelRequestPool_.removeRequest(request);\n    type = WebChannelBase.ChannelType_.FORWARD_CHANNEL;\n  } else {\n    // return if it was an old request from a previous session\n    return;\n  }\n\n  if (this.state_ == WebChannelBase.State.CLOSED) {\n    return;\n  }\n\n  if (request.getSuccess()) {\n    if (type == WebChannelBase.ChannelType_.FORWARD_CHANNEL) {\n      const size = request.getPostData() ? request.getPostData().length : 0;\n      requestStats.notifyTimingEvent(\n          size, Date.now() - request.getRequestStartTime(),\n          this.forwardChannelRetryCount_);\n      this.ensureForwardChannel_();\n      this.onSuccess_(request);\n    } else {  // i.e., back-channel\n      this.ensureBackChannel_();\n    }\n    return;\n  }\n  // Else unsuccessful. Fall through.\n\n  const lastStatusCode = request.getLastStatusCode();\n  const lastError = request.getLastError();\n  if (!WebChannelBase.isFatalError_(lastError, lastStatusCode)) {\n    // Maybe retry.\n    const self = this;\n    this.channelDebug_.debug(function() {\n      'use strict';\n      return 'Maybe retrying, last error: ' +\n          ChannelRequest.errorStringFromCode(\n              lastError, self.errorResponseStatusCode_);\n    });\n    if (type == WebChannelBase.ChannelType_.FORWARD_CHANNEL) {\n      if (this.maybeRetryForwardChannel_(request)) {\n        return;\n      }\n    }\n    if (type == WebChannelBase.ChannelType_.BACK_CHANNEL) {\n      if (this.maybeRetryBackChannel_()) {\n        return;\n      }\n    }\n    // Else exceeded max retries. Fall through.\n    this.channelDebug_.debug('Exceeded max number of retries');\n  } else {\n    // Else fatal error. Fall through and mark the pending maps as failed.\n    this.channelDebug_.debug('Not retrying due to error type');\n\n    if (lastStatusCode > 200) {\n      this.errorResponseStatusCode_ = request.getLastStatusCode();\n      this.errorResponseHeaders_ = request.getErrorResponseHeaders();\n    }\n  }\n\n  // Abort the channel now\n\n  // Record pending messages from the failed request\n  if (pendingMessages && pendingMessages.length > 0) {\n    this.forwardChannelRequestPool_.addPendingMessages(pendingMessages);\n  }\n\n  this.channelDebug_.debug('Error: HTTP request failed');\n  switch (lastError) {\n    case ChannelRequest.Error.NO_DATA:\n      this.signalError_(WebChannelBase.Error.NO_DATA);\n      break;\n    case ChannelRequest.Error.BAD_DATA:\n      this.signalError_(WebChannelBase.Error.BAD_DATA);\n      break;\n    case ChannelRequest.Error.UNKNOWN_SESSION_ID:\n      this.signalError_(WebChannelBase.Error.UNKNOWN_SESSION_ID);\n      break;\n    default:\n      this.signalError_(WebChannelBase.Error.REQUEST_FAILED);\n      break;\n  }\n};\n\n\n/**\n * @param {number} retryCount Number of retries so far.\n * @return {number} Time in ms before firing next retry request.\n * @private\n */\nWebChannelBase.prototype.getRetryTime_ = function(retryCount) {\n  'use strict';\n  let retryTime = this.baseRetryDelayMs_ +\n      Math.floor(Math.random() * this.retryDelaySeedMs_);\n  if (!this.isActive()) {\n    this.channelDebug_.debug('Inactive channel');\n    retryTime = retryTime * WebChannelBase.INACTIVE_CHANNEL_RETRY_FACTOR;\n  }\n  // Backoff for subsequent retries\n  retryTime *= retryCount;\n  return retryTime;\n};\n\n\n/**\n * @param {number} baseDelayMs The base part of the retry delay, in ms.\n * @param {number} delaySeedMs A random delay between 0 and this is added to\n *     the base part.\n */\nWebChannelBase.prototype.setRetryDelay = function(baseDelayMs, delaySeedMs) {\n  'use strict';\n  this.baseRetryDelayMs_ = baseDelayMs;\n  this.retryDelaySeedMs_ = delaySeedMs;\n};\n\n\n/**\n * Apply any handshake control headers.\n * @param {!ChannelRequest} request The underlying request object\n * @private\n */\nWebChannelBase.prototype.applyControlHeaders_ = function(request) {\n  'use strict';\n  const xhr = request.getXhr();\n  if (xhr) {\n    const clientProtocol =\n        xhr.getStreamingResponseHeader(WebChannel.X_CLIENT_WIRE_PROTOCOL);\n    if (clientProtocol) {\n      this.forwardChannelRequestPool_.applyClientProtocol(clientProtocol);\n    }\n\n    if (this.getHttpSessionIdParam()) {\n      const httpSessionIdHeader =\n          xhr.getStreamingResponseHeader(WebChannel.X_HTTP_SESSION_ID);\n      if (httpSessionIdHeader) {\n        this.setHttpSessionId(httpSessionIdHeader);\n        // update the cached uri\n        const httpSessionIdParam = this.getHttpSessionIdParam();\n\n        this.forwardChannelUri_.setParameterValue(\n            /** @type {string} */ (httpSessionIdParam),  // never null\n            httpSessionIdHeader);\n      } else {\n        this.channelDebug_.warning(\n            'Missing X_HTTP_SESSION_ID in the handshake response');\n      }\n    }\n  }\n};\n\n\n/**\n * Processes the data returned by the server.\n * @param {!Array<!Array<?>>} respArray The response array returned\n *     by the server.\n * @param {!ChannelRequest} request The underlying request object\n * @private\n * @suppress {strictPrimitiveOperators}\n */\nWebChannelBase.prototype.onInput_ = function(respArray, request) {\n  'use strict';\n  const batch =\n      this.handler_ && this.handler_.channelHandleMultipleArrays ? [] : null;\n  for (let i = 0; i < respArray.length; i++) {\n    let nextArray = respArray[i];\n    this.lastArrayId_ = nextArray[0];\n    nextArray = nextArray[1];\n    if (this.state_ == WebChannelBase.State.OPENING) {\n      if (nextArray[0] == 'c') {\n        this.sid_ = nextArray[1];\n        this.hostPrefix_ = this.correctHostPrefix(nextArray[2]);\n\n        const negotiatedVersion = nextArray[3];\n        if (negotiatedVersion != null) {\n          this.channelVersion_ = negotiatedVersion;\n          this.channelDebug_.info('VER=' + this.channelVersion_);\n        }\n\n        const negotiatedServerVersion = nextArray[4];\n        if (negotiatedServerVersion != null) {\n          this.serverVersion_ = negotiatedServerVersion;\n          this.channelDebug_.info('SVER=' + this.serverVersion_);\n        }\n\n        // CVER=22\n        const serverKeepaliveMs = nextArray[5];\n        if (serverKeepaliveMs != null &&\n            typeof serverKeepaliveMs === 'number' && serverKeepaliveMs > 0) {\n          const timeout = 1.5 * serverKeepaliveMs;\n          this.backChannelRequestTimeoutMs_ = timeout;\n          this.channelDebug_.info('backChannelRequestTimeoutMs_=' + timeout);\n        }\n\n        this.applyControlHeaders_(request);\n\n        this.state_ = WebChannelBase.State.OPENED;\n        if (this.handler_) {\n          this.handler_.channelOpened(this);\n        }\n\n        if (this.detectBufferingProxy_) {\n          this.handshakeRttMs_ = Date.now() - request.getRequestStartTime();\n          this.channelDebug_.info(\n              'Handshake RTT: ' + this.handshakeRttMs_ + 'ms');\n        }\n\n        this.startBackchannelAfterHandshake_(request);\n\n        if (this.outgoingMaps_.length > 0) {\n          this.ensureForwardChannel_();\n        }\n      } else if (nextArray[0] == 'stop' || nextArray[0] == 'close') {\n        // treat close also as an abort\n        this.signalError_(WebChannelBase.Error.STOP);\n      }\n    } else if (this.state_ == WebChannelBase.State.OPENED) {\n      if (nextArray[0] == 'stop' || nextArray[0] == 'close') {\n        if (batch && !(batch.length === 0)) {\n          this.handler_.channelHandleMultipleArrays(this, batch);\n          batch.length = 0;\n        }\n        if (nextArray[0] == 'stop') {\n          this.signalError_(WebChannelBase.Error.STOP);\n        } else {\n          this.disconnect();\n        }\n      } else if (nextArray[0] == 'noop') {\n        // ignore - noop to keep connection happy\n      } else {\n        if (batch) {\n          batch.push(nextArray);\n        } else if (this.handler_) {\n          this.handler_.channelHandleArray(this, nextArray);\n        }\n      }\n      // We have received useful data on the back-channel, so clear its retry\n      // count. We do this because back-channels by design do not complete\n      // quickly, so on a flaky connection we could have many fail to complete\n      // fully but still deliver a lot of data before they fail. We don't want\n      // to count such failures towards the retry limit, because we don't want\n      // to give up on a session if we can still receive data.\n      this.backChannelRetryCount_ = 0;\n    }\n  }\n  if (batch && !(batch.length === 0)) {\n    this.handler_.channelHandleMultipleArrays(this, batch);\n  }\n};\n\n\n/**\n * Starts the backchannel after the handshake.\n *\n * @param {!ChannelRequest} request The underlying request object\n * @private\n */\nWebChannelBase.prototype.startBackchannelAfterHandshake_ = function(request) {\n  'use strict';\n  this.backChannelUri_ = this.getBackChannelUri(\n      this.hostPrefix_, /** @type {string} */ (this.path_));\n\n  if (request.isInitialResponseDecoded()) {\n    this.channelDebug_.debug('Upgrade the handshake request to a backchannel.');\n    this.forwardChannelRequestPool_.removeRequest(request);\n    request.resetTimeout(this.backChannelRequestTimeoutMs_);\n    this.backChannelRequest_ = request;\n  } else {\n    this.ensureBackChannel_();\n  }\n};\n\n\n/**\n * Helper to ensure the channel is in the expected state.\n * @param {...number} var_args The channel must be in one of the indicated\n *     states.\n * @private\n */\nWebChannelBase.prototype.ensureInState_ = function(var_args) {\n  'use strict';\n  goog.asserts.assert(\n      goog.array.contains(arguments, this.state_),\n      'Unexpected channel state: %s', this.state_);\n};\n\n\n/**\n * Signals an error has occurred.\n * @param {WebChannelBase.Error} error The error code for the failure.\n * @private\n */\nWebChannelBase.prototype.signalError_ = function(error) {\n  'use strict';\n  this.channelDebug_.info('Error code ' + error);\n  if (error == WebChannelBase.Error.REQUEST_FAILED) {\n    // Create a separate Internet connection to check\n    // if it's a server error or user's network error.\n    let imageUri = null;\n    if (this.handler_) {\n      imageUri = this.handler_.getNetworkTestImageUri(this);\n    }\n    netUtils.testNetwork(goog.bind(this.testNetworkCallback_, this), imageUri);\n  } else {\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_OTHER);\n  }\n  this.onError_(error);\n};\n\n\n/**\n * Callback for netUtils.testNetwork during error handling.\n * @param {boolean} networkUp Whether the network is up.\n * @private\n */\nWebChannelBase.prototype.testNetworkCallback_ = function(networkUp) {\n  'use strict';\n  if (networkUp) {\n    this.channelDebug_.info('Successfully pinged google.com');\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_OTHER);\n  } else {\n    this.channelDebug_.info('Failed to ping google.com');\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_NETWORK);\n    // Do not call onError_ again to eliminate duplicated Error events.\n  }\n};\n\n\n/**\n * Called when messages have been successfully sent from the queue.\n * @param {!ChannelRequest} request The request object\n * @private\n */\nWebChannelBase.prototype.onSuccess_ = function(request) {\n  'use strict';\n  if (this.handler_) {\n    this.handler_.channelSuccess(this, request);\n  }\n};\n\n\n/**\n * Called when we've determined the final error for a channel. It closes the\n * notifiers the handler of the error and closes the channel.\n * @param {WebChannelBase.Error} error  The error code for the failure.\n * @private\n */\nWebChannelBase.prototype.onError_ = function(error) {\n  'use strict';\n  this.channelDebug_.debug('HttpChannel: error - ' + error);\n  this.state_ = WebChannelBase.State.CLOSED;\n  if (this.handler_) {\n    this.handler_.channelError(this, error);\n  }\n  this.onClose_();\n  this.cancelRequests_();\n};\n\n\n/**\n * Called when the channel has been closed. It notifiers the handler of the\n * event, and reports any pending or undelivered maps.\n * @private\n */\nWebChannelBase.prototype.onClose_ = function() {\n  'use strict';\n  this.state_ = WebChannelBase.State.CLOSED;\n  this.nonAckedMapsAtChannelClose_ = [];\n  if (this.handler_) {\n    const pendingMessages =\n        this.forwardChannelRequestPool_.getPendingMessages();\n\n    if (pendingMessages.length == 0 && this.outgoingMaps_.length == 0) {\n      this.handler_.channelClosed(this);\n    } else {\n      this.channelDebug_.debug(\n          () => 'Number of undelivered maps' +\n              ', pending: ' + pendingMessages.length +\n              ', outgoing: ' + this.outgoingMaps_.length);\n\n      goog.array.extend(this.nonAckedMapsAtChannelClose_, pendingMessages);\n      goog.array.extend(this.nonAckedMapsAtChannelClose_, this.outgoingMaps_);\n\n      this.forwardChannelRequestPool_.clearPendingMessages();\n\n      const copyOfUndeliveredMaps = goog.array.clone(this.outgoingMaps_);\n      this.outgoingMaps_.length = 0;\n\n      this.handler_.channelClosed(this, pendingMessages, copyOfUndeliveredMaps);\n    }\n  }\n};\n\n/**\n * @return {!Array<!Wire.QueuedMap>} Returns the list of non-acked maps, both\n * during an active channel or after the channel is closed. Refer to the\n * `getNonAckedMessages()` API for definitions of non-acked messages.\n */\nWebChannelBase.prototype.getNonAckedMaps = function() {\n  if (this.state_ == WebChannelBase.State.CLOSED) {\n    goog.asserts.assert(\n        this.nonAckedMapsAtChannelClose_ != null,\n        'nonAckedMapsAtChannelClose_ is not set after channel close.');\n    return this.nonAckedMapsAtChannelClose_;\n  }\n\n  // The underlying message objects are not cloned and thus exposes a mutability\n  // risk, but is chosen to make strict equality (i.e. ===) checks possible for\n  // callers.\n  let unAckedMaps = [];\n  goog.array.extend(\n      unAckedMaps, this.forwardChannelRequestPool_.getPendingMessages());\n  goog.array.extend(unAckedMaps, this.outgoingMaps_);\n\n  return unAckedMaps;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getForwardChannelUri = function(path) {\n  'use strict';\n  const uri = this.createDataUri(null, path);\n  this.channelDebug_.debug('GetForwardChannelUri: ' + uri);\n  return uri;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getConnectionState = function() {\n  'use strict';\n  return this.connState_;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getBackChannelUri = function(hostPrefix, path) {\n  'use strict';\n  const uri = this.createDataUri(\n      this.shouldUseSecondaryDomains() ? hostPrefix : null, path);\n  this.channelDebug_.debug('GetBackChannelUri: ' + uri);\n  return uri;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.createDataUri = function(\n    hostPrefix, path, opt_overridePort) {\n  'use strict';\n  let uri = goog.Uri.parse(path);\n  const uriAbsolute = (uri.getDomain() != '');\n  if (uriAbsolute) {\n    if (hostPrefix) {\n      uri.setDomain(hostPrefix + '.' + uri.getDomain());\n    }\n\n    uri.setPort(opt_overridePort || uri.getPort());\n  } else {\n    const locationPage = goog.global.location;\n    let hostName;\n    if (hostPrefix) {\n      hostName = hostPrefix + '.' + locationPage.hostname;\n    } else {\n      hostName = locationPage.hostname;\n    }\n\n    const port = opt_overridePort || +locationPage.port;\n\n    uri = goog.Uri.create(locationPage.protocol, null, hostName, port, path);\n  }\n\n  const param = this.getHttpSessionIdParam();\n  const value = this.getHttpSessionId();\n  if (param && value) {\n    uri.setParameterValue(param, value);\n  }\n\n  // Add the protocol version to the URI.\n  uri.setParameterValue('VER', this.channelVersion_);\n\n  this.addAdditionalParams_(uri);\n\n  return uri;\n};\n\n/**\n * @override\n * @param {?string} hostPrefix The host prefix, if we need an XhrIo object\n *     capable of calling a secondary domain.\n * @param {boolean=} isStreaming Whether or not fetch/streams are enabled for\n *     the underlying HTTP request.\n * @return {!goog.net.XhrIo} A new XhrIo object.\n */\nWebChannelBase.prototype.createXhrIo = function(hostPrefix, isStreaming) {\n  'use strict';\n  if (hostPrefix && !this.supportsCrossDomainXhrs_) {\n    throw new Error('Can\\'t create secondary domain capable XhrIo object.');\n  }\n  let xhr;\n  if (isStreaming && this.usesFetchStreams_ && !this.xmlHttpFactory_) {\n    xhr = new goog.net.XhrIo(\n        new goog.net.FetchXmlHttpFactory({streamBinaryChunks: true}));\n  } else {\n    xhr = new goog.net.XhrIo(this.xmlHttpFactory_);\n  }\n  xhr.setWithCredentials(this.supportsCrossDomainXhrs_);\n  return xhr;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.isActive = function() {\n  'use strict';\n  return !!this.handler_ && this.handler_.isActive(this);\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.shouldUseSecondaryDomains = function() {\n  'use strict';\n  return this.supportsCrossDomainXhrs_;\n};\n\n\n/**\n * Sets (overwrites) the forward channel flush callback.\n *\n * @param {function()} callback The callback to be invoked.\n */\nWebChannelBase.prototype.setForwardChannelFlushCallback = function(callback) {\n  'use strict';\n  this.forwardChannelFlushedCallback_ = callback;\n};\n\n\n/**\n * Abstract base class for the channel handler\n * @constructor\n * @struct\n */\nWebChannelBase.Handler = function() {};\n\n\n/**\n * Callback handler for when a batch of response arrays is received from the\n * server. When null, batched dispatching is disabled.\n * @type {?function(!WebChannelBase, !Array<!Array<?>>)}\n */\nWebChannelBase.Handler.prototype.channelHandleMultipleArrays = null;\n\n\n/**\n * Whether it's okay to make a request to the server. A handler can return\n * false if the channel should fail. For example, if the user has logged out,\n * the handler may want all requests to fail immediately.\n * @param {WebChannelBase} channel The channel.\n * @return {WebChannelBase.Error} An error code. The code should\n * return WebChannelBase.Error.OK to indicate it's okay. Any other\n * error code will cause a failure.\n */\nWebChannelBase.Handler.prototype.okToMakeRequest = function(channel) {\n  'use strict';\n  return WebChannelBase.Error.OK;\n};\n\n\n/**\n * Indicates the WebChannel has successfully negotiated with the server\n * and can now send and receive data.\n * @param {WebChannelBase} channel The channel.\n */\nWebChannelBase.Handler.prototype.channelOpened = function(channel) {};\n\n\n/**\n * New input is available for the application to process.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {!Array<?>|!Object} array The data array.\n */\nWebChannelBase.Handler.prototype.channelHandleArray = function(\n    channel, array) {};\n\n\n/**\n * Indicates messages that have been successfully sent on the channel.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {!ChannelRequest} request The request object that contains\n *     the pending messages that have been successfully delivered to the server.\n */\nWebChannelBase.Handler.prototype.channelSuccess = function(channel, request) {};\n\n\n/**\n * Indicates an error occurred on the WebChannel.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {WebChannelBase.Error} error The error code.\n */\nWebChannelBase.Handler.prototype.channelError = function(channel, error) {};\n\n\n/**\n * Indicates the WebChannel is closed. Also notifies about which maps,\n * if any, that may not have been delivered to the server.\n * @param {WebChannelBase} channel The channel.\n * @param {Array<Wire.QueuedMap>=} opt_pendingMaps The\n *     array of pending maps, which may or may not have been delivered to the\n *     server.\n * @param {Array<Wire.QueuedMap>=} opt_undeliveredMaps\n *     The array of undelivered maps, which have definitely not been delivered\n *     to the server.\n */\nWebChannelBase.Handler.prototype.channelClosed = function(\n    channel, opt_pendingMaps, opt_undeliveredMaps) {};\n\n\n/**\n * Gets any parameters that should be added at the time another connection is\n * made to the server.\n * @param {WebChannelBase} channel The channel.\n * @return {!Object} Extra parameter keys and values to add to the requests.\n */\nWebChannelBase.Handler.prototype.getAdditionalParams = function(channel) {\n  'use strict';\n  return {};\n};\n\n\n/**\n * Gets the URI of an image that can be used to test network connectivity.\n * @param {WebChannelBase} channel The channel.\n * @return {goog.Uri?} A custom URI to load for the network test.\n */\nWebChannelBase.Handler.prototype.getNetworkTestImageUri = function(channel) {\n  'use strict';\n  return null;\n};\n\n\n/**\n * Gets whether this channel is currently active. This is used to determine the\n * length of time to wait before retrying.\n * @param {WebChannelBase} channel The channel.\n * @return {boolean} Whether the channel is currently active.\n */\nWebChannelBase.Handler.prototype.isActive = function(channel) {\n  'use strict';\n  return true;\n};\n\n/**\n * Whether or not this channel uses WHATWG Fetch/streams.\n * @override\n * @return {boolean}\n */\nWebChannelBase.prototype.usesFetchStreams = function() {\n  'use strict';\n  return this.usesFetchStreams_;\n};\n\n\n/**\n * Called by the channel if enumeration of the map throws an exception.\n * @param {WebChannelBase} channel The channel.\n * @param {Object} map The map that can't be enumerated.\n */\nWebChannelBase.Handler.prototype.badMapError = function(channel, map) {};\n\n\n/**\n * Allows the handler to override a host prefix provided by the server. Will\n * be called whenever the channel has received such a prefix and is considering\n * its use.\n * @param {?string} serverHostPrefix The host prefix provided by the server.\n * @return {?string} The host prefix the client should use.\n */\nWebChannelBase.Handler.prototype.correctHostPrefix = function(\n    serverHostPrefix) {\n  'use strict';\n  return serverHostPrefix;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * This package is deprecated in favour of the Closure URL package (goog.url)\n * when manipulating URIs for use by a browser. This package uses regular\n * expressions to parse a potential URI which can fall out of sync with how a\n * browser will actually interpret the URI. See\n * `goog.uri.utils.setUrlPackageSupportLoggingHandler` for one way to identify\n * URIs that should instead be parsed using the URL package.\n *\n * Use goog.Uri(string) to parse a URI string.  Use goog.Uri.create(...) to\n * create a new instance of the goog.Uri object from Uri parts.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\ngoog.require('goog.uri.utils.StandardQueryParam');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} opt_uri Optional string URI to parse\n *        (use goog.Uri.create() to create a URI from parts), or if\n *        a goog.Uri is passed, a clone is created.\n * @param {boolean=} opt_ignoreCase If true, #getParameterValue will ignore\n * the case of the parameter name.\n *\n * @throws URIError If opt_uri is provided and URI is malformed (that is,\n *     if decodeURIComponent fails on any of the URI components).\n * @constructor\n * @struct\n */\ngoog.Uri = function(opt_uri, opt_ignoreCase) {\n  'use strict';\n  /**\n   * Scheme such as \"http\".\n   * @private {string}\n   */\n  this.scheme_ = '';\n\n  /**\n   * User credentials in the form \"username:password\".\n   * @private {string}\n   */\n  this.userInfo_ = '';\n\n  /**\n   * Domain part, e.g. \"www.google.com\".\n   * @private {string}\n   */\n  this.domain_ = '';\n\n  /**\n   * Port, e.g. 8080.\n   * @private {?number}\n   */\n  this.port_ = null;\n\n  /**\n   * Path, e.g. \"/tests/img.png\".\n   * @private {string}\n   */\n  this.path_ = '';\n\n  /**\n   * The fragment without the #.\n   * @private {string}\n   */\n  this.fragment_ = '';\n\n  /**\n   * Whether or not this Uri should be treated as Read Only.\n   * @private {boolean}\n   */\n  this.isReadOnly_ = false;\n\n  /**\n   * Whether or not to ignore case when comparing query params.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = false;\n\n  /**\n   * Object representing query data.\n   * @private {!goog.Uri.QueryData}\n   */\n  this.queryData_;\n\n  // Parse in the uri string\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ = (opt_ignoreCase !== undefined) ? opt_ignoreCase :\n                                                        opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ = !!opt_ignoreCase;\n\n    // Set the parts -- decoding as we do so.\n    // COMPATIBILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n\n  } else {\n    this.ignoreCase_ = !!opt_ignoreCase;\n    this.queryData_ = new goog.Uri.QueryData(null, this.ignoreCase_);\n  }\n};\n\n\n/**\n * Parameter name added to stop caching.\n * @type {string}\n */\ngoog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  'use strict';\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n        ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain || scheme == 'file') {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(\n          goog.Uri.encodeSpecialChars_(\n              userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n          '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(goog.Uri.encodeSpecialChars_(\n        path,\n        path.charAt(0) == '/' ? goog.Uri.reDisallowedInAbsolutePath_ :\n                                goog.Uri.reDisallowedInRelativePath_,\n        true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push(\n        '#',\n        goog.Uri.encodeSpecialChars_(\n            fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {!goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n  'use strict';\n  var absoluteUri = this.clone();\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().slice(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  'use strict';\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  'use strict';\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @throws URIError If opt_decode is true and newScheme is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newScheme New scheme value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.scheme_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  'use strict';\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  'use strict';\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @throws URIError If opt_decode is true and newUserInfo is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.userInfo_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  'use strict';\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  'use strict';\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @throws URIError If opt_decode is true and newDomain is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newDomain New domain value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.domain_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  'use strict';\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  'use strict';\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  'use strict';\n  return this.port_ != null;\n};\n\n\n/**\n * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  'use strict';\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @throws URIError If opt_decode is true and newPath is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newPath New path value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  'use strict';\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  'use strict';\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // opt_decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(\n          queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, this.ignoreCase_);\n  }\n\n  return this;\n};\n\n\n/**\n * Sets the URI query.\n * @param {string} newQuery New query value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQuery = function(newQuery, opt_decode) {\n  'use strict';\n  return this.setQueryData(newQuery, opt_decode);\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  'use strict';\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  'use strict';\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  'use strict';\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n *\n * Warning: This method, unlike other getter methods, returns encoded\n * value, instead of decoded one.\n */\ngoog.Uri.prototype.getQuery = function() {\n  'use strict';\n  return this.getEncodedQuery();\n};\n\n\n/**\n * Sets the value of the named query parameters, clearing previous values for\n * that key.\n *\n * @param {string} key The parameter to set.\n * @param {*} value The new value. Value does not need to be encoded.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValue = function(key, value) {\n  'use strict';\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\n\n\n/**\n * Sets the values of the named query parameters, clearing previous values for\n * that key.  Not new values will currently be moved to the end of the query\n * string.\n *\n * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>\n *\n * @param {string} key The parameter to set.\n * @param {*} values The new values. If values is a single\n *     string then it will be treated as the sole value. Values do not need to\n *     be encoded.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValues = function(key, values) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (!Array.isArray(values)) {\n    values = [String(values)];\n  }\n\n  this.queryData_.setValues(key, values);\n\n  return this;\n};\n\n\n/**\n * Returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @param {string} name The parameter to get values for.\n * @return {!Array<?>} The values for a given cgi parameter as a list of\n *     decoded query parameter values.\n */\ngoog.Uri.prototype.getParameterValues = function(name) {\n  'use strict';\n  return this.queryData_.getValues(name);\n};\n\n\n/**\n * Returns the first value for a given cgi parameter or undefined if the given\n * parameter name does not appear in the query string.\n * @param {string} paramName Unescaped parameter name.\n * @return {string|undefined} The first value for a given cgi parameter or\n *     undefined if the given parameter name does not appear in the query\n *     string.\n */\ngoog.Uri.prototype.getParameterValue = function(paramName) {\n  'use strict';\n  return /** @type {string|undefined} */ (this.queryData_.get(paramName));\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  'use strict';\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @throws URIError If opt_decode is true and newFragment is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newFragment New fragment value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.fragment_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  'use strict';\n  return !!this.fragment_;\n};\n\n\n/**\n * Returns true if this has the same domain as that of uri2.\n * @param {!goog.Uri} uri2 The URI object to compare to.\n * @return {boolean} true if same domain; false otherwise.\n */\ngoog.Uri.prototype.hasSameDomainAs = function(uri2) {\n  'use strict';\n  return ((!this.hasDomain() && !uri2.hasDomain()) ||\n          this.getDomain() == uri2.getDomain()) &&\n      ((!this.hasPort() && !uri2.hasPort()) ||\n       this.getPort() == uri2.getPort());\n};\n\n\n/**\n * Adds a random parameter to the Uri.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.makeUnique = function() {\n  'use strict';\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n\n  return this;\n};\n\n\n/**\n * Removes the named query parameter.\n *\n * @param {string} key The parameter to remove.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.removeParameter = function(key) {\n  'use strict';\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\n\n\n/**\n * Sets whether Uri is read only. If this goog.Uri is read-only,\n * enforceReadOnly_ will be called at the start of any function that may modify\n * this Uri.\n * @param {boolean} isReadOnly whether this goog.Uri should be read only.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setReadOnly = function(isReadOnly) {\n  'use strict';\n  this.isReadOnly_ = isReadOnly;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI is read only.\n */\ngoog.Uri.prototype.isReadOnly = function() {\n  'use strict';\n  return this.isReadOnly_;\n};\n\n\n/**\n * Checks if this Uri has been marked as read only, and if so, throws an error.\n * This should be called whenever any modifying function is called.\n */\ngoog.Uri.prototype.enforceReadOnly = function() {\n  'use strict';\n  if (this.isReadOnly_) {\n    throw new Error('Tried to modify a read-only Uri');\n  }\n};\n\n\n/**\n * Sets whether to ignore case.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setIgnoreCase = function(ignoreCase) {\n  'use strict';\n  this.ignoreCase_ = ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether to ignore case.\n */\ngoog.Uri.prototype.getIgnoreCase = function() {\n  'use strict';\n  return this.ignoreCase_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Creates a uri from the string form.  Basically an alias of new goog.Uri().\n * If a Uri object is passed to parse then it will return a clone of the object.\n *\n * @throws URIError If parsing the URI is malformed. The passed URI components\n *     should all be parseable by decodeURIComponent.\n * @param {*} uri Raw URI string or instance of Uri\n *     object.\n * @param {boolean=} opt_ignoreCase Whether to ignore the case of parameter\n * names in #getParameterValue.\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.parse = function(uri, opt_ignoreCase) {\n  'use strict';\n  return uri instanceof goog.Uri ? uri.clone() :\n                                   new goog.Uri(uri, opt_ignoreCase);\n};\n\n\n/**\n * Creates a new goog.Uri object from unencoded parts.\n *\n * @param {?string=} opt_scheme Scheme/protocol or full URI to parse.\n * @param {?string=} opt_userInfo username:password.\n * @param {?string=} opt_domain www.google.com.\n * @param {?number=} opt_port 9830.\n * @param {?string=} opt_path /some/path/to/a/file.html.\n * @param {string|goog.Uri.QueryData=} opt_query a=1&b=2.\n * @param {?string=} opt_fragment The fragment without the #.\n * @param {boolean=} opt_ignoreCase Whether to ignore parameter name case in\n *     #getParameterValue.\n *\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.create = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query,\n    opt_fragment, opt_ignoreCase) {\n  'use strict';\n  var uri = new goog.Uri(null, opt_ignoreCase);\n\n  // Only set the parts if they are defined and not empty strings.\n  opt_scheme && uri.setScheme(opt_scheme);\n  opt_userInfo && uri.setUserInfo(opt_userInfo);\n  opt_domain && uri.setDomain(opt_domain);\n  opt_port && uri.setPort(opt_port);\n  opt_path && uri.setPath(opt_path);\n  opt_query && uri.setQueryData(opt_query);\n  opt_fragment && uri.setFragment(opt_fragment);\n\n  return uri;\n};\n\n\n/**\n * Resolves a relative Uri against a base Uri, accepting both strings and\n * Uri objects.\n *\n * @param {*} base Base Uri.\n * @param {*} rel Relative Uri.\n * @return {!goog.Uri} Resolved uri.\n */\ngoog.Uri.resolve = function(base, rel) {\n  'use strict';\n  if (!(base instanceof goog.Uri)) {\n    base = goog.Uri.parse(base);\n  }\n\n  if (!(rel instanceof goog.Uri)) {\n    rel = goog.Uri.parse(rel);\n  }\n\n  return base.resolve(rel);\n};\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  'use strict';\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (\n      !goog.string.contains(path, './') && !goog.string.contains(path, '/.')) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = goog.string.startsWith(path, '/');\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length;) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @throws URIError If decodeURIComponent fails to decode val.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} opt_preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {\n  'use strict';\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  // decodeURI has the same output for '%2f' and '%252f'. We double encode %25\n  // so that we can distinguish between the 2 inputs. This is later undone by\n  // removeDoubleEncoding_.\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, '%2525')) :\n                                decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} opt_removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(\n    unescapedPart, extra, opt_removeDoubleEncoding) {\n  'use strict';\n  if (typeof unescapedPart === 'string') {\n    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  'use strict';\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  'use strict';\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n/**\n * Checks whether two URIs have the same domain.\n * @param {string} uri1String First URI string.\n * @param {string} uri2String Second URI string.\n * @return {boolean} true if the two URIs have the same domain; false otherwise.\n */\ngoog.Uri.haveSameDomain = function(uri1String, uri2String) {\n  'use strict';\n  // Differs from goog.uri.utils.haveSameDomain, since this ignores scheme.\n  // TODO(gboyer): Have this just call goog.uri.util.haveSameDomain.\n  var pieces1 = goog.uri.utils.split(uri1String);\n  var pieces2 = goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} opt_query Optional encoded query string to parse into\n *     the object.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @constructor\n * @struct\n * @final\n */\ngoog.Uri.QueryData = function(opt_query, opt_ignoreCase) {\n  'use strict';\n  /**\n   * The map containing name/value or name/array-of-values pairs.\n   * May be null if it requires parsing from the query string.\n   *\n   * We need to use a Map because we cannot guarantee that the key names will\n   * not be problematic for IE.\n   *\n   * @private {?Map<string, !Array<*>>}\n   */\n  this.keyMap_ = null;\n\n  /**\n   * The number of params, or null if it requires computing.\n   * @private {?number}\n   */\n  this.count_ = null;\n\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @private {?string}\n   */\n  this.encodedQuery_ = opt_query || null;\n\n  /**\n   * If true, ignore the case of the parameter name in #get.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = !!opt_ignoreCase;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  'use strict';\n  if (!this.keyMap_) {\n    this.keyMap_ = /** @type {!Map<string, !Array<*>>} */ (new Map());\n    this.count_ = 0;\n    if (this.encodedQuery_) {\n      var self = this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        'use strict';\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\n\n\n/**\n * Creates a new query data instance from a map of names and values.\n *\n * @param {!goog.collections.maps.MapLike<string, ?>|!Object} map Map of string\n *     parameter names to parameter value. If parameter value is an array, it is\n *     treated as if the key maps to each individual value in the\n *     array.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromMap = function(map, opt_ignoreCase) {\n  'use strict';\n  var keys = goog.structs.getKeys(map);\n  if (typeof keys == 'undefined') {\n    throw new Error('Keys are undefined');\n  }\n\n  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);\n  var values = goog.structs.getValues(map);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = values[i];\n    if (!Array.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\n\n\n/**\n * Creates a new query data instance from parallel arrays of parameter names\n * and values. Allows for duplicate parameter names. Throws an error if the\n * lengths of the arrays differ.\n *\n * @param {!Array<string>} keys Parameter names.\n * @param {!Array<?>} values Parameter values.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromKeysValues = function(\n    keys, values, opt_ignoreCase) {\n  'use strict';\n  if (keys.length != values.length) {\n    throw new Error('Mismatched lengths for keys/values');\n  }\n  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);\n  for (var i = 0; i < keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  key = this.getKeyName_(key);\n  var values = this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, (values = []));\n  }\n  values.push(value);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Removes all the params with the given key.\n * @param {string} key Name.\n * @return {boolean} Whether any parameter was removed.\n */\ngoog.Uri.QueryData.prototype.remove = function(key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n\n  key = this.getKeyName_(key);\n  if (this.keyMap_.has(key)) {\n    this.invalidateCache_();\n\n    // Decrement parameter count.\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.delete(key);\n  }\n  return false;\n};\n\n\n/**\n * Clears the parameters.\n */\ngoog.Uri.QueryData.prototype.clear = function() {\n  'use strict';\n  this.invalidateCache_();\n  this.keyMap_ = null;\n  this.count_ = 0;\n};\n\n\n/**\n * @return {boolean} Whether we have any parameters.\n */\ngoog.Uri.QueryData.prototype.isEmpty = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  return this.count_ == 0;\n};\n\n\n/**\n * Whether there is a parameter with the given name\n * @param {string} key The parameter name to check for.\n * @return {boolean} Whether there is a parameter with the given name.\n */\ngoog.Uri.QueryData.prototype.containsKey = function(key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.has(key);\n};\n\n\n/**\n * Whether there is a parameter with the given value.\n * @param {*} value The value to check for.\n * @return {boolean} Whether there is a parameter with the given value.\n */\ngoog.Uri.QueryData.prototype.containsValue = function(value) {\n  'use strict';\n  // NOTE(arv): This solution goes through all the params even if it was the\n  // first param. We can get around this by not reusing code or by switching to\n  // iterators.\n  var vals = this.getValues();\n  return goog.array.contains(vals, value);\n};\n\n\n/**\n * Runs a callback on every key-value pair in the map, including duplicate keys.\n * This won't maintain original order when duplicate keys are interspersed (like\n * getKeys() / getValues()).\n * @param {function(this:SCOPE, ?, string, !goog.Uri.QueryData)} f\n * @param {SCOPE=} opt_scope The value of \"this\" inside f.\n * @template SCOPE\n */\ngoog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    'use strict';\n    values.forEach(function(value) {\n      'use strict';\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\n\n\n/**\n * Returns all the keys of the parameters. If a key is used multiple times\n * it will be included multiple times in the returned array\n * @return {!Array<string>} All the keys of the parameters.\n */\ngoog.Uri.QueryData.prototype.getKeys = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  // We need to get the values to know how many keys to add.\n  const vals = Array.from(this.keyMap_.values());\n  const keys = Array.from(this.keyMap_.keys());\n  const rv = [];\n  for (let i = 0; i < keys.length; i++) {\n    const val = vals[i];\n    for (let j = 0; j < val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Returns all the values of the parameters with the given name. If the query\n * data has no such key this will return an empty array. If no key is given\n * all values wil be returned.\n * @param {string=} opt_key The name of the parameter to get the values for.\n * @return {!Array<?>} All the values of the parameters with the given name.\n */\ngoog.Uri.QueryData.prototype.getValues = function(opt_key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  let rv = [];\n  if (typeof opt_key === 'string') {\n    if (this.containsKey(opt_key)) {\n      rv = rv.concat(this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    // Return all values.\n    const values = Array.from(this.keyMap_.values());\n    for (let i = 0; i < values.length; i++) {\n      rv = rv.concat(values[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Sets a key value pair and removes all other keys with the same value.\n *\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.set = function(key, value) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  // TODO(chrishenry): This could be better written as\n  // this.remove(key), this.add(key, value), but that would reorder\n  // the key (since the key is first removed and then added at the\n  // end) and we would have to fix unit tests that depend on key\n  // ordering.\n  key = this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Returns the first value associated with the key. If the query data has no\n * such key this will return undefined or the optional default.\n * @param {string} key The name of the parameter to get the value for.\n * @param {*=} opt_default The default value to return if the query data\n *     has no such key.\n * @return {*} The first string value associated with the key, or opt_default\n *     if there's no value.\n */\ngoog.Uri.QueryData.prototype.get = function(key, opt_default) {\n  'use strict';\n  if (!key) {\n    return opt_default;\n  }\n  var values = this.getValues(key);\n  return values.length > 0 ? String(values[0]) : opt_default;\n};\n\n\n/**\n * Sets the values for a key. If the key already exists, this will\n * override all of the existing values that correspond to the key.\n * @param {string} key The key to set values for.\n * @param {!Array<?>} values The values to set.\n */\ngoog.Uri.QueryData.prototype.setValues = function(key, values) {\n  'use strict';\n  this.remove(key);\n\n  if (values.length > 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  'use strict';\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  const sb = [];\n\n  // In the past, we use this.getKeys() and this.getVals(), but that\n  // generates a lot of allocations as compared to simply iterating\n  // over the keys.\n  const keys = Array.from(this.keyMap_.keys());\n  for (var i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const encodedKey = goog.string.urlEncode(key);\n    const val = this.getValues(key);\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @throws URIError If URI is malformed (that is, if decodeURIComponent fails on\n *     any of the URI components).\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  'use strict';\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Invalidate the cache.\n * @private\n */\ngoog.Uri.QueryData.prototype.invalidateCache_ = function() {\n  'use strict';\n  this.encodedQuery_ = null;\n};\n\n\n/**\n * Removes all keys that are not in the provided list. (Modifies this object.)\n * @param {Array<string>} keys The desired keys.\n * @return {!goog.Uri.QueryData} a reference to this object.\n */\ngoog.Uri.QueryData.prototype.filterKeys = function(keys) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    'use strict';\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  'use strict';\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ = /** @type {!Map<string, !Array<*>>} */ (new Map(this.keyMap_));\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n\n\n/**\n * Helper function to get the key name from a JavaScript object. Converts\n * the object to a string, and to lower case if necessary.\n * @private\n * @param {*} arg The object to get a key name from.\n * @return {string} valid key name which can be looked up in #keyMap_.\n */\ngoog.Uri.QueryData.prototype.getKeyName_ = function(arg) {\n  'use strict';\n  var keyName = String(arg);\n  if (this.ignoreCase_) {\n    keyName = keyName.toLowerCase();\n  }\n  return keyName;\n};\n\n\n/**\n * Ignore case in parameter names.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n */\ngoog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {\n  'use strict';\n  var resetKeys = ignoreCase && !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      'use strict';\n      var lowerCase = key.toLowerCase();\n      if (key != lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ = ignoreCase;\n};\n\n\n/**\n * Extends a query data object with another query data or map like object. This\n * operates 'in-place', it does not create a new QueryData object.\n *\n * @param {...(?goog.Uri.QueryData|?goog.collections.maps.MapLike<?,\n *     ?>|?Object)} var_args The object from which key value pairs will be\n *     copied. Note: does not accept null.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters.\n */\ngoog.Uri.QueryData.prototype.extend = function(var_args) {\n  'use strict';\n  for (var i = 0; i < arguments.length; i++) {\n    var data = arguments[i];\n    goog.structs.forEach(data, function(value, key) {\n      'use strict';\n      this.add(key, value);\n    }, this);\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The dispose method is used to clean up references and\n * resources.\n */\n\ngoog.module('goog.dispose');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Calls `dispose` on the argument if it supports it. If obj is not an\n *     object with a dispose() method, this is a no-op.\n * @param {*} obj The object to dispose of.\n */\nfunction dispose(obj) {\n  if (obj && typeof obj.dispose == 'function') {\n    obj.dispose();\n  }\n}\nexports = dispose;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Codec functions of the v8 wire protocol. Eventually we'd want\n * to support pluggable wire-format to improve wire efficiency and to enable\n * binary encoding. Such support will require an interface class, which\n * will be added later.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WireV8');\n\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.json');\ngoog.require('goog.json.NativeJsonProcessor');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.structs');\ngoog.requireType('goog.string.Parser');\n\n\n\n/**\n * The v8 codec class.\n *\n * @constructor\n * @struct\n */\ngoog.labs.net.webChannel.WireV8 = function() {\n  'use strict';\n  /**\n   * Parser for a response payload. The parser should return an array.\n   * @private {!goog.string.Parser}\n   */\n  this.parser_ = new goog.json.NativeJsonProcessor();\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WireV8 = goog.labs.net.webChannel.WireV8;\nconst Wire = goog.labs.net.webChannel.Wire;\n\n\n/**\n * Encodes a standalone message into the wire format.\n *\n * May throw exception if the message object contains any invalid elements.\n *\n * @param {!Object|!goog.collections.maps.MapLike} message The message data.\n *     V8 only support JS objects (or Map).\n * @param {!Array<string>} buffer The text buffer to write the message to.\n * @param {string=} opt_prefix The prefix for each field of the object.\n */\nWireV8.prototype.encodeMessage = function(message, buffer, opt_prefix) {\n  'use strict';\n  const prefix = opt_prefix || '';\n  try {\n    goog.structs.forEach(message, function(value, key) {\n      'use strict';\n      let encodedValue = value;\n      if (goog.isObject(value)) {\n        encodedValue = goog.json.serialize(value);\n      }  // keep the fast-path for primitive types\n      buffer.push(prefix + key + '=' + encodeURIComponent(encodedValue));\n    });\n  } catch (ex) {\n    // We send a map here because lots of the retry logic relies on map IDs,\n    // so we have to send something (possibly redundant).\n    buffer.push(\n        prefix + 'type' +\n        '=' + encodeURIComponent('_badmap'));\n    throw ex;\n  }\n};\n\n\n/**\n * Encodes all the buffered messages of the forward channel.\n *\n * @param {!Array<Wire.QueuedMap>} messageQueue The message data.\n *     V8 only support JS objects.\n * @param {number} count The number of messages to be encoded.\n * @param {?function(!Object)} badMapHandler Callback for bad messages.\n * @return {string} the encoded messages\n */\nWireV8.prototype.encodeMessageQueue = function(\n    messageQueue, count, badMapHandler) {\n  'use strict';\n  let offset = -1;\n  while (true) {\n    const sb = ['count=' + count];\n    // To save a bit of bandwidth, specify the base mapId and the rest as\n    // offsets from it.\n    if (offset == -1) {\n      if (count > 0) {\n        offset = messageQueue[0].mapId;\n        sb.push('ofs=' + offset);\n      } else {\n        offset = 0;\n      }\n    } else {\n      sb.push('ofs=' + offset);\n    }\n    let done = true;\n    for (let i = 0; i < count; i++) {\n      let mapId = messageQueue[i].mapId;\n      const map = messageQueue[i].map;\n      mapId -= offset;\n      if (mapId < 0) {\n        // redo the encoding in case of retry/reordering, plus extra space\n        offset = Math.max(0, messageQueue[i].mapId - 100);\n        done = false;\n        continue;\n      }\n      try {\n        this.encodeMessage(map, sb, 'req' + mapId + '_');\n      } catch (ex) {\n        if (badMapHandler) {\n          badMapHandler(map);\n        }\n      }\n    }\n    if (done) {\n      return sb.join('&');\n    }\n  }\n};\n\n\n/**\n * Decodes a standalone message received from the wire. May throw exception\n * if text is ill-formatted.\n *\n * Must be valid JSON as it is insecure to use eval() to decode JS literals;\n * and eval() is disallowed in Chrome apps too.\n *\n * Invalid JS literals include null array elements, quotas etc.\n *\n * @param {string} messageText The string content as received from the wire.\n * @return {*} The decoded message object.\n */\nWireV8.prototype.decodeMessage = function(messageText) {\n  'use strict';\n  const response = this.parser_.parse(messageText);\n  goog.asserts.assert(Array.isArray(response));  // throw exception\n  return response;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A pool of forward channel requests to enable real-time\n * messaging from the client to server.\n *\n */\n\ngoog.module('goog.labs.net.webChannel.ForwardChannelRequestPool');\n\ngoog.module.declareLegacyNamespace();\n\nconst ChannelRequest = goog.require('goog.labs.net.webChannel.ChannelRequest');\nconst Wire = goog.require('goog.labs.net.webChannel.Wire');\nconst array = goog.require('goog.array');\nconst googString = goog.require('goog.string');\n\n\n/**\n * This class represents the state of all forward channel requests.\n *\n * @param {number=} opt_maxPoolSize The maximum pool size.\n *\n * @struct @constructor @final\n */\nconst ForwardChannelRequestPool = function(opt_maxPoolSize) {\n  /**\n   * The max pool size as configured.\n   *\n   * @private {number}\n   */\n  this.maxPoolSizeConfigured_ =\n      opt_maxPoolSize || ForwardChannelRequestPool.MAX_POOL_SIZE_;\n\n  /**\n   * The current size limit of the request pool. This limit is meant to be\n   * read-only after the channel is fully opened.\n   *\n   * If SPDY or HTTP2 is enabled, set it to the max pool size, which is also\n   * configurable.\n   *\n   * @private {number}\n   */\n  this.maxSize_ = ForwardChannelRequestPool.isSpdyOrHttp2Enabled_() ?\n      this.maxPoolSizeConfigured_ :\n      1;\n\n  /**\n   * The container for all the pending request objects.\n   *\n   * @private {?Set<?ChannelRequest>}\n   */\n  this.requestPool_ = null;\n\n  if (this.maxSize_ > 1) {\n    this.requestPool_ = new Set();\n  }\n\n  /**\n   * The single request object when the pool size is limited to one.\n   *\n   * @private {?ChannelRequest}\n   */\n  this.request_ = null;\n\n  /**\n   * Saved pending messages when the pool is cancelled.\n   *\n   * @private {!Array<Wire.QueuedMap>}\n   */\n  this.pendingMessages_ = [];\n};\n\n\n/**\n * The default size limit of the request pool.\n *\n * @private {number}\n */\nForwardChannelRequestPool.MAX_POOL_SIZE_ = 10;\n\n\n/**\n * @return {boolean} True if SPDY or HTTP2 is enabled. Uses chrome-specific APIs\n *     as a fallback and will always return false for other browsers where\n *     PerformanceNavigationTiming is not available.\n * @private\n */\nForwardChannelRequestPool.isSpdyOrHttp2Enabled_ = function() {\n  if (goog.global.PerformanceNavigationTiming) {\n    const entrys = /** @type {!Array<!PerformanceNavigationTiming>} */ (\n        goog.global.performance.getEntriesByType('navigation'));\n    return entrys.length > 0 &&\n        (entrys[0].nextHopProtocol == 'hq' ||\n         entrys[0].nextHopProtocol == 'h2');\n  }\n  return !!(\n      goog.global.chrome && goog.global.chrome.loadTimes &&\n      goog.global.chrome.loadTimes() &&\n      goog.global.chrome.loadTimes().wasFetchedViaSpdy);\n};\n\n\n/**\n * Once we know the client protocol (from the handshake), check if we need\n * enable the request pool accordingly. This is more robust than using\n * browser-internal APIs (specific to Chrome).\n *\n * @param {string} clientProtocol The client protocol\n */\nForwardChannelRequestPool.prototype.applyClientProtocol = function(\n    clientProtocol) {\n  if (this.requestPool_) {\n    return;\n  }\n\n  if (googString.contains(clientProtocol, 'spdy') ||\n      googString.contains(clientProtocol, 'quic') ||\n      googString.contains(clientProtocol, 'h2')) {\n    this.maxSize_ = this.maxPoolSizeConfigured_;\n    this.requestPool_ = new Set();\n    if (this.request_) {\n      this.addRequest(this.request_);\n      this.request_ = null;\n    }\n  }\n};\n\n\n/**\n * @return {boolean} True if the pool is full.\n */\nForwardChannelRequestPool.prototype.isFull = function() {\n  if (this.request_) {\n    return true;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.size >= this.maxSize_;\n  }\n\n  return false;\n};\n\n\n/**\n * @return {number} The current size limit.\n */\nForwardChannelRequestPool.prototype.getMaxSize = function() {\n  return this.maxSize_;\n};\n\n\n/**\n * @return {number} The number of pending requests in the pool.\n */\nForwardChannelRequestPool.prototype.getRequestCount = function() {\n  if (this.request_) {\n    return 1;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.size;\n  }\n\n  return 0;\n};\n\n\n/**\n * @param {ChannelRequest} req The channel request.\n * @return {boolean} True if the request is a included inside the pool.\n */\nForwardChannelRequestPool.prototype.hasRequest = function(req) {\n  if (this.request_) {\n    return this.request_ == req;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.has(req);\n  }\n\n  return false;\n};\n\n\n/**\n * Adds a new request to the pool.\n *\n * @param {!ChannelRequest} req The new channel request.\n */\nForwardChannelRequestPool.prototype.addRequest = function(req) {\n  if (this.requestPool_) {\n    this.requestPool_.add(req);\n  } else {\n    this.request_ = req;\n  }\n};\n\n\n/**\n * Removes the given request from the pool.\n *\n * @param {ChannelRequest} req The channel request.\n * @return {boolean} Whether the request has been removed from the pool.\n */\nForwardChannelRequestPool.prototype.removeRequest = function(req) {\n  if (this.request_ && this.request_ == req) {\n    this.request_ = null;\n    return true;\n  }\n\n  if (this.requestPool_ && this.requestPool_.has(req)) {\n    this.requestPool_.delete(req);\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * Clears the pool and cancel all the pending requests.\n */\nForwardChannelRequestPool.prototype.cancel = function() {\n  // save any pending messages\n  this.pendingMessages_ = this.getPendingMessages();\n\n  if (this.request_) {\n    this.request_.cancel();\n    this.request_ = null;\n    return;\n  }\n\n  if (this.requestPool_ && this.requestPool_.size !== 0) {\n    for (const val of this.requestPool_.values()) {\n      val.cancel();\n    }\n    this.requestPool_.clear();\n  }\n};\n\n\n/**\n * @return {boolean} Whether there are any pending requests.\n */\nForwardChannelRequestPool.prototype.hasPendingRequest = function() {\n  return (this.request_ != null) ||\n      (this.requestPool_ != null && this.requestPool_.size !== 0);\n};\n\n\n/**\n * @return {!Array<Wire.QueuedMap>} All the pending messages from the pool,\n *     as a new array.\n */\nForwardChannelRequestPool.prototype.getPendingMessages = function() {\n  if (this.request_ != null) {\n    return this.pendingMessages_.concat(this.request_.getPendingMessages());\n  }\n\n  if (this.requestPool_ != null && this.requestPool_.size !== 0) {\n    let result = this.pendingMessages_;\n    for (const val of this.requestPool_.values()) {\n      result = result.concat(val.getPendingMessages());\n    }\n    return result;\n  }\n\n  return array.clone(this.pendingMessages_);\n};\n\n\n/**\n * Records pending messages, e.g. when a request receives a failed response.\n *\n * @param {!Array<Wire.QueuedMap>} messages Pending messages.\n */\nForwardChannelRequestPool.prototype.addPendingMessages = function(messages) {\n  this.pendingMessages_ = this.pendingMessages_.concat(messages);\n};\n\n\n/**\n * Clears any recorded pending messages.\n */\nForwardChannelRequestPool.prototype.clearPendingMessages = function() {\n  this.pendingMessages_.length = 0;\n};\n\n\n/**\n * Cancels all pending requests and force the completion of channel requests.\n *\n * Need go through the standard onRequestComplete logic to expose the max-retry\n * failure in the standard way.\n *\n * @param {function(!ChannelRequest)} onComplete The completion callback.\n * @return {boolean} true if any request has been forced to complete.\n */\nForwardChannelRequestPool.prototype.forceComplete = function(onComplete) {\n  if (this.request_ != null) {\n    this.request_.cancel();\n    onComplete(this.request_);\n    return true;\n  }\n\n  if (this.requestPool_ && this.requestPool_.size !== 0) {\n    for (const val of this.requestPool_.values()) {\n      val.cancel();\n      onComplete(val);\n    }\n    return true;\n  }\n\n  return false;\n};\n\nexports = ForwardChannelRequestPool;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generics method for collection-like classes and objects.\n *\n *\n * This file contains functions to work with collections. It supports using\n * Map, Set, Array and Object and other classes that implement collection-like\n * methods.\n * @suppress {strictMissingProperties}\n */\n\n\ngoog.provide('goog.structs');\n\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n// We treat an object as a dictionary if it has getKeys or it is an object that\n// isn't arrayLike.\n\n\n/**\n * Returns the number of values in the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {number} The number of values in the collection-like object.\n */\ngoog.structs.getCount = function(col) {\n  'use strict';\n  if (col.getCount && typeof col.getCount == 'function') {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\n\n\n/**\n * Returns the values of the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {!Array<?>} The values in the collection-like object.\n */\ngoog.structs.getValues = function(col) {\n  'use strict';\n  if (col.getValues && typeof col.getValues == 'function') {\n    return col.getValues();\n  }\n  // ES6 Map and Set both define a values function that returns an iterator.\n  // The typeof check allows the compiler to remove the Map and Set polyfills\n  // if they are otherwise unused throughout the entire binary.\n  if ((typeof Map !== 'undefined' && col instanceof Map) ||\n      (typeof Set !== 'undefined' && col instanceof Set)) {\n    return Array.from(col.values());\n  }\n  if (typeof col === 'string') {\n    return col.split('');\n  }\n  if (goog.isArrayLike(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\n\n\n/**\n * Returns the keys of the collection. Some collections have no notion of\n * keys/indexes and this function will return undefined in those cases.\n * @param {Object} col The collection-like object.\n * @return {!Array|undefined} The keys in the collection.\n */\ngoog.structs.getKeys = function(col) {\n  'use strict';\n  if (col.getKeys && typeof col.getKeys == 'function') {\n    return col.getKeys();\n  }\n  // if we have getValues but no getKeys we know this is a key-less collection\n  if (col.getValues && typeof col.getValues == 'function') {\n    return undefined;\n  }\n  // ES6 Map and Set both define a keys function that returns an iterator. For\n  // Sets this iterates over the same values as the values iterator.\n  // The typeof check allows the compiler to remove the Map and Set polyfills\n  // if they are otherwise unused throughout the entire binary.\n  if (typeof Map !== 'undefined' && col instanceof Map) {\n    return Array.from(col.keys());\n  }\n  // Unlike the native Set, goog.structs.Set does not expose keys as the values.\n  if (typeof Set !== 'undefined' && col instanceof Set) {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n\n  return goog.object.getKeys(col);\n};\n\n\n/**\n * Whether the collection contains the given value. This is O(n) and uses\n * equals (==) to test the existence.\n * @param {Object} col The collection-like object.\n * @param {*} val The value to check for.\n * @return {boolean} True if the map contains the value.\n */\ngoog.structs.contains = function(col, val) {\n  'use strict';\n  if (col.contains && typeof col.contains == 'function') {\n    return col.contains(val);\n  }\n  if (col.containsValue && typeof col.containsValue == 'function') {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return goog.array.contains(/** @type {!Array<?>} */ (col), val);\n  }\n  return goog.object.containsValue(col, val);\n};\n\n\n/**\n * Whether the collection is empty.\n * @param {Object} col The collection-like object.\n * @return {boolean} True if empty.\n */\ngoog.structs.isEmpty = function(col) {\n  'use strict';\n  if (col.isEmpty && typeof col.isEmpty == 'function') {\n    return col.isEmpty();\n  }\n\n  // We do not use goog.string.isEmptyOrWhitespace because here we treat the\n  // string as\n  // collection and as such even whitespace matters\n\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return /** @type {!Array<?>} */ (col).length === 0;\n  }\n  return goog.object.isEmpty(col);\n};\n\n\n/**\n * Removes all the elements from the collection.\n * @param {Object} col The collection-like object.\n * @return {void}\n */\ngoog.structs.clear = function(col) {\n  'use strict';\n  // NOTE(arv): This should not contain strings because strings are immutable\n  if (col.clear && typeof col.clear == 'function') {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(/** @type {IArrayLike<?>} */ (col));\n  } else {\n    goog.object.clear(col);\n  }\n};\n\n\n/**\n * Calls a function for each value in a collection. The function takes\n * three arguments; the value, the key and the collection.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):?} f The function to call for every value.\n *     This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and the return value is irrelevant.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {void}\n * @template T,S\n * @deprecated Use a more specific method, e.g. native Array.prototype.forEach,\n *     or for-of.\n */\ngoog.structs.forEach = function(col, f, opt_obj) {\n  'use strict';\n  if (col.forEach && typeof col.forEach == 'function') {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || typeof col === 'string') {\n    Array.prototype.forEach.call(/** @type {!Array<?>} */ (col), f, opt_obj);\n  } else {\n    var keys = goog.structs.getKeys(col);\n    var values = goog.structs.getValues(col);\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n      f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col);\n    }\n  }\n};\n\n\n/**\n * Calls a function for every value in the collection. When a call returns true,\n * adds the value to a new collection (Array is returned by default).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and should return a Boolean. If the\n *     return value is true the value is added to the result collection. If it\n *     is false the value is not included.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object|!Array<?>} A new collection where the passed values are\n *     present. If col is a key-less collection an array is returned.  If col\n *     has keys and values a plain old JS object is returned.\n * @template T,S\n */\ngoog.structs.filter = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.filter == 'function') {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.filter.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      if (f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col)) {\n        rv[keys[i]] = values[i];\n      }\n    }\n  } else {\n    // We should not use Array#filter here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls a function for every value in the collection and adds the result into a\n * new collection (defaults to creating a new Array).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):V} f The function to call for every value.\n *     This function takes 3 arguments (the value, the key or undefined if the\n *     collection has no notion of keys, and the collection) and should return\n *     something. The result will be used as the value in the new collection.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object<V>|!Array<V>} A new collection with the new values.  If\n *     col is a key-less collection an array is returned.  If col has keys and\n *     values a plain old JS object is returned.\n * @template T,S,V\n */\ngoog.structs.map = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.map == 'function') {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.map.call(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      rv[keys[i]] = f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col);\n    }\n  } else {\n    // We should not use Array#map here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      rv[i] = f.call(/** @type {?} */ (opt_obj), values[i], undefined, col);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls f for each value in a collection. If any call returns true this returns\n * true (without checking the rest). If all returns false this returns false.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or undefined\n *     if the collection has no notion of keys, and the collection) and should\n *     return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if any value passes the test.\n * @template T,S\n */\ngoog.structs.some = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.some == 'function') {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.some.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls f for each value in a collection. If all calls return true this return\n * true this returns true. If any returns false this returns false at this point\n *  and does not continue to check the remaining values.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or\n *     undefined if the collection has no notion of keys, and the collection)\n *     and should return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if all key-value pairs pass the test.\n * @template T,S\n */\ngoog.structs.every = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.every == 'function') {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.every.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (!f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Simple utilities for dealing with URI strings.\n *\n * This package is deprecated in favour of the Closure URL package (goog.url)\n * when manipulating URIs for use by a browser. This package uses regular\n * expressions to parse a potential URI which can fall out of sync with how a\n * browser will actually interpret the URI. See\n * `goog.uri.utils.setUrlPackageSupportLoggingHandler` for one way to identify\n * URIs that should instead be parsed using the URL package.\n *\n * This is intended to be a lightweight alternative to constructing goog.Uri\n * objects.  Whereas goog.Uri adds several kilobytes to the binary regardless\n * of how much of its functionality you use, this is designed to be a set of\n * mostly-independent utilities so that the compiler includes only what is\n * necessary for the task.  Estimated savings of porting is 5k pre-gzip and\n * 1.5k post-gzip.  To ensure the savings remain, future developers should\n * avoid adding new functionality to existing functions, but instead create\n * new ones and factor out shared code.\n *\n * Many of these utilities have limited functionality, tailored to common\n * cases.  The query parameter utilities assume that the parameter keys are\n * already encoded, since most keys are compile-time alphanumeric strings.  The\n * query parameter mutation utilities also do not tolerate fragment identifiers.\n *\n * By design, these functions can be slower than goog.Uri equivalents.\n * Repeated calls to some of functions may be quadratic in behavior for IE,\n * although the effect is somewhat limited given the 2kb limit.\n *\n * One advantage of the limited functionality here is that this approach is\n * less sensitive to differences in URI encodings than goog.Uri, since these\n * functions operate on strings directly, rather than decoding them and\n * then re-encoding.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\ngoog.provide('goog.uri.utils.QueryArray');\ngoog.provide('goog.uri.utils.QueryValue');\ngoog.provide('goog.uri.utils.StandardQueryParam');\n\ngoog.require('goog.asserts');\ngoog.require('goog.string');\n\n\n/**\n * Character codes inlined to avoid object allocations due to charCode.\n * @enum {number}\n * @private\n */\ngoog.uri.utils.CharCode_ = {\n  AMPERSAND: 38,\n  EQUAL: 61,\n  HASH: 35,\n  QUESTION: 63\n};\n\n\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?string=} opt_scheme The scheme such as 'http'.\n * @param {?string=} opt_userInfo The user name before the '@'.\n * @param {?string=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {(string|number|null)=} opt_port The port number.\n * @param {?string=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?string=} opt_queryData The URI-encoded query data.\n * @param {?string=} opt_fragment The URI-encoded fragment identifier.\n * @return {string} The fully combined URI.\n */\ngoog.uri.utils.buildFromEncodedParts = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData,\n    opt_fragment) {\n  'use strict';\n  var out = '';\n\n  if (opt_scheme) {\n    out += opt_scheme + ':';\n  }\n\n  if (opt_domain) {\n    out += '//';\n\n    if (opt_userInfo) {\n      out += opt_userInfo + '@';\n    }\n\n    out += opt_domain;\n\n    if (opt_port) {\n      out += ':' + opt_port;\n    }\n  }\n\n  if (opt_path) {\n    out += opt_path;\n  }\n\n  if (opt_queryData) {\n    out += '?' + opt_queryData;\n  }\n\n  if (opt_fragment) {\n    out += '#' + opt_fragment;\n  }\n\n  return out;\n};\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n *\n * TODO(user): separate out the authority terminating characters once this\n * file is moved to ES6.\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +  // Anchor against the entire string.\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^\\\\\\\\/?#]*)@)?' +  // userInfo\n    '([^\\\\\\\\/?#]*?)' +       // domain\n    '(?::([0-9]+))?' +       // port\n    '(?=[\\\\\\\\/?#]|$)' +      // authority-terminating character.\n    ')?' +\n    '([^?#]+)?' +          // path\n    '(?:\\\\?([^#]*))?' +    // query\n    '(?:#([\\\\s\\\\S]*))?' +  // fragment. Can't use '.*' with 's' flag as Firefox\n                           // doesn't support the flag, and can't use an\n                           // \"everything set\" ([^]) as IE10 doesn't match any\n                           // characters with it.\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n/**\n * @type {?function(string)}\n * @private\n */\ngoog.uri.utils.urlPackageSupportLoggingHandler_ = null;\n\n/**\n * @param {?function(string)} handler The handler function to call when a URI\n *     with a protocol that is better supported by the Closure URL package is\n *     detected.\n */\ngoog.uri.utils.setUrlPackageSupportLoggingHandler = function(handler) {\n  'use strict';\n  goog.uri.utils.urlPackageSupportLoggingHandler_ = handler;\n};\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.ComponentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  'use strict';\n  // See @return comment -- never null.\n  var result = /** @type {!Array<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n  if (goog.uri.utils.urlPackageSupportLoggingHandler_ &&\n      ['http', 'https', 'ws', 'wss',\n       'ftp'].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) >= 0) {\n    goog.uri.utils.urlPackageSupportLoggingHandler_(uri);\n  }\n  return result;\n};\n\n\n/**\n * @param {?string} uri A possibly null string.\n * @param {boolean=} opt_preserveReserved If true, percent-encoding of RFC-3986\n *     reserved characters will not be removed.\n * @return {?string} The string URI-decoded, or null if uri is null.\n * @private\n */\ngoog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {\n  'use strict';\n  if (!uri) {\n    return uri;\n  }\n\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\n\n\n/**\n * Gets a URI component by index.\n *\n * It is preferred to use the getPathEncoded() variety of functions ahead,\n * since they are more readable.\n *\n * @param {goog.uri.utils.ComponentIndex} componentIndex The component index.\n * @param {string} uri The URI to examine.\n * @return {?string} The still-encoded component, or null if the component\n *     is not present.\n * @private\n */\ngoog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {\n  'use strict';\n  // Convert undefined, null, and empty string into null.\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The protocol or scheme, or null if none.  Does not\n *     include trailing colons or slashes.\n */\ngoog.uri.utils.getScheme = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\n\n\n/**\n * Gets the effective scheme for the URL.  If the URL is relative then the\n * scheme is derived from the page's location.\n * @param {string} uri The URI to examine.\n * @return {string} The protocol or scheme, always lower case.\n */\ngoog.uri.utils.getEffectiveScheme = function(uri) {\n  'use strict';\n  var scheme = goog.uri.utils.getScheme(uri);\n  if (!scheme && goog.global.self && goog.global.self.location) {\n    var protocol = goog.global.self.location.protocol;\n    scheme = protocol.slice(0, -1);\n  }\n  // NOTE: When called from a web worker in Firefox 3.5, location may be null.\n  // All other browsers with web workers support self.location from the worker.\n  return scheme ? scheme.toLowerCase() : '';\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The user name still encoded, or null if none.\n */\ngoog.uri.utils.getUserInfoEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded user info, or null if none.\n */\ngoog.uri.utils.getUserInfo = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getUserInfoEncoded(uri));\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The domain name still encoded, or null if none.\n */\ngoog.uri.utils.getDomainEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded domain, or null if none.\n */\ngoog.uri.utils.getDomain = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getDomainEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?number} The port number, or null if none.\n */\ngoog.uri.utils.getPort = function(uri) {\n  'use strict';\n  // Coerce to a number.  If the result of getComponentByIndex_ is null or\n  // non-numeric, the number coersion yields NaN.  This will then return\n  // null for all non-numeric cases (though also zero, which isn't a relevant\n  // port number).\n  return Number(\n             goog.uri.utils.getComponentByIndex_(\n                 goog.uri.utils.ComponentIndex.PORT, uri)) ||\n      null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The path still encoded, or null if none. Includes the\n *     leading slash, if any.\n */\ngoog.uri.utils.getPathEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.PATH, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded path, or null if none.  Includes the leading\n *     slash, if any.\n */\ngoog.uri.utils.getPath = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getPathEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The query data still encoded, or null if none.  Does not\n *     include the question mark itself.\n */\ngoog.uri.utils.getQueryData = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The fragment identifier, or null if none.  Does not\n *     include the hash mark itself.\n */\ngoog.uri.utils.getFragmentEncoded = function(uri) {\n  'use strict';\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? null : uri.slice(hashIndex + 1);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @param {?string} fragment The encoded fragment identifier, or null if none.\n *     Does not include the hash mark itself.\n * @return {string} The URI with the fragment set.\n */\ngoog.uri.utils.setFragmentEncoded = function(uri, fragment) {\n  'use strict';\n  return goog.uri.utils.removeFragment(uri) + (fragment ? '#' + fragment : '');\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded fragment identifier, or null if none.  Does\n *     not include the hash mark.\n */\ngoog.uri.utils.getFragment = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getFragmentEncoded(uri));\n};\n\n\n/**\n * Extracts everything up to the port of the URI.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getHost = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME],\n      pieces[goog.uri.utils.ComponentIndex.USER_INFO],\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Returns the origin for a given URL.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getOrigin = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME], null /* opt_userInfo */,\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Extracts the path of the URL and everything after.\n * @param {string} uri The URI string.\n * @return {string} The URI, starting at the path and including the query\n *     parameters and fragment identifier.\n */\ngoog.uri.utils.getPathAndAfter = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH],\n      pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Gets the URI with the fragment identifier removed.\n * @param {string} uri The URI to examine.\n * @return {string} Everything preceding the hash mark.\n */\ngoog.uri.utils.removeFragment = function(uri) {\n  'use strict';\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? uri : uri.slice(0, hashIndex);\n};\n\n\n/**\n * Ensures that two URI's have the exact same domain, scheme, and port.\n *\n * Unlike the version in goog.Uri, this checks protocol, and therefore is\n * suitable for checking against the browser's same-origin policy.\n *\n * @param {string} uri1 The first URI.\n * @param {string} uri2 The second URI.\n * @return {boolean} Whether they have the same scheme, domain and port.\n */\ngoog.uri.utils.haveSameDomain = function(uri1, uri2) {\n  'use strict';\n  var pieces1 = goog.uri.utils.split(uri1);\n  var pieces2 = goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.SCHEME] ==\n      pieces2[goog.uri.utils.ComponentIndex.SCHEME] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n/**\n * Asserts that there are no fragment or query identifiers, only in uncompiled\n * mode.\n * @param {string} uri The URI to examine.\n * @private\n */\ngoog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {\n  'use strict';\n  goog.asserts.assert(\n      uri.indexOf('#') < 0 && uri.indexOf('?') < 0,\n      'goog.uri.utils: Fragment or query identifiers are not supported: [%s]',\n      uri);\n};\n\n\n/**\n * Supported query parameter values by the parameter serializing utilities.\n *\n * If a value is null or undefined, the key-value pair is skipped, as an easy\n * way to omit parameters conditionally.  Non-array parameters are converted\n * to a string and URI encoded.  Array values are expanded into multiple\n * &key=value pairs, with each element stringized and URI-encoded.\n *\n * @typedef {*}\n */\ngoog.uri.utils.QueryValue;\n\n\n/**\n * An array representing a set of query parameters with alternating keys\n * and values.\n *\n * Keys are assumed to be URI encoded already and live at even indices.  See\n * goog.uri.utils.QueryValue for details on how parameter values are encoded.\n *\n * Example:\n * <pre>\n * var data = [\n *   // Simple param: ?name=BobBarker\n *   'name', 'BobBarker',\n *   // Conditional param -- may be omitted entirely.\n *   'specialDietaryNeeds', hasDietaryNeeds() ? getDietaryNeeds() : null,\n *   // Multi-valued param: &house=LosAngeles&house=NewYork&house=null\n *   'house', ['LosAngeles', 'NewYork', null]\n * ];\n * </pre>\n *\n * @typedef {!Array<string|goog.uri.utils.QueryValue>}\n */\ngoog.uri.utils.QueryArray;\n\n\n/**\n * Parses encoded query parameters and calls callback function for every\n * parameter found in the string.\n *\n * Missing value of parameter (e.g. “…&key&…”) is treated as if the value was an\n * empty string.  Keys may be empty strings (e.g. “…&=value&…”) which also means\n * that “…&=&…” and “…&&…” will result in an empty key and value.\n *\n * @param {string} encodedQuery Encoded query string excluding question mark at\n *     the beginning.\n * @param {function(string, string)} callback Function called for every\n *     parameter found in query string.  The first argument (name) will not be\n *     urldecoded (so the function is consistent with buildQueryData), but the\n *     second will.  If the parameter has no value (i.e. “=” was not present)\n *     the second argument (value) will be an empty string.\n */\ngoog.uri.utils.parseQueryData = function(encodedQuery, callback) {\n  'use strict';\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs = encodedQuery.split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var indexOfEquals = pairs[i].indexOf('=');\n    var name = null;\n    var value = null;\n    if (indexOfEquals >= 0) {\n      name = pairs[i].substring(0, indexOfEquals);\n      value = pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name = pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : '');\n  }\n};\n\n\n/**\n * Split the URI into 3 parts where the [1] is the queryData without a leading\n * '?'. For example, the URI http://foo.com/bar?a=b#abc returns\n * ['http://foo.com/bar','a=b','#abc'].\n * @param {string} uri The URI to parse.\n * @return {!Array<string>} An array representation of uri of length 3 where the\n *     middle value is the queryData without a leading '?'.\n * @private\n */\ngoog.uri.utils.splitQueryData_ = function(uri) {\n  'use strict';\n  // Find the query data and hash.\n  var hashIndex = uri.indexOf('#');\n  if (hashIndex < 0) {\n    hashIndex = uri.length;\n  }\n  var questionIndex = uri.indexOf('?');\n  var queryData;\n  if (questionIndex < 0 || questionIndex > hashIndex) {\n    questionIndex = hashIndex;\n    queryData = '';\n  } else {\n    queryData = uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.slice(0, questionIndex), queryData, uri.slice(hashIndex)];\n};\n\n\n/**\n * Join an array created by splitQueryData_ back into a URI.\n * @param {!Array<string>} parts A URI in the form generated by splitQueryData_.\n * @return {string} The joined URI.\n * @private\n */\ngoog.uri.utils.joinQueryData_ = function(parts) {\n  'use strict';\n  return parts[0] + (parts[1] ? '?' + parts[1] : '') + parts[2];\n};\n\n\n/**\n * @param {string} queryData\n * @param {string} newData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryData_ = function(queryData, newData) {\n  'use strict';\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + '&' + newData : newData;\n};\n\n\n/**\n * @param {string} uri\n * @param {string} queryData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {\n  'use strict';\n  if (!queryData) {\n    return uri;\n  }\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Appends key=value pairs to an array, supporting multi-valued objects.\n * @param {*} key The key prefix.\n * @param {goog.uri.utils.QueryValue} value The value to serialize.\n * @param {!Array<string>} pairs The array to which the 'key=value' strings\n *     should be appended.\n * @private\n */\ngoog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {\n  'use strict';\n  goog.asserts.assertString(key);\n  if (Array.isArray(value)) {\n    // Convince the compiler it's an array.\n    goog.asserts.assertArray(value);\n    for (var j = 0; j < value.length; j++) {\n      // Convert to string explicitly, to short circuit the null and array\n      // logic in this function -- this ensures that null and undefined get\n      // written as literal 'null' and 'undefined', and arrays don't get\n      // expanded out but instead encoded in the default way.\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value != null) {\n    // Skip a top-level null or undefined entirely.\n    pairs.push(\n        key +\n        // Check for empty string. Zero gets encoded into the url as literal\n        // strings.  For empty string, skip the equal sign, to be consistent\n        // with UriBuilder.java.\n        (value === '' ? '' : '=' + goog.string.urlEncode(value)));\n  }\n};\n\n\n/**\n * Builds a query data string from a sequence of alternating keys and values.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!IArrayLike<string|goog.uri.utils.QueryValue>} keysAndValues\n *     Alternating keys and values. See the QueryArray typedef.\n * @param {number=} opt_startIndex A start offset into the arary, defaults to 0.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {\n  'use strict';\n  goog.asserts.assert(\n      Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0,\n      'goog.uri.utils: Key/value lists must be even in length.');\n\n  var params = [];\n  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {\n    var key = /** @type {string} */ (keysAndValues[i]);\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Builds a query data string from a map.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!Object<string, goog.uri.utils.QueryValue>} map An object where keys\n *     are URI-encoded parameter keys, and the values are arbitrary types\n *     or arrays. Keys with a null value are dropped.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryDataFromMap = function(map) {\n  'use strict';\n  var params = [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Appends URI parameters to an existing URI.\n *\n * The variable arguments may contain alternating keys and values.  Keys are\n * assumed to be already URI encoded.  The values should not be URI-encoded,\n * and will instead be encoded by this function.\n * <pre>\n * appendParams('http://www.foo.com?existing=true',\n *     'key1', 'value1',\n *     'key2', 'value?willBeEncoded',\n *     'key3', ['valueA', 'valueB', 'valueC'],\n *     'key4', null);\n * result: 'http://www.foo.com?existing=true&' +\n *     'key1=value1&' +\n *     'key2=value%3FwillBeEncoded&' +\n *     'key3=valueA&key3=valueB&key3=valueC'\n * </pre>\n *\n * A single call to this function will not exhibit quadratic behavior in IE,\n * whereas multiple repeated calls may, although the effect is limited by\n * fact that URL's generally can't exceed 2kb.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {...(goog.uri.utils.QueryArray|goog.uri.utils.QueryValue)}\n * var_args\n *     An array or argument list conforming to goog.uri.utils.QueryArray.\n * @return {string} The URI with all query parameters added.\n */\ngoog.uri.utils.appendParams = function(uri, var_args) {\n  'use strict';\n  var queryData = arguments.length == 2 ?\n      goog.uri.utils.buildQueryData(arguments[1], 0) :\n      goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends query parameters from a map.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object<goog.uri.utils.QueryValue>} map An object where keys are\n *     URI-encoded parameter keys, and the values are arbitrary types or arrays.\n *     Keys with a null value are dropped.\n * @return {string} The new parameters.\n */\ngoog.uri.utils.appendParamsFromMap = function(uri, map) {\n  'use strict';\n  var queryData = goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends a single URI parameter.\n *\n * Repeated calls to this can exhibit quadratic behavior in IE6 due to the\n * way string append works, though it should be limited given the 2kb limit.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} key The key, which must already be URI encoded.\n * @param {*=} opt_value The value, which will be stringized and encoded\n *     (assumed not already to be encoded).  If omitted, undefined, or null, the\n *     key will be added as a valueless parameter.\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.appendParam = function(uri, key, opt_value) {\n  'use strict';\n  var value = (opt_value != null) ? '=' + goog.string.urlEncode(opt_value) : '';\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\n\n\n/**\n * Finds the next instance of a query parameter with the specified name.\n *\n * Does not instantiate any objects.\n *\n * @param {string} uri The URI to search.  May contain a fragment identifier\n *     if opt_hashIndex is specified.\n * @param {number} startIndex The index to begin searching for the key at.  A\n *     match may be found even if this is one character after the ampersand.\n * @param {string} keyEncoded The URI-encoded key.\n * @param {number} hashOrEndIndex Index to stop looking at.  If a hash\n *     mark is present, it should be its index, otherwise it should be the\n *     length of the string.\n * @return {number} The position of the first character in the key's name,\n *     immediately after either a question mark or a dot.\n * @private\n */\ngoog.uri.utils.findParam_ = function(\n    uri, startIndex, keyEncoded, hashOrEndIndex) {\n  'use strict';\n  var index = startIndex;\n  var keyLength = keyEncoded.length;\n\n  // Search for the key itself and post-filter for surronuding punctuation,\n  // rather than expensively building a regexp.\n  while ((index = uri.indexOf(keyEncoded, index)) >= 0 &&\n         index < hashOrEndIndex) {\n    var precedingChar = uri.charCodeAt(index - 1);\n    // Ensure that the preceding character is '&' or '?'.\n    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n        precedingChar == goog.uri.utils.CharCode_.QUESTION) {\n      // Ensure the following character is '&', '=', '#', or NaN\n      // (end of string).\n      var followingChar = uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL ||\n          followingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n          followingChar == goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index += keyLength + 1;\n  }\n\n  return -1;\n};\n\n\n/**\n * Regular expression for finding a hash mark or end of string.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.hashOrEndRe_ = /#|$/;\n\n\n/**\n * Determines if the URI contains a specific key.\n *\n * Performs no object instantiations.\n *\n * @param {string} uri The URI to process.  May contain a fragment\n *     identifier.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {boolean} Whether the key is present.\n */\ngoog.uri.utils.hasParam = function(uri, keyEncoded) {\n  'use strict';\n  return goog.uri.utils.findParam_(\n             uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;\n};\n\n\n/**\n * Gets the first value of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {?string} The first value of the parameter (URI-decoded), or null\n *     if the parameter is not found.\n */\ngoog.uri.utils.getParamValue = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex =\n      goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n\n  if (foundIndex < 0) {\n    return null;\n  } else {\n    var endPosition = uri.indexOf('&', foundIndex);\n    if (endPosition < 0 || endPosition > hashOrEndIndex) {\n      endPosition = hashOrEndIndex;\n    }\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    return goog.string.urlDecode(\n        uri.slice(foundIndex, endPosition !== -1 ? endPosition : 0));\n  }\n};\n\n\n/**\n * Gets all values of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {!Array<string>} All URI-decoded values with the given key.\n *     If the key is not found, this will have length 0, but never be null.\n */\ngoog.uri.utils.getParamValues = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var result = [];\n\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Find where this parameter ends, either the '&' or the end of the\n    // query parameters.\n    position = uri.indexOf('&', foundIndex);\n    if (position < 0 || position > hashOrEndIndex) {\n      position = hashOrEndIndex;\n    }\n\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    result.push(\n        goog.string.urlDecode(uri.slice(foundIndex, Math.max(position, 0))));\n  }\n\n  return result;\n};\n\n\n/**\n * Regexp to find trailing question marks and ampersands.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;\n\n\n/**\n * Removes all instances of a query parameter.\n * @param {string} uri The URI to process.  Must not contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.\n * @return {string} The URI with all instances of the parameter removed.\n */\ngoog.uri.utils.removeParam = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var buffer = [];\n\n  // Look for a query parameter.\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Get the portion of the query string up to, but not including, the ?\n    // or & starting the parameter.\n    buffer.push(uri.substring(position, foundIndex));\n    // Progress to immediately after the '&'.  If not found, go to the end.\n    // Avoid including the hash mark.\n    position = Math.min(\n        (uri.indexOf('&', foundIndex) + 1) || hashOrEndIndex, hashOrEndIndex);\n  }\n\n  // Append everything that is remaining.\n  buffer.push(uri.slice(position));\n\n  // Join the buffer, and remove trailing punctuation that remains.\n  return buffer.join('').replace(\n      goog.uri.utils.trailingQueryPunctuationRe_, '$1');\n};\n\n\n/**\n * Replaces all existing definitions of a parameter with a single definition.\n *\n * Repeated calls to this can exhibit quadratic behavior due to the need to\n * find existing instances and reconstruct the string, though it should be\n * limited given the 2kb limit.  Consider using appendParams or setParamsFromMap\n * to update multiple parameters in bulk.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} keyEncoded The key, which must already be URI encoded.\n * @param {*} value The value, which will be stringized and encoded (assumed\n *     not already to be encoded).\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.setParam = function(uri, keyEncoded, value) {\n  'use strict';\n  return goog.uri.utils.appendParam(\n      goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\n\n\n/**\n * Effeciently set or remove multiple query parameters in a URI. Order of\n * unchanged parameters will not be modified, all updated parameters will be\n * appended to the end of the query. Params with values of null or undefined are\n * removed.\n *\n * @param {string} uri The URI to process.\n * @param {!Object<string, goog.uri.utils.QueryValue>} params A list of\n *     parameters to update. If null or undefined, the param will be removed.\n * @return {string} An updated URI where the query data has been updated with\n *     the params.\n */\ngoog.uri.utils.setParamsFromMap = function(uri, params) {\n  'use strict';\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  var queryData = parts[1];\n  var buffer = [];\n  if (queryData) {\n    queryData.split('&').forEach(function(pair) {\n      'use strict';\n      var indexOfEquals = pair.indexOf('=');\n      var name = indexOfEquals >= 0 ? pair.slice(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] = goog.uri.utils.appendQueryData_(\n      buffer.join('&'), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Generates a URI path using a given URI and a path with checks to\n * prevent consecutive \"//\". The baseUri passed in must not contain\n * query or fragment identifiers. The path to append may not contain query or\n * fragment identifiers.\n *\n * @param {string} baseUri URI to use as the base.\n * @param {string} path Path to append.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.appendPath = function(baseUri, path) {\n  'use strict';\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n\n  // Remove any trailing '/'\n  if (goog.string.endsWith(baseUri, '/')) {\n    baseUri = baseUri.slice(0, -1);\n  }\n  // Remove any leading '/'\n  if (goog.string.startsWith(path, '/')) {\n    path = path.slice(1);\n  }\n  return '' + baseUri + '/' + path;\n};\n\n\n/**\n * Replaces the path.\n * @param {string} uri URI to use as the base.\n * @param {string} path New path.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.setPath = function(uri, path) {\n  'use strict';\n  // Add any missing '/'.\n  if (!goog.string.startsWith(path, '/')) {\n    path = '/' + path;\n  }\n  var parts = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      parts[goog.uri.utils.ComponentIndex.SCHEME],\n      parts[goog.uri.utils.ComponentIndex.USER_INFO],\n      parts[goog.uri.utils.ComponentIndex.DOMAIN],\n      parts[goog.uri.utils.ComponentIndex.PORT], path,\n      parts[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Standard supported query parameters.\n * @enum {string}\n */\ngoog.uri.utils.StandardQueryParam = {\n\n  /** Unused parameter for unique-ifying. */\n  RANDOM: 'zx'\n};\n\n\n/**\n * Sets the zx parameter of a URI to a random value.\n * @param {string} uri Any URI.\n * @return {string} That URI with the \"zx\" parameter added or replaced to\n *     contain a random string.\n */\ngoog.uri.utils.makeUnique = function(uri) {\n  'use strict';\n  return goog.uri.utils.setParam(\n      uri, goog.uri.utils.StandardQueryParam.RANDOM,\n      goog.string.getRandomString());\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interface and shared data structures for implementing\n * different wire protocol versions.\n */\ngoog.provide('goog.labs.net.webChannel.Wire');\ngoog.provide('goog.labs.net.webChannel.Wire.QueuedMap');\n\n\n\ngoog.require('goog.collections.maps');\n\n\n\n/**\n * The interface class.\n * @interface\n */\ngoog.labs.net.webChannel.Wire = class {\n  constructor() {}\n};\n\n\n/**\n * The latest protocol version that this class supports. We request this version\n * from the server when opening the connection. Should match\n * LATEST_CHANNEL_VERSION on the server code.\n * @type {number}\n */\ngoog.labs.net.webChannel.Wire.LATEST_CHANNEL_VERSION = 8;\n\n\n/**\n * The JSON field key for the raw data wrapper object.\n * @type {string}\n */\ngoog.labs.net.webChannel.Wire.RAW_DATA_KEY = '__data__';\n\n\n\n/**\n * Simple container class for a (mapId, map) pair.\n */\ngoog.labs.net.webChannel.Wire.QueuedMap = class {\n  /**\n   * @param {number} mapId The id for this map.\n   * @param {!Object|!goog.collections.maps.MapLike} map The map itself.\n   * @param {!Object=} opt_context The context associated with the map.\n   */\n  constructor(mapId, map, opt_context) {\n    'use strict';\n    /**\n     * The id for this map.\n     * @type {number}\n     */\n    this.mapId = mapId;\n\n    /**\n     * The map itself.\n     * @type {!Object|!goog.collections.maps.MapLike}\n     */\n    this.map = map;\n\n    /**\n     * The context for the map.\n     * @type {Object}\n     */\n    this.context = opt_context || null;\n  }\n\n  /**\n   * @return {number|undefined} the size of the raw JSON message or\n   * undefined if the message is not encoded as a raw JSON message\n   */\n  getRawDataSize() {\n    'use strict';\n    if (goog.labs.net.webChannel.Wire.RAW_DATA_KEY in this.map) {\n      const data = this.map[goog.labs.net.webChannel.Wire.RAW_DATA_KEY];\n      if (typeof data === 'string') {\n        return data.length;\n      }\n    }\n\n    return undefined;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Defines a class for parsing JSON using the browser's built in\n * JSON library.\n */\n\ngoog.module('goog.json.NativeJsonProcessor');\ngoog.module.declareLegacyNamespace();\n\nconst Parser = goog.require('goog.string.Parser');\nconst Stringifier = goog.require('goog.string.Stringifier');\nconst asserts = goog.require('goog.asserts');\nconst {Replacer, Reviver} = goog.require('goog.json.types');\n\n\n\n/**\n * A class that parses and stringifies JSON using the browser's built-in JSON\n * library.\n *\n\n * @implements {Parser}\n * @implements {Stringifier}\n * @final\n */\nexports = class {\n  /**\n   * @param {?Replacer=} opt_replacer An optional replacer to use during\n   *     serialization.\n   * @param {?=} opt_reviver An optional reviver to use during\n   *     parsing.\n   */\n  constructor(opt_replacer, opt_reviver) {\n    asserts.assert(goog.global['JSON'] !== undefined, 'JSON not defined');\n\n    /**\n     * @type {!Replacer|null|undefined}\n     * @private\n     */\n    this.replacer_ = opt_replacer;\n\n    /**\n     * @type {!Reviver|null|undefined}\n     * @private\n     */\n    this.reviver_ = opt_reviver;\n  };\n\n  /**\n   * Serializes an object or a value to a string.\n   * Agnostic to the particular format of object and string.\n   *\n   * @param {*} object The object to stringify.\n   * @return {string} A string representation of the input.\n   * @override\n   */\n  stringify(object) {\n    return goog.global['JSON'].stringify(object, this.replacer_);\n  }\n\n  /**\n   * Parses a string into an object and returns the result.\n   * Agnostic to the format of string and object.\n   *\n   * @param {string} s The string to parse.\n   * @return {*} The object generated from the string.\n   * @override\n   */\n  parse(s) {\n    return goog.global['JSON'].parse(s, this.reviver_);\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility functions for managing networking, such as\n * testing network connectivity.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.netUtils');\n\ngoog.require('goog.Uri');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\n\ngoog.scope(function() {\n'use strict';\nconst netUtils = goog.labs.net.webChannel.netUtils;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\n\n\n/**\n * Default timeout to allow for URI pings.\n * @type {number}\n */\nnetUtils.NETWORK_TIMEOUT = 10000;\n\n\n/**\n * Pings the network with an image URI to check if an error is a server error\n * or user's network error.\n *\n * The caller needs to add a 'rand' parameter to make sure the response is\n * not fulfilled by browser cache.\n *\n * @param {function(boolean)} callback The function to call back with results.\n * @param {goog.Uri=} opt_imageUri The URI (of an image) to use for the network\n *     test.\n */\nnetUtils.testNetwork = function(callback, opt_imageUri) {\n  'use strict';\n  let uri = opt_imageUri;\n  if (!uri) {\n    // default google.com image\n    uri = new goog.Uri('//www.google.com/images/cleardot.gif');\n\n    if (!(goog.global.location && goog.global.location.protocol == 'http')) {\n      uri.setScheme('https');  // e.g. chrome-extension\n    }\n    uri.makeUnique();\n  }\n\n  netUtils.testLoadImage(uri.toString(), netUtils.NETWORK_TIMEOUT, callback);\n};\n\n\n/**\n * Test loading the given image, retrying if necessary.\n * @param {string} url URL to the image.\n * @param {number} timeout Milliseconds before giving up.\n * @param {function(boolean)} callback Function to call with results.\n * @param {number} retries The number of times to retry.\n * @param {!WebChannelDebug} channelDebug The debug object\n * @param {number=} opt_pauseBetweenRetriesMS Optional number of milliseconds\n *     between retries - defaults to 0.\n */\nnetUtils.testLoadImageWithRetries = function(\n    url, timeout, callback, retries, channelDebug, opt_pauseBetweenRetriesMS) {\n  'use strict';\n  channelDebug.debug('TestLoadImageWithRetries: ' + opt_pauseBetweenRetriesMS);\n  if (retries == 0) {\n    // no more retries, give up\n    callback(false);\n    return;\n  }\n\n  const pauseBetweenRetries = opt_pauseBetweenRetriesMS || 0;\n  retries--;\n  netUtils.testLoadImage(url, timeout, function(succeeded) {\n    'use strict';\n    if (succeeded) {\n      callback(true);\n    } else {\n      // try again\n      goog.global.setTimeout(function() {\n        'use strict';\n        netUtils.testLoadImageWithRetries(\n            url, timeout, callback, retries, channelDebug, pauseBetweenRetries);\n      }, pauseBetweenRetries);\n    }\n  });\n};\n\n\n/**\n * Test loading the given image.\n * @param {string} url URL to the image.\n * @param {number} timeout Milliseconds before giving up.\n * @param {function(boolean)} callback Function to call with results.\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\nnetUtils.testLoadImage = function(url, timeout, callback) {\n  'use strict';\n  const channelDebug = new WebChannelDebug();\n  channelDebug.debug('TestLoadImage: loading ' + url);\n  if (goog.global.Image) {\n    const img = new Image();\n    img.onload = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: loaded',\n        true, callback);\n    img.onerror = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: error',\n        false, callback);\n    img.onabort = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: abort',\n        false, callback);\n    img.ontimeout = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: timeout',\n        false, callback);\n\n    goog.global.setTimeout(function() {\n      'use strict';\n      if (img.ontimeout) {\n        img.ontimeout();\n      }\n    }, timeout);\n    img.src = url;\n  } else {\n    // log ERROR_OTHER from environements where Image is not supported\n    callback(false);\n  }\n};\n\n\n/**\n * Wrap the image callback with debug and cleanup logic.\n * @param {!WebChannelDebug} channelDebug The WebChannelDebug object.\n * @param {!Image} img The image element.\n * @param {string} debugText The debug text.\n * @param {boolean} result The result of image loading.\n * @param {function(boolean)} callback The image callback.\n * @private\n */\nnetUtils.imageCallback_ = function(\n    channelDebug, img, debugText, result, callback) {\n  'use strict';\n  try {\n    channelDebug.debug(debugText);\n    netUtils.clearImageCallbacks_(img);\n    callback(result);\n  } catch (e) {\n    channelDebug.dumpException(e);\n  }\n};\n\n\n/**\n * Clears handlers to avoid memory leaks.\n * @param {Image} img The image to clear handlers from.\n * @private\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\nnetUtils.clearImageCallbacks_ = function(img) {\n  'use strict';\n  img.onload = null;\n  img.onerror = null;\n  img.onabort = null;\n  img.ontimeout = null;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.net.FetchXmlHttp');\ngoog.provide('goog.net.FetchXmlHttpFactory');\n\ngoog.require('goog.asserts');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.functions');\ngoog.require('goog.log');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * @record\n */\ngoog.net.FetchXmlHttpFactoryOptions = function() {\n  /**\n   * @type {!WorkerGlobalScope|undefined} The Service Worker global scope.\n   */\n  this.worker;\n\n  /**\n   * @type {boolean|undefined} Whether to store the FetchXmlHttp response as an\n   * array of Uint8Arrays.  If this is true then the 'responseType' attribute\n   * must be empty.\n   */\n  this.streamBinaryChunks;\n};\n\n\n\n/**\n * Factory for creating Xhr objects that uses the native fetch() method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n * @param {!goog.net.FetchXmlHttpFactoryOptions} opts\n * @extends {goog.net.XmlHttpFactory}\n * @struct\n * @constructor\n */\ngoog.net.FetchXmlHttpFactory = function(opts) {\n  'use strict';\n  goog.net.FetchXmlHttpFactory.base(this, 'constructor');\n\n  /** @private @final {?WorkerGlobalScope} */\n  this.worker_ = opts.worker || null;\n\n  /** @private @final {boolean} */\n  this.streamBinaryChunks_ = opts.streamBinaryChunks || false;\n\n  /** @private {!RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {!RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n};\ngoog.inherits(goog.net.FetchXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.createInstance = function() {\n  'use strict';\n  const instance =\n      new goog.net.FetchXmlHttp(this.worker_, this.streamBinaryChunks_);\n  if (this.credentialsMode_) {\n    instance.setCredentialsMode(this.credentialsMode_);\n  }\n  if (this.cacheMode_) {\n    instance.setCacheMode(this.cacheMode_);\n  }\n  return instance;\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.internalGetOptions =\n    goog.functions.constant({});\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCredentialsMode = function(\n    credentialsMode) {\n  'use strict';\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCacheMode = function(cacheMode) {\n  'use strict';\n  this.cacheMode_ = cacheMode;\n};\n\n\n\n/**\n * FetchXmlHttp object constructor.\n * @param {?WorkerGlobalScope} worker\n * @param {boolean} streamBinaryChunks\n * @extends {goog.events.EventTarget}\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n */\ngoog.net.FetchXmlHttp = function(worker, streamBinaryChunks) {\n  'use strict';\n  goog.net.FetchXmlHttp.base(this, 'constructor');\n\n  /** @private @final {?WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private @final {boolean} */\n  this.streamBinaryChunks_ = streamBinaryChunks;\n\n  /** @private {RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n\n  /**\n   * Request state.\n   * @type {goog.net.FetchXmlHttp.RequestState}\n   */\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n\n  /**\n   * HTTP status.\n   * @type {number}\n   */\n  this.status = 0;\n\n  /**\n   * HTTP status string.\n   * @type {string}\n   */\n  this.statusText = '';\n\n  /**\n   * Content of the response.\n   * @type {string|!ArrayBuffer|!Array<!Uint8Array>}\n   */\n  this.response = '';\n\n  /**\n   * Content of the response.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * The type of the response.  If this is set to 'arraybuffer' the request will\n   * be discrete, streaming is only supported for text encoded requests.\n   * @type {string}\n   */\n  this.responseType = '';\n\n  /**\n   * Document response entity body.\n   * NOTE: This is always null and not supported by this class.\n   * @final {null}\n   */\n  this.responseXML = null;\n\n  /**\n   * Method to call when the state changes.\n   * @type {?function()}\n   */\n  this.onreadystatechange = null;\n\n  /** @private {!Headers} */\n  this.requestHeaders_ = new Headers();\n\n  /** @private {?Headers} */\n  this.responseHeaders_ = null;\n\n  /**\n   * Request method (GET or POST).\n   * @private {string}\n   */\n  this.method_ = 'GET';\n\n  /**\n   * Request URL.\n   * @private {string}\n   */\n  this.url_ = '';\n\n  /**\n   * Whether the request is in progress.\n   * @private {boolean}\n   */\n  this.inProgress_ = false;\n\n  /** @private @final {?goog.log.Logger} */\n  this.logger_ = goog.log.getLogger('goog.net.FetchXmlHttp');\n\n  /** @private {?Response} */\n  this.fetchResponse_ = null;\n\n  /** @private {!ReadableStreamDefaultReader|null} */\n  this.currentReader_ = null;\n\n  /** @private {?TextDecoder} */\n  this.textDecoder_ = null;\n};\ngoog.inherits(goog.net.FetchXmlHttp, goog.events.EventTarget);\n\n\n/**\n * State of the requests.\n * @enum {number}\n */\ngoog.net.FetchXmlHttp.RequestState = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADER_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4,\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.open = function(method, url, opt_async) {\n  'use strict';\n  goog.asserts.assert(!!opt_async, 'Only async requests are supported.');\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.UNSENT) {\n    this.abort();\n    throw new Error('Error reopening a connection');\n  }\n\n  this.method_ = method;\n  this.url_ = url;\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.OPENED;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.send = function(opt_data) {\n  'use strict';\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.OPENED) {\n    this.abort();\n    throw new Error('need to call open() first. ');\n  }\n\n  this.inProgress_ = true;\n  const requestInit = {\n    headers: this.requestHeaders_,\n    method: this.method_,\n    credentials: this.credentialsMode_,\n    cache: this.cacheMode_,\n  };\n  if (opt_data) {\n    requestInit['body'] = opt_data;\n  }\n\n  (this.worker_ || goog.global)\n      .fetch(new Request(this.url_, /** @type {!RequestInit} */ (requestInit)))\n      .then(\n          this.handleResponse_.bind(this), this.handleSendFailure_.bind(this));\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.abort = function() {\n  'use strict';\n  this.response = this.responseText = '';\n  this.requestHeaders_ = new Headers();\n  this.status = 0;\n\n  if (!!this.currentReader_) {\n    this.currentReader_.cancel('Request was aborted.')\n        .catch(\n            e => goog.log.warning(\n                this.logger_, 'Fetch reader cancellation error.', e));\n  }\n\n  if (((this.readyState >= goog.net.FetchXmlHttp.RequestState.OPENED) &&\n       this.inProgress_) &&\n      (this.readyState != goog.net.FetchXmlHttp.RequestState.DONE)) {\n    this.inProgress_ = false;\n    this.requestDone_();\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n};\n\n\n/**\n * Handles the fetch response.\n * @param {!Response} response\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponse_ = function(response) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.fetchResponse_ = response;\n\n  if (!this.responseHeaders_) {\n    this.status = this.fetchResponse_.status;\n    this.statusText = this.fetchResponse_.statusText;\n    this.responseHeaders_ = response.headers;\n    this.readyState = goog.net.FetchXmlHttp.RequestState.HEADER_RECEIVED;\n    this.dispatchCallback_();\n  }\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.LOADING;\n  this.dispatchCallback_();\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (this.responseType === 'arraybuffer') {\n    response.arrayBuffer().then(\n        this.handleResponseArrayBuffer_.bind(this),\n        this.handleSendFailure_.bind(this));\n  } else if (\n      typeof (goog.global.ReadableStream) !== 'undefined' &&\n      'body' in response) {\n    this.currentReader_ =\n        /** @type {!ReadableStreamDefaultReader} */ (response.body.getReader());\n    if (this.streamBinaryChunks_) {\n      if (this.responseType) {\n        throw new Error(\n            'responseType must be empty for \"streamBinaryChunks\" mode responses.');\n      }\n      this.response = [];\n    } else {\n      this.response = this.responseText = '';\n      this.textDecoder_ = new TextDecoder();\n    }\n    this.readInputFromFetch_();\n  } else {\n    response.text().then(\n        this.handleResponseText_.bind(this),\n        this.handleSendFailure_.bind(this));\n  }\n};\n\n\n/**\n * Reads the next chunk of data from the fetch response.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.readInputFromFetch_ = function() {\n  'use strict';\n  this.currentReader_.read()\n      .then(this.handleDataFromStream_.bind(this))\n      .catch(this.handleSendFailure_.bind(this));\n};\n\n\n/**\n * Handles a chunk of data from the fetch response stream reader.\n * @param {!IIterableResult} result\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleDataFromStream_ = function(result) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (this.streamBinaryChunks_ && result.value) {\n    // When streamBinaryChunks_ is enabled, \"response\" is an array\n    /** @type {!Array} */ (this.response)\n        .push(/** @type {!Uint8Array} */ (result.value));\n  } else if (!this.streamBinaryChunks_) {\n    const dataPacket = result.value ?\n        /** @type {!Uint8Array} */ (result.value) :\n        new Uint8Array(0);\n    const newText =\n        this.textDecoder_.decode(dataPacket, {stream: !result.done});\n    if (newText) {\n      this.responseText += newText;\n      this.response = this.responseText;\n    }\n  }\n  if (result.done) {\n    this.requestDone_();\n  } else {\n    this.dispatchCallback_();\n  }\n\n  if (this.readyState == goog.net.FetchXmlHttp.RequestState.LOADING) {\n    this.readInputFromFetch_();\n  }\n};\n\n/**\n * Handles the response text.\n * @param {string} responseText\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseText_ = function(responseText) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.response = this.responseText = responseText;\n  this.requestDone_();\n};\n\n\n/**\n * Handles the response text.\n * @param {!ArrayBuffer} responseArrayBuffer\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseArrayBuffer_ = function(\n    responseArrayBuffer) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.response = responseArrayBuffer;\n  this.requestDone_();\n};\n\n\n/**\n * Handles the send failure.\n * @param {*} error\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleSendFailure_ = function(error) {\n  'use strict';\n  const e = error instanceof Error ? error : Error(error);\n  goog.log.warning(this.logger_, 'Failed to fetch url ' + this.url_, e);\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.requestDone_();\n};\n\n\n/**\n * Sets the request state to DONE and performs cleanup.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.requestDone_ = function() {\n  'use strict';\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n\n  this.fetchResponse_ = null;\n  this.currentReader_ = null;\n  this.textDecoder_ = null;\n\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.setRequestHeader = function(header, value) {\n  'use strict';\n  this.requestHeaders_.append(header, value);\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getResponseHeader = function(header) {\n  'use strict';\n  // TODO(user): This method should return null when the headers are not\n  // present or the specified header is missing. The externs need to be fixed.\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get response header but no headers have been received ' +\n            'for url: ' + this.url_);\n    return '';\n  }\n  return this.responseHeaders_.get(header.toLowerCase()) || '';\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getAllResponseHeaders = function() {\n  'use strict';\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get all response headers but no headers have been ' +\n            'received for url: ' + this.url_);\n    return '';\n  }\n  const lines = [];\n  const iter = this.responseHeaders_.entries();\n  let entry = iter.next();\n  while (!entry.done) {\n    const pair = entry.value;\n    lines.push(pair[0] + ': ' + pair[1]);\n    entry = iter.next();\n  }\n  return lines.join('\\r\\n');\n};\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCredentialsMode = function(credentialsMode) {\n  'use strict';\n  this.credentialsMode_ = credentialsMode;\n};\n\n/**\n * @return {!RequestCredentials|undefined} The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.getCredentialsMode = function() {\n  'use strict';\n  return this.credentialsMode_;\n};\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCacheMode = function(cacheMode) {\n  'use strict';\n  this.cacheMode_ = cacheMode;\n};\n\n\n/**\n * Dispatches the callback, if the callback attribute is defined.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.dispatchCallback_ = function() {\n  'use strict';\n  if (this.onreadystatechange) {\n    this.onreadystatechange.call(this);\n  }\n};\n\n// Polyfill XmlHttpRequest's withCredentials property for specifying whether to\n// include credentials on cross domain requests.\nObject.defineProperty(goog.net.FetchXmlHttp.prototype, 'withCredentials', {\n  get:\n      /**\n       * @this {goog.net.FetchXmlHttp}\n       * @return {boolean} Whether to include credentials in cross domain\n       *     requests.\n       */\n      function() {\n        'use strict';\n        return this.getCredentialsMode() === 'include';\n      },\n\n  set:\n      /**\n       * @param {boolean} value Whether to include credentials in cross domain\n       *     requests.\n       * @this {goog.net.FetchXmlHttp}\n       **/\n      function(value) {\n        'use strict';\n        this.setCredentialsMode(value ? 'include' : 'same-origin');\n      }\n});\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for creating functions. Loosely inspired by these\n * java classes from the Guava library:\n * com.google.common.base.Functions\n * https://google.github.io/guava/releases/snapshot-jre/api/docs/index.html?com/google/common/base/Functions.html\n *\n * com.google.common.base.Predicates\n * https://google.github.io/guava/releases/snapshot-jre/api/docs/index.html?com/google/common/base/Predicates.html\n *\n * More about these can be found at\n * https://github.com/google/guava/wiki/FunctionalExplained\n */\n\n\ngoog.provide('goog.functions');\n\n\n/**\n * Creates a function that always returns the same value.\n * @param {T} retValue The value to return.\n * @return {function():T} The new function.\n * @template T\n */\ngoog.functions.constant = function(retValue) {\n  'use strict';\n  return function() {\n    'use strict';\n    return retValue;\n  };\n};\n\n\n/**\n * Always returns false.\n * @type {function(...): boolean}\n */\ngoog.functions.FALSE = function() {\n  'use strict';\n  return false;\n};\n\n\n/**\n * Always returns true.\n * @type {function(...): boolean}\n */\ngoog.functions.TRUE = function() {\n  'use strict';\n  return true;\n};\n\n\n/**\n * Always returns `null`.\n * @type {function(...): null}\n */\ngoog.functions.NULL = function() {\n  'use strict';\n  return null;\n};\n\n\n/**\n * Always returns `undefined`.\n * @type {function(...): undefined}\n */\ngoog.functions.UNDEFINED = function() {\n  return undefined;\n};\n\n/**\n * Always returns `undefined` (loosely-typed version).\n * @type {!Function}\n */\ngoog.functions.EMPTY = /** @type {?} */ (goog.functions.UNDEFINED);\n\n\n/**\n * A simple function that returns the first argument of whatever is passed\n * into it.\n * @param {T=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {T} The first argument passed in, or undefined if nothing was passed.\n * @template T\n */\ngoog.functions.identity = function(opt_returnValue, var_args) {\n  'use strict';\n  return opt_returnValue;\n};\n\n\n/**\n * Creates a function that always throws an error with the given message.\n * @param {string} message The error message.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.error = function(message) {\n  'use strict';\n  return function() {\n    'use strict';\n    throw new Error(message);\n  };\n};\n\n\n/**\n * Creates a function that throws the given object.\n * @param {*} err An object to be thrown.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.fail = function(err) {\n  'use strict';\n  return function() {\n    'use strict';\n    throw err;\n  };\n};\n\n\n/**\n * Given a function, create a function that keeps opt_numArgs arguments and\n * silently discards all additional arguments.\n * @param {Function} f The original function.\n * @param {number=} opt_numArgs The number of arguments to keep. Defaults to 0.\n * @return {!Function} A version of f that only keeps the first opt_numArgs\n *     arguments.\n */\ngoog.functions.lock = function(f, opt_numArgs) {\n  'use strict';\n  opt_numArgs = opt_numArgs || 0;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\n\n\n/**\n * Creates a function that returns its nth argument.\n * @param {number} n The position of the return argument.\n * @return {!Function} A new function.\n */\ngoog.functions.nth = function(n) {\n  'use strict';\n  return function() {\n    'use strict';\n    return arguments[n];\n  };\n};\n\n\n/**\n * Like goog.partial(), except that arguments are added after arguments to the\n * returned function.\n *\n * Usage:\n * function f(arg1, arg2, arg3, arg4) { ... }\n * var g = goog.functions.partialRight(f, arg3, arg4);\n * g(arg1, arg2);\n *\n * @param {!Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn\n *     at the end.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.functions.partialRight = function(fn, var_args) {\n  'use strict';\n  const rightArgs = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    'use strict';\n    // Even in strict mode, IE10/11 and Edge (non-Chromium) use global context\n    // when free-calling functions. To catch cases where people were using this\n    // erroneously, we explicitly change the context to undefined to match\n    // strict mode specifications.\n    let self = /** @type {*} */ (this);\n    if (self === goog.global) {\n      self = undefined;\n    }\n    const newArgs = Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\n\n\n/**\n * Given a function, create a new function that swallows its return value\n * and replaces it with a new one.\n * @param {Function} f A function.\n * @param {T} retValue A new return value.\n * @return {function(...?):T} A new function.\n * @template T\n */\ngoog.functions.withReturnValue = function(f, retValue) {\n  'use strict';\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\n\n\n/**\n * Creates a function that returns whether its argument equals the given value.\n *\n * Example:\n * var key = goog.object.findKey(obj, goog.functions.equalTo('needle'));\n *\n * @param {*} value The value to compare to.\n * @param {boolean=} opt_useLooseComparison Whether to use a loose (==)\n *     comparison rather than a strict (===) one. Defaults to false.\n * @return {function(*):boolean} The new function.\n */\ngoog.functions.equalTo = function(value, opt_useLooseComparison) {\n  'use strict';\n  return function(other) {\n    'use strict';\n    return opt_useLooseComparison ? (value == other) : (value === other);\n  };\n};\n\n\n/**\n * Creates the composition of the functions passed in.\n * For example, (goog.functions.compose(f, g))(a) is equivalent to f(g(a)).\n * @param {function(...?):T} fn The final function.\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):T} The composition of all inputs.\n * @template T\n */\ngoog.functions.compose = function(fn, var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    let result;\n    if (length) {\n      result = functions[length - 1].apply(self, arguments);\n    }\n\n    for (let i = length - 2; i >= 0; i--) {\n      result = functions[i].call(self, result);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that calls the functions passed in in sequence, and\n * returns the value of the last function. For example,\n * (goog.functions.sequence(f, g))(x) is equivalent to f(x),g(x).\n * @param {...Function} var_args A list of functions.\n * @return {!Function} A function that calls all inputs in sequence.\n */\ngoog.functions.sequence = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that returns true if each of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns false.\n * For example, (goog.functions.and(f, g))(x) is equivalent to f(x) && g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ANDs its component\n *      functions.\n */\ngoog.functions.and = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    for (let i = 0; i < length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n\n/**\n * Creates a function that returns true if any of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns true.\n * For example, (goog.functions.or(f, g))(x) is equivalent to f(x) || g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ORs its component\n *    functions.\n */\ngoog.functions.or = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    for (let i = 0; i < length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\n\n/**\n * Creates a function that returns the Boolean opposite of a provided function.\n * For example, (goog.functions.not(f))(x) is equivalent to !f(x).\n * @param {!Function} f The original function.\n * @return {function(...?):boolean} A function that delegates to f and returns\n * opposite.\n */\ngoog.functions.not = function(f) {\n  'use strict';\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    return !f.apply(self, arguments);\n  };\n};\n\n\n/**\n * Generic factory function to construct an object given the constructor\n * and the arguments. Intended to be bound to create object factories.\n *\n * Example:\n *\n * var factory = goog.partial(goog.functions.create, Class);\n *\n * @param {function(new:T, ...)} constructor The constructor for the Object.\n * @param {...*} var_args The arguments to be passed to the constructor.\n * @return {T} A new instance of the class given in `constructor`.\n * @template T\n * @deprecated This function does not work with ES6 class constructors. Use\n *     arrow functions + spread args instead.\n */\ngoog.functions.create = function(constructor, var_args) {\n  'use strict';\n  /**\n   * @constructor\n   * @final\n   */\n  const temp = function() {};\n  temp.prototype = constructor.prototype;\n\n  // obj will have constructor's prototype in its chain and\n  // 'obj instanceof constructor' will be true.\n  const obj = new temp();\n\n  // obj is initialized by constructor.\n  // arguments is only array-like so lacks shift(), but can be used with\n  // the Array prototype function.\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\n\n\n/**\n * @define {boolean} Whether the return value cache should be used.\n *    This should only be used to disable caches when testing.\n */\ngoog.functions.CACHE_RETURN_VALUE =\n    goog.define('goog.functions.CACHE_RETURN_VALUE', true);\n\n\n/**\n * Gives a wrapper function that caches the return value of a parameterless\n * function when first called.\n *\n * When called for the first time, the given function is called and its\n * return value is cached (thus this is only appropriate for idempotent\n * functions).  Subsequent calls will return the cached return value. This\n * allows the evaluation of expensive functions to be delayed until first used.\n *\n * To cache the return values of functions with parameters, see goog.memoize.\n *\n * @param {function():T} fn A function to lazily evaluate.\n * @return {function():T} A wrapped version the function.\n * @template T\n */\ngoog.functions.cacheReturnValue = function(fn) {\n  'use strict';\n  let called = false;\n  let value;\n\n  return function() {\n    'use strict';\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n\n    if (!called) {\n      value = fn();\n      called = true;\n    }\n\n    return value;\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once. All\n * additional calls are no-ops.\n *\n * This is particularly useful for initialization functions\n * that should be called, at most, once.\n *\n * @param {function():*} f Function to call.\n * @return {function():undefined} Wrapped function.\n */\ngoog.functions.once = function(f) {\n  'use strict';\n  // Keep a reference to the function that we null out when we're done with\n  // it -- that way, the function can be GC'd when we're done with it.\n  let inner = f;\n  return function() {\n    'use strict';\n    if (inner) {\n      const tmp = inner;\n      inner = null;\n      tmp();\n    }\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the Nth call will go through.\n *\n * This is particularly useful for batching up repeated actions where the\n * last action should win. This can be used, for example, for refreshing an\n * autocomplete pop-up every so often rather than updating with every keystroke,\n * since the final text typed by the user is the one that should produce the\n * final autocomplete results. For more stateful debouncing with support for\n * pausing, resuming, and canceling debounced actions, use\n * `goog.async.Debouncer`.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to debounce. The function will\n *     only be called after the full interval has elapsed since the last call.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.debounce = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    goog.global.clearTimeout(timeout);\n    const args = arguments;\n    timeout = goog.global.setTimeout(function() {\n      'use strict';\n      f.apply(opt_scope, args);\n    }, interval);\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times in\n * that interval, both the 1st and the Nth calls will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * the last action should win, but you also don't want to wait until the end of\n * the interval before sending a request out, as it leads to a perception of\n * slowness for the user.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to throttle. The function can\n *     only be called once per interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.throttle = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n  let shouldFire = false;\n  let storedArgs = [];\n\n  const handleTimeout = function() {\n    'use strict';\n    timeout = 0;\n    if (shouldFire) {\n      shouldFire = false;\n      fire();\n    }\n  };\n\n  const fire = function() {\n    'use strict';\n    timeout = goog.global.setTimeout(handleTimeout, interval);\n    let args = storedArgs;\n    storedArgs = [];  // Avoid a space leak by clearing stored arguments.\n    f.apply(opt_scope, args);\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    storedArgs = arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire = true;\n    }\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the 1st call will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * first request is guaranteed to have all the data required to perform the\n * final action, so there's no need to wait until the end of the interval before\n * sending the request out.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to rate-limit. The function will\n *     only be called once per interval, and ignored for the remainer of the\n *     interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.rateLimit = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n\n  const handleTimeout = function() {\n    'use strict';\n    timeout = 0;\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    if (!timeout) {\n      timeout = goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  });\n};\n\n/**\n * Returns true if the specified value is a function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.functions.isFunction = (val) => {\n  return typeof val === 'function';\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Utility to attempt native JSON processing, falling back to\n *     goog.json if not available.\n *\n *     This is intended as a drop-in for current users of goog.json who want\n *     to take advantage of native JSON if present.\n */\n\ngoog.provide('goog.json.hybrid');\n\ngoog.require('goog.asserts');\ngoog.require('goog.json');\n\n\n/**\n * Attempts to serialize the JSON string natively, falling back to\n * `goog.json.serialize` if unsuccessful.\n * @param {!Object} obj JavaScript object to serialize to JSON.\n * @return {string} Resulting JSON string.\n */\ngoog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ?\n    goog.global['JSON']['stringify'] :\n    function(obj) {\n      'use strict';\n      if (goog.global.JSON) {\n        try {\n          return goog.global.JSON.stringify(obj);\n        } catch (e) {\n          // Native serialization failed.  Fall through to retry with\n          // goog.json.serialize.\n        }\n      }\n\n      return goog.json.serialize(obj);\n    };\n\n\n/**\n * Attempts to parse the JSON string natively, falling back to\n * the supplied `fallbackParser` if unsuccessful.\n * @param {string} jsonString JSON string to parse.\n * @param {function(string):Object} fallbackParser Fallback JSON parser used\n *     if native\n * @return {?Object} Resulting JSON object.\n * @private\n */\ngoog.json.hybrid.parse_ = function(jsonString, fallbackParser) {\n  'use strict';\n  if (goog.global.JSON) {\n    try {\n      var obj = goog.global.JSON.parse(jsonString);\n      goog.asserts.assert(typeof obj == 'object');\n      return /** @type {?Object} */ (obj);\n    } catch (e) {\n      // Native parse failed.  Fall through to retry with goog.json.parse.\n    }\n  }\n\n  return fallbackParser(jsonString);\n};\n\n\n/**\n * Attempts to parse the JSON string natively, falling back to\n * `goog.json.parse` if unsuccessful.\n * @param {string} jsonString JSON string to parse.\n * @return {?Object} Resulting JSON object.\n */\ngoog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ?\n    goog.global['JSON']['parse'] :\n    function(jsonString) {\n      'use strict';\n      return goog.json.hybrid.parse_(jsonString, goog.json.parse);\n    };\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Constants for HTTP status codes.\n */\n\ngoog.provide('goog.net.HttpStatus');\n\n\n/**\n * HTTP Status Codes defined in RFC 2616, RFC 6585, RFC 4918 and RFC 7538.\n * @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n * @see http://tools.ietf.org/html/rfc6585\n * @see https://tools.ietf.org/html/rfc4918\n * @see https://tools.ietf.org/html/rfc7538\n * @enum {number}\n */\ngoog.net.HttpStatus = {\n  // Informational 1xx\n  CONTINUE: 100,\n  SWITCHING_PROTOCOLS: 101,\n\n  // Successful 2xx\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n  MULTI_STATUS: 207,\n\n  // Redirection 3xx\n  MULTIPLE_CHOICES: 300,\n  MOVED_PERMANENTLY: 301,\n  FOUND: 302,\n  SEE_OTHER: 303,\n  NOT_MODIFIED: 304,\n  USE_PROXY: 305,\n  TEMPORARY_REDIRECT: 307,\n  PERMANENT_REDIRECT: 308,\n\n  // Client Error 4xx\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n  LENGTH_REQUIRED: 411,\n  PRECONDITION_FAILED: 412,\n  REQUEST_ENTITY_TOO_LARGE: 413,\n  REQUEST_URI_TOO_LONG: 414,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  REQUEST_RANGE_NOT_SATISFIABLE: 416,\n  EXPECTATION_FAILED: 417,\n  UNPROCESSABLE_ENTITY: 422,\n  LOCKED: 423,\n  FAILED_DEPENDENCY: 424,\n  PRECONDITION_REQUIRED: 428,\n  TOO_MANY_REQUESTS: 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n  CLIENT_CLOSED_REQUEST: 499,  // Nonstandard, used by GRPC\n\n  // Server Error 5xx\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n  HTTP_VERSION_NOT_SUPPORTED: 505,\n  INSUFFICIENT_STORAGE: 507,\n  NETWORK_AUTHENTICATION_REQUIRED: 511,\n\n  /*\n   * IE returns this code for 204 due to its use of URLMon, which returns this\n   * code for 'Operation Aborted'. The status text is 'Unknown', the response\n   * headers are ''. Known to occur on IE 6 on XP through IE9 on Win7.\n   */\n  QUIRK_IE_NO_CONTENT: 1223,\n};\n\n\n/**\n * Returns whether the given status should be considered successful.\n *\n * Successful codes are OK (200), CREATED (201), ACCEPTED (202),\n * NO CONTENT (204), PARTIAL CONTENT (206), NOT MODIFIED (304),\n * and IE's no content code (1223).\n *\n * @param {number} status The status code to test.\n * @return {boolean} Whether the status code should be considered successful.\n */\ngoog.net.HttpStatus.isSuccess = function(status) {\n  'use strict';\n  switch (status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return true;\n\n    default:\n      return false;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides CORS support for HTTP based RPC requests.\n *\n * As part of net.rpc package, CORS features provided by this class\n * depend on the server support. Please check related specs to decide how\n * to enable any of the features provided by this class.\n */\n\ngoog.module('goog.net.rpc.HttpCors');\n\nconst GoogUri = goog.require('goog.Uri');\nconst googObject = goog.require('goog.object');\nconst googString = goog.require('goog.string');\nconst googUriUtils = goog.require('goog.uri.utils');\n\n\n/**\n * The default URL parameter name to overwrite http headers with a URL param\n * to avoid CORS preflight.\n *\n * See https://github.com/whatwg/fetch/issues/210#issue-129531743 for the spec.\n *\n * @type {string}\n */\nexports.HTTP_HEADERS_PARAM_NAME = '$httpHeaders';\n\n\n/**\n * The default URL parameter name to overwrite http method with a URL param\n * to avoid CORS preflight.\n *\n * See https://github.com/whatwg/fetch/issues/210#issue-129531743 for the spec.\n *\n * @type {string}\n */\nexports.HTTP_METHOD_PARAM_NAME = '$httpMethod';\n\n\n/**\n * Generates the URL parameter value with custom headers encoded as\n * HTTP/1.1 headers block.\n *\n * @param {!Object<string, string>} headers The custom headers.\n * @return {string} The URL param to overwrite custom HTTP headers.\n */\nexports.generateHttpHeadersOverwriteParam = function(headers) {\n  let result = '';\n  googObject.forEach(headers, function(value, key) {\n    result += key;\n    result += ':';\n    result += value;\n    result += '\\r\\n';\n  });\n  return result;\n};\n\n\n/**\n * Generates the URL-encoded URL parameter value with custom headers encoded as\n * HTTP/1.1 headers block.\n *\n * @param {!Object<string, string>} headers The custom headers.\n * @return {string} The URL param to overwrite custom HTTP headers.\n */\nexports.generateEncodedHttpHeadersOverwriteParam = function(headers) {\n  return googString.urlEncode(\n      exports.generateHttpHeadersOverwriteParam(headers));\n};\n\n\n/**\n * Sets custom HTTP headers via an overwrite URL param.\n *\n * @param {!GoogUri|string} url The URI object or a string path.\n * @param {string} urlParam The URL param name.\n * @param {!Object<string, string>} extraHeaders The HTTP headers.\n * @return {!GoogUri|string} The URI object or a string path with headers\n * encoded as a url param.\n */\nexports.setHttpHeadersWithOverwriteParam = function(\n    url, urlParam, extraHeaders) {\n  if (googObject.isEmpty(extraHeaders)) {\n    return url;\n  }\n  const httpHeaders = exports.generateHttpHeadersOverwriteParam(extraHeaders);\n  if (typeof url === 'string') {\n    return googUriUtils.appendParam(\n        url, googString.urlEncode(urlParam), httpHeaders);\n  } else {\n    url.setParameterValue(urlParam, httpHeaders);  // duplicate removed!\n    return url;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Implementation of a WebChannel transport using WebChannelBase.\n *\n * When WebChannelBase is used as the underlying transport, the capabilities\n * of the WebChannel are limited to what's supported by the implementation.\n * Particularly, multiplexing is not possible, and only strings are\n * supported as message types.\n */\n\ngoog.provide('goog.labs.net.webChannel.WebChannelBaseTransport');\n\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json');\ngoog.require('goog.labs.net.webChannel.ChannelRequest');\ngoog.require('goog.labs.net.webChannel.WebChannelBase');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.log');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.WebChannelTransport');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n\n/**\n * Implementation of {@link goog.net.WebChannelTransport} with\n * {@link goog.labs.net.webChannel.WebChannelBase} as the underlying channel\n * implementation.\n *\n * @constructor\n * @struct\n * @implements {goog.net.WebChannelTransport}\n * @final\n */\ngoog.labs.net.webChannel.WebChannelBaseTransport = function() {\n  'use strict';\n  if (!goog.labs.net.webChannel.ChannelRequest.supportsXhrStreaming()) {\n    throw new Error('Environmental error: no available transport.');\n  }\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WebChannelBaseTransport =\n    goog.labs.net.webChannel.WebChannelBaseTransport;\nconst WebChannelBase = goog.labs.net.webChannel.WebChannelBase;\nconst Wire = goog.labs.net.webChannel.Wire;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.prototype.createWebChannel = function(\n    url, opt_options) {\n  'use strict';\n  return new WebChannelBaseTransport.Channel(url, opt_options);\n};\n\n\n\n/**\n * Implementation of the {@link goog.net.WebChannel} interface.\n *\n * @param {string} url The URL path for the new WebChannel instance.\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *     new WebChannel instance.\n *\n * @constructor\n * @implements {goog.net.WebChannel}\n * @extends {goog.events.EventTarget}\n * @final\n */\nWebChannelBaseTransport.Channel = function(url, opt_options) {\n  'use strict';\n  WebChannelBaseTransport.Channel.base(this, 'constructor');\n\n  /**\n   * @private {!WebChannelBase} The underlying channel object.\n   */\n  this.channel_ = new WebChannelBase(\n      opt_options, goog.net.WebChannelTransport.CLIENT_VERSION);\n\n  /**\n   * @private {string} The URL of the target server end-point.\n   */\n  this.url_ = url;\n\n  /**\n   * @private {goog.log.Logger} The logger for this class.\n   */\n  this.logger_ =\n      goog.log.getLogger('goog.labs.net.webChannel.WebChannelBaseTransport');\n\n  /**\n   * @private {Object<string, string>} Extra URL parameters\n   * to be added to each HTTP request.\n   */\n  this.messageUrlParams_ =\n      (opt_options && opt_options.messageUrlParams) || null;\n\n  let messageHeaders = (opt_options && opt_options.messageHeaders) || null;\n\n  // default is false\n  if (opt_options && opt_options.clientProtocolHeaderRequired) {\n    if (messageHeaders) {\n      goog.object.set(\n          messageHeaders, goog.net.WebChannel.X_CLIENT_PROTOCOL,\n          goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL);\n    } else {\n      messageHeaders = goog.object.create(\n          goog.net.WebChannel.X_CLIENT_PROTOCOL,\n          goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL);\n    }\n  }\n\n  this.channel_.setExtraHeaders(messageHeaders);\n\n  let initHeaders = (opt_options && opt_options.initMessageHeaders) || null;\n\n  if (opt_options && opt_options.messageContentType) {\n    if (initHeaders) {\n      goog.object.set(\n          initHeaders, goog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE,\n          opt_options.messageContentType);\n    } else {\n      initHeaders = goog.object.create(\n          goog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE,\n          opt_options.messageContentType);\n    }\n  }\n\n  if (opt_options && opt_options.clientProfile) {\n    if (initHeaders) {\n      goog.object.set(\n          initHeaders, goog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE,\n          opt_options.clientProfile);\n    } else {\n      initHeaders = goog.object.create(\n          goog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE,\n          opt_options.clientProfile);\n    }\n  }\n\n  this.channel_.setInitHeaders(initHeaders);\n\n  const httpHeadersOverwriteParam =\n      opt_options && opt_options.httpHeadersOverwriteParam;\n  if (httpHeadersOverwriteParam &&\n      !goog.string.isEmptyOrWhitespace(httpHeadersOverwriteParam)) {\n    this.channel_.setHttpHeadersOverwriteParam(httpHeadersOverwriteParam);\n  }\n\n  /**\n   * @private {boolean} Whether to enable CORS.\n   */\n  this.supportsCrossDomainXhr_ =\n      (opt_options && opt_options.supportsCrossDomainXhr) || false;\n\n  /**\n   * @private {boolean} Whether to send raw Json and bypass v8 wire format.\n   */\n  this.sendRawJson_ = (opt_options && opt_options.sendRawJson) || false;\n\n  // Note that httpSessionIdParam will be ignored if the same parameter name\n  // has already been specified with messageUrlParams\n  const httpSessionIdParam = opt_options && opt_options.httpSessionIdParam;\n  if (httpSessionIdParam &&\n      !goog.string.isEmptyOrWhitespace(httpSessionIdParam)) {\n    this.channel_.setHttpSessionIdParam(httpSessionIdParam);\n    if (goog.object.containsKey(this.messageUrlParams_, httpSessionIdParam)) {\n      goog.object.remove(this.messageUrlParams_, httpSessionIdParam);\n      goog.log.warning(\n          this.logger_,\n          'Ignore httpSessionIdParam also specified with messageUrlParams: ' +\n              httpSessionIdParam);\n    }\n  }\n\n  /**\n   * The channel handler.\n   *\n   * @private {!WebChannelBaseTransport.Channel.Handler_}\n   */\n  this.channelHandler_ = new WebChannelBaseTransport.Channel.Handler_(this);\n};\ngoog.inherits(WebChannelBaseTransport.Channel, goog.events.EventTarget);\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.open = function() {\n  'use strict';\n  this.channel_.setHandler(this.channelHandler_);\n  if (this.supportsCrossDomainXhr_) {\n    this.channel_.setSupportsCrossDomainXhrs(true);\n  }\n  this.channel_.connect(this.url_, (this.messageUrlParams_ || undefined));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.close = function() {\n  'use strict';\n  this.channel_.disconnect();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.halfClose = function() {\n  'use strict';\n  // to be implemented\n  throw new Error('Not implemented');\n};\n\n\n/**\n * The WebChannelBase only supports object types.\n *\n * @param {!goog.net.WebChannel.MessageData} message The message to send.\n *\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.send = function(message) {\n  'use strict';\n  this.channel_.sendMap(this.messageToMapObject_(message));\n};\n\n\n/**\n * Converts a message to the map used by the underlying channel.\n *\n * @param {!goog.net.WebChannel.MessageData} message\n * @return {!Object|!goog.collections.maps.MapLike}\n */\nWebChannelBaseTransport.Channel.prototype.messageToMapObject_ = function(\n    message) {\n  'use strict';\n  goog.asserts.assert(\n      goog.isObject(message) || typeof message === 'string',\n      'only object type or raw string is supported');\n\n  if (typeof message === 'string') {\n    const rawJson = {};\n    rawJson[Wire.RAW_DATA_KEY] = message;\n    return rawJson;\n  }\n\n  if (this.sendRawJson_) {\n    const rawJson = {};\n    rawJson[Wire.RAW_DATA_KEY] = goog.json.serialize(message);\n    return rawJson;\n  }\n\n  return message;\n};\n\n\n/**\n * Converts the map used by the underlying channel to a message.\n *\n * NOTE: In the case of the message being JS Object or string, the exact same\n * object passed during `messageToMapObject_()` is returned. In the case of raw\n * JSON, an equal (but not the same) object is returned (due to serialization).\n *\n * @param {!Object|!goog.collections.maps.MapLike} map\n * @return {!goog.net.WebChannel.MessageData}\n */\nWebChannelBaseTransport.Channel.prototype.mapObjectToMessage_ = function(map) {\n  'use strict';\n  if (Wire.RAW_DATA_KEY in map) {\n    const rawMessage = map[Wire.RAW_DATA_KEY];\n\n    if (this.sendRawJson_) {\n      return /** @type {!goog.net.WebChannel.MessageData} */ (\n          goog.json.parse(rawMessage));\n    } else {  // string message\n      return rawMessage;\n    }\n  }\n\n  return map;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.disposeInternal = function() {\n  'use strict';\n  this.channel_.setHandler(null);\n  delete this.channelHandler_;\n  this.channel_.disconnect();\n  delete this.channel_;\n\n  WebChannelBaseTransport.Channel.base(this, 'disposeInternal');\n};\n\n\n\n/**\n * The message event.\n *\n * @param {!Array<?>|!Object} array The data array from the underlying channel.\n * @constructor\n * @extends {goog.net.WebChannel.MessageEvent}\n * @final\n */\nWebChannelBaseTransport.Channel.MessageEvent = function(array) {\n  'use strict';\n  WebChannelBaseTransport.Channel.MessageEvent.base(this, 'constructor');\n\n  // Metadata as HTTP headers and status code (always come in a pair).\n  if (array['__headers__']) {\n    this.headers = array['__headers__'];\n    this.statusCode = array['__status__'];\n    delete array['__headers__'];\n    delete array['__status__'];\n  }\n\n  // single-metadata only\n  const metadata = array['__sm__'];\n  if (metadata) {\n    this.metadataKey = goog.object.getAnyKey(metadata);\n    if (this.metadataKey) {\n      this.data = goog.object.get(metadata, this.metadataKey);\n    } else {\n      this.data = metadata;  // empty\n    }\n  } else {\n    this.data = array;\n  }\n};\ngoog.inherits(\n    WebChannelBaseTransport.Channel.MessageEvent,\n    goog.net.WebChannel.MessageEvent);\n\n\n\n/**\n * The error event.\n *\n * @param {WebChannelBase.Error} error The error code.\n * @constructor\n * @extends {goog.net.WebChannel.ErrorEvent}\n * @final\n */\nWebChannelBaseTransport.Channel.ErrorEvent = function(error) {\n  'use strict';\n  WebChannelBaseTransport.Channel.ErrorEvent.base(this, 'constructor');\n\n  /**\n   * High-level status code.\n   */\n  this.status = goog.net.WebChannel.ErrorStatus.NETWORK_ERROR;\n\n  /**\n   * @const {WebChannelBase.Error} Internal error code, for debugging use only.\n   */\n  this.errorCode = error;\n};\ngoog.inherits(\n    WebChannelBaseTransport.Channel.ErrorEvent, goog.net.WebChannel.ErrorEvent);\n\n\n\n/**\n * Implementation of {@link WebChannelBase.Handler} interface.\n *\n * @param {!WebChannelBaseTransport.Channel} channel The enclosing WebChannel.\n *\n * @constructor\n * @extends {WebChannelBase.Handler}\n * @private\n */\nWebChannelBaseTransport.Channel.Handler_ = function(channel) {\n  'use strict';\n  WebChannelBaseTransport.Channel.Handler_.base(this, 'constructor');\n\n  /**\n   * @type {!WebChannelBaseTransport.Channel}\n   * @private\n   */\n  this.channel_ = channel;\n};\ngoog.inherits(WebChannelBaseTransport.Channel.Handler_, WebChannelBase.Handler);\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelOpened = function(\n    channel) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_, 'WebChannel opened on ' + this.channel_.url_);\n  this.channel_.dispatchEvent(goog.net.WebChannel.EventType.OPEN);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelHandleArray =\n    function(channel, array) {\n  'use strict';\n  goog.asserts.assert(array, 'array expected to be defined');\n  this.channel_.dispatchEvent(\n      new WebChannelBaseTransport.Channel.MessageEvent(array));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelError = function(\n    channel, error) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_,\n      'WebChannel aborted on ' + this.channel_.url_ +\n          ' due to channel error: ' + error);\n  this.channel_.dispatchEvent(\n      new WebChannelBaseTransport.Channel.ErrorEvent(error));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelClosed = function(\n    channel, opt_pendingMaps, opt_undeliveredMaps) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_, 'WebChannel closed on ' + this.channel_.url_);\n  this.channel_.dispatchEvent(goog.net.WebChannel.EventType.CLOSE);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.getRuntimeProperties = function() {\n  'use strict';\n  return new WebChannelBaseTransport.ChannelProperties(this, this.channel_);\n};\n\n\n\n/**\n * Implementation of the {@link goog.net.WebChannel.RuntimeProperties}.\n *\n * @param {!WebChannelBaseTransport.Channel} transportChannel The transport\n *     channel object.\n * @param {!WebChannelBase} channel The underlying channel object.\n *\n * @constructor\n * @implements {goog.net.WebChannel.RuntimeProperties}\n * @final\n */\nWebChannelBaseTransport.ChannelProperties = function(\n    transportChannel, channel) {\n  'use strict';\n  /**\n   * The transport channel object.\n   *\n   * @private @const {!WebChannelBaseTransport.Channel}\n   */\n  this.transportChannel_ = transportChannel;\n\n  /**\n   * The underlying channel object.\n   *\n   * @private @const {!WebChannelBase}\n   */\n  this.channel_ = channel;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getConcurrentRequestLimit =\n    function() {\n  'use strict';\n  return this.channel_.getForwardChannelRequestPool().getMaxSize();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.isSpdyEnabled = function() {\n  'use strict';\n  return this.getConcurrentRequestLimit() > 1;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getPendingRequestCount =\n    function() {\n  'use strict';\n  return this.channel_.getForwardChannelRequestPool().getRequestCount();\n};\n\n\n/**\n * @override\n * @return {!Array<!goog.net.WebChannel.MessageData>}\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getNonAckedMessages =\n    function() {\n  'use strict';\n  return this.channel_.getNonAckedMaps().map(\n      queued_map => this.transportChannel_.mapObjectToMessage_(queued_map.map));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getHttpSessionId =\n    function() {\n  'use strict';\n  return this.channel_.getHttpSessionId();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.commit = function(\n    callback) {\n  'use strict';\n  this.channel_.setForwardChannelFlushCallback(callback);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.notifyNonAckedMessageCount =\n    goog.abstractMethod;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.onCommit =\n    goog.abstractMethod;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.ackCommit =\n    goog.abstractMethod;\n\n\n/**\n * @override\n * @return {!Object<string, string>|undefined}\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getLastResponseHeaders =\n    function() {\n  'use strict';\n  return this.channel_.getLastResponseHeaders();\n};\n\n/** @override */\nWebChannelBaseTransport.ChannelProperties.prototype.getLastStatusCode =\n    function() {\n  'use strict';\n  return this.channel_.getLastStatusCode();\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See goog.crypt.Sha1 and goog.crypt.Md5 for sample implementations.\n */\n\ngoog.provide('goog.crypt.Hash');\n\n\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\ngoog.crypt.Hash = function() {\n  'use strict';\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  this.blockSize = -1;\n};\n\n\n/**\n * Resets the internal accumulator.\n */\ngoog.crypt.Hash.prototype.reset = goog.abstractMethod;\n\n\n/**\n * Adds a byte array (array with values in [0-255] range) or a string (must\n * only contain 8-bit, i.e., Latin1 characters) to the internal accumulator.\n *\n * Many hash functions operate on blocks of data and implement optimizations\n * when a full chunk of data is readily available. Hence it is often preferable\n * to provide large chunks of data (a kilobyte or more) than to repeatedly\n * call the update method with few tens of bytes. If this is not possible, or\n * not feasible, it might be good to provide data in multiplies of hash block\n * size (often 64 bytes). Please see the implementation and performance tests\n * of your favourite hash.\n *\n * @param {Array<number>|Uint8Array|string} bytes Data used for the update.\n * @param {number=} opt_length Number of bytes to use.\n */\ngoog.crypt.Hash.prototype.update = goog.abstractMethod;\n\n\n/**\n * @return {!Array<number>} The finalized hash computed\n *     from the internal accumulator.\n */\ngoog.crypt.Hash.prototype.digest = goog.abstractMethod;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview MD5 cryptographic hash.\n * Implementation of http://tools.ietf.org/html/rfc1321 with common\n * optimizations and tweaks (see http://en.wikipedia.org/wiki/MD5).\n *\n * Usage:\n *   var md5 = new goog.crypt.Md5();\n *   md5.update(bytes);\n *   var hash = md5.digest();\n *\n * Performance:\n *   Chrome 23              ~680 Mbit/s\n *   Chrome 13 (in a VM)    ~250 Mbit/s\n *   Firefox 6.0 (in a VM)  ~100 Mbit/s\n *   IE9 (in a VM)           ~27 Mbit/s\n *   Firefox 3.6             ~15 Mbit/s\n *   IE8 (in a VM)           ~13 Mbit/s\n */\n\ngoog.provide('goog.crypt.Md5');\n\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * MD5 cryptographic hash constructor.\n * @constructor\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Md5 = function() {\n  'use strict';\n  goog.crypt.Md5.base(this, 'constructor');\n\n  this.blockSize = 512 / 8;\n\n  /**\n   * Holds the current values of accumulated A-D variables (MD buffer).\n   * @type {!Array<number>}\n   * @private\n   */\n  this.chain_ = new Array(4);\n\n  /**\n   * A buffer holding the data until the whole block can be processed.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.block_ = new Array(this.blockSize);\n\n  /**\n   * The length of yet-unprocessed data as collected in the block.\n   * @type {number}\n   * @private\n   */\n  this.blockLength_ = 0;\n\n  /**\n   * The total length of the message so far.\n   * @type {number}\n   * @private\n   */\n  this.totalLength_ = 0;\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Md5, goog.crypt.Hash);\n\n\n/**\n * Integer rotation constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.S_ = [\n  7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n  5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n  4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n  6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21\n];\n */\n\n/**\n * Sine function constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.T_ = [\n  0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\n  0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n  0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n  0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\n  0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n  0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n  0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\n  0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\n  0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\n  0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\n  0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\n  0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\n  0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\n];\n */\n\n\n/** @override */\ngoog.crypt.Md5.prototype.reset = function() {\n  'use strict';\n  this.chain_[0] = 0x67452301;\n  this.chain_[1] = 0xefcdab89;\n  this.chain_[2] = 0x98badcfe;\n  this.chain_[3] = 0x10325476;\n\n  this.blockLength_ = 0;\n  this.totalLength_ = 0;\n};\n\n\n/**\n * Internal compress helper function. It takes a block of data (64 bytes)\n * and updates the accumulator.\n * @param {Array<number>|Uint8Array|string} buf The block to compress.\n * @param {number=} opt_offset Offset of the block in the buffer.\n * @private\n */\ngoog.crypt.Md5.prototype.compress_ = function(buf, opt_offset) {\n  'use strict';\n  if (!opt_offset) {\n    opt_offset = 0;\n  }\n\n  // We allocate the array every time, but it's cheap in practice.\n  var X = new Array(16);\n\n  // Get 16 little endian words. It is not worth unrolling this for Chrome 11.\n  if (typeof buf === 'string') {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf.charCodeAt(opt_offset++)) |\n          (buf.charCodeAt(opt_offset++) << 8) |\n          (buf.charCodeAt(opt_offset++) << 16) |\n          (buf.charCodeAt(opt_offset++) << 24);\n    }\n  } else {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf[opt_offset++]) | (buf[opt_offset++] << 8) |\n          (buf[opt_offset++] << 16) | (buf[opt_offset++] << 24);\n    }\n  }\n\n  var A = this.chain_[0];\n  var B = this.chain_[1];\n  var C = this.chain_[2];\n  var D = this.chain_[3];\n  var sum = 0;\n\n  /*\n   * This is an abbreviated implementation, it is left here commented out for\n   * reference purposes. See below for an unrolled version in use.\n   *\n  var f, n, tmp;\n  for (var i = 0; i < 64; ++i) {\n\n    if (i < 16) {\n      f = (D ^ (B & (C ^ D)));\n      n = i;\n    } else if (i < 32) {\n      f = (C ^ (D & (B ^ C)));\n      n = (5 * i + 1) % 16;\n    } else if (i < 48) {\n      f = (B ^ C ^ D);\n      n = (3 * i + 5) % 16;\n    } else {\n      f = (C ^ (B | (~D)));\n      n = (7 * i) % 16;\n    }\n\n    tmp = D;\n    D = C;\n    C = B;\n    sum = (A + f + goog.crypt.Md5.T_[i] + X[n]) & 0xffffffff;\n    B += ((sum << goog.crypt.Md5.S_[i]) & 0xffffffff) |\n         (sum >>> (32 - goog.crypt.Md5.S_[i]));\n    A = tmp;\n  }\n   */\n\n  /*\n   * This is an unrolled MD5 implementation, which gives ~30% speedup compared\n   * to the abbreviated implementation above, as measured on Chrome 11. It is\n   * important to keep 32-bit croppings to minimum and inline the integer\n   * rotation.\n   */\n  sum = (A + (D ^ (B & (C ^ D))) + X[0] + 0xd76aa478) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[1] + 0xe8c7b756) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[2] + 0x242070db) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[3] + 0xc1bdceee) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[4] + 0xf57c0faf) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[5] + 0x4787c62a) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[6] + 0xa8304613) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[7] + 0xfd469501) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[8] + 0x698098d8) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[9] + 0x8b44f7af) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[10] + 0xffff5bb1) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[11] + 0x895cd7be) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[12] + 0x6b901122) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[13] + 0xfd987193) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[14] + 0xa679438e) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[15] + 0x49b40821) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (C ^ (D & (B ^ C))) + X[1] + 0xf61e2562) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[6] + 0xc040b340) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[11] + 0x265e5a51) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[0] + 0xe9b6c7aa) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[5] + 0xd62f105d) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[10] + 0x02441453) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[15] + 0xd8a1e681) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[4] + 0xe7d3fbc8) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[9] + 0x21e1cde6) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[14] + 0xc33707d6) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[3] + 0xf4d50d87) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[8] + 0x455a14ed) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[13] + 0xa9e3e905) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[2] + 0xfcefa3f8) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[7] + 0x676f02d9) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[12] + 0x8d2a4c8a) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (B ^ C ^ D) + X[5] + 0xfffa3942) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[8] + 0x8771f681) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[11] + 0x6d9d6122) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[14] + 0xfde5380c) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[1] + 0xa4beea44) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[4] + 0x4bdecfa9) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[7] + 0xf6bb4b60) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[10] + 0xbebfbc70) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[13] + 0x289b7ec6) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[0] + 0xeaa127fa) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[3] + 0xd4ef3085) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[6] + 0x04881d05) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[9] + 0xd9d4d039) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[12] + 0xe6db99e5) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[15] + 0x1fa27cf8) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[2] + 0xc4ac5665) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (C ^ (B | (~D))) + X[0] + 0xf4292244) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[7] + 0x432aff97) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[14] + 0xab9423a7) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[5] + 0xfc93a039) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[12] + 0x655b59c3) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[3] + 0x8f0ccc92) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[10] + 0xffeff47d) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[1] + 0x85845dd1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[8] + 0x6fa87e4f) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[15] + 0xfe2ce6e0) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[6] + 0xa3014314) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[13] + 0x4e0811a1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[4] + 0xf7537e82) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[11] + 0xbd3af235) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[2] + 0x2ad7d2bb) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[9] + 0xeb86d391) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n\n  this.chain_[0] = (this.chain_[0] + A) & 0xffffffff;\n  this.chain_[1] = (this.chain_[1] + B) & 0xffffffff;\n  this.chain_[2] = (this.chain_[2] + C) & 0xffffffff;\n  this.chain_[3] = (this.chain_[3] + D) & 0xffffffff;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.update = function(bytes, opt_length) {\n  'use strict';\n  if (opt_length === undefined) {\n    opt_length = bytes.length;\n  }\n  var lengthMinusBlock = opt_length - this.blockSize;\n\n  // Copy some object properties to local variables in order to save on access\n  // time from inside the loop (~10% speedup was observed on Chrome 11).\n  var block = this.block_;\n  var blockLength = this.blockLength_;\n  var i = 0;\n\n  // The outer while loop should execute at most twice.\n  while (i < opt_length) {\n    // When we have no data in the block to top up, we can directly process the\n    // input buffer (assuming it contains sufficient data). This gives ~30%\n    // speedup on Chrome 14 and ~70% speedup on Firefox 6.0, but requires that\n    // the data is provided in large chunks (or in multiples of 64 bytes).\n    if (blockLength == 0) {\n      while (i <= lengthMinusBlock) {\n        this.compress_(bytes, i);\n        i += this.blockSize;\n      }\n    }\n\n    if (typeof bytes === 'string') {\n      while (i < opt_length) {\n        block[blockLength++] = bytes.charCodeAt(i++);\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    } else {\n      while (i < opt_length) {\n        block[blockLength++] = bytes[i++];\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    }\n  }\n\n  this.blockLength_ = blockLength;\n  this.totalLength_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.digest = function() {\n  'use strict';\n  // This must accommodate at least 1 padding byte (0x80), 8 bytes of\n  // total bitlength, and must end at a 64-byte boundary.\n  var pad = new Array(\n      (this.blockLength_ < 56 ? this.blockSize : this.blockSize * 2) -\n      this.blockLength_);\n\n  // Add padding: 0x80 0x00*\n  pad[0] = 0x80;\n  for (var i = 1; i < pad.length - 8; ++i) {\n    pad[i] = 0;\n  }\n  // Add the total number of bits, little endian 64-bit integer.\n  var totalBits = this.totalLength_ * 8;\n  for (var i = pad.length - 8; i < pad.length; ++i) {\n    pad[i] = totalBits & 0xff;\n    totalBits /= 0x100;  // Don't use bit-shifting here!\n  }\n  this.update(pad);\n\n  var digest = new Array(16);\n  var n = 0;\n  for (var i = 0; i < 4; ++i) {\n    for (var j = 0; j < 32; j += 8) {\n      digest[n++] = (this.chain_[i] >>> j) & 0xff;\n    }\n  }\n  return digest;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Transport support for WebChannel.\n *\n * The <code>WebChannelTransport</code> implementation serves as the factory\n * for <code>WebChannel</code>, which offers an abstraction for\n * point-to-point socket-like communication similar to what BrowserChannel\n * or HTML5 WebSocket offers.\n */\n\ngoog.provide('goog.net.WebChannelTransport');\n\ngoog.requireType('goog.net.WebChannel');\ngoog.requireType('goog.net.WebChannel.Options');\n\n\n\n/**\n * A WebChannelTransport instance represents a shared context of logical\n * connectivity between a browser client and a remote origin.\n *\n * Over a single WebChannelTransport instance, multiple WebChannels may be\n * created against different URLs, which may all share the same\n * underlying connectivity (i.e. TCP connection) whenever possible.\n *\n * When multi-domains are supported, such as CORS, multiple origins may be\n * supported over a single WebChannelTransport instance at the same time.\n *\n * Sharing between different window contexts such as tabs is not addressed\n * by WebChannelTransport. Applications may choose HTML5 shared workers\n * or other techniques to access the same transport instance\n * across different window contexts.\n *\n * @interface\n */\ngoog.net.WebChannelTransport = function() {};\n\n\n/**\n * The client version. This integer value will be passed to the server\n * when a channel is opened to inform the server the client \"capabilities\".\n *\n * Wire protocol version is a different concept and is internal to the\n * transport implementation.\n *\n * @const\n * @type {number}\n */\ngoog.net.WebChannelTransport.CLIENT_VERSION = 22;\n\n\n/**\n * Create a new WebChannel instance.\n *\n * The new WebChannel is to be opened against the server-side resource\n * as specified by the given URL. See {@link goog.net.WebChannel} for detailed\n * semantics.\n *\n * @param {string} url The URL path for the new WebChannel instance.\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *     new WebChannel instance. The configuration object is reusable after\n *     the new channel instance is created.\n * @return {!goog.net.WebChannel} the newly created WebChannel instance.\n */\ngoog.net.WebChannelTransport.prototype.createWebChannel = goog.abstractMethod;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Bring in closure-library dependencies\n */\n\ngoog.provide('firebase.webchannel.wrapper');\n\n// goog.net.WebChannelTransport\ngoog.require('goog.net.createWebChannelTransport');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.labs.net.webChannel.WebChannelBaseTransport');\n\n/**\n * NOTE: The `createWebChannel` function takes an options object as a second param\n * whose properties are typically mangled. We override these in externs/overrides.js\n * Without those externs, this does not function properly.\n */\ngoog.labs.net.webChannel.WebChannelBaseTransport.prototype['createWebChannel'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.prototype.createWebChannel;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['send'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.send;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['open'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.open;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['close'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.close;\n\n// goog.net.ErrorCode\ngoog.require('goog.net.ErrorCode');\ngoog.net.ErrorCode['NO_ERROR'] = goog.net.ErrorCode.NO_ERROR;\ngoog.net.ErrorCode['TIMEOUT'] = goog.net.ErrorCode.TIMEOUT;\ngoog.net.ErrorCode['HTTP_ERROR'] = goog.net.ErrorCode.HTTP_ERROR;\n\n// goog.net.ErrorType\ngoog.require('goog.net.EventType');\ngoog.net.EventType['COMPLETE'] = goog.net.EventType.COMPLETE;\n\n// goog.net.WebChannel\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.events.EventTarget');\ngoog.net.WebChannel['EventType'] = goog.net.WebChannel.EventType;\ngoog.net.WebChannel.EventType['OPEN'] = goog.net.WebChannel.EventType.OPEN;\ngoog.net.WebChannel.EventType['CLOSE'] = goog.net.WebChannel.EventType.CLOSE;\ngoog.net.WebChannel.EventType['ERROR'] = goog.net.WebChannel.EventType.ERROR;\ngoog.net.WebChannel.EventType['MESSAGE'] =\n  goog.net.WebChannel.EventType.MESSAGE;\ngoog.events.EventTarget.prototype['listen'] =\n  goog.events.EventTarget.prototype.listen;\n\ngoog.require('goog.net.XhrIo');\ngoog.net.XhrIo.prototype['listenOnce'] = goog.net.XhrIo.prototype.listenOnce;\ngoog.net.XhrIo.prototype['getLastError'] =\n  goog.net.XhrIo.prototype.getLastError;\ngoog.net.XhrIo.prototype['getLastErrorCode'] =\n  goog.net.XhrIo.prototype.getLastErrorCode;\ngoog.net.XhrIo.prototype['getStatus'] = goog.net.XhrIo.prototype.getStatus;\ngoog.net.XhrIo.prototype['getResponseJson'] =\n  goog.net.XhrIo.prototype.getResponseJson;\ngoog.net.XhrIo.prototype['getResponseText'] =\n  goog.net.XhrIo.prototype.getResponseText;\ngoog.net.XhrIo.prototype['send'] = goog.net.XhrIo.prototype.send;\ngoog.net.XhrIo.prototype['setWithCredentials'] =\n  goog.net.XhrIo.prototype.setWithCredentials;\n\ngoog.require('goog.crypt.Md5');\ngoog.crypt.Md5.prototype['digest'] = goog.crypt.Md5.prototype.digest;\ngoog.crypt.Md5.prototype['reset'] = goog.crypt.Md5.prototype.reset;\ngoog.crypt.Md5.prototype['update'] = goog.crypt.Md5.prototype.update;\n\ngoog.require('goog.math.Integer');\ngoog.math.Integer.prototype['add'] = goog.math.Integer.prototype.add;\ngoog.math.Integer.prototype['multiply'] = goog.math.Integer.prototype.multiply;\ngoog.math.Integer.prototype['modulo'] = goog.math.Integer.prototype.modulo;\ngoog.math.Integer.prototype['compare'] = goog.math.Integer.prototype.compare;\ngoog.math.Integer.prototype['toNumber'] = goog.math.Integer.prototype.toNumber;\ngoog.math.Integer.prototype['toString'] = goog.math.Integer.prototype.toString;\ngoog.math.Integer.prototype['getBits'] = goog.math.Integer.prototype.getBits;\ngoog.math.Integer['fromNumber'] = goog.math.Integer.fromNumber;\ngoog.math.Integer['fromString'] = goog.math.Integer.fromString;\n\nmodule['exports']['createWebChannelTransport'] =\n  goog.net.createWebChannelTransport;\nmodule['exports']['getStatEventTarget'] =\n  goog.labs.net.webChannel.requestStats.getStatEventTarget;\nmodule['exports']['ErrorCode'] = goog.net.ErrorCode;\nmodule['exports']['EventType'] = goog.net.EventType;\nmodule['exports']['Event'] = goog.labs.net.webChannel.requestStats.Event;\nmodule['exports']['Stat'] = goog.labs.net.webChannel.requestStats.Stat;\nmodule['exports']['FetchXmlHttpFactory'] = goog.net.FetchXmlHttpFactory;\nmodule['exports']['WebChannel'] = goog.net.WebChannel;\nmodule['exports']['XhrIo'] = goog.net.XhrIo;\nmodule['exports']['Md5'] = goog.crypt.Md5;\nmodule['exports']['Integer'] = goog.math.Integer;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Default factory for <code>WebChannelTransport</code> to\n * avoid exposing concrete classes to clients.\n */\n\ngoog.provide('goog.net.createWebChannelTransport');\n\ngoog.require('goog.labs.net.webChannel.WebChannelBaseTransport');\ngoog.requireType('goog.net.WebChannelTransport');\n\n\n/**\n * Create a new WebChannelTransport instance using the default implementation.\n * Throws an error message if no default transport available in the current\n * environment.\n *\n * @return {!goog.net.WebChannelTransport} the newly created transport instance.\n */\ngoog.net.createWebChannelTransport = function() {\n  'use strict';\n  return new goog.labs.net.webChannel.WebChannelBaseTransport();\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nexport class User {\n  /** A user with a null UID. */\n  static readonly UNAUTHENTICATED = new User(null);\n\n  // TODO(mikelehen): Look into getting a proper uid-equivalent for\n  // non-FirebaseAuth providers.\n  static readonly GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n  static readonly FIRST_PARTY = new User('first-party-uid');\n  static readonly MOCK_USER = new User('mock-user');\n\n  constructor(readonly uid: string | null) {}\n\n  isAuthenticated(): boolean {\n    return this.uid != null;\n  }\n\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey(): string {\n    if (this.isAuthenticated()) {\n      return 'uid:' + this.uid;\n    } else {\n      return 'anonymous-user';\n    }\n  }\n\n  isEqual(otherUser: User): boolean {\n    return otherUser.uid === this.uid;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nimport { version } from '../../../firebase/package.json';\nexport let SDK_VERSION = version;\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel, LogLevelString } from '@firebase/logger';\n\nimport { SDK_VERSION } from '../core/version';\nimport { formatJSON } from '../platform/format_json';\n\nexport { LogLevel, LogLevelString };\n\nconst logClient = new Logger('@firebase/firestore');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  logClient.setLogLevel(logLevel);\n}\n\nexport function logDebug(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    const args = obj.map(argToString);\n    logClient.debug(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function logError(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    const args = obj.map(argToString);\n    logClient.error(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * @internal\n */\nexport function logWarn(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    const args = obj.map(argToString);\n    logClient.warn(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj: unknown): string | unknown {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return formatJSON(obj);\n    } catch (e) {\n      // Converting to JSON failed, just log the object directly\n      return obj;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Formats an object as a JSON string, suitable for logging. */\nexport function formatJSON(value: unknown): string {\n  return JSON.stringify(value);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '../core/version';\n\nimport { logError } from './log';\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nexport function fail(failure: string = 'Unexpected state'): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message =\n    `FIRESTORE (${SDK_VERSION}) INTERNAL ASSERTION FAILED: ` + failure;\n  logError(message);\n\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nexport function hardAssert(\n  assertion: boolean,\n  message?: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */\nexport function debugAssert(\n  assertion: boolean,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nexport function debugCast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  debugAssert(\n    obj instanceof constructor,\n    `Expected type '${constructor.name}', but was '${obj.constructor.name}'`\n  );\n  return obj as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * The set of Firestore status codes. The codes are the same at the ones\n * exposed by gRPC here:\n * https://github.com/grpc/grpc/blob/master/doc/statuscodes.md\n *\n * Possible values:\n * - 'cancelled': The operation was cancelled (typically by the caller).\n * - 'unknown': Unknown error or an error from a different error domain.\n * - 'invalid-argument': Client specified an invalid argument. Note that this\n *   differs from 'failed-precondition'. 'invalid-argument' indicates\n *   arguments that are problematic regardless of the state of the system\n *   (e.g. an invalid field name).\n * - 'deadline-exceeded': Deadline expired before operation could complete.\n *   For operations that change the state of the system, this error may be\n *   returned even if the operation has completed successfully. For example,\n *   a successful response from a server could have been delayed long enough\n *   for the deadline to expire.\n * - 'not-found': Some requested document was not found.\n * - 'already-exists': Some document that we attempted to create already\n *   exists.\n * - 'permission-denied': The caller does not have permission to execute the\n *   specified operation.\n * - 'resource-exhausted': Some resource has been exhausted, perhaps a\n *   per-user quota, or perhaps the entire file system is out of space.\n * - 'failed-precondition': Operation was rejected because the system is not\n *   in a state required for the operation's execution.\n * - 'aborted': The operation was aborted, typically due to a concurrency\n *   issue like transaction aborts, etc.\n * - 'out-of-range': Operation was attempted past the valid range.\n * - 'unimplemented': Operation is not implemented or not supported/enabled.\n * - 'internal': Internal errors. Means some invariants expected by\n *   underlying system has been broken. If you see one of these errors,\n *   something is very broken.\n * - 'unavailable': The service is currently unavailable. This is most likely\n *   a transient condition and may be corrected by retrying with a backoff.\n * - 'data-loss': Unrecoverable data loss or corruption.\n * - 'unauthenticated': The request does not have valid authentication\n *   credentials for the operation.\n */\nexport type FirestoreErrorCode =\n  | 'cancelled'\n  | 'unknown'\n  | 'invalid-argument'\n  | 'deadline-exceeded'\n  | 'not-found'\n  | 'already-exists'\n  | 'permission-denied'\n  | 'resource-exhausted'\n  | 'failed-precondition'\n  | 'aborted'\n  | 'out-of-range'\n  | 'unimplemented'\n  | 'internal'\n  | 'unavailable'\n  | 'data-loss'\n  | 'unauthenticated';\n\n/**\n * Error Codes describing the different ways Firestore can fail. These come\n * directly from GRPC.\n */\nexport type Code = FirestoreErrorCode;\n\nexport const Code = {\n  // Causes are copied from:\n  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n  /** Not an error; returned on success. */\n  OK: 'ok' as FirestoreErrorCode,\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 'cancelled' as FirestoreErrorCode,\n\n  /** Unknown error or an error from a different error domain. */\n  UNKNOWN: 'unknown' as FirestoreErrorCode,\n\n  /**\n   * Client specified an invalid argument. Note that this differs from\n   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n   * problematic regardless of the state of the system (e.g., a malformed file\n   * name).\n   */\n  INVALID_ARGUMENT: 'invalid-argument' as FirestoreErrorCode,\n\n  /**\n   * Deadline expired before operation could complete. For operations that\n   * change the state of the system, this error may be returned even if the\n   * operation has completed successfully. For example, a successful response\n   * from a server could have been delayed long enough for the deadline to\n   * expire.\n   */\n  DEADLINE_EXCEEDED: 'deadline-exceeded' as FirestoreErrorCode,\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 'not-found' as FirestoreErrorCode,\n\n  /**\n   * Some entity that we attempted to create (e.g., file or directory) already\n   * exists.\n   */\n  ALREADY_EXISTS: 'already-exists' as FirestoreErrorCode,\n\n  /**\n   * The caller does not have permission to execute the specified operation.\n   * PERMISSION_DENIED must not be used for rejections caused by exhausting\n   * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n   * PERMISSION_DENIED must not be used if the caller can not be identified\n   * (use UNAUTHENTICATED instead for those errors).\n   */\n  PERMISSION_DENIED: 'permission-denied' as FirestoreErrorCode,\n\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: 'unauthenticated' as FirestoreErrorCode,\n\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n   * entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: 'resource-exhausted' as FirestoreErrorCode,\n\n  /**\n   * Operation was rejected because the system is not in a state required for\n   * the operation's execution. For example, directory to be deleted may be\n   * non-empty, an rmdir operation is applied to a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n   *  (b) Use ABORTED if the client should retry at a higher-level\n   *      (e.g., restarting a read-modify-write sequence).\n   *  (c) Use FAILED_PRECONDITION if the client should not retry until\n   *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n   *      fails because the directory is non-empty, FAILED_PRECONDITION\n   *      should be returned since the client should not retry unless\n   *      they have first fixed up the directory by deleting files from it.\n   *  (d) Use FAILED_PRECONDITION if the client performs conditional\n   *      REST Get/Update/Delete on a resource and the resource on the\n   *      server does not match the condition. E.g., conflicting\n   *      read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: 'failed-precondition' as FirestoreErrorCode,\n\n  /**\n   * The operation was aborted, typically due to a concurrency issue like\n   * sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  ABORTED: 'aborted' as FirestoreErrorCode,\n\n  /**\n   * Operation was attempted past the valid range. E.g., seeking or reading\n   * past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n   * if the system state changes. For example, a 32-bit file system will\n   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n   * an offset past the current file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n   * when it applies so that callers who are iterating through a space can\n   * easily look for an OUT_OF_RANGE error to detect when they are done.\n   */\n  OUT_OF_RANGE: 'out-of-range' as FirestoreErrorCode,\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 'unimplemented' as FirestoreErrorCode,\n\n  /**\n   * Internal errors. Means some invariants expected by underlying System has\n   * been broken. If you see one of these errors, Something is very broken.\n   */\n  INTERNAL: 'internal' as FirestoreErrorCode,\n\n  /**\n   * The service is currently unavailable. This is a most likely a transient\n   * condition and may be corrected by retrying with a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  UNAVAILABLE: 'unavailable' as FirestoreErrorCode,\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 'data-loss' as FirestoreErrorCode\n};\n\n/** An error returned by a Firestore operation. */\nexport class FirestoreError extends FirebaseError {\n  /** The stack of the error. */\n  readonly stack?: string;\n\n  /** @hideconstructor */\n  constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    readonly code: FirestoreErrorCode,\n    /**\n     * A custom error description.\n     */\n    readonly message: string\n  ) {\n    super(code, message);\n\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Resolver<R> {\n  (value: R | Promise<R>): void;\n}\n\nexport interface Rejecter {\n  (reason?: Error): void;\n}\n\nexport class Deferred<R = void> {\n  promise: Promise<R>;\n  // Assigned synchronously in constructor by Promise constructor callback.\n  resolve!: Resolver<R>;\n  reject!: Rejecter;\n\n  constructor() {\n    this.promise = new Promise((resolve: Resolver<R>, reject: Rejecter) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\n/**\n * Takes an array of values and a function from a value to a Promise. The function is run on each\n * value sequentially, waiting for the previous promise to resolve before starting the next one.\n * The returned promise resolves once the function has been run on all values.\n */\nexport function sequence<T>(\n  values: T[],\n  fn: (value: T) => Promise<void>\n): Promise<void> {\n  let p = Promise.resolve();\n  for (const value of values) {\n    p = p.then(() => fn(value));\n  }\n  return p;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { User } from '../auth/user';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\nimport { Deferred } from '../util/promise';\n\n// TODO(mikelehen): This should be split into multiple files and probably\n// moved to an auth/ folder to match other platforms.\n\n/**\n * @internal\n */\nexport type AuthTokenFactory = () => string;\n\n/**\n * @internal\n */\nexport interface FirstPartyCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'firstParty';\n  ['sessionIndex']: string;\n  ['iamToken']: string | null;\n  ['authTokenFactory']: AuthTokenFactory | null;\n}\n\nexport interface ProviderCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'provider';\n  ['client']: CredentialsProvider<User>;\n}\n\n/** Settings for private credentials */\nexport type CredentialsSettings =\n  | FirstPartyCredentialsSettings\n  | ProviderCredentialsSettings;\n\nexport type TokenType = 'OAuth' | 'FirstParty' | 'AppCheck';\nexport interface Token {\n  /** Type of token. */\n  type: TokenType;\n\n  /**\n   * The user with which the token is associated (used for persisting user\n   * state on disk, etc.).\n   * This will be null for Tokens of the type 'AppCheck'.\n   */\n  user?: User;\n\n  /** Header values to set for this token */\n  headers: Map<string, string>;\n}\n\nexport class OAuthToken implements Token {\n  type = 'OAuth' as TokenType;\n  headers = new Map();\n\n  constructor(value: string, public user: User) {\n    this.headers.set('Authorization', `Bearer ${value}`);\n  }\n}\n\n/**\n * A Listener for credential change events. The listener should fetch a new\n * token and may need to invalidate other state if the current user has also\n * changed.\n */\nexport type CredentialChangeListener<T> = (credential: T) => Promise<void>;\n\n/**\n * Provides methods for getting the uid and token for the current user and\n * listening for changes.\n */\nexport interface CredentialsProvider<T> {\n  /**\n   * Starts the credentials provider and specifies a listener to be notified of\n   * credential changes (sign-in / sign-out, token changes). It is immediately\n   * called once with the initial user.\n   *\n   * The change listener is invoked on the provided AsyncQueue.\n   */\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<T>\n  ): void;\n\n  /** Requests a token for the current user. */\n  getToken(): Promise<Token | null>;\n\n  /**\n   * Marks the last retrieved token as invalid, making the next GetToken request\n   * force-refresh the token.\n   */\n  invalidateToken(): void;\n\n  shutdown(): void;\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nexport class EmptyAuthCredentialsProvider implements CredentialsProvider<User> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(null);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(User.UNAUTHENTICATED));\n  }\n\n  shutdown(): void {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nexport class EmulatorAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(private token: Token) {}\n\n  /**\n   * Stores the listener registered with setChangeListener()\n   * This isn't actually necessary since the UID never changes, but we use this\n   * to verify the listen contract is adhered to in tests.\n   */\n  private changeListener: CredentialChangeListener<User> | null = null;\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    debugAssert(\n      !this.changeListener,\n      'Can only call setChangeListener() once.'\n    );\n    this.changeListener = changeListener;\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(this.token.user!));\n  }\n\n  shutdown(): void {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nexport class LiteAuthCredentialsProvider implements CredentialsProvider<User> {\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(authProvider: Provider<FirebaseAuthInternalName>) {\n    authProvider.onInit(auth => {\n      this.auth = auth;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken().then(tokenData => {\n      if (tokenData) {\n        hardAssert(\n          typeof tokenData.accessToken === 'string',\n          'Invalid tokenData returned from getToken():' + tokenData\n        );\n        return new OAuthToken(\n          tokenData.accessToken,\n          new User(this.auth!.getUid())\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {}\n\n  shutdown(): void {}\n}\n\nexport class FirebaseAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  /**\n   * The auth token listener registered with FirebaseApp, retained here so we\n   * can unregister it.\n   */\n  private tokenListener!: () => void;\n\n  /** Tracks the current User. */\n  private currentUser: User = User.UNAUTHENTICATED;\n\n  /**\n   * Counter used to detect if the token changed while a getToken request was\n   * outstanding.\n   */\n  private tokenCounter = 0;\n\n  private forceRefresh = false;\n\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(private authProvider: Provider<FirebaseAuthInternalName>) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    let lastTokenId = this.tokenCounter;\n\n    // A change listener that prevents double-firing for the same token change.\n    const guardedChangeListener: (user: User) => Promise<void> = user => {\n      if (this.tokenCounter !== lastTokenId) {\n        lastTokenId = this.tokenCounter;\n        return changeListener(user);\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    // A promise that can be waited on to block on the next token change.\n    // This promise is re-created after each change.\n    let nextToken = new Deferred<void>();\n\n    this.tokenListener = () => {\n      this.tokenCounter++;\n      this.currentUser = this.getUser();\n      nextToken.resolve();\n      nextToken = new Deferred<void>();\n      asyncQueue.enqueueRetryable(() =>\n        guardedChangeListener(this.currentUser)\n      );\n    };\n\n    const awaitNextToken: () => void = () => {\n      const currentTokenAttempt = nextToken;\n      asyncQueue.enqueueRetryable(async () => {\n        await currentTokenAttempt.promise;\n        await guardedChangeListener(this.currentUser);\n      });\n    };\n\n    const registerAuth = (auth: FirebaseAuthInternal): void => {\n      logDebug('FirebaseAuthCredentialsProvider', 'Auth detected');\n      this.auth = auth;\n      this.auth.addAuthTokenListener(this.tokenListener);\n      awaitNextToken();\n    };\n\n    this.authProvider.onInit(auth => registerAuth(auth));\n\n    // Our users can initialize Auth right after Firestore, so we give it\n    // a chance to register itself with the component framework before we\n    // determine whether to start up in unauthenticated mode.\n    setTimeout(() => {\n      if (!this.auth) {\n        const auth = this.authProvider.getImmediate({ optional: true });\n        if (auth) {\n          registerAuth(auth);\n        } else {\n          // If auth is still not available, proceed with `null` user\n          logDebug('FirebaseAuthCredentialsProvider', 'Auth not yet detected');\n          nextToken.resolve();\n          nextToken = new Deferred<void>();\n        }\n      }\n    }, 0);\n\n    awaitNextToken();\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAuthCredentialsProvider not started.'\n    );\n\n    // Take note of the current value of the tokenCounter so that this method\n    // can fail (with an ABORTED error) if there is a token change while the\n    // request is outstanding.\n    const initialTokenCounter = this.tokenCounter;\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken(forceRefresh).then(tokenData => {\n      // Cancel the request since the token changed while the request was\n      // outstanding so the response is potentially for a previous user (which\n      // user, we can't be sure).\n      if (this.tokenCounter !== initialTokenCounter) {\n        logDebug(\n          'FirebaseAuthCredentialsProvider',\n          'getToken aborted due to token change.'\n        );\n        return this.getToken();\n      } else {\n        if (tokenData) {\n          hardAssert(\n            typeof tokenData.accessToken === 'string',\n            'Invalid tokenData returned from getToken():' + tokenData\n          );\n          return new OAuthToken(tokenData.accessToken, this.currentUser);\n        } else {\n          return null;\n        }\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.auth) {\n      this.auth.removeAuthTokenListener(this.tokenListener!);\n    }\n  }\n\n  // Auth.getUid() can return null even with a user logged in. It is because\n  // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n  // This method should only be called in the AuthTokenListener callback\n  // to guarantee to get the actual user.\n  private getUser(): User {\n    const currentUid = this.auth && this.auth.getUid();\n    hardAssert(\n      currentUid === null || typeof currentUid === 'string',\n      'Received invalid UID: ' + currentUid\n    );\n    return new User(currentUid);\n  }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nexport class FirstPartyToken implements Token {\n  type = 'FirstParty' as TokenType;\n  user = User.FIRST_PARTY;\n  private _headers = new Map();\n\n  constructor(\n    private readonly sessionIndex: string,\n    private readonly iamToken: string | null,\n    private readonly authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n  private getAuthToken(): string | null {\n    if (this.authTokenFactory) {\n      return this.authTokenFactory();\n    } else {\n      return null;\n    }\n  }\n\n  get headers(): Map<string, string> {\n    this._headers.set('X-Goog-AuthUser', this.sessionIndex);\n    // Use array notation to prevent minification\n    const authHeaderTokenValue = this.getAuthToken();\n    if (authHeaderTokenValue) {\n      this._headers.set('Authorization', authHeaderTokenValue);\n    }\n    if (this.iamToken) {\n      this._headers.set('X-Goog-Iam-Authorization-Token', this.iamToken);\n    }\n\n    return this._headers;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nexport class FirstPartyAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(\n    private sessionIndex: string,\n    private iamToken: string | null,\n    private authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(\n      new FirstPartyToken(\n        this.sessionIndex,\n        this.iamToken,\n        this.authTokenFactory\n      )\n    );\n  }\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial uid.\n    asyncQueue.enqueueRetryable(() => changeListener(User.FIRST_PARTY));\n  }\n\n  shutdown(): void {}\n\n  invalidateToken(): void {}\n}\n\nexport class AppCheckToken implements Token {\n  type = 'AppCheck' as TokenType;\n  headers = new Map();\n\n  constructor(private value: string) {\n    if (value && value.length > 0) {\n      this.headers.set('x-firebase-appcheck', this.value);\n    }\n  }\n}\n\nexport class FirebaseAppCheckTokenProvider\n  implements CredentialsProvider<string>\n{\n  /**\n   * The AppCheck token listener registered with FirebaseApp, retained here so\n   * we can unregister it.\n   */\n  private tokenListener!: AppCheckTokenListener;\n  private forceRefresh = false;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  private latestAppCheckToken: string | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {\n    const onTokenChanged: (\n      tokenResult: AppCheckTokenResult\n    ) => Promise<void> = tokenResult => {\n      if (tokenResult.error != null) {\n        logDebug(\n          'FirebaseAppCheckTokenProvider',\n          `Error getting App Check token; using placeholder token instead. Error: ${tokenResult.error.message}`\n        );\n      }\n      const tokenUpdated = tokenResult.token !== this.latestAppCheckToken;\n      this.latestAppCheckToken = tokenResult.token;\n      logDebug(\n        'FirebaseAppCheckTokenProvider',\n        `Received ${tokenUpdated ? 'new' : 'existing'} token.`\n      );\n      return tokenUpdated\n        ? changeListener(tokenResult.token)\n        : Promise.resolve();\n    };\n\n    this.tokenListener = (tokenResult: AppCheckTokenResult) => {\n      asyncQueue.enqueueRetryable(() => onTokenChanged(tokenResult));\n    };\n\n    const registerAppCheck = (appCheck: FirebaseAppCheckInternal): void => {\n      logDebug('FirebaseAppCheckTokenProvider', 'AppCheck detected');\n      this.appCheck = appCheck;\n      this.appCheck.addTokenListener(this.tokenListener);\n    };\n\n    this.appCheckProvider.onInit(appCheck => registerAppCheck(appCheck));\n\n    // Our users can initialize AppCheck after Firestore, so we give it\n    // a chance to register itself with the component framework.\n    setTimeout(() => {\n      if (!this.appCheck) {\n        const appCheck = this.appCheckProvider.getImmediate({ optional: true });\n        if (appCheck) {\n          registerAppCheck(appCheck);\n        } else {\n          // If AppCheck is still not available, proceed without it.\n          logDebug(\n            'FirebaseAppCheckTokenProvider',\n            'AppCheck not yet detected'\n          );\n        }\n      }\n    }, 0);\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAppCheckTokenProvider not started.'\n    );\n\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken(forceRefresh).then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        this.latestAppCheckToken = tokenResult.token;\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.appCheck) {\n      this.appCheck.removeTokenListener(this.tokenListener!);\n    }\n  }\n}\n\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */\nexport class EmptyAppCheckTokenProvider implements CredentialsProvider<string> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(new AppCheckToken(''));\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/** AppCheck token provider for the Lite SDK. */\nexport class LiteAppCheckTokenProvider implements CredentialsProvider<string> {\n  private appCheck: FirebaseAppCheckInternal | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    appCheckProvider.onInit(appCheck => {\n      this.appCheck = appCheck;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken().then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nexport function makeAuthCredentialsProvider(\n  credentials?: CredentialsSettings\n): CredentialsProvider<User> {\n  if (!credentials) {\n    return new EmptyAuthCredentialsProvider();\n  }\n  switch (credentials['type']) {\n    case 'firstParty':\n      return new FirstPartyAuthCredentialsProvider(\n        credentials['sessionIndex'] || '0',\n        credentials['iamToken'] || null,\n        credentials['authTokenFactory'] || null\n      );\n\n    case 'provider':\n      return credentials['client'];\n\n    default:\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'makeAuthCredentialsProvider failed due to invalid credential type'\n      );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../../util/assert';\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nexport function randomBytes(nBytes: number): Uint8Array {\n  debugAssert(nBytes >= 0, `Expecting non-negative nBytes, got: ${nBytes}`);\n\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const crypto =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof self !== 'undefined' && (self.crypto || (self as any)['msCrypto']);\n  const bytes = new Uint8Array(nBytes);\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    crypto.getRandomValues(bytes);\n  } else {\n    // Falls back to Math.random\n    for (let i = 0; i < nBytes; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n  }\n  return bytes;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { randomBytes } from '../platform/random_bytes';\n\nimport { debugAssert } from './assert';\n\nexport type EventHandler<E> = (value: E) => void;\nexport interface Indexable {\n  [k: string]: unknown;\n}\n\n/**\n * A utility class for generating unique alphanumeric IDs of a specified length.\n *\n * @internal\n * Exported internally for testing purposes.\n */\nexport class AutoId {\n  static newId(): string {\n    // Alphanumeric characters\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    // The largest byte value that is a multiple of `char.length`.\n    const maxMultiple = Math.floor(256 / chars.length) * chars.length;\n    debugAssert(\n      0 < maxMultiple && maxMultiple < 256,\n      `Expect maxMultiple to be (0, 256), but got ${maxMultiple}`\n    );\n\n    let autoId = '';\n    const targetLength = 20;\n    while (autoId.length < targetLength) {\n      const bytes = randomBytes(40);\n      for (let i = 0; i < bytes.length; ++i) {\n        // Only accept values that are [0, maxMultiple), this ensures they can\n        // be evenly mapped to indices of `chars` via a modulo operation.\n        if (autoId.length < targetLength && bytes[i] < maxMultiple) {\n          autoId += chars.charAt(bytes[i] % chars.length);\n        }\n      }\n    }\n    debugAssert(autoId.length === targetLength, 'Invalid auto ID: ' + autoId);\n\n    return autoId;\n  }\n}\n\nexport function primitiveComparator<T>(left: T, right: T): number {\n  if (left < right) {\n    return -1;\n  }\n  if (left > right) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface Equatable<T> {\n  isEqual(other: T): boolean;\n}\n\nexport interface Iterable<V> {\n  forEach: (cb: (v: V) => void) => void;\n}\n\n/** Helper to compare arrays using isEqual(). */\nexport function arrayEquals<T>(\n  left: T[],\n  right: T[],\n  comparator: (l: T, r: T) => boolean\n): boolean {\n  if (left.length !== right.length) {\n    return false;\n  }\n  return left.every((value, index) => comparator(value, right[index]));\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nexport function immediateSuccessor(s: string): string {\n  // Return the input string, with an additional NUL byte appended.\n  return s + '\\0';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { primitiveComparator } from '../util/misc';\n\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\nconst MIN_SECONDS = -62135596800;\n\n// Number of nanoseconds in a millisecond.\nconst MS_TO_NANOS = 1e6;\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nexport class Timestamp {\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  static now(): Timestamp {\n    return Timestamp.fromMillis(Date.now());\n  }\n\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n  static fromDate(date: Date): Timestamp {\n    return Timestamp.fromMillis(date.getTime());\n  }\n\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n  static fromMillis(milliseconds: number): Timestamp {\n    const seconds = Math.floor(milliseconds / 1000);\n    const nanos = Math.floor((milliseconds - seconds * 1000) * MS_TO_NANOS);\n    return new Timestamp(seconds, nanos);\n  }\n\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    readonly seconds: number,\n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    readonly nanoseconds: number\n  ) {\n    if (nanoseconds < 0) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp nanoseconds out of range: ' + nanoseconds\n      );\n    }\n    if (nanoseconds >= 1e9) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp nanoseconds out of range: ' + nanoseconds\n      );\n    }\n    if (seconds < MIN_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp seconds out of range: ' + seconds\n      );\n    }\n    // This will break in the year 10,000.\n    if (seconds >= 253402300800) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp seconds out of range: ' + seconds\n      );\n    }\n  }\n\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n  toDate(): Date {\n    return new Date(this.toMillis());\n  }\n\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  toMillis(): number {\n    return this.seconds * 1000 + this.nanoseconds / MS_TO_NANOS;\n  }\n\n  _compareTo(other: Timestamp): number {\n    if (this.seconds === other.seconds) {\n      return primitiveComparator(this.nanoseconds, other.nanoseconds);\n    }\n    return primitiveComparator(this.seconds, other.seconds);\n  }\n\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n  isEqual(other: Timestamp): boolean {\n    return (\n      other.seconds === this.seconds && other.nanoseconds === this.nanoseconds\n    );\n  }\n\n  /** Returns a textual representation of this `Timestamp`. */\n  toString(): string {\n    return (\n      'Timestamp(seconds=' +\n      this.seconds +\n      ', nanoseconds=' +\n      this.nanoseconds +\n      ')'\n    );\n  }\n\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n  toJSON(): { seconds: number; nanoseconds: number } {\n    return { seconds: this.seconds, nanoseconds: this.nanoseconds };\n  }\n\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n  valueOf(): string {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const adjustedSeconds = this.seconds - MIN_SECONDS;\n    // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n    const formattedSeconds = String(adjustedSeconds).padStart(12, '0');\n    const formattedNanoseconds = String(this.nanoseconds).padStart(9, '0');\n    return formattedSeconds + '.' + formattedNanoseconds;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nexport class SnapshotVersion {\n  static fromTimestamp(value: Timestamp): SnapshotVersion {\n    return new SnapshotVersion(value);\n  }\n\n  static min(): SnapshotVersion {\n    return new SnapshotVersion(new Timestamp(0, 0));\n  }\n\n  static max(): SnapshotVersion {\n    return new SnapshotVersion(new Timestamp(253402300799, 1e9 - 1));\n  }\n\n  private constructor(private timestamp: Timestamp) {}\n\n  compareTo(other: SnapshotVersion): number {\n    return this.timestamp._compareTo(other.timestamp);\n  }\n\n  isEqual(other: SnapshotVersion): boolean {\n    return this.timestamp.isEqual(other.timestamp);\n  }\n\n  /** Returns a number representation of the version for use in spec tests. */\n  toMicroseconds(): number {\n    // Convert to microseconds.\n    return this.timestamp.seconds * 1e6 + this.timestamp.nanoseconds / 1000;\n  }\n\n  toString(): string {\n    return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n  }\n\n  toTimestamp(): Timestamp {\n    return this.timestamp;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\n\nexport const DOCUMENT_KEY_NAME = '__name__';\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nabstract class BasePath<B extends BasePath<B>> {\n  private segments: string[];\n  private offset: number;\n  private len: number;\n\n  constructor(segments: string[], offset?: number, length?: number) {\n    if (offset === undefined) {\n      offset = 0;\n    } else if (offset > segments.length) {\n      fail('offset ' + offset + ' out of range ' + segments.length);\n    }\n\n    if (length === undefined) {\n      length = segments.length - offset;\n    } else if (length > segments.length - offset) {\n      fail('length ' + length + ' out of range ' + (segments.length - offset));\n    }\n    this.segments = segments;\n    this.offset = offset;\n    this.len = length;\n  }\n\n  /**\n   * Abstract constructor method to construct an instance of B with the given\n   * parameters.\n   */\n  protected abstract construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): B;\n\n  /**\n   * Returns a String representation.\n   *\n   * Implementing classes are required to provide deterministic implementations as\n   * the String representation is used to obtain canonical Query IDs.\n   */\n  abstract toString(): string;\n\n  get length(): number {\n    return this.len;\n  }\n\n  isEqual(other: B): boolean {\n    return BasePath.comparator(this, other) === 0;\n  }\n\n  child(nameOrPath: string | B): B {\n    const segments = this.segments.slice(this.offset, this.limit());\n    if (nameOrPath instanceof BasePath) {\n      nameOrPath.forEach(segment => {\n        segments.push(segment);\n      });\n    } else {\n      segments.push(nameOrPath);\n    }\n    return this.construct(segments);\n  }\n\n  /** The index of one past the last segment of the path. */\n  private limit(): number {\n    return this.offset + this.length;\n  }\n\n  popFirst(size?: number): B {\n    size = size === undefined ? 1 : size;\n    debugAssert(\n      this.length >= size,\n      \"Can't call popFirst() with less segments\"\n    );\n    return this.construct(\n      this.segments,\n      this.offset + size,\n      this.length - size\n    );\n  }\n\n  popLast(): B {\n    debugAssert(!this.isEmpty(), \"Can't call popLast() on empty path\");\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n    return this.segments[this.offset];\n  }\n\n  lastSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\n    return this.get(this.length - 1);\n  }\n\n  get(index: number): string {\n    debugAssert(index < this.length, 'Index out of range');\n    return this.segments[this.offset + index];\n  }\n\n  isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  isPrefixOf(other: this): boolean {\n    if (other.length < this.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== other.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isImmediateParentOf(potentialChild: this): boolean {\n    if (this.length + 1 !== potentialChild.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== potentialChild.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  forEach(fn: (segment: string) => void): void {\n    for (let i = this.offset, end = this.limit(); i < end; i++) {\n      fn(this.segments[i]);\n    }\n  }\n\n  toArray(): string[] {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator<T extends BasePath<T>>(\n    p1: BasePath<T>,\n    p2: BasePath<T>\n  ): number {\n    const len = Math.min(p1.length, p2.length);\n    for (let i = 0; i < len; i++) {\n      const left = p1.get(i);\n      const right = p2.get(i);\n      if (left < right) {\n        return -1;\n      }\n      if (left > right) {\n        return 1;\n      }\n    }\n    if (p1.length < p2.length) {\n      return -1;\n    }\n    if (p1.length > p2.length) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nexport class ResourcePath extends BasePath<ResourcePath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): ResourcePath {\n    return new ResourcePath(segments, offset, length);\n  }\n\n  canonicalString(): string {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    return this.toArray().join('/');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString(...pathComponents: string[]): ResourcePath {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    const segments: string[] = [];\n    for (const path of pathComponents) {\n      if (path.indexOf('//') >= 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid segment (${path}). Paths must not contain // in them.`\n        );\n      }\n      // Strip leading and traling slashed.\n      segments.push(...path.split('/').filter(segment => segment.length > 0));\n    }\n\n    return new ResourcePath(segments);\n  }\n\n  static emptyPath(): ResourcePath {\n    return new ResourcePath([]);\n  }\n}\n\nconst identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nexport class FieldPath extends BasePath<FieldPath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): FieldPath {\n    return new FieldPath(segments, offset, length);\n  }\n\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  private static isValidIdentifier(segment: string): boolean {\n    return identifierRegExp.test(segment);\n  }\n\n  canonicalString(): string {\n    return this.toArray()\n      .map(str => {\n        str = str.replace(/\\\\/g, '\\\\\\\\').replace(/`/g, '\\\\`');\n        if (!FieldPath.isValidIdentifier(str)) {\n          str = '`' + str + '`';\n        }\n        return str;\n      })\n      .join('.');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField(): boolean {\n    return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n  }\n\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField(): FieldPath {\n    return new FieldPath([DOCUMENT_KEY_NAME]);\n  }\n\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(path: string): FieldPath {\n    const segments: string[] = [];\n    let current = '';\n    let i = 0;\n\n    const addCurrentSegment = (): void => {\n      if (current.length === 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid field path (${path}). Paths must not be empty, begin ` +\n            `with '.', end with '.', or contain '..'`\n        );\n      }\n      segments.push(current);\n      current = '';\n    };\n\n    let inBackticks = false;\n\n    while (i < path.length) {\n      const c = path[i];\n      if (c === '\\\\') {\n        if (i + 1 === path.length) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has trailing escape character: ' + path\n          );\n        }\n        const next = path[i + 1];\n        if (!(next === '\\\\' || next === '.' || next === '`')) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has invalid escape sequence: ' + path\n          );\n        }\n        current += next;\n        i += 2;\n      } else if (c === '`') {\n        inBackticks = !inBackticks;\n        i++;\n      } else if (c === '.' && !inBackticks) {\n        addCurrentSegment();\n        i++;\n      } else {\n        current += c;\n        i++;\n      }\n    }\n    addCurrentSegment();\n\n    if (inBackticks) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Unterminated ` in path: ' + path\n      );\n    }\n\n    return new FieldPath(segments);\n  }\n\n  static emptyPath(): FieldPath {\n    return new FieldPath([]);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\n\nimport { ResourcePath } from './path';\n\n/**\n * @internal\n */\nexport class DocumentKey {\n  constructor(readonly path: ResourcePath) {\n    debugAssert(\n      DocumentKey.isDocumentKey(path),\n      'Invalid DocumentKey with an odd number of segments: ' +\n        path.toArray().join('/')\n    );\n  }\n\n  static fromPath(path: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(path));\n  }\n\n  static fromName(name: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(name).popFirst(5));\n  }\n\n  static empty(): DocumentKey {\n    return new DocumentKey(ResourcePath.emptyPath());\n  }\n\n  get collectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.popLast().lastSegment();\n  }\n\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(collectionId: string): boolean {\n    return (\n      this.path.length >= 2 &&\n      this.path.get(this.path.length - 2) === collectionId\n    );\n  }\n\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.get(this.path.length - 2);\n  }\n\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath(): ResourcePath {\n    return this.path.popLast();\n  }\n\n  isEqual(other: DocumentKey | null): boolean {\n    return (\n      other !== null && ResourcePath.comparator(this.path, other.path) === 0\n    );\n  }\n\n  toString(): string {\n    return this.path.toString();\n  }\n\n  static comparator(k1: DocumentKey, k2: DocumentKey): number {\n    return ResourcePath.comparator(k1.path, k2.path);\n  }\n\n  static isDocumentKey(path: ResourcePath): boolean {\n    return path.length % 2 === 0;\n  }\n\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(segments: string[]): DocumentKey {\n    return new DocumentKey(new ResourcePath(segments.slice()));\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { primitiveComparator } from '../util/misc';\n\nimport { Document } from './document';\nimport { DocumentKey } from './document_key';\nimport { FieldPath } from './path';\n\n/**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_LARGEST_BATCH_ID = -1;\n\n/**\n * The initial sequence number for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_SEQUENCE_NUMBER = 0;\n\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nexport class FieldIndex {\n  /** An ID for an index that has not yet been added to persistence.  */\n  static UNKNOWN_ID = -1;\n\n  constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    readonly indexId: number,\n    /** The collection ID this index applies to. */\n    readonly collectionGroup: string,\n    /** The field segments for this index. */\n    readonly fields: IndexSegment[],\n    /** Shows how up-to-date the index is for the current user. */\n    readonly indexState: IndexState\n  ) {}\n}\n\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nexport function fieldIndexGetArraySegment(\n  fieldIndex: FieldIndex\n): IndexSegment | undefined {\n  return fieldIndex.fields.find(s => s.kind === IndexKind.CONTAINS);\n}\n\n/** Returns all directional (ascending/descending) segments for this index. */\nexport function fieldIndexGetDirectionalSegments(\n  fieldIndex: FieldIndex\n): IndexSegment[] {\n  return fieldIndex.fields.filter(s => s.kind !== IndexKind.CONTAINS);\n}\n\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */\nexport function fieldIndexGetKeyOrder(fieldIndex: FieldIndex): IndexKind {\n  const directionalSegments = fieldIndexGetDirectionalSegments(fieldIndex);\n  return directionalSegments.length === 0\n    ? IndexKind.ASCENDING\n    : directionalSegments[directionalSegments.length - 1].kind;\n}\n\n/**\n * Compares indexes by collection group and segments. Ignores update time and\n * index ID.\n */\nexport function fieldIndexSemanticComparator(\n  left: FieldIndex,\n  right: FieldIndex\n): number {\n  let cmp = primitiveComparator(left.collectionGroup, right.collectionGroup);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  for (let i = 0; i < Math.min(left.fields.length, right.fields.length); ++i) {\n    cmp = indexSegmentComparator(left.fields[i], right.fields[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  return primitiveComparator(left.fields.length, right.fields.length);\n}\n\n/** Returns a debug representation of the field index */\nexport function fieldIndexToString(fieldIndex: FieldIndex): string {\n  return `id=${fieldIndex.indexId}|cg=${\n    fieldIndex.collectionGroup\n  }|f=${fieldIndex.fields.map(f => `${f.fieldPath}:${f.kind}`).join(',')}`;\n}\n\n/** The type of the index, e.g. for which type of query it can be used. */\nexport const enum IndexKind {\n  // Note: The order of these values cannot be changed as the enum values are\n  // stored in IndexedDb.\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  ASCENDING,\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  DESCENDING,\n  /** Contains index. Can be used for ArrayContains and ArrayContainsAny. */\n  CONTAINS\n}\n\n/** An index component consisting of field path and index type.  */\nexport class IndexSegment {\n  constructor(\n    /** The field path of the component. */\n    readonly fieldPath: FieldPath,\n    /** The fields sorting order. */\n    readonly kind: IndexKind\n  ) {}\n}\n\nfunction indexSegmentComparator(\n  left: IndexSegment,\n  right: IndexSegment\n): number {\n  const cmp = FieldPath.comparator(left.fieldPath, right.fieldPath);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.kind, right.kind);\n}\n\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */\nexport class IndexState {\n  constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    readonly sequenceNumber: number,\n    /** The the latest indexed read time, document and batch id. */\n    readonly offset: IndexOffset\n  ) {}\n\n  /** The state of an index that has not yet been backfilled. */\n  static empty(): IndexState {\n    return new IndexState(INITIAL_SEQUENCE_NUMBER, IndexOffset.min());\n  }\n}\n\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */\nexport function newIndexOffsetSuccessorFromReadTime(\n  readTime: SnapshotVersion,\n  largestBatchId: number\n): IndexOffset {\n  // We want to create an offset that matches all documents with a read time\n  // greater than the provided read time. To do so, we technically need to\n  // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n  // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n  // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n  // all valid document IDs.\n  const successorSeconds = readTime.toTimestamp().seconds;\n  const successorNanos = readTime.toTimestamp().nanoseconds + 1;\n  const successor = SnapshotVersion.fromTimestamp(\n    successorNanos === 1e9\n      ? new Timestamp(successorSeconds + 1, 0)\n      : new Timestamp(successorSeconds, successorNanos)\n  );\n  return new IndexOffset(successor, DocumentKey.empty(), largestBatchId);\n}\n\n/** Creates a new offset based on the provided document. */\nexport function newIndexOffsetFromDocument(document: Document): IndexOffset {\n  return new IndexOffset(\n    document.readTime,\n    document.key,\n    INITIAL_LARGEST_BATCH_ID\n  );\n}\n\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */\nexport class IndexOffset {\n  constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    readonly readTime: SnapshotVersion,\n\n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    readonly documentKey: DocumentKey,\n\n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    readonly largestBatchId: number\n  ) {}\n\n  /** Returns an offset that sorts before all regular offsets. */\n  static min(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.min(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n\n  /** Returns an offset that sorts after all regular offsets. */\n  static max(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.max(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n}\n\nexport function indexOffsetComparator(\n  left: IndexOffset,\n  right: IndexOffset\n): number {\n  let cmp = left.readTime.compareTo(right.readTime);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  cmp = DocumentKey.comparator(left.documentKey, right.documentKey);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.largestBatchId, right.largestBatchId);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber } from '../core/types';\nexport const PRIMARY_LEASE_LOST_ERROR_MSG =\n  'The current tab is not in the required state to perform this operation. ' +\n  'It might be necessary to refresh the browser tab.';\n\n/** The different modes supported by `Persistence.runTransaction()`. */\nexport type PersistenceTransactionMode =\n  | 'readonly'\n  | 'readwrite'\n  | 'readwrite-primary';\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\nexport abstract class PersistenceTransaction {\n  private readonly onCommittedListeners: Array<() => void> = [];\n\n  abstract readonly currentSequenceNumber: ListenSequenceNumber;\n\n  addOnCommittedListener(listener: () => void): void {\n    this.onCommittedListeners.push(listener);\n  }\n\n  raiseOnCommittedEvent(): void {\n    this.onCommittedListeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\n\nimport { IndexManager } from './index_manager';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { LruGarbageCollector, LruResults } from './lru_garbage_collector';\nimport { PRIMARY_LEASE_LOST_ERROR_MSG } from './persistence_transaction';\n\nexport interface LocalStore {\n  collectGarbage(garbageCollector: LruGarbageCollector): Promise<LruResults>;\n\n  /** Manages the list of active field and collection indices. */\n  indexManager: IndexManager;\n\n  /**\n   * The \"local\" view of all documents (layering mutationQueue on top of\n   * remoteDocumentCache).\n   */\n  localDocuments: LocalDocumentsView;\n}\n\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */\nexport async function ignoreIfPrimaryLeaseLoss(\n  err: FirestoreError\n): Promise<void> {\n  if (\n    err.code === Code.FAILED_PRECONDITION &&\n    err.message === PRIMARY_LEASE_LOST_ERROR_MSG\n  ) {\n    logDebug('LocalStore', 'Unexpectedly lost primary lease');\n  } else {\n    throw err;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from '../util/assert';\n\nexport type FulfilledHandler<T, R> =\n  | ((result: T) => R | PersistencePromise<R>)\n  | null;\nexport type RejectedHandler<R> =\n  | ((reason: Error) => R | PersistencePromise<R>)\n  | null;\nexport type Resolver<T> = (value?: T) => void;\nexport type Rejector = (error: Error) => void;\n\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\nexport class PersistencePromise<T> {\n  // NOTE: next/catchCallback will always point to our own wrapper functions,\n  // not the user's raw next() or catch() callbacks.\n  private nextCallback: FulfilledHandler<T, unknown> = null;\n  private catchCallback: RejectedHandler<unknown> = null;\n\n  // When the operation resolves, we'll set result or error and mark isDone.\n  private result: T | undefined = undefined;\n  private error: Error | undefined = undefined;\n  private isDone = false;\n\n  // Set to true when .then() or .catch() are called and prevents additional\n  // chaining.\n  private callbackAttached = false;\n\n  constructor(callback: (resolve: Resolver<T>, reject: Rejector) => void) {\n    callback(\n      value => {\n        this.isDone = true;\n        this.result = value;\n        if (this.nextCallback) {\n          // value should be defined unless T is Void, but we can't express\n          // that in the type system.\n          this.nextCallback(value!);\n        }\n      },\n      error => {\n        this.isDone = true;\n        this.error = error;\n        if (this.catchCallback) {\n          this.catchCallback(error);\n        }\n      }\n    );\n  }\n\n  catch<R>(\n    fn: (error: Error) => R | PersistencePromise<R>\n  ): PersistencePromise<R> {\n    return this.next(undefined, fn);\n  }\n\n  next<R>(\n    nextFn?: FulfilledHandler<T, R>,\n    catchFn?: RejectedHandler<R>\n  ): PersistencePromise<R> {\n    if (this.callbackAttached) {\n      fail('Called next() or catch() twice for PersistencePromise');\n    }\n    this.callbackAttached = true;\n    if (this.isDone) {\n      if (!this.error) {\n        return this.wrapSuccess(nextFn, this.result!);\n      } else {\n        return this.wrapFailure(catchFn, this.error);\n      }\n    } else {\n      return new PersistencePromise<R>((resolve, reject) => {\n        this.nextCallback = (value: T) => {\n          this.wrapSuccess(nextFn, value).next(resolve, reject);\n        };\n        this.catchCallback = (error: Error) => {\n          this.wrapFailure(catchFn, error).next(resolve, reject);\n        };\n      });\n    }\n  }\n\n  toPromise(): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.next(resolve, reject);\n    });\n  }\n\n  private wrapUserFunction<R>(\n    fn: () => R | PersistencePromise<R>\n  ): PersistencePromise<R> {\n    try {\n      const result = fn();\n      if (result instanceof PersistencePromise) {\n        return result;\n      } else {\n        return PersistencePromise.resolve(result);\n      }\n    } catch (e) {\n      return PersistencePromise.reject<R>(e as Error);\n    }\n  }\n\n  private wrapSuccess<R>(\n    nextFn: FulfilledHandler<T, R> | undefined,\n    value: T\n  ): PersistencePromise<R> {\n    if (nextFn) {\n      return this.wrapUserFunction(() => nextFn(value));\n    } else {\n      // If there's no nextFn, then R must be the same as T\n      return PersistencePromise.resolve<R>(value as unknown as R);\n    }\n  }\n\n  private wrapFailure<R>(\n    catchFn: RejectedHandler<R> | undefined,\n    error: Error\n  ): PersistencePromise<R> {\n    if (catchFn) {\n      return this.wrapUserFunction(() => catchFn(error));\n    } else {\n      return PersistencePromise.reject<R>(error);\n    }\n  }\n\n  static resolve(): PersistencePromise<void>;\n  static resolve<R>(result: R): PersistencePromise<R>;\n  static resolve<R>(result?: R): PersistencePromise<R | void> {\n    return new PersistencePromise<R | void>((resolve, reject) => {\n      resolve(result);\n    });\n  }\n\n  static reject<R>(error: Error): PersistencePromise<R> {\n    return new PersistencePromise<R>((resolve, reject) => {\n      reject(error);\n    });\n  }\n\n  static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    all: { forEach: (cb: (el: PersistencePromise<any>) => void) => void }\n  ): PersistencePromise<void> {\n    return new PersistencePromise<void>((resolve, reject) => {\n      let expectedCount = 0;\n      let resolvedCount = 0;\n      let done = false;\n\n      all.forEach(element => {\n        ++expectedCount;\n        element.next(\n          () => {\n            ++resolvedCount;\n            if (done && resolvedCount === expectedCount) {\n              resolve();\n            }\n          },\n          err => reject(err)\n        );\n      });\n\n      done = true;\n      if (resolvedCount === expectedCount) {\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Given an array of predicate functions that asynchronously evaluate to a\n   * boolean, implements a short-circuiting `or` between the results. Predicates\n   * will be evaluated until one of them returns `true`, then stop. The final\n   * result will be whether any of them returned `true`.\n   */\n  static or(\n    predicates: Array<() => PersistencePromise<boolean>>\n  ): PersistencePromise<boolean> {\n    let p: PersistencePromise<boolean> =\n      PersistencePromise.resolve<boolean>(false);\n    for (const predicate of predicates) {\n      p = p.next(isTrue => {\n        if (isTrue) {\n          return PersistencePromise.resolve<boolean>(isTrue);\n        } else {\n          return predicate();\n        }\n      });\n    }\n    return p;\n  }\n\n  /**\n   * Given an iterable, call the given function on each element in the\n   * collection and wait for all of the resulting concurrent PersistencePromises\n   * to resolve.\n   */\n  static forEach<R, S>(\n    collection: { forEach: (cb: (r: R, s: S) => void) => void },\n    f:\n      | ((r: R, s: S) => PersistencePromise<void>)\n      | ((r: R) => PersistencePromise<void>)\n  ): PersistencePromise<void>;\n  static forEach<R>(\n    collection: { forEach: (cb: (r: R) => void) => void },\n    f: (r: R) => PersistencePromise<void>\n  ): PersistencePromise<void>;\n  static forEach<R, S>(\n    collection: { forEach: (cb: (r: R, s?: S) => void) => void },\n    f: (r: R, s?: S) => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    const promises: Array<PersistencePromise<void>> = [];\n    collection.forEach((r, s) => {\n      promises.push(f.call(this, r, s));\n    });\n    return this.waitFor(promises);\n  }\n\n  /**\n   * Concurrently map all array elements through asynchronous function.\n   */\n  static mapArray<T, U>(\n    array: T[],\n    f: (t: T) => PersistencePromise<U>\n  ): PersistencePromise<U[]> {\n    return new PersistencePromise<U[]>((resolve, reject) => {\n      const expectedCount = array.length;\n      const results: U[] = new Array(expectedCount);\n      let resolvedCount = 0;\n      for (let i = 0; i < expectedCount; i++) {\n        const current = i;\n        f(array[current]).next(\n          result => {\n            results[current] = result;\n            ++resolvedCount;\n            if (resolvedCount === expectedCount) {\n              resolve(results);\n            }\n          },\n          err => reject(err)\n        );\n      }\n    });\n  }\n\n  /**\n   * An alternative to recursive PersistencePromise calls, that avoids\n   * potential memory problems from unbounded chains of promises.\n   *\n   * The `action` will be called repeatedly while `condition` is true.\n   */\n  static doWhile(\n    condition: () => boolean,\n    action: () => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    return new PersistencePromise<void>((resolve, reject) => {\n      const process = (): void => {\n        if (condition() === true) {\n          action().next(() => {\n            process();\n          }, reject);\n        } else {\n          resolve();\n        }\n      };\n      process();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA, isIndexedDBAvailable } from '@firebase/util';\n\nimport { debugAssert } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logError } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { PersistencePromise } from './persistence_promise';\n\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n\nconst LOG_TAG = 'SimpleDb';\n\n/**\n * The maximum number of retry attempts for an IndexedDb transaction that fails\n * with a DOMException.\n */\nconst TRANSACTION_RETRY_COUNT = 3;\n\n// The different modes supported by `SimpleDb.runTransaction()`\ntype SimpleDbTransactionMode = 'readonly' | 'readwrite';\n\nexport interface SimpleDbSchemaConverter {\n  createOrUpgrade(\n    db: IDBDatabase,\n    txn: IDBTransaction,\n    fromVersion: number,\n    toVersion: number\n  ): PersistencePromise<void>;\n}\n\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nexport class SimpleDbTransaction {\n  private aborted = false;\n\n  /**\n   * A `Promise` that resolves with the result of the IndexedDb transaction.\n   */\n  private readonly completionDeferred = new Deferred<void>();\n\n  static open(\n    db: IDBDatabase,\n    action: string,\n    mode: IDBTransactionMode,\n    objectStoreNames: string[]\n  ): SimpleDbTransaction {\n    try {\n      return new SimpleDbTransaction(\n        action,\n        db.transaction(objectStoreNames, mode)\n      );\n    } catch (e) {\n      throw new IndexedDbTransactionError(action, e as Error);\n    }\n  }\n\n  constructor(\n    private readonly action: string,\n    private readonly transaction: IDBTransaction\n  ) {\n    this.transaction.oncomplete = () => {\n      this.completionDeferred.resolve();\n    };\n    this.transaction.onabort = () => {\n      if (transaction.error) {\n        this.completionDeferred.reject(\n          new IndexedDbTransactionError(action, transaction.error)\n        );\n      } else {\n        this.completionDeferred.resolve();\n      }\n    };\n    this.transaction.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      this.completionDeferred.reject(\n        new IndexedDbTransactionError(action, error)\n      );\n    };\n  }\n\n  get completionPromise(): Promise<void> {\n    return this.completionDeferred.promise;\n  }\n\n  abort(error?: Error): void {\n    if (error) {\n      this.completionDeferred.reject(error);\n    }\n\n    if (!this.aborted) {\n      logDebug(\n        LOG_TAG,\n        'Aborting transaction:',\n        error ? error.message : 'Client-initiated abort'\n      );\n      this.aborted = true;\n      this.transaction.abort();\n    }\n  }\n\n  maybeCommit(): void {\n    // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n    // speed up index DB processing if the event loop remains blocks.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const maybeV3IndexedDb = this.transaction as any;\n    if (!this.aborted && typeof maybeV3IndexedDb.commit === 'function') {\n      maybeV3IndexedDb.commit();\n    }\n  }\n\n  /**\n   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n   * operations performed on the SimpleDbStore happen within the context of this\n   * transaction and it cannot be used anymore once the transaction is\n   * completed.\n   *\n   * Note that we can't actually enforce that the KeyType and ValueType are\n   * correct, but they allow type safety through the rest of the consuming code.\n   */\n  store<KeyType extends IDBValidKey, ValueType extends unknown>(\n    storeName: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    const store = this.transaction.objectStore(storeName);\n    debugAssert(!!store, 'Object store not part of transaction: ' + storeName);\n    return new SimpleDbStore<KeyType, ValueType>(store);\n  }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nexport class SimpleDb {\n  private db?: IDBDatabase;\n  private versionchangelistener?: (event: IDBVersionChangeEvent) => void;\n\n  /** Deletes the specified database. */\n  static delete(name: string): Promise<void> {\n    logDebug(LOG_TAG, 'Removing database:', name);\n    return wrapRequest<void>(window.indexedDB.deleteDatabase(name)).toPromise();\n  }\n\n  /** Returns true if IndexedDB is available in the current environment. */\n  static isAvailable(): boolean {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    }\n\n    if (SimpleDb.isMockPersistence()) {\n      return true;\n    }\n\n    // We extensively use indexed array values and compound keys,\n    // which IE and Edge do not support. However, they still have indexedDB\n    // defined on the window, so we need to check for them here and make sure\n    // to return that persistence is not enabled for those browsers.\n    // For tracking support of this feature, see here:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n\n    // Check the UA string to find out the browser.\n    const ua = getUA();\n\n    // IE 10\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n\n    // IE 11\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n\n    // Edge\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n\n    // iOS Safari: Disable for users running iOS version < 10.\n    const iOSVersion = SimpleDb.getIOSVersion(ua);\n    const isUnsupportedIOS = 0 < iOSVersion && iOSVersion < 10;\n\n    // Android browser: Disable for userse running version < 4.5.\n    const androidVersion = SimpleDb.getAndroidVersion(ua);\n    const isUnsupportedAndroid = 0 < androidVersion && androidVersion < 4.5;\n\n    if (\n      ua.indexOf('MSIE ') > 0 ||\n      ua.indexOf('Trident/') > 0 ||\n      ua.indexOf('Edge/') > 0 ||\n      isUnsupportedIOS ||\n      isUnsupportedAndroid\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n   * (see https://github.com/axemclion/IndexedDBShim).\n   */\n  static isMockPersistence(): boolean {\n    return (\n      typeof process !== 'undefined' &&\n      process.env?.USE_MOCK_PERSISTENCE === 'YES'\n    );\n  }\n\n  /** Helper to get a typed SimpleDbStore from a transaction. */\n  static getStore<KeyType extends IDBValidKey, ValueType extends unknown>(\n    txn: SimpleDbTransaction,\n    store: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    return txn.store<KeyType, ValueType>(store);\n  }\n\n  // visible for testing\n  /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n  static getIOSVersion(ua: string): number {\n    const iOSVersionRegex = ua.match(/i(?:phone|pad|pod) os ([\\d_]+)/i);\n    const version = iOSVersionRegex\n      ? iOSVersionRegex[1].split('_').slice(0, 2).join('.')\n      : '-1';\n    return Number(version);\n  }\n\n  // visible for testing\n  /** Parse User Agent to determine Android version. Returns -1 if not found. */\n  static getAndroidVersion(ua: string): number {\n    const androidVersionRegex = ua.match(/Android ([\\d.]+)/i);\n    const version = androidVersionRegex\n      ? androidVersionRegex[1].split('.').slice(0, 2).join('.')\n      : '-1';\n    return Number(version);\n  }\n\n  /*\n   * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n   *\n   * Note that `version` must not be a downgrade. IndexedDB does not support\n   * downgrading the schema version. We currently do not support any way to do\n   * versioning outside of IndexedDB's versioning mechanism, as only\n   * version-upgrade transactions are allowed to do things like create\n   * objectstores.\n   */\n  constructor(\n    private readonly name: string,\n    private readonly version: number,\n    private readonly schemaConverter: SimpleDbSchemaConverter\n  ) {\n    debugAssert(\n      SimpleDb.isAvailable(),\n      'IndexedDB not supported in current environment.'\n    );\n\n    const iOSVersion = SimpleDb.getIOSVersion(getUA());\n    // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n    // whatever reason it's much harder to hit after 12.2 so we only proactively\n    // log on 12.2.\n    if (iOSVersion === 12.2) {\n      logError(\n        'Firestore persistence suffers from a bug in iOS 12.2 ' +\n          'Safari that may cause your app to stop working. See ' +\n          'https://stackoverflow.com/q/56496296/110915 for details ' +\n          'and a potential workaround.'\n      );\n    }\n  }\n\n  /**\n   * Opens the specified database, creating or upgrading it if necessary.\n   */\n  async ensureDb(action: string): Promise<IDBDatabase> {\n    if (!this.db) {\n      logDebug(LOG_TAG, 'Opening database:', this.name);\n      this.db = await new Promise<IDBDatabase>((resolve, reject) => {\n        // TODO(mikelehen): Investigate browser compatibility.\n        // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n        // suggests IE9 and older WebKit browsers handle upgrade\n        // differently. They expect setVersion, as described here:\n        // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n        const request = indexedDB.open(this.name, this.version);\n\n        request.onsuccess = (event: Event) => {\n          const db = (event.target as IDBOpenDBRequest).result;\n          resolve(db);\n        };\n\n        request.onblocked = () => {\n          reject(\n            new IndexedDbTransactionError(\n              action,\n              'Cannot upgrade IndexedDB schema while another tab is open. ' +\n                'Close all tabs that access Firestore and reload this page to proceed.'\n            )\n          );\n        };\n\n        request.onerror = (event: Event) => {\n          const error: DOMException = (event.target as IDBOpenDBRequest).error!;\n          if (error.name === 'VersionError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'A newer version of the Firestore SDK was previously used and so the persisted ' +\n                  'data is not compatible with the version of the SDK you are now using. The SDK ' +\n                  'will operate with persistence disabled. If you need persistence, please ' +\n                  're-upgrade to a newer version of the SDK or else clear the persisted IndexedDB ' +\n                  'data for your app to start fresh.'\n              )\n            );\n          } else if (error.name === 'InvalidStateError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'Unable to open an IndexedDB connection. This could be due to running in a ' +\n                  'private browsing session on a browser whose private browsing sessions do not ' +\n                  'support IndexedDB: ' +\n                  error\n              )\n            );\n          } else {\n            reject(new IndexedDbTransactionError(action, error));\n          }\n        };\n\n        request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n          logDebug(\n            LOG_TAG,\n            'Database \"' + this.name + '\" requires upgrade from version:',\n            event.oldVersion\n          );\n          const db = (event.target as IDBOpenDBRequest).result;\n          this.schemaConverter\n            .createOrUpgrade(\n              db,\n              request.transaction!,\n              event.oldVersion,\n              this.version\n            )\n            .next(() => {\n              logDebug(\n                LOG_TAG,\n                'Database upgrade to version ' + this.version + ' complete'\n              );\n            });\n        };\n      });\n    }\n\n    if (this.versionchangelistener) {\n      this.db.onversionchange = event => this.versionchangelistener!(event);\n    }\n    return this.db;\n  }\n\n  setVersionChangeListener(\n    versionChangeListener: (event: IDBVersionChangeEvent) => void\n  ): void {\n    this.versionchangelistener = versionChangeListener;\n    if (this.db) {\n      this.db.onversionchange = (event: IDBVersionChangeEvent) => {\n        return versionChangeListener(event);\n      };\n    }\n  }\n\n  async runTransaction<T>(\n    action: string,\n    mode: SimpleDbTransactionMode,\n    objectStores: string[],\n    transactionFn: (transaction: SimpleDbTransaction) => PersistencePromise<T>\n  ): Promise<T> {\n    const readonly = mode === 'readonly';\n    let attemptNumber = 0;\n\n    while (true) {\n      ++attemptNumber;\n\n      try {\n        this.db = await this.ensureDb(action);\n\n        const transaction = SimpleDbTransaction.open(\n          this.db,\n          action,\n          readonly ? 'readonly' : 'readwrite',\n          objectStores\n        );\n        const transactionFnResult = transactionFn(transaction)\n          .next(result => {\n            transaction.maybeCommit();\n            return result;\n          })\n          .catch(error => {\n            // Abort the transaction if there was an error.\n            transaction.abort(error);\n            // We cannot actually recover, and calling `abort()` will cause the transaction's\n            // completion promise to be rejected. This in turn means that we won't use\n            // `transactionFnResult` below. We return a rejection here so that we don't add the\n            // possibility of returning `void` to the type of `transactionFnResult`.\n            return PersistencePromise.reject<T>(error);\n          })\n          .toPromise();\n\n        // As noted above, errors are propagated by aborting the transaction. So\n        // we swallow any error here to avoid the browser logging it as unhandled.\n        transactionFnResult.catch(() => {});\n\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n        // fire), but still return the original transactionFnResult back to the\n        // caller.\n        await transaction.completionPromise;\n        return transactionFnResult;\n      } catch (e) {\n        const error = e as Error;\n        // TODO(schmidt-sebastian): We could probably be smarter about this and\n        // not retry exceptions that are likely unrecoverable (such as quota\n        // exceeded errors).\n\n        // Note: We cannot use an instanceof check for FirestoreException, since the\n        // exception is wrapped in a generic error by our async/await handling.\n        const retryable =\n          error.name !== 'FirebaseError' &&\n          attemptNumber < TRANSACTION_RETRY_COUNT;\n        logDebug(\n          LOG_TAG,\n          'Transaction failed with error:',\n          error.message,\n          'Retrying:',\n          retryable\n        );\n\n        this.close();\n\n        if (!retryable) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  }\n\n  close(): void {\n    if (this.db) {\n      this.db.close();\n    }\n    this.db = undefined;\n  }\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nexport class IterationController {\n  private shouldStop = false;\n  private nextKey: IDBValidKey | null = null;\n\n  constructor(private dbCursor: IDBCursorWithValue) {}\n\n  get isDone(): boolean {\n    return this.shouldStop;\n  }\n\n  get skipToKey(): IDBValidKey | null {\n    return this.nextKey;\n  }\n\n  set cursor(value: IDBCursorWithValue) {\n    this.dbCursor = value;\n  }\n\n  /**\n   * This function can be called to stop iteration at any point.\n   */\n  done(): void {\n    this.shouldStop = true;\n  }\n\n  /**\n   * This function can be called to skip to that next key, which could be\n   * an index or a primary key.\n   */\n  skip(key: IDBValidKey): void {\n    this.nextKey = key;\n  }\n\n  /**\n   * Delete the current cursor value from the object store.\n   *\n   * NOTE: You CANNOT do this with a keysOnly query.\n   */\n  delete(): PersistencePromise<void> {\n    return wrapRequest<void>(this.dbCursor.delete());\n  }\n}\n\n/**\n * Callback used with iterate() method.\n */\nexport type IterateCallback<KeyType, ValueType> = (\n  key: KeyType,\n  value: ValueType,\n  control: IterationController\n) => void | PersistencePromise<void>;\n\n/** Options available to the iterate() method. */\nexport interface IterateOptions {\n  /** Index to iterate over (else primary keys will be iterated) */\n  index?: string;\n\n  /** IndxedDB Range to iterate over (else entire store will be iterated) */\n  range?: IDBKeyRange;\n\n  /** If true, values aren't read while iterating. */\n  keysOnly?: boolean;\n\n  /** If true, iterate over the store in reverse. */\n  reverse?: boolean;\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */\nexport class IndexedDbTransactionError extends FirestoreError {\n  name = 'IndexedDbTransactionError';\n\n  constructor(actionName: string, cause: Error | string) {\n    super(\n      Code.UNAVAILABLE,\n      `IndexedDB transaction '${actionName}' failed: ${cause}`\n    );\n  }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */\nexport function isIndexedDbTransactionError(e: Error): boolean {\n  // Use name equality, as instanceof checks on errors don't work with errors\n  // that wrap other errors.\n  return e.name === 'IndexedDbTransactionError';\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nexport class SimpleDbStore<\n  KeyType extends IDBValidKey,\n  ValueType extends unknown\n> {\n  constructor(private store: IDBObjectStore) {}\n\n  /**\n   * Writes a value into the Object Store.\n   *\n   * @param key - Optional explicit key to use when writing the object, else the\n   * key will be auto-assigned (e.g. via the defined keyPath for the store).\n   * @param value - The object to write.\n   */\n  put(value: ValueType): PersistencePromise<void>;\n  put(key: KeyType, value: ValueType): PersistencePromise<void>;\n  put(\n    keyOrValue: KeyType | ValueType,\n    value?: ValueType\n  ): PersistencePromise<void> {\n    let request;\n    if (value !== undefined) {\n      logDebug(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n      request = this.store.put(value, keyOrValue as KeyType);\n    } else {\n      logDebug(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n      request = this.store.put(keyOrValue as ValueType);\n    }\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * Adds a new value into an Object Store and returns the new key. Similar to\n   * IndexedDb's `add()`, this method will fail on primary key collisions.\n   *\n   * @param value - The object to write.\n   * @returns The key of the value to add.\n   */\n  add(value: ValueType): PersistencePromise<KeyType> {\n    logDebug(LOG_TAG, 'ADD', this.store.name, value, value);\n    const request = this.store.add(value as ValueType);\n    return wrapRequest<KeyType>(request);\n  }\n\n  /**\n   * Gets the object with the specified key from the specified store, or null\n   * if no object exists with the specified key.\n   *\n   * @key The key of the object to get.\n   * @returns The object with the specified key or null if no object exists.\n   */\n  get(key: KeyType): PersistencePromise<ValueType | null> {\n    const request = this.store.get(key);\n    // We're doing an unsafe cast to ValueType.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return wrapRequest<any>(request).next(result => {\n      // Normalize nonexistence to null.\n      if (result === undefined) {\n        result = null;\n      }\n      logDebug(LOG_TAG, 'GET', this.store.name, key, result);\n      return result;\n    });\n  }\n\n  delete(key: KeyType | IDBKeyRange): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE', this.store.name, key);\n    const request = this.store.delete(key);\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * If we ever need more of the count variants, we can add overloads. For now,\n   * all we need is to count everything in a store.\n   *\n   * Returns the number of rows in the store.\n   */\n  count(): PersistencePromise<number> {\n    logDebug(LOG_TAG, 'COUNT', this.store.name);\n    const request = this.store.count();\n    return wrapRequest<number>(request);\n  }\n\n  /** Loads all elements from the object store. */\n  loadAll(): PersistencePromise<ValueType[]>;\n  /** Loads all elements for the index range from the object store. */\n  loadAll(range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  /** Loads all elements ordered by the given index. */\n  loadAll(index: string): PersistencePromise<ValueType[]>;\n  /**\n   * Loads all elements from the object store that fall into the provided in the\n   * index range for the given index.\n   */\n  loadAll(index: string, range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  loadAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<ValueType[]> {\n    const iterateOptions = this.options(indexOrRange, range);\n    // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n    // 20% faster. Unfortunately, getAll() does not support custom indices.\n    if (!iterateOptions.index && typeof this.store.getAll === 'function') {\n      const request = this.store.getAll(iterateOptions.range);\n      return new PersistencePromise((resolve, reject) => {\n        request.onerror = (event: Event) => {\n          reject((event.target as IDBRequest).error!);\n        };\n        request.onsuccess = (event: Event) => {\n          resolve((event.target as IDBRequest).result);\n        };\n      });\n    } else {\n      const cursor = this.cursor(iterateOptions);\n      const results: ValueType[] = [];\n      return this.iterateCursor(cursor, (key, value) => {\n        results.push(value);\n      }).next(() => {\n        return results;\n      });\n    }\n  }\n\n  /**\n   * Loads the first `count` elements from the provided index range. Loads all\n   * elements if no limit is provided.\n   */\n  loadFirst(\n    range: IDBKeyRange,\n    count: number | null\n  ): PersistencePromise<ValueType[]> {\n    const request = this.store.getAll(\n      range,\n      count === null ? undefined : count\n    );\n    return new PersistencePromise((resolve, reject) => {\n      request.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      request.onsuccess = (event: Event) => {\n        resolve((event.target as IDBRequest).result);\n      };\n    });\n  }\n\n  deleteAll(): PersistencePromise<void>;\n  deleteAll(range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(index: string, range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE ALL', this.store.name);\n    const options = this.options(indexOrRange, range);\n    options.keysOnly = false;\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, (key, value, control) => {\n      // NOTE: Calling delete() on a cursor is documented as more efficient than\n      // calling delete() on an object store with a single key\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n      // however, this requires us *not* to use a keysOnly cursor\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n      // may want to compare the performance of each method.\n      return control.delete();\n    });\n  }\n\n  /**\n   * Iterates over keys and values in an object store.\n   *\n   * @param options - Options specifying how to iterate the objects in the\n   * store.\n   * @param callback - will be called for each iterated object. Iteration can be\n   * canceled at any point by calling the doneFn passed to the callback.\n   * The callback can return a PersistencePromise if it performs async\n   * operations but note that iteration will continue without waiting for them\n   * to complete.\n   * @returns A PersistencePromise that resolves once all PersistencePromises\n   * returned by callbacks resolve.\n   */\n  iterate(\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    options: IterateOptions,\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    optionsOrCallback: IterateOptions | IterateCallback<KeyType, ValueType>,\n    callback?: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    let options;\n    if (!callback) {\n      options = {};\n      callback = optionsOrCallback as IterateCallback<KeyType, ValueType>;\n    } else {\n      options = optionsOrCallback as IterateOptions;\n    }\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, callback);\n  }\n\n  /**\n   * Iterates over a store, but waits for the given callback to complete for\n   * each entry before iterating the next entry. This allows the callback to do\n   * asynchronous work to determine if this iteration should continue.\n   *\n   * The provided callback should return `true` to continue iteration, and\n   * `false` otherwise.\n   */\n  iterateSerial(\n    callback: (k: KeyType, v: ValueType) => PersistencePromise<boolean>\n  ): PersistencePromise<void> {\n    const cursorRequest = this.cursor({});\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        const error = checkForAndReportiOSError(\n          (event.target as IDBRequest).error!\n        );\n        reject(error);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n\n        callback(cursor.primaryKey as KeyType, cursor.value).next(\n          shouldContinue => {\n            if (shouldContinue) {\n              cursor.continue();\n            } else {\n              resolve();\n            }\n          }\n        );\n      };\n    });\n  }\n\n  private iterateCursor(\n    cursorRequest: IDBRequest,\n    fn: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    const results: Array<PersistencePromise<void>> = [];\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n        const controller = new IterationController(cursor);\n        const userResult = fn(\n          cursor.primaryKey as KeyType,\n          cursor.value,\n          controller\n        );\n        if (userResult instanceof PersistencePromise) {\n          const userPromise: PersistencePromise<void> = userResult.catch(\n            err => {\n              controller.done();\n              return PersistencePromise.reject(err);\n            }\n          );\n          results.push(userPromise);\n        }\n        if (controller.isDone) {\n          resolve();\n        } else if (controller.skipToKey === null) {\n          cursor.continue();\n        } else {\n          cursor.continue(controller.skipToKey);\n        }\n      };\n    }).next(() => PersistencePromise.waitFor(results));\n  }\n\n  private options(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): IterateOptions {\n    let indexName: string | undefined = undefined;\n    if (indexOrRange !== undefined) {\n      if (typeof indexOrRange === 'string') {\n        indexName = indexOrRange;\n      } else {\n        debugAssert(\n          range === undefined,\n          '3rd argument must not be defined if 2nd is a range.'\n        );\n        range = indexOrRange;\n      }\n    }\n    return { index: indexName, range };\n  }\n\n  private cursor(options: IterateOptions): IDBRequest {\n    let direction: IDBCursorDirection = 'next';\n    if (options.reverse) {\n      direction = 'prev';\n    }\n    if (options.index) {\n      const index = this.store.index(options.index);\n      if (options.keysOnly) {\n        return index.openKeyCursor(options.range, direction);\n      } else {\n        return index.openCursor(options.range, direction);\n      }\n    } else {\n      return this.store.openCursor(options.range, direction);\n    }\n  }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest<R>(request: IDBRequest): PersistencePromise<R> {\n  return new PersistencePromise<R>((resolve, reject) => {\n    request.onsuccess = (event: Event) => {\n      const result = (event.target as IDBRequest).result;\n      resolve(result);\n    };\n\n    request.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      reject(error);\n    };\n  });\n}\n\n// Guard so we only report the error once.\nlet reportedIOSError = false;\nfunction checkForAndReportiOSError(error: DOMException): Error {\n  const iOSVersion = SimpleDb.getIOSVersion(getUA());\n  if (iOSVersion >= 12.2 && iOSVersion < 13) {\n    const IOS_ERROR =\n      'An internal error was encountered in the Indexed Database server';\n    if (error.message.indexOf(IOS_ERROR) >= 0) {\n      // Wrap error in a more descriptive one.\n      const newError = new FirestoreError(\n        'internal',\n        `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${IOS_ERROR}'. This is likely ` +\n          `due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 ` +\n          `for details and a potential workaround.`\n      );\n      if (!reportedIOSError) {\n        reportedIOSError = true;\n        // Throw a global exception outside of this promise chain, for the user to\n        // potentially catch.\n        setTimeout(() => {\n          throw newError;\n        }, 0);\n      }\n      return newError;\n    }\n  }\n  return error;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber } from './types';\n\n/**\n * `SequenceNumberSyncer` defines the methods required to keep multiple instances of a\n * `ListenSequence` in sync.\n */\nexport interface SequenceNumberSyncer {\n  // Notify the syncer that a new sequence number has been used.\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void;\n  // Setting this property allows the syncer to notify when a sequence number has been used, and\n  // and lets the ListenSequence adjust its internal previous value accordingly.\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null;\n}\n\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nexport class ListenSequence {\n  static readonly INVALID: ListenSequenceNumber = -1;\n\n  private writeNewSequenceNumber?: (\n    newSequenceNumber: ListenSequenceNumber\n  ) => void;\n\n  constructor(\n    private previousValue: ListenSequenceNumber,\n    sequenceNumberSyncer?: SequenceNumberSyncer\n  ) {\n    if (sequenceNumberSyncer) {\n      sequenceNumberSyncer.sequenceNumberHandler = sequenceNumber =>\n        this.setPreviousValue(sequenceNumber);\n      this.writeNewSequenceNumber = sequenceNumber =>\n        sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);\n    }\n  }\n\n  private setPreviousValue(\n    externalPreviousValue: ListenSequenceNumber\n  ): ListenSequenceNumber {\n    this.previousValue = Math.max(externalPreviousValue, this.previousValue);\n    return this.previousValue;\n  }\n\n  next(): ListenSequenceNumber {\n    const nextValue = ++this.previousValue;\n    if (this.writeNewSequenceNumber) {\n      this.writeNewSequenceNumber(nextValue);\n    }\n    return nextValue;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Sentinel value that sorts before any Mutation Batch ID. */\nexport const BATCHID_UNKNOWN = -1;\n\n// An Object whose keys and values are strings.\nexport interface StringMap {\n  [key: string]: string;\n}\n\n/**\n * Returns whether a variable is either undefined or null.\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/** Returns whether the value represents -0. */\nexport function isNegativeZero(value: number): boolean {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return value === 0 && 1 / value === 1 / -0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\nexport function isSafeInteger(value: unknown): boolean {\n  return (\n    typeof value === 'number' &&\n    Number.isInteger(value) &&\n    !isNegativeZero(value) &&\n    value <= Number.MAX_SAFE_INTEGER &&\n    value >= Number.MIN_SAFE_INTEGER\n  );\n}\n\n/** The subset of the browser's Window interface used by the SDK. */\nexport interface WindowLike {\n  readonly localStorage: Storage;\n  readonly indexedDB: IDBFactory | null;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n\n/** The subset of the browser's Document interface used by the SDK. */\nexport interface DocumentLike {\n  readonly visibilityState: DocumentVisibilityState;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchId, TargetId } from '../core/types';\nimport { ResourcePath } from '../model/path';\nimport { fail } from '../util/assert';\n\nimport {\n  EncodedResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { DbDocumentMutation } from './indexeddb_schema';\nimport { DbRemoteDocumentStore as DbRemoteDocumentStoreLegacy } from './indexeddb_schema_legacy';\n\n// This file contains static constants and helper functions for IndexedDB.\n// It is split from indexeddb_schema to allow for minification.\n\n/** A timestamp type that can be used in IndexedDb keys. */\nexport type DbTimestampKey = [/* seconds */ number, /* nanos */ number];\n\n// The key for the singleton object in the DbPrimaryClient is a single string.\nexport type DbPrimaryClientKey = typeof DbPrimaryClientKey;\n\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\nexport const DbPrimaryClientStore = 'owner';\n\n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\n\nexport const DbPrimaryClientKey = 'owner';\n\n/** Object keys in the 'mutationQueues' store are userId strings. */\nexport type DbMutationQueueKey = string;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationQueueStore = 'mutationQueues';\n\n/** Keys are automatically assigned via the userId property. */\nexport const DbMutationQueueKeyPath = 'userId';\n\n/** The 'mutations' store  is keyed by batch ID. */\nexport type DbMutationBatchKey = BatchId;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationBatchStore = 'mutations';\n\n/** Keys are automatically assigned via the userId, batchId properties. */\nexport const DbMutationBatchKeyPath = 'batchId';\n\n/** The index name for lookup of mutations by user. */\n\nexport const DbMutationBatchUserMutationsIndex = 'userMutationsIndex';\n\n/** The user mutations index is keyed by [userId, batchId] pairs. */\nexport const DbMutationBatchUserMutationsKeyPath = ['userId', 'batchId'];\n\n/**\n * The key for a db document mutation, which is made up of a userID, path, and\n * batchId. Note that the path must be serialized into a form that indexedDB can\n * sort.\n */\nexport type DbDocumentMutationKey = [string, EncodedResourcePath, BatchId];\n\n/**\n * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n * over all of a user's document mutations.\n */\nexport function newDbDocumentMutationPrefixForUser(userId: string): [string] {\n  return [userId];\n}\n\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nexport function newDbDocumentMutationPrefixForPath(\n  userId: string,\n  path: ResourcePath\n): [string, EncodedResourcePath] {\n  return [userId, encodeResourcePath(path)];\n}\n\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */\nexport function newDbDocumentMutationKey(\n  userId: string,\n  path: ResourcePath,\n  batchId: BatchId\n): DbDocumentMutationKey {\n  return [userId, encodeResourcePath(path), batchId];\n}\n\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nexport const DbDocumentMutationPlaceholder: DbDocumentMutation = {};\n\nexport const DbDocumentMutationStore = 'documentMutations';\n\nexport const DbRemoteDocumentStore = 'remoteDocumentsV14';\n\n/**\n * A key in the 'remoteDocumentsV14' object store is an array containing the\n * collection path, the collection group, the read time and the document id.\n */\nexport type DbRemoteDocumentKey = [\n  /** path to collection */ string[],\n  /** collection group */ string,\n  /** read time */ DbTimestampKey,\n  /** document ID */ string\n];\n\n/**\n * The primary key of the remote documents store, which allows for efficient\n * access by collection path and read time.\n */\nexport const DbRemoteDocumentKeyPath = [\n  'prefixPath',\n  'collectionGroup',\n  'readTime',\n  'documentId'\n];\n\n/** An index that provides access to documents by key. */\nexport const DbRemoteDocumentDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbRemoteDocumentDocumentKeyIndexPath = [\n  'prefixPath',\n  'collectionGroup',\n  'documentId'\n];\n\n/**\n * An index that provides access to documents by collection group and read\n * time.\n *\n * This index is used by the index backfiller.\n */\nexport const DbRemoteDocumentCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbRemoteDocumentCollectionGroupIndexPath = [\n  'collectionGroup',\n  'readTime',\n  'prefixPath',\n  'documentId'\n];\n\nexport const DbRemoteDocumentGlobalStore = 'remoteDocumentGlobal';\n\nexport const DbRemoteDocumentGlobalKey = 'remoteDocumentGlobalKey';\n\nexport type DbRemoteDocumentGlobalKey = typeof DbRemoteDocumentGlobalKey;\n\n/**\n * A key in the 'targets' object store is a targetId of the query.\n */\nexport type DbTargetKey = TargetId;\n\nexport const DbTargetStore = 'targets';\n\n/** Keys are automatically assigned via the targetId property. */\nexport const DbTargetKeyPath = 'targetId';\n\n/** The name of the queryTargets index. */\nexport const DbTargetQueryTargetsIndexName = 'queryTargetsIndex';\n\n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nexport const DbTargetQueryTargetsKeyPath = ['canonicalId', 'targetId'];\n\n/**\n * The key for a DbTargetDocument, containing a targetId and an encoded resource\n * path.\n */\nexport type DbTargetDocumentKey = [TargetId, EncodedResourcePath];\n\n/** Name of the IndexedDb object store.  */\nexport const DbTargetDocumentStore = 'targetDocuments';\n\n/** Keys are automatically assigned via the targetId, path properties. */\nexport const DbTargetDocumentKeyPath = ['targetId', 'path'];\n\n/** The index name for the reverse index. */\nexport const DbTargetDocumentDocumentTargetsIndex = 'documentTargetsIndex';\n\n/** We also need to create the reverse index for these properties. */\nexport const DbTargetDocumentDocumentTargetsKeyPath = ['path', 'targetId'];\n\n/**\n * The type to represent the single allowed key for the DbTargetGlobal store.\n */\nexport type DbTargetGlobalKey = typeof DbTargetGlobalKey;\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */\nexport const DbTargetGlobalKey = 'targetGlobalKey';\n\nexport const DbTargetGlobalStore = 'targetGlobal';\n\n/**\n * The key for a DbCollectionParent entry, containing the collection ID\n * and the parent path that contains it. Note that the parent path will be an\n * empty path in the case of root-level collections.\n */\nexport type DbCollectionParentKey = [string, EncodedResourcePath];\n\n/** Name of the IndexedDb object store. */\nexport const DbCollectionParentStore = 'collectionParents';\n\n/** Keys are automatically assigned via the collectionId, parent properties. */\nexport const DbCollectionParentKeyPath = ['collectionId', 'parent'];\n\n/** Name of the IndexedDb object store. */\nexport const DbClientMetadataStore = 'clientMetadata';\n\n/** Keys are automatically assigned via the clientId properties. */\nexport const DbClientMetadataKeyPath = 'clientId';\n\n/** Object keys in the 'clientMetadata' store are clientId strings. */\nexport type DbClientMetadataKey = string;\n\nexport type DbBundlesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbBundleStore = 'bundles';\n\nexport const DbBundleKeyPath = 'bundleId';\n\nexport type DbNamedQueriesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbNamedQueryStore = 'namedQueries';\n\nexport const DbNamedQueryKeyPath = 'name';\n\n/** The key for each index consisting of just the index id. */\nexport type DbIndexConfigurationKey = number;\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexConfigurationStore = 'indexConfiguration';\n\nexport const DbIndexConfigurationKeyPath = 'indexId';\n\n/**\n * An index that provides access to the index configurations by collection\n * group.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexConfigurationCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbIndexConfigurationCollectionGroupIndexPath = 'collectionGroup';\n\n/** The key for each index state consisting of the index id and its user id. */\nexport type DbIndexStateKey = [number, string];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexStateStore = 'indexState';\n\nexport const DbIndexStateKeyPath = ['indexId', 'uid'];\n\n/**\n * An index that provides access to documents in a collection sorted by last\n * update time. Used by the backfiller.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexStateSequenceNumberIndex = 'sequenceNumberIndex';\n\nexport const DbIndexStateSequenceNumberIndexPath = ['uid', 'sequenceNumber'];\n\n/**\n * The key for each index entry consists of the index id and its user id,\n * the encoded array and directional value for the indexed fields as well as\n * an ordered and an encoded document path for the indexed document.\n */\nexport type DbIndexEntryKey = [\n  number,\n  string,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  string[]\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexEntryStore = 'indexEntries';\n\nexport const DbIndexEntryKeyPath = [\n  'indexId',\n  'uid',\n  'arrayValue',\n  'directionalValue',\n  'orderedDocumentKey',\n  'documentKey'\n];\n\nexport const DbIndexEntryDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbIndexEntryDocumentKeyIndexPath = [\n  'indexId',\n  'uid',\n  'orderedDocumentKey'\n];\n\nexport type DbDocumentOverlayKey = [\n  /* userId */ string,\n  /* collectionPath */ string,\n  /* documentId */ string\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbDocumentOverlayStore = 'documentOverlays';\n\nexport const DbDocumentOverlayKeyPath = [\n  'userId',\n  'collectionPath',\n  'documentId'\n];\n\nexport const DbDocumentOverlayCollectionPathOverlayIndex =\n  'collectionPathOverlayIndex';\n\nexport const DbDocumentOverlayCollectionPathOverlayIndexPath = [\n  'userId',\n  'collectionPath',\n  'largestBatchId'\n];\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndex =\n  'collectionGroupOverlayIndex';\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndexPath = [\n  'userId',\n  'collectionGroup',\n  'largestBatchId'\n];\n\n// Visible for testing\nexport const V1_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStoreLegacy,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore\n];\n\n// Visible for testing\nexport const V3_STORES = V1_STORES;\n// Note: DbRemoteDocumentChanges is no longer used and dropped with v9.\nexport const V4_STORES = [...V3_STORES, DbClientMetadataStore];\nexport const V6_STORES = [...V4_STORES, DbRemoteDocumentGlobalStore];\nexport const V8_STORES = [...V6_STORES, DbCollectionParentStore];\nexport const V11_STORES = [...V8_STORES, DbBundleStore, DbNamedQueryStore];\nexport const V12_STORES = [...V11_STORES, DbDocumentOverlayStore];\nexport const V13_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStore,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore,\n  DbClientMetadataStore,\n  DbRemoteDocumentGlobalStore,\n  DbCollectionParentStore,\n  DbBundleStore,\n  DbNamedQueryStore,\n  DbDocumentOverlayStore\n];\nexport const V14_STORES = V13_STORES;\nexport const V15_STORES = [\n  ...V14_STORES,\n  DbIndexConfigurationStore,\n  DbIndexStateStore,\n  DbIndexEntryStore\n];\n\n/**\n * The list of all default IndexedDB stores used throughout the SDK. This is\n * used when creating transactions so that access across all stores is done\n * atomically.\n */\nexport const ALL_STORES = V12_STORES;\n\n/** Returns the object stores for the provided schema. */\nexport function getObjectStores(schemaVersion: number): string[] {\n  if (schemaVersion === 15) {\n    return V15_STORES;\n  } else if (schemaVersion === 14) {\n    return V14_STORES;\n  } else if (schemaVersion === 13) {\n    return V13_STORES;\n  } else if (schemaVersion === 12) {\n    return V12_STORES;\n  } else if (schemaVersion === 11) {\n    return V11_STORES;\n  } else {\n    fail('Only schema version 11 and 12 and 13 are supported');\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document as ProtoDocument } from '../protos/firestore_proto_api';\n\nimport { DbNoDocument, DbUnknownDocument } from './indexeddb_schema';\nimport { DbTimestampKey } from './indexeddb_sentinels';\n\n// This file contains older schema definitions for object stores that were\n// migrated to newer schema versions. These object stores should only be used\n// during schema migrations.\n\nexport interface DbRemoteDocument {\n  unknownDocument?: DbUnknownDocument;\n  noDocument?: DbNoDocument;\n  document?: ProtoDocument;\n  hasCommittedMutations?: boolean;\n  readTime?: DbTimestampKey;\n  parentPath?: string[];\n}\n\nexport type DbRemoteDocumentKey = string[];\nexport const DbRemoteDocumentStore = 'remoteDocuments';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\nexport interface Dict<V> {\n  [stringKey: string]: V;\n}\n\nexport function objectSize(obj: object): number {\n  let count = 0;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport function forEach<V>(\n  obj: Dict<V> | undefined,\n  fn: (key: string, val: V) => void\n): void {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\nexport function mapToArray<V, R>(\n  obj: Dict<V>,\n  fn: (element: V, key: string, obj: Dict<V>) => R\n): R[] {\n  const result: R[] = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result.push(fn(obj[key], key, obj));\n    }\n  }\n  return result;\n}\n\nexport function isEmpty<V>(obj: Dict<V>): boolean {\n  debugAssert(\n    obj != null && typeof obj === 'object',\n    'isEmpty() expects object parameter.'\n  );\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from './assert';\n\n/*\n * Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\nexport interface Entry<K, V> {\n  key: K;\n  value: V;\n}\n\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nexport class SortedMap<K, V> {\n  // visible for testing\n  root: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  constructor(\n    public comparator: Comparator<K>,\n    root?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.root = root ? root : LLRBNode.EMPTY;\n  }\n\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .insert(key, value, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns a copy of the map, with the specified key removed.\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .remove(key, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns the value of the node with the given key, or null.\n  get(key: K): V | null {\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(key: K): number {\n    // Number of nodes that were pruned when descending right\n    let prunedNodes = 0;\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return prunedNodes + node.left.size;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else {\n        // Count all nodes left of the node plus the node itself\n        prunedNodes += node.left.size + 1;\n        node = node.right;\n      }\n    }\n    // Node not found\n    return -1;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  // Returns the total number of nodes in the map.\n  get size(): number {\n    return this.root.size;\n  }\n\n  // Returns the minimum key in the map.\n  minKey(): K | null {\n    return this.root.minKey();\n  }\n\n  // Returns the maximum key in the map.\n  maxKey(): K | null {\n    return this.root.maxKey();\n  }\n\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).inorderTraversal(action);\n  }\n\n  forEach(fn: (k: K, v: V) => void): void {\n    this.inorderTraversal((k, v) => {\n      fn(k, v);\n      return false;\n    });\n  }\n\n  toString(): string {\n    const descriptions: string[] = [];\n    this.inorderTraversal((k, v) => {\n      descriptions.push(`${k}:${v}`);\n      return false;\n    });\n    return `{${descriptions.join(', ')}}`;\n  }\n\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).reverseTraversal(action);\n  }\n\n  // Returns an iterator over the SortedMap.\n  getIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, false);\n  }\n\n  getIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, false);\n  }\n\n  getReverseIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, true);\n  }\n\n  getReverseIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, true);\n  }\n} // end SortedMap\n\n// An iterator over an LLRBNode.\nexport class SortedMapIterator<K, V> {\n  private isReverse: boolean;\n  private nodeStack: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>>;\n\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    isReverse: boolean\n  ) {\n    this.isReverse = isReverse;\n    this.nodeStack = [];\n\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (startKey && isReverse) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move\n        // to the next one\n        this.nodeStack.push(node);\n        if (this.isReverse) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): Entry<K, V> {\n    debugAssert(\n      this.nodeStack.length > 0,\n      'getNext() called on iterator when hasNext() is false.'\n    );\n\n    let node = this.nodeStack.pop()!;\n    const result = { key: node.key, value: node.value };\n\n    if (this.isReverse) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack.length > 0;\n  }\n\n  peek(): Entry<K, V> | null {\n    if (this.nodeStack.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack[this.nodeStack.length - 1];\n    return { key: node.key, value: node.value };\n  }\n} // end SortedMapIterator\n\n// Represents a node in a Left-leaning Red-Black tree.\nexport class LLRBNode<K, V> {\n  readonly color: boolean;\n  readonly left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly size: number;\n\n  // Empty node is shared between all LLRB trees.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static EMPTY: LLRBEmptyNode<any, any> = null as any;\n\n  static RED = true;\n  static BLACK = false;\n\n  constructor(\n    public key: K,\n    public value: V,\n    color?: boolean,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : LLRBNode.EMPTY;\n    this.right = right != null ? right : LLRBNode.EMPTY;\n    this.size = this.left.size + 1 + this.right.size;\n  }\n\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.left as LLRBNode<K, V>).inorderTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.right as LLRBNode<K, V>).inorderTraversal(action)\n    );\n  }\n\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.right as LLRBNode<K, V>).reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.left as LLRBNode<K, V>).reverseTraversal(action)\n    );\n  }\n\n  // Returns the minimum node in the tree.\n  private min(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min();\n    }\n  }\n\n  // Returns the maximum key in the tree.\n  minKey(): K | null {\n    return this.min().key;\n  }\n\n  // Returns the maximum key in the tree.\n  maxKey(): K | null {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  // Returns new tree, with the key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp();\n  }\n\n  private removeMin(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return LLRBNode.EMPTY;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed() && !n.left.left.isRed()) {\n      n = n.moveRedLeft();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin(), null);\n    return n.fixUp();\n  }\n\n  // Returns new tree, with the specified item removed.\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let smallest: LLRBNode<K, V>;\n    let n: LLRBNode<K, V> = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n        n = n.moveRedLeft();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed()) {\n        n = n.rotateRight();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n        n = n.moveRedRight();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return LLRBNode.EMPTY;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp();\n  }\n\n  isRed(): boolean {\n    return this.color;\n  }\n\n  // Returns new tree after performing any needed rotations.\n  private fixUp(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed() && !n.left.isRed()) {\n      n = n.rotateLeft();\n    }\n    if (n.left.isRed() && n.left.left.isRed()) {\n      n = n.rotateRight();\n    }\n    if (n.left.isRed() && n.right.isRed()) {\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedLeft(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.right.left.isRed()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight()\n      );\n      n = n.rotateLeft();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedRight(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.left.left.isRed()) {\n      n = n.rotateRight();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private rotateLeft(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return (this.right as LLRBNode<K, V>).copy(\n      null,\n      null,\n      this.color,\n      nl,\n      null\n    );\n  }\n\n  private rotateRight(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return (this.left as LLRBNode<K, V>).copy(null, null, this.color, null, nr);\n  }\n\n  private colorFlip(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    const blackDepth = this.check();\n    if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  protected check(): number {\n    if (this.isRed() && this.left.isRed()) {\n      throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n    if (this.right.isRed()) {\n      throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n    const blackDepth = (this.left as LLRBNode<K, V>).check();\n    if (blackDepth !== (this.right as LLRBNode<K, V>).check()) {\n      throw fail('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed() ? 0 : 1);\n    }\n  }\n} // end LLRBNode\n\n// Represents an empty node (a leaf node in the Red-Black Tree).\nexport class LLRBEmptyNode<K, V> {\n  get key(): never {\n    throw fail('LLRBEmptyNode has no key.');\n  }\n  get value(): never {\n    throw fail('LLRBEmptyNode has no value.');\n  }\n  get color(): never {\n    throw fail('LLRBEmptyNode has no color.');\n  }\n  get left(): never {\n    throw fail('LLRBEmptyNode has no left child.');\n  }\n  get right(): never {\n    throw fail('LLRBEmptyNode has no right child.');\n  }\n  size = 0;\n\n  // Returns a copy of the current node.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(key, value);\n  }\n\n  // Returns a copy of the tree, with the specified key removed.\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  inorderTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  reverseTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  minKey(): K | null {\n    return null;\n  }\n\n  maxKey(): K | null {\n    return null;\n  }\n\n  isRed(): boolean {\n    return false;\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    return true;\n  }\n\n  protected check(): 0 {\n    return 0;\n  }\n} // end LLRBEmptyNode\n\nLLRBNode.EMPTY = new LLRBEmptyNode<unknown, unknown>();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap, SortedMapIterator } from './sorted_map';\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nexport class SortedSet<T> {\n  private data: SortedMap<T, boolean>;\n\n  constructor(private comparator: (left: T, right: T) => number) {\n    this.data = new SortedMap<T, boolean>(this.comparator);\n  }\n\n  has(elem: T): boolean {\n    return this.data.get(elem) !== null;\n  }\n\n  first(): T | null {\n    return this.data.minKey();\n  }\n\n  last(): T | null {\n    return this.data.maxKey();\n  }\n\n  get size(): number {\n    return this.data.size;\n  }\n\n  indexOf(elem: T): number {\n    return this.data.indexOf(elem);\n  }\n\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(cb: (elem: T) => void): void {\n    this.data.inorderTraversal((k: T, v: boolean) => {\n      cb(k);\n      return false;\n    });\n  }\n\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(range: [T, T], cb: (elem: T) => void): void {\n    const iter = this.data.getIteratorFrom(range[0]);\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      if (this.comparator(elem.key, range[1]) >= 0) {\n        return;\n      }\n      cb(elem.key);\n    }\n  }\n\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(cb: (elem: T) => boolean, start?: T): void {\n    let iter: SortedMapIterator<T, boolean>;\n    if (start !== undefined) {\n      iter = this.data.getIteratorFrom(start);\n    } else {\n      iter = this.data.getIterator();\n    }\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      const result = cb(elem.key);\n      if (!result) {\n        return;\n      }\n    }\n  }\n\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(elem: T): T | null {\n    const iter = this.data.getIteratorFrom(elem);\n    return iter.hasNext() ? iter.getNext().key : null;\n  }\n\n  getIterator(): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIterator());\n  }\n\n  getIteratorFrom(key: T): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIteratorFrom(key));\n  }\n\n  /** Inserts or updates an element */\n  add(elem: T): SortedSet<T> {\n    return this.copy(this.data.remove(elem).insert(elem, true));\n  }\n\n  /** Deletes an element */\n  delete(elem: T): SortedSet<T> {\n    if (!this.has(elem)) {\n      return this;\n    }\n    return this.copy(this.data.remove(elem));\n  }\n\n  isEmpty(): boolean {\n    return this.data.isEmpty();\n  }\n\n  unionWith(other: SortedSet<T>): SortedSet<T> {\n    let result: SortedSet<T> = this;\n\n    // Make sure `result` always refers to the larger one of the two sets.\n    if (result.size < other.size) {\n      result = other;\n      other = this;\n    }\n\n    other.forEach(elem => {\n      result = result.add(elem);\n    });\n    return result;\n  }\n\n  isEqual(other: SortedSet<T>): boolean {\n    if (!(other instanceof SortedSet)) {\n      return false;\n    }\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    const thisIt = this.data.getIterator();\n    const otherIt = other.data.getIterator();\n    while (thisIt.hasNext()) {\n      const thisElem = thisIt.getNext().key;\n      const otherElem = otherIt.getNext().key;\n      if (this.comparator(thisElem, otherElem) !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toArray(): T[] {\n    const res: T[] = [];\n    this.forEach(targetId => {\n      res.push(targetId);\n    });\n    return res;\n  }\n\n  toString(): string {\n    const result: T[] = [];\n    this.forEach(elem => result.push(elem));\n    return 'SortedSet(' + result.toString() + ')';\n  }\n\n  private copy(data: SortedMap<T, boolean>): SortedSet<T> {\n    const result = new SortedSet(this.comparator);\n    result.data = data;\n    return result;\n  }\n}\n\nexport class SortedSetIterator<T> {\n  constructor(private iter: SortedMapIterator<T, boolean>) {}\n\n  getNext(): T {\n    return this.iter.getNext().key;\n  }\n\n  hasNext(): boolean {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\nexport function diffSortedSets<T>(\n  before: SortedSet<T>,\n  after: SortedSet<T>,\n  comparator: (l: T, r: T) => number,\n  onAdd: (entry: T) => void,\n  onRemove: (entry: T) => void\n): void {\n  const beforeIt = before.getIterator();\n  const afterIt = after.getIterator();\n\n  let beforeValue = advanceIterator(beforeIt);\n  let afterValue = advanceIterator(afterIt);\n\n  // Walk through the two sets at the same time, using the ordering defined by\n  // `comparator`.\n  while (beforeValue || afterValue) {\n    let added = false;\n    let removed = false;\n\n    if (beforeValue && afterValue) {\n      const cmp = comparator(beforeValue, afterValue);\n      if (cmp < 0) {\n        // The element was removed if the next element in our ordered\n        // walkthrough is only in `before`.\n        removed = true;\n      } else if (cmp > 0) {\n        // The element was added if the next element in our ordered walkthrough\n        // is only in `after`.\n        added = true;\n      }\n    } else if (beforeValue != null) {\n      removed = true;\n    } else {\n      added = true;\n    }\n\n    if (added) {\n      onAdd(afterValue!);\n      afterValue = advanceIterator(afterIt);\n    } else if (removed) {\n      onRemove(beforeValue!);\n      beforeValue = advanceIterator(beforeIt);\n    } else {\n      beforeValue = advanceIterator(beforeIt);\n      afterValue = advanceIterator(afterIt);\n    }\n  }\n}\n\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction advanceIterator<T>(it: SortedSetIterator<T>): T | undefined {\n  return it.hasNext() ? it.getNext() : undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { FieldPath } from './path';\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nexport class FieldMask {\n  constructor(readonly fields: FieldPath[]) {\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    fields.sort(FieldPath.comparator);\n    debugAssert(\n      !fields.some((v, i) => i !== 0 && v.isEqual(fields[i - 1])),\n      'FieldMask contains field that is not unique: ' +\n        fields.find((v, i) => i !== 0 && v.isEqual(fields[i - 1]))!\n    );\n  }\n\n  static empty(): FieldMask {\n    return new FieldMask([]);\n  }\n\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n  unionWith(extraFields: FieldPath[]): FieldMask {\n    let mergedMaskSet = new SortedSet<FieldPath>(FieldPath.comparator);\n    for (const fieldPath of this.fields) {\n      mergedMaskSet = mergedMaskSet.add(fieldPath);\n    }\n    for (const fieldPath of extraFields) {\n      mergedMaskSet = mergedMaskSet.add(fieldPath);\n    }\n    return new FieldMask(mergedMaskSet.toArray());\n  }\n\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n  covers(fieldPath: FieldPath): boolean {\n    for (const fieldMaskPath of this.fields) {\n      if (fieldMaskPath.isPrefixOf(fieldPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isEqual(other: FieldMask): boolean {\n    return arrayEquals(this.fields, other.fields, (l, r) => l.isEqual(r));\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class Base64DecodeError extends Error {\n  readonly name = 'Base64DecodeError';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBase64, encodeBase64 } from '../platform/base64';\n\nimport { primitiveComparator } from './misc';\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nexport class ByteString {\n  static readonly EMPTY_BYTE_STRING = new ByteString('');\n\n  private constructor(private readonly binaryString: string) {}\n\n  static fromBase64String(base64: string): ByteString {\n    const binaryString = decodeBase64(base64);\n    return new ByteString(binaryString);\n  }\n\n  static fromUint8Array(array: Uint8Array): ByteString {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const binaryString = binaryStringFromUint8Array(array);\n    return new ByteString(binaryString);\n  }\n\n  [Symbol.iterator](): Iterator<number> {\n    let i = 0;\n    return {\n      next: () => {\n        if (i < this.binaryString.length) {\n          return { value: this.binaryString.charCodeAt(i++), done: false };\n        } else {\n          return { value: undefined, done: true };\n        }\n      }\n    };\n  }\n\n  toBase64(): string {\n    return encodeBase64(this.binaryString);\n  }\n\n  toUint8Array(): Uint8Array {\n    return uint8ArrayFromBinaryString(this.binaryString);\n  }\n\n  approximateByteSize(): number {\n    return this.binaryString.length * 2;\n  }\n\n  compareTo(other: ByteString): number {\n    return primitiveComparator(this.binaryString, other.binaryString);\n  }\n\n  isEqual(other: ByteString): boolean {\n    return this.binaryString === other.binaryString;\n  }\n}\n\n/**\n * Helper function to convert an Uint8array to a binary string.\n */\nexport function binaryStringFromUint8Array(array: Uint8Array): string {\n  let binaryString = '';\n  for (let i = 0; i < array.length; ++i) {\n    binaryString += String.fromCharCode(array[i]);\n  }\n  return binaryString;\n}\n\n/**\n * Helper function to convert a binary string to an Uint8Array.\n */\nexport function uint8ArrayFromBinaryString(binaryString: string): Uint8Array {\n  const buffer = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    buffer[i] = binaryString.charCodeAt(i);\n  }\n  return buffer;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Base64DecodeError } from '../../util/base64_decode_error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  try {\n    return atob(encoded);\n  } catch (e) {\n    // Check that `DOMException` is defined before using it to avoid\n    // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n    // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n    if (typeof DOMException !== 'undefined' && e instanceof DOMException) {\n      throw new Base64DecodeError('Invalid base64 string: ' + e);\n    } else {\n      throw e;\n    }\n  }\n}\n\n/** Converts a binary string to a Base64 encoded string. */\nexport function encodeBase64(raw: string): string {\n  return btoa(raw);\n}\n\n/** True if and only if the Base64 conversion functions are available. */\nexport function isBase64Available(): boolean {\n  return typeof atob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../protos/firestore_proto_api';\nimport { hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\n\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nconst ISO_TIMESTAMP_REG_EXP = new RegExp(\n  /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/\n);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nexport function normalizeTimestamp(date: Timestamp): {\n  seconds: number;\n  nanos: number;\n} {\n  hardAssert(!!date, 'Cannot normalize null or undefined timestamp.');\n\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (typeof date === 'string') {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n\n    // Parse the nanos right out of the string.\n    let nanos = 0;\n    const fraction = ISO_TIMESTAMP_REG_EXP.exec(date);\n    hardAssert(!!fraction, 'invalid timestamp: ' + date);\n    if (fraction[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let nanoStr = fraction[1];\n      nanoStr = (nanoStr + '000000000').substr(0, 9);\n      nanos = Number(nanoStr);\n    }\n\n    // Parse the date to get the seconds.\n    const parsedDate = new Date(date);\n    const seconds = Math.floor(parsedDate.getTime() / 1000);\n\n    return { seconds, nanos };\n  } else {\n    // TODO(b/37282237): Use strings for Proto3 timestamps\n    // assert(!this.options.useProto3Json,\n    //   'The timestamp instance format requires Proto JS.');\n    const seconds = normalizeNumber(date.seconds);\n    const nanos = normalizeNumber(date.nanos);\n    return { seconds, nanos };\n  }\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nexport function normalizeNumber(value: number | string | undefined): number {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return Number(value);\n  } else {\n    return 0;\n  }\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nexport function normalizeByteString(blob: string | Uint8Array): ByteString {\n  if (typeof blob === 'string') {\n    return ByteString.fromBase64String(blob);\n  } else {\n    return ByteString.fromUint8Array(blob);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  Value as ProtoValue,\n  MapValue as ProtoMapValue\n} from '../protos/firestore_proto_api';\n\nimport { normalizeTimestamp } from './normalize';\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\nconst SERVER_TIMESTAMP_SENTINEL = 'server_timestamp';\nconst TYPE_KEY = '__type__';\nconst PREVIOUS_VALUE_KEY = '__previous_value__';\nconst LOCAL_WRITE_TIME_KEY = '__local_write_time__';\n\nexport function isServerTimestamp(value: ProtoValue | null): boolean {\n  const type = (value?.mapValue?.fields || {})[TYPE_KEY]?.stringValue;\n  return type === SERVER_TIMESTAMP_SENTINEL;\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\nexport function serverTimestamp(\n  localWriteTime: Timestamp,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  const mapValue: ProtoMapValue = {\n    fields: {\n      [TYPE_KEY]: {\n        stringValue: SERVER_TIMESTAMP_SENTINEL\n      },\n      [LOCAL_WRITE_TIME_KEY]: {\n        timestampValue: {\n          seconds: localWriteTime.seconds,\n          nanos: localWriteTime.nanoseconds\n        }\n      }\n    }\n  };\n\n  // We should avoid storing deeply nested server timestamp map values\n  // because we never use the intermediate \"previous values\".\n  // For example:\n  // previous: 42L, add: t1, result: t1 -> 42L\n  // previous: t1,  add: t2, result: t2 -> 42L (NOT t2 -> t1 -> 42L)\n  // previous: t2,  add: t3, result: t3 -> 42L (NOT t3 -> t2 -> t1 -> 42L)\n  // `getPreviousValue` recursively traverses server timestamps to find the\n  // least recent Value.\n  if (previousValue && isServerTimestamp(previousValue)) {\n    previousValue = getPreviousValue(previousValue);\n  }\n  if (previousValue) {\n    mapValue.fields![PREVIOUS_VALUE_KEY] = previousValue;\n  }\n\n  return { mapValue };\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nexport function getPreviousValue(value: ProtoValue): ProtoValue | null {\n  const previousValue = value.mapValue!.fields![PREVIOUS_VALUE_KEY];\n\n  if (isServerTimestamp(previousValue)) {\n    return getPreviousValue(previousValue);\n  }\n  return previousValue;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nexport function getLocalWriteTime(value: ProtoValue): Timestamp {\n  const localWriteTime = normalizeTimestamp(\n    value.mapValue!.fields![LOCAL_WRITE_TIME_KEY].timestampValue!\n  );\n  return new Timestamp(localWriteTime.seconds, localWriteTime.nanos);\n}\n","import { FirebaseApp } from '@firebase/app';\n\nimport { ExperimentalLongPollingOptions } from '../api/long_polling_options';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DatabaseInfo {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param longPollingOptions Options that configure long-polling.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly appId: string,\n    readonly persistenceKey: string,\n    readonly host: string,\n    readonly ssl: boolean,\n    readonly forceLongPolling: boolean,\n    readonly autoDetectLongPolling: boolean,\n    readonly longPollingOptions: ExperimentalLongPollingOptions,\n    readonly useFetchStreams: boolean\n  ) {}\n}\n\n/** The default database name for a project. */\nexport const DEFAULT_DATABASE_NAME = '(default)';\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nexport class DatabaseId {\n  readonly database: string;\n  constructor(readonly projectId: string, database?: string) {\n    this.database = database ? database : DEFAULT_DATABASE_NAME;\n  }\n\n  static empty(): DatabaseId {\n    return new DatabaseId('', '');\n  }\n\n  get isDefaultDatabase(): boolean {\n    return this.database === DEFAULT_DATABASE_NAME;\n  }\n\n  isEqual(other: {}): boolean {\n    return (\n      other instanceof DatabaseId &&\n      other.projectId === this.projectId &&\n      other.database === this.database\n    );\n  }\n}\n\nexport function databaseIdFromApp(\n  app: FirebaseApp,\n  database?: string\n): DatabaseId {\n  if (!Object.prototype.hasOwnProperty.apply(app.options, ['projectId'])) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      '\"projectId\" not provided in firebase.initializeApp.'\n    );\n  }\n\n  return new DatabaseId(app.options.projectId!, database);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId } from '../core/database_info';\nimport {\n  ArrayValue,\n  LatLng,\n  MapValue,\n  Timestamp,\n  Value\n} from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { arrayEquals, primitiveComparator } from '../util/misc';\nimport { forEach, objectSize } from '../util/obj';\nimport { isNegativeZero } from '../util/types';\n\nimport { DocumentKey } from './document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from './normalize';\nimport {\n  getLocalWriteTime,\n  getPreviousValue,\n  isServerTimestamp\n} from './server_timestamps';\nimport { TypeOrder } from './type_order';\n\nconst MAX_VALUE_TYPE = '__max__';\nexport const MAX_VALUE: Value = {\n  mapValue: {\n    fields: {\n      '__type__': { stringValue: MAX_VALUE_TYPE }\n    }\n  }\n};\n\nexport const MIN_VALUE: Value = {\n  nullValue: 'NULL_VALUE'\n};\n\n/** Extracts the backend's type order for the provided value. */\nexport function typeOrder(value: Value): TypeOrder {\n  if ('nullValue' in value) {\n    return TypeOrder.NullValue;\n  } else if ('booleanValue' in value) {\n    return TypeOrder.BooleanValue;\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return TypeOrder.NumberValue;\n  } else if ('timestampValue' in value) {\n    return TypeOrder.TimestampValue;\n  } else if ('stringValue' in value) {\n    return TypeOrder.StringValue;\n  } else if ('bytesValue' in value) {\n    return TypeOrder.BlobValue;\n  } else if ('referenceValue' in value) {\n    return TypeOrder.RefValue;\n  } else if ('geoPointValue' in value) {\n    return TypeOrder.GeoPointValue;\n  } else if ('arrayValue' in value) {\n    return TypeOrder.ArrayValue;\n  } else if ('mapValue' in value) {\n    if (isServerTimestamp(value)) {\n      return TypeOrder.ServerTimestampValue;\n    } else if (isMaxValue(value)) {\n      return TypeOrder.MaxValue;\n    }\n    return TypeOrder.ObjectValue;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nexport function valueEquals(left: Value, right: Value): boolean {\n  if (left === right) {\n    return true;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n  if (leftType !== rightType) {\n    return false;\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n      return true;\n    case TypeOrder.BooleanValue:\n      return left.booleanValue === right.booleanValue;\n    case TypeOrder.ServerTimestampValue:\n      return getLocalWriteTime(left).isEqual(getLocalWriteTime(right));\n    case TypeOrder.TimestampValue:\n      return timestampEquals(left, right);\n    case TypeOrder.StringValue:\n      return left.stringValue === right.stringValue;\n    case TypeOrder.BlobValue:\n      return blobEquals(left, right);\n    case TypeOrder.RefValue:\n      return left.referenceValue === right.referenceValue;\n    case TypeOrder.GeoPointValue:\n      return geoPointEquals(left, right);\n    case TypeOrder.NumberValue:\n      return numberEquals(left, right);\n    case TypeOrder.ArrayValue:\n      return arrayEquals(\n        left.arrayValue!.values || [],\n        right.arrayValue!.values || [],\n        valueEquals\n      );\n    case TypeOrder.ObjectValue:\n      return objectEquals(left, right);\n    case TypeOrder.MaxValue:\n      return true;\n    default:\n      return fail('Unexpected value type: ' + JSON.stringify(left));\n  }\n}\n\nfunction timestampEquals(left: Value, right: Value): boolean {\n  if (\n    typeof left.timestampValue === 'string' &&\n    typeof right.timestampValue === 'string' &&\n    left.timestampValue.length === right.timestampValue.length\n  ) {\n    // Use string equality for ISO 8601 timestamps\n    return left.timestampValue === right.timestampValue;\n  }\n\n  const leftTimestamp = normalizeTimestamp(left.timestampValue!);\n  const rightTimestamp = normalizeTimestamp(right.timestampValue!);\n  return (\n    leftTimestamp.seconds === rightTimestamp.seconds &&\n    leftTimestamp.nanos === rightTimestamp.nanos\n  );\n}\n\nfunction geoPointEquals(left: Value, right: Value): boolean {\n  return (\n    normalizeNumber(left.geoPointValue!.latitude) ===\n      normalizeNumber(right.geoPointValue!.latitude) &&\n    normalizeNumber(left.geoPointValue!.longitude) ===\n      normalizeNumber(right.geoPointValue!.longitude)\n  );\n}\n\nfunction blobEquals(left: Value, right: Value): boolean {\n  return normalizeByteString(left.bytesValue!).isEqual(\n    normalizeByteString(right.bytesValue!)\n  );\n}\n\nexport function numberEquals(left: Value, right: Value): boolean {\n  if ('integerValue' in left && 'integerValue' in right) {\n    return (\n      normalizeNumber(left.integerValue) === normalizeNumber(right.integerValue)\n    );\n  } else if ('doubleValue' in left && 'doubleValue' in right) {\n    const n1 = normalizeNumber(left.doubleValue!);\n    const n2 = normalizeNumber(right.doubleValue!);\n\n    if (n1 === n2) {\n      return isNegativeZero(n1) === isNegativeZero(n2);\n    } else {\n      return isNaN(n1) && isNaN(n2);\n    }\n  }\n\n  return false;\n}\n\nfunction objectEquals(left: Value, right: Value): boolean {\n  const leftMap = left.mapValue!.fields || {};\n  const rightMap = right.mapValue!.fields || {};\n\n  if (objectSize(leftMap) !== objectSize(rightMap)) {\n    return false;\n  }\n\n  for (const key in leftMap) {\n    if (leftMap.hasOwnProperty(key)) {\n      if (\n        rightMap[key] === undefined ||\n        !valueEquals(leftMap[key], rightMap[key])\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/** Returns true if the ArrayValue contains the specified element. */\nexport function arrayValueContains(\n  haystack: ArrayValue,\n  needle: Value\n): boolean {\n  return (\n    (haystack.values || []).find(v => valueEquals(v, needle)) !== undefined\n  );\n}\n\nexport function valueCompare(left: Value, right: Value): number {\n  if (left === right) {\n    return 0;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n\n  if (leftType !== rightType) {\n    return primitiveComparator(leftType, rightType);\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n    case TypeOrder.MaxValue:\n      return 0;\n    case TypeOrder.BooleanValue:\n      return primitiveComparator(left.booleanValue!, right.booleanValue!);\n    case TypeOrder.NumberValue:\n      return compareNumbers(left, right);\n    case TypeOrder.TimestampValue:\n      return compareTimestamps(left.timestampValue!, right.timestampValue!);\n    case TypeOrder.ServerTimestampValue:\n      return compareTimestamps(\n        getLocalWriteTime(left),\n        getLocalWriteTime(right)\n      );\n    case TypeOrder.StringValue:\n      return primitiveComparator(left.stringValue!, right.stringValue!);\n    case TypeOrder.BlobValue:\n      return compareBlobs(left.bytesValue!, right.bytesValue!);\n    case TypeOrder.RefValue:\n      return compareReferences(left.referenceValue!, right.referenceValue!);\n    case TypeOrder.GeoPointValue:\n      return compareGeoPoints(left.geoPointValue!, right.geoPointValue!);\n    case TypeOrder.ArrayValue:\n      return compareArrays(left.arrayValue!, right.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return compareMaps(left.mapValue!, right.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + leftType);\n  }\n}\n\nfunction compareNumbers(left: Value, right: Value): number {\n  const leftNumber = normalizeNumber(left.integerValue || left.doubleValue);\n  const rightNumber = normalizeNumber(right.integerValue || right.doubleValue);\n\n  if (leftNumber < rightNumber) {\n    return -1;\n  } else if (leftNumber > rightNumber) {\n    return 1;\n  } else if (leftNumber === rightNumber) {\n    return 0;\n  } else {\n    // one or both are NaN.\n    if (isNaN(leftNumber)) {\n      return isNaN(rightNumber) ? 0 : -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\nfunction compareTimestamps(left: Timestamp, right: Timestamp): number {\n  if (\n    typeof left === 'string' &&\n    typeof right === 'string' &&\n    left.length === right.length\n  ) {\n    return primitiveComparator(left, right);\n  }\n\n  const leftTimestamp = normalizeTimestamp(left);\n  const rightTimestamp = normalizeTimestamp(right);\n\n  const comparison = primitiveComparator(\n    leftTimestamp.seconds,\n    rightTimestamp.seconds\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(leftTimestamp.nanos, rightTimestamp.nanos);\n}\n\nfunction compareReferences(leftPath: string, rightPath: string): number {\n  const leftSegments = leftPath.split('/');\n  const rightSegments = rightPath.split('/');\n  for (let i = 0; i < leftSegments.length && i < rightSegments.length; i++) {\n    const comparison = primitiveComparator(leftSegments[i], rightSegments[i]);\n    if (comparison !== 0) {\n      return comparison;\n    }\n  }\n  return primitiveComparator(leftSegments.length, rightSegments.length);\n}\n\nfunction compareGeoPoints(left: LatLng, right: LatLng): number {\n  const comparison = primitiveComparator(\n    normalizeNumber(left.latitude),\n    normalizeNumber(right.latitude)\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(\n    normalizeNumber(left.longitude),\n    normalizeNumber(right.longitude)\n  );\n}\n\nfunction compareBlobs(\n  left: string | Uint8Array,\n  right: string | Uint8Array\n): number {\n  const leftBytes = normalizeByteString(left);\n  const rightBytes = normalizeByteString(right);\n  return leftBytes.compareTo(rightBytes);\n}\n\nfunction compareArrays(left: ArrayValue, right: ArrayValue): number {\n  const leftArray = left.values || [];\n  const rightArray = right.values || [];\n\n  for (let i = 0; i < leftArray.length && i < rightArray.length; ++i) {\n    const compare = valueCompare(leftArray[i], rightArray[i]);\n    if (compare) {\n      return compare;\n    }\n  }\n  return primitiveComparator(leftArray.length, rightArray.length);\n}\n\nfunction compareMaps(left: MapValue, right: MapValue): number {\n  if (left === MAX_VALUE.mapValue && right === MAX_VALUE.mapValue) {\n    return 0;\n  } else if (left === MAX_VALUE.mapValue) {\n    return 1;\n  } else if (right === MAX_VALUE.mapValue) {\n    return -1;\n  }\n\n  const leftMap = left.fields || {};\n  const leftKeys = Object.keys(leftMap);\n  const rightMap = right.fields || {};\n  const rightKeys = Object.keys(rightMap);\n\n  // Even though MapValues are likely sorted correctly based on their insertion\n  // order (e.g. when received from the backend), local modifications can bring\n  // elements out of order. We need to re-sort the elements to ensure that\n  // canonical IDs are independent of insertion order.\n  leftKeys.sort();\n  rightKeys.sort();\n\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; ++i) {\n    const keyCompare = primitiveComparator(leftKeys[i], rightKeys[i]);\n    if (keyCompare !== 0) {\n      return keyCompare;\n    }\n    const compare = valueCompare(leftMap[leftKeys[i]], rightMap[rightKeys[i]]);\n    if (compare !== 0) {\n      return compare;\n    }\n  }\n\n  return primitiveComparator(leftKeys.length, rightKeys.length);\n}\n\n/**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */\nexport function canonicalId(value: Value): string {\n  return canonifyValue(value);\n}\n\nfunction canonifyValue(value: Value): string {\n  if ('nullValue' in value) {\n    return 'null';\n  } else if ('booleanValue' in value) {\n    return '' + value.booleanValue!;\n  } else if ('integerValue' in value) {\n    return '' + value.integerValue!;\n  } else if ('doubleValue' in value) {\n    return '' + value.doubleValue!;\n  } else if ('timestampValue' in value) {\n    return canonifyTimestamp(value.timestampValue!);\n  } else if ('stringValue' in value) {\n    return value.stringValue!;\n  } else if ('bytesValue' in value) {\n    return canonifyByteString(value.bytesValue!);\n  } else if ('referenceValue' in value) {\n    return canonifyReference(value.referenceValue!);\n  } else if ('geoPointValue' in value) {\n    return canonifyGeoPoint(value.geoPointValue!);\n  } else if ('arrayValue' in value) {\n    return canonifyArray(value.arrayValue!);\n  } else if ('mapValue' in value) {\n    return canonifyMap(value.mapValue!);\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction canonifyByteString(byteString: string | Uint8Array): string {\n  return normalizeByteString(byteString).toBase64();\n}\n\nfunction canonifyTimestamp(timestamp: Timestamp): string {\n  const normalizedTimestamp = normalizeTimestamp(timestamp);\n  return `time(${normalizedTimestamp.seconds},${normalizedTimestamp.nanos})`;\n}\n\nfunction canonifyGeoPoint(geoPoint: LatLng): string {\n  return `geo(${geoPoint.latitude},${geoPoint.longitude})`;\n}\n\nfunction canonifyReference(referenceValue: string): string {\n  return DocumentKey.fromName(referenceValue).toString();\n}\n\nfunction canonifyMap(mapValue: MapValue): string {\n  // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n  // matching canonical IDs for identical maps, we need to sort the keys.\n  const sortedKeys = Object.keys(mapValue.fields || {}).sort();\n\n  let result = '{';\n  let first = true;\n  for (const key of sortedKeys) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += `${key}:${canonifyValue(mapValue.fields![key])}`;\n  }\n  return result + '}';\n}\n\nfunction canonifyArray(arrayValue: ArrayValue): string {\n  let result = '[';\n  let first = true;\n  for (const value of arrayValue.values || []) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += canonifyValue(value);\n  }\n  return result + ']';\n}\n\n/**\n * Returns an approximate (and wildly inaccurate) in-memory size for the field\n * value.\n *\n * The memory size takes into account only the actual user data as it resides\n * in memory and ignores object overhead.\n */\nexport function estimateByteSize(value: Value): number {\n  switch (typeOrder(value)) {\n    case TypeOrder.NullValue:\n      return 4;\n    case TypeOrder.BooleanValue:\n      return 4;\n    case TypeOrder.NumberValue:\n      return 8;\n    case TypeOrder.TimestampValue:\n      // Timestamps are made up of two distinct numbers (seconds + nanoseconds)\n      return 16;\n    case TypeOrder.ServerTimestampValue:\n      const previousValue = getPreviousValue(value);\n      return previousValue ? 16 + estimateByteSize(previousValue) : 16;\n    case TypeOrder.StringValue:\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures:\n      // \"JavaScript's String type is [...] a set of elements of 16-bit unsigned\n      // integer values\"\n      return value.stringValue!.length * 2;\n    case TypeOrder.BlobValue:\n      return normalizeByteString(value.bytesValue!).approximateByteSize();\n    case TypeOrder.RefValue:\n      return value.referenceValue!.length;\n    case TypeOrder.GeoPointValue:\n      // GeoPoints are made up of two distinct numbers (latitude + longitude)\n      return 16;\n    case TypeOrder.ArrayValue:\n      return estimateArrayByteSize(value.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return estimateMapByteSize(value.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction estimateMapByteSize(mapValue: MapValue): number {\n  let size = 0;\n  forEach(mapValue.fields, (key, val) => {\n    size += key.length + estimateByteSize(val);\n  });\n  return size;\n}\n\nfunction estimateArrayByteSize(arrayValue: ArrayValue): number {\n  return (arrayValue.values || []).reduce(\n    (previousSize, value) => previousSize + estimateByteSize(value),\n    0\n  );\n}\n\n/** Returns a reference value for the provided database and key. */\nexport function refValue(databaseId: DatabaseId, key: DocumentKey): Value {\n  return {\n    referenceValue: `projects/${databaseId.projectId}/databases/${\n      databaseId.database\n    }/documents/${key.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an IntegerValue . */\nexport function isInteger(\n  value?: Value | null\n): value is { integerValue: string | number } {\n  return !!value && 'integerValue' in value;\n}\n\n/** Returns true if `value` is a DoubleValue. */\nexport function isDouble(\n  value?: Value | null\n): value is { doubleValue: string | number } {\n  return !!value && 'doubleValue' in value;\n}\n\n/** Returns true if `value` is either an IntegerValue or a DoubleValue. */\nexport function isNumber(value?: Value | null): boolean {\n  return isInteger(value) || isDouble(value);\n}\n\n/** Returns true if `value` is an ArrayValue. */\nexport function isArray(\n  value?: Value | null\n): value is { arrayValue: ArrayValue } {\n  return !!value && 'arrayValue' in value;\n}\n\n/** Returns true if `value` is a ReferenceValue. */\nexport function isReferenceValue(\n  value?: Value | null\n): value is { referenceValue: string } {\n  return !!value && 'referenceValue' in value;\n}\n\n/** Returns true if `value` is a NullValue. */\nexport function isNullValue(\n  value?: Value | null\n): value is { nullValue: 'NULL_VALUE' } {\n  return !!value && 'nullValue' in value;\n}\n\n/** Returns true if `value` is NaN. */\nexport function isNanValue(\n  value?: Value | null\n): value is { doubleValue: 'NaN' | number } {\n  return !!value && 'doubleValue' in value && isNaN(Number(value.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nexport function isMapValue(\n  value?: Value | null\n): value is { mapValue: MapValue } {\n  return !!value && 'mapValue' in value;\n}\n\n/** Creates a deep copy of `source`. */\nexport function deepClone(source: Value): Value {\n  if (source.geoPointValue) {\n    return { geoPointValue: { ...source.geoPointValue } };\n  } else if (\n    source.timestampValue &&\n    typeof source.timestampValue === 'object'\n  ) {\n    return { timestampValue: { ...source.timestampValue } };\n  } else if (source.mapValue) {\n    const target: Value = { mapValue: { fields: {} } };\n    forEach(\n      source.mapValue.fields,\n      (key, val) => (target.mapValue!.fields![key] = deepClone(val))\n    );\n    return target;\n  } else if (source.arrayValue) {\n    const target: Value = { arrayValue: { values: [] } };\n    for (let i = 0; i < (source.arrayValue.values || []).length; ++i) {\n      target.arrayValue!.values![i] = deepClone(source.arrayValue.values![i]);\n    }\n    return target;\n  } else {\n    return { ...source };\n  }\n}\n\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\nexport function isMaxValue(value: Value): boolean {\n  return (\n    (((value.mapValue || {}).fields || {})['__type__'] || {}).stringValue ===\n    MAX_VALUE_TYPE\n  );\n}\n\n/** Returns the lowest value for the given value type (inclusive). */\nexport function valuesGetLowerBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return MIN_VALUE;\n  } else if ('booleanValue' in value) {\n    return { booleanValue: false };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('timestampValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('stringValue' in value) {\n    return { stringValue: '' };\n  } else if ('bytesValue' in value) {\n    return { bytesValue: '' };\n  } else if ('referenceValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('geoPointValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('arrayValue' in value) {\n    return { arrayValue: {} };\n  } else if ('mapValue' in value) {\n    return { mapValue: {} };\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Returns the largest value for the given value type (exclusive). */\nexport function valuesGetUpperBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return { booleanValue: false };\n  } else if ('booleanValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('timestampValue' in value) {\n    return { stringValue: '' };\n  } else if ('stringValue' in value) {\n    return { bytesValue: '' };\n  } else if ('bytesValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('referenceValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('geoPointValue' in value) {\n    return { arrayValue: {} };\n  } else if ('arrayValue' in value) {\n    return { mapValue: {} };\n  } else if ('mapValue' in value) {\n    return MAX_VALUE;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nexport function lowerBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return -1;\n  } else if (!left.inclusive && right.inclusive) {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport function upperBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return 1;\n  } else if (!left.inclusive && right.inclusive) {\n    return -1;\n  }\n\n  return 0;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MapValue as ProtoMapValue,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { debugAssert } from '../util/assert';\nimport { forEach } from '../util/obj';\n\nimport { FieldMask } from './field_mask';\nimport { FieldPath } from './path';\nimport { isServerTimestamp } from './server_timestamps';\nimport { deepClone, isMapValue, valueEquals } from './values';\n\nexport interface JsonObject<T> {\n  [name: string]: T;\n}\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nexport class ObjectValue {\n  constructor(readonly value: { mapValue: ProtoMapValue }) {\n    debugAssert(\n      !isServerTimestamp(value),\n      'ServerTimestamps should be converted to ServerTimestampValue'\n    );\n  }\n\n  static empty(): ObjectValue {\n    return new ObjectValue({ mapValue: {} });\n  }\n\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n  field(path: FieldPath): ProtoValue | null {\n    if (path.isEmpty()) {\n      return this.value;\n    } else {\n      let currentLevel: ProtoValue = this.value;\n      for (let i = 0; i < path.length - 1; ++i) {\n        currentLevel = (currentLevel.mapValue!.fields || {})[path.get(i)];\n        if (!isMapValue(currentLevel)) {\n          return null;\n        }\n      }\n      currentLevel = (currentLevel.mapValue!.fields! || {})[path.lastSegment()];\n      return currentLevel || null;\n    }\n  }\n\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n  set(path: FieldPath, value: ProtoValue): void {\n    debugAssert(\n      !path.isEmpty(),\n      'Cannot set field for empty path on ObjectValue'\n    );\n    const fieldsMap = this.getFieldsMap(path.popLast());\n    fieldsMap[path.lastSegment()] = deepClone(value);\n  }\n\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n  setAll(data: Map<FieldPath, ProtoValue | null>): void {\n    let parent = FieldPath.emptyPath();\n\n    let upserts: { [key: string]: ProtoValue } = {};\n    let deletes: string[] = [];\n\n    data.forEach((value, path) => {\n      if (!parent.isImmediateParentOf(path)) {\n        // Insert the accumulated changes at this parent location\n        const fieldsMap = this.getFieldsMap(parent);\n        this.applyChanges(fieldsMap, upserts, deletes);\n        upserts = {};\n        deletes = [];\n        parent = path.popLast();\n      }\n\n      if (value) {\n        upserts[path.lastSegment()] = deepClone(value);\n      } else {\n        deletes.push(path.lastSegment());\n      }\n    });\n\n    const fieldsMap = this.getFieldsMap(parent);\n    this.applyChanges(fieldsMap, upserts, deletes);\n  }\n\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n  delete(path: FieldPath): void {\n    debugAssert(\n      !path.isEmpty(),\n      'Cannot delete field for empty path on ObjectValue'\n    );\n    const nestedValue = this.field(path.popLast());\n    if (isMapValue(nestedValue) && nestedValue.mapValue.fields) {\n      delete nestedValue.mapValue.fields[path.lastSegment()];\n    }\n  }\n\n  isEqual(other: ObjectValue): boolean {\n    return valueEquals(this.value, other.value);\n  }\n\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n  private getFieldsMap(path: FieldPath): Record<string, ProtoValue> {\n    let current = this.value;\n\n    if (!current.mapValue!.fields) {\n      current.mapValue = { fields: {} };\n    }\n\n    for (let i = 0; i < path.length; ++i) {\n      let next = current.mapValue!.fields![path.get(i)];\n      if (!isMapValue(next) || !next.mapValue.fields) {\n        next = { mapValue: { fields: {} } };\n        current.mapValue!.fields![path.get(i)] = next;\n      }\n      current = next as { mapValue: ProtoMapValue };\n    }\n\n    return current.mapValue!.fields!;\n  }\n\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n  private applyChanges(\n    fieldsMap: Record<string, ProtoValue>,\n    inserts: { [key: string]: ProtoValue },\n    deletes: string[]\n  ): void {\n    forEach(inserts, (key, val) => (fieldsMap[key] = val));\n    for (const field of deletes) {\n      delete fieldsMap[field];\n    }\n  }\n\n  clone(): ObjectValue {\n    return new ObjectValue(\n      deepClone(this.value) as { mapValue: ProtoMapValue }\n    );\n  }\n}\n\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */\nexport function extractFieldMask(value: ProtoMapValue): FieldMask {\n  const fields: FieldPath[] = [];\n  forEach(value!.fields, (key, value) => {\n    const currentPath = new FieldPath([key]);\n    if (isMapValue(value)) {\n      const nestedMask = extractFieldMask(value.mapValue!);\n      const nestedFields = nestedMask.fields;\n      if (nestedFields.length === 0) {\n        // Preserve the empty map by adding it to the FieldMask.\n        fields.push(currentPath);\n      } else {\n        // For nested and non-empty ObjectValues, add the FieldPath of the\n        // leaf nodes.\n        for (const nestedPath of nestedFields) {\n          fields.push(currentPath.child(nestedPath));\n        }\n      }\n    } else {\n      // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n      // nodes.\n      fields.push(currentPath);\n    }\n  });\n  return new FieldMask(fields);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { debugAssert, fail } from '../util/assert';\n\nimport { DocumentKey } from './document_key';\nimport { ObjectValue } from './object_value';\nimport { FieldPath } from './path';\nimport { valueCompare } from './values';\n\n/**\n * Whether the document represents an existing document, a document that is\n * known to exist or a document whose state or existence is unknown.\n */\nconst enum DocumentType {\n  /**\n   * Represents the initial state of a MutableDocument when only the document\n   * key is known. Invalid documents transition to other states as mutations are\n   * applied. If a document remains invalid after applying mutations, it should\n   * be discarded.\n   *\n   * Invalid documents can have neither local nor committed mutations.\n   */\n  INVALID,\n  /**\n   * Represents a document in Firestore with a key, version, data and whether\n   * the data has local mutations applied to it.\n   *\n   * Found documents can be sycned or have or committed mutations applied.\n   */\n  FOUND_DOCUMENT,\n  /**\n   * Represents that no documents exists for the key at the given version.\n   *\n   * Documents that are deleted based on a local mutation do not raise snapshots\n   * with `hasPendingWrites`. As such, deleted documents never have\n   * `HAS_LOCAL_MUTATIONS` set. Once a delete is committed, we store them with\n   * `HAS_COMMITTED_MUTATIONS` until we received the delete from the Watch\n   * stream.\n   */\n  NO_DOCUMENT,\n  /**\n   * Represents an existing document whose data is unknown (e.g. a document that\n   * was updated without a known base document).\n   *\n   * An unknown document always has `HAS_COMMITTED_MUTATIONS` set, since unknown\n   * documents can only be generated by applying a patch mutation from a write\n   * acknowledgement.\n   */\n  UNKNOWN_DOCUMENT\n}\n\n/** Describes whether a document has latency-compensated edits applied. */\nconst enum DocumentState {\n  /** No mutations applied. Document was sent to us by Watch. */\n  SYNCED,\n  /**\n   * Local mutations applied via the mutation queue. Document is potentially\n   * inconsistent.\n   */\n  HAS_LOCAL_MUTATIONS,\n  /**\n   * Mutations applied based on a write acknowledgment. Document is potentially\n   * inconsistent.\n   */\n  HAS_COMMITTED_MUTATIONS\n}\n\n/**\n * Represents a document in Firestore with a key, version, data and whether the\n * data has local mutations applied to it.\n */\nexport interface Document {\n  /** The key for this document */\n  readonly key: DocumentKey;\n\n  /**\n   * The version of this document if it exists or a version at which this\n   * document was guaranteed to not exist.\n   */\n  readonly version: SnapshotVersion;\n\n  /**\n   * The timestamp at which this document was read from the remote server. Uses\n   * `SnapshotVersion.min()` for documents created by the user.\n   */\n  readonly readTime: SnapshotVersion;\n\n  /**\n   * The timestamp at which the document was created. This value increases\n   * monotonically when a document is deleted then recreated. It can also be\n   * compared to `createTime` of other documents and the `readTime` of a query.\n   */\n  readonly createTime: SnapshotVersion;\n\n  /** The underlying data of this document or an empty value if no data exists. */\n  readonly data: ObjectValue;\n\n  /** Returns whether local mutations were applied via the mutation queue. */\n  readonly hasLocalMutations: boolean;\n\n  /** Returns whether mutations were applied based on a write acknowledgment. */\n  readonly hasCommittedMutations: boolean;\n\n  /**\n   * Whether this document had a local mutation applied that has not yet been\n   * acknowledged by Watch.\n   */\n  readonly hasPendingWrites: boolean;\n\n  /**\n   * Returns whether this document is valid (i.e. it is an entry in the\n   * RemoteDocumentCache, was created by a mutation or read from the backend).\n   */\n  isValidDocument(): boolean;\n\n  /**\n   * Returns whether the document exists and its data is known at the current\n   * version.\n   */\n  isFoundDocument(): boolean;\n\n  /**\n   * Returns whether the document is known to not exist at the current version.\n   */\n  isNoDocument(): boolean;\n\n  /**\n   * Returns whether the document exists and its data is unknown at the current\n   * version.\n   */\n  isUnknownDocument(): boolean;\n\n  isEqual(other: Document | null | undefined): boolean;\n\n  /** Creates a mutable copy of this document. */\n  mutableCopy(): MutableDocument;\n\n  toString(): string;\n}\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nexport class MutableDocument implements Document {\n  private constructor(\n    readonly key: DocumentKey,\n    private documentType: DocumentType,\n    public version: SnapshotVersion,\n    public readTime: SnapshotVersion,\n    public createTime: SnapshotVersion,\n    public data: ObjectValue,\n    private documentState: DocumentState\n  ) {}\n\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  static newInvalidDocument(documentKey: DocumentKey): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.INVALID,\n      /* version */ SnapshotVersion.min(),\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.SYNCED\n    );\n  }\n\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n  static newFoundDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion,\n    createTime: SnapshotVersion,\n    value: ObjectValue\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.FOUND_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ createTime,\n      value,\n      DocumentState.SYNCED\n    );\n  }\n\n  /** Creates a new document that is known to not exist at the given version. */\n  static newNoDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.NO_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.SYNCED\n    );\n  }\n\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  static newUnknownDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.UNKNOWN_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.HAS_COMMITTED_MUTATIONS\n    );\n  }\n\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n  convertToFoundDocument(\n    version: SnapshotVersion,\n    value: ObjectValue\n  ): MutableDocument {\n    // If a document is switching state from being an invalid or deleted\n    // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n    // update from Watch or due to applying a local set mutation on top\n    // of a deleted document, our best guess about its createTime would be the\n    // version at which the document transitioned to a FOUND_DOCUMENT.\n    if (\n      this.createTime.isEqual(SnapshotVersion.min()) &&\n      (this.documentType === DocumentType.NO_DOCUMENT ||\n        this.documentType === DocumentType.INVALID)\n    ) {\n      this.createTime = version;\n    }\n    this.version = version;\n    this.documentType = DocumentType.FOUND_DOCUMENT;\n    this.data = value;\n    this.documentState = DocumentState.SYNCED;\n    return this;\n  }\n\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n  convertToNoDocument(version: SnapshotVersion): MutableDocument {\n    this.version = version;\n    this.documentType = DocumentType.NO_DOCUMENT;\n    this.data = ObjectValue.empty();\n    this.documentState = DocumentState.SYNCED;\n    return this;\n  }\n\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  convertToUnknownDocument(version: SnapshotVersion): MutableDocument {\n    this.version = version;\n    this.documentType = DocumentType.UNKNOWN_DOCUMENT;\n    this.data = ObjectValue.empty();\n    this.documentState = DocumentState.HAS_COMMITTED_MUTATIONS;\n    return this;\n  }\n\n  setHasCommittedMutations(): MutableDocument {\n    debugAssert(\n      this.isValidDocument(),\n      'Invalid documents cannot have committed mutations'\n    );\n    this.documentState = DocumentState.HAS_COMMITTED_MUTATIONS;\n    return this;\n  }\n\n  setHasLocalMutations(): MutableDocument {\n    this.documentState = DocumentState.HAS_LOCAL_MUTATIONS;\n    this.version = SnapshotVersion.min();\n    return this;\n  }\n\n  setReadTime(readTime: SnapshotVersion): MutableDocument {\n    this.readTime = readTime;\n    return this;\n  }\n\n  get hasLocalMutations(): boolean {\n    return this.documentState === DocumentState.HAS_LOCAL_MUTATIONS;\n  }\n\n  get hasCommittedMutations(): boolean {\n    return this.documentState === DocumentState.HAS_COMMITTED_MUTATIONS;\n  }\n\n  get hasPendingWrites(): boolean {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n\n  isValidDocument(): boolean {\n    return this.documentType !== DocumentType.INVALID;\n  }\n\n  isFoundDocument(): boolean {\n    return this.documentType === DocumentType.FOUND_DOCUMENT;\n  }\n\n  isNoDocument(): boolean {\n    return this.documentType === DocumentType.NO_DOCUMENT;\n  }\n\n  isUnknownDocument(): boolean {\n    return this.documentType === DocumentType.UNKNOWN_DOCUMENT;\n  }\n\n  isEqual(other: Document | null | undefined): boolean {\n    return (\n      other instanceof MutableDocument &&\n      this.key.isEqual(other.key) &&\n      this.version.isEqual(other.version) &&\n      this.documentType === other.documentType &&\n      this.documentState === other.documentState &&\n      this.data.isEqual(other.data)\n    );\n  }\n\n  mutableCopy(): MutableDocument {\n    return new MutableDocument(\n      this.key,\n      this.documentType,\n      this.version,\n      this.readTime,\n      this.createTime,\n      this.data.clone(),\n      this.documentState\n    );\n  }\n\n  toString(): string {\n    return (\n      `Document(${this.key}, ${this.version}, ${JSON.stringify(\n        this.data.value\n      )}, ` +\n      `{createTime: ${this.createTime}}), ` +\n      `{documentType: ${this.documentType}}), ` +\n      `{documentState: ${this.documentState}})`\n    );\n  }\n}\n\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\nexport function compareDocumentsByField(\n  field: FieldPath,\n  d1: Document,\n  d2: Document\n): number {\n  const v1 = d1.data.field(field);\n  const v2 = d2.data.field(field);\n  if (v1 !== null && v2 !== null) {\n    return valueCompare(v1, v2);\n  } else {\n    return fail(\"Trying to compare documents on fields that don't exist\");\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { isReferenceValue, valueCompare, valueEquals } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert } from '../util/assert';\n\nimport { Direction, OrderBy } from './order_by';\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nexport class Bound {\n  constructor(readonly position: ProtoValue[], readonly inclusive: boolean) {}\n}\n\nfunction boundCompareToDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): number {\n  debugAssert(\n    bound.position.length <= orderBy.length,\n    \"Bound has more components than query's orderBy\"\n  );\n  let comparison = 0;\n  for (let i = 0; i < bound.position.length; i++) {\n    const orderByComponent = orderBy[i];\n    const component = bound.position[i];\n    if (orderByComponent.field.isKeyField()) {\n      debugAssert(\n        isReferenceValue(component),\n        'Bound has a non-key value where the key path is being used.'\n      );\n      comparison = DocumentKey.comparator(\n        DocumentKey.fromName(component.referenceValue),\n        doc.key\n      );\n    } else {\n      const docValue = doc.data.field(orderByComponent.field);\n      debugAssert(\n        docValue !== null,\n        'Field should exist since document matched the orderBy already.'\n      );\n      comparison = valueCompare(component, docValue);\n    }\n    if (orderByComponent.dir === Direction.DESCENDING) {\n      comparison = comparison * -1;\n    }\n    if (comparison !== 0) {\n      break;\n    }\n  }\n  return comparison;\n}\n\n/**\n * Returns true if a document sorts after a bound using the provided sort\n * order.\n */\nexport function boundSortsAfterDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): boolean {\n  const comparison = boundCompareToDocument(bound, orderBy, doc);\n  return bound.inclusive ? comparison >= 0 : comparison > 0;\n}\n\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\nexport function boundSortsBeforeDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): boolean {\n  const comparison = boundCompareToDocument(bound, orderBy, doc);\n  return bound.inclusive ? comparison <= 0 : comparison < 0;\n}\n\nexport function boundEquals(left: Bound | null, right: Bound | null): boolean {\n  if (left === null) {\n    return right === null;\n  } else if (right === null) {\n    return false;\n  }\n\n  if (\n    left.inclusive !== right.inclusive ||\n    left.position.length !== right.position.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < left.position.length; i++) {\n    const leftPosition = left.position[i];\n    const rightPosition = right.position[i];\n    if (!valueEquals(leftPosition, rightPosition)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldPath } from '../model/path';\n\n/**\n * The direction of sorting in an order by.\n */\nexport const enum Direction {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc'\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nexport class OrderBy {\n  constructor(\n    readonly field: FieldPath,\n    readonly dir: Direction = Direction.ASCENDING\n  ) {}\n}\n\nexport function canonifyOrderBy(orderBy: OrderBy): string {\n  // TODO(b/29183165): Make this collision robust.\n  return orderBy.field.canonicalString() + orderBy.dir;\n}\n\nexport function stringifyOrderBy(orderBy: OrderBy): string {\n  return `${orderBy.field.canonicalString()} (${orderBy.dir})`;\n}\n\nexport function orderByEquals(left: OrderBy, right: OrderBy): boolean {\n  return left.dir === right.dir && left.field.isEqual(right.field);\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath } from '../model/path';\nimport {\n  arrayValueContains,\n  canonicalId,\n  isArray,\n  isReferenceValue,\n  typeOrder,\n  valueCompare,\n  valueEquals\n} from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, fail } from '../util/assert';\n\n// The operator of a FieldFilter\nexport const enum Operator {\n  LESS_THAN = '<',\n  LESS_THAN_OR_EQUAL = '<=',\n  EQUAL = '==',\n  NOT_EQUAL = '!=',\n  GREATER_THAN = '>',\n  GREATER_THAN_OR_EQUAL = '>=',\n  ARRAY_CONTAINS = 'array-contains',\n  IN = 'in',\n  NOT_IN = 'not-in',\n  ARRAY_CONTAINS_ANY = 'array-contains-any'\n}\n\n// The operator of a CompositeFilter\nexport const enum CompositeOperator {\n  OR = 'or',\n  AND = 'and'\n}\n\nexport abstract class Filter {\n  abstract matches(doc: Document): boolean;\n\n  abstract getFlattenedFilters(): readonly FieldFilter[];\n\n  abstract getFilters(): Filter[];\n}\n\nexport class FieldFilter extends Filter {\n  protected constructor(\n    public readonly field: FieldPath,\n    public readonly op: Operator,\n    public readonly value: ProtoValue\n  ) {\n    super();\n  }\n\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(\n    field: FieldPath,\n    op: Operator,\n    value: ProtoValue\n  ): FieldFilter {\n    if (field.isKeyField()) {\n      if (op === Operator.IN || op === Operator.NOT_IN) {\n        return this.createKeyFieldInFilter(field, op, value);\n      } else {\n        debugAssert(\n          isReferenceValue(value),\n          'Comparing on key, but filter value not a RefValue'\n        );\n        debugAssert(\n          op !== Operator.ARRAY_CONTAINS && op !== Operator.ARRAY_CONTAINS_ANY,\n          `'${op.toString()}' queries don't make sense on document keys.`\n        );\n        return new KeyFieldFilter(field, op, value);\n      }\n    } else if (op === Operator.ARRAY_CONTAINS) {\n      return new ArrayContainsFilter(field, value);\n    } else if (op === Operator.IN) {\n      debugAssert(\n        isArray(value),\n        'IN filter has invalid value: ' + value.toString()\n      );\n      return new InFilter(field, value);\n    } else if (op === Operator.NOT_IN) {\n      debugAssert(\n        isArray(value),\n        'NOT_IN filter has invalid value: ' + value.toString()\n      );\n      return new NotInFilter(field, value);\n    } else if (op === Operator.ARRAY_CONTAINS_ANY) {\n      debugAssert(\n        isArray(value),\n        'ARRAY_CONTAINS_ANY filter has invalid value: ' + value.toString()\n      );\n      return new ArrayContainsAnyFilter(field, value);\n    } else {\n      return new FieldFilter(field, op, value);\n    }\n  }\n\n  private static createKeyFieldInFilter(\n    field: FieldPath,\n    op: Operator.IN | Operator.NOT_IN,\n    value: ProtoValue\n  ): FieldFilter {\n    debugAssert(\n      isArray(value),\n      `Comparing on key with ${op.toString()}` +\n        ', but filter value not an ArrayValue'\n    );\n    debugAssert(\n      (value.arrayValue.values || []).every(elem => isReferenceValue(elem)),\n      `Comparing on key with ${op.toString()}` +\n        ', but an array value was not a RefValue'\n    );\n\n    return op === Operator.IN\n      ? new KeyFieldInFilter(field, value)\n      : new KeyFieldNotInFilter(field, value);\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    // Types do not have to match in NOT_EQUAL filters.\n    if (this.op === Operator.NOT_EQUAL) {\n      return (\n        other !== null &&\n        this.matchesComparison(valueCompare(other!, this.value))\n      );\n    }\n\n    // Only compare types with matching backend order (such as double and int).\n    return (\n      other !== null &&\n      typeOrder(this.value) === typeOrder(other) &&\n      this.matchesComparison(valueCompare(other, this.value))\n    );\n  }\n\n  protected matchesComparison(comparison: number): boolean {\n    switch (this.op) {\n      case Operator.LESS_THAN:\n        return comparison < 0;\n      case Operator.LESS_THAN_OR_EQUAL:\n        return comparison <= 0;\n      case Operator.EQUAL:\n        return comparison === 0;\n      case Operator.NOT_EQUAL:\n        return comparison !== 0;\n      case Operator.GREATER_THAN:\n        return comparison > 0;\n      case Operator.GREATER_THAN_OR_EQUAL:\n        return comparison >= 0;\n      default:\n        return fail('Unknown FieldFilter operator: ' + this.op);\n    }\n  }\n\n  isInequality(): boolean {\n    return (\n      [\n        Operator.LESS_THAN,\n        Operator.LESS_THAN_OR_EQUAL,\n        Operator.GREATER_THAN,\n        Operator.GREATER_THAN_OR_EQUAL,\n        Operator.NOT_EQUAL,\n        Operator.NOT_IN\n      ].indexOf(this.op) >= 0\n    );\n  }\n\n  getFlattenedFilters(): readonly FieldFilter[] {\n    return [this];\n  }\n\n  getFilters(): Filter[] {\n    return [this];\n  }\n}\n\nexport class CompositeFilter extends Filter {\n  private memoizedFlattenedFilters: FieldFilter[] | null = null;\n\n  protected constructor(\n    public readonly filters: readonly Filter[],\n    public readonly op: CompositeOperator\n  ) {\n    super();\n  }\n\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(filters: Filter[], op: CompositeOperator): CompositeFilter {\n    return new CompositeFilter(filters, op);\n  }\n\n  matches(doc: Document): boolean {\n    if (compositeFilterIsConjunction(this)) {\n      // For conjunctions, all filters must match, so return false if any filter doesn't match.\n      return this.filters.find(filter => !filter.matches(doc)) === undefined;\n    } else {\n      // For disjunctions, at least one filter should match.\n      return this.filters.find(filter => filter.matches(doc)) !== undefined;\n    }\n  }\n\n  getFlattenedFilters(): readonly FieldFilter[] {\n    if (this.memoizedFlattenedFilters !== null) {\n      return this.memoizedFlattenedFilters;\n    }\n\n    this.memoizedFlattenedFilters = this.filters.reduce((result, subfilter) => {\n      return result.concat(subfilter.getFlattenedFilters());\n    }, [] as FieldFilter[]);\n\n    return this.memoizedFlattenedFilters;\n  }\n\n  // Returns a mutable copy of `this.filters`\n  getFilters(): Filter[] {\n    return Object.assign([], this.filters);\n  }\n}\n\nexport function compositeFilterIsConjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return compositeFilter.op === CompositeOperator.AND;\n}\n\nexport function compositeFilterIsDisjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return compositeFilter.op === CompositeOperator.OR;\n}\n\n/**\n * Returns true if this filter is a conjunction of field filters only. Returns false otherwise.\n */\nexport function compositeFilterIsFlatConjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return (\n    compositeFilterIsFlat(compositeFilter) &&\n    compositeFilterIsConjunction(compositeFilter)\n  );\n}\n\n/**\n * Returns true if this filter does not contain any composite filters. Returns false otherwise.\n */\nexport function compositeFilterIsFlat(\n  compositeFilter: CompositeFilter\n): boolean {\n  for (const filter of compositeFilter.filters) {\n    if (filter instanceof CompositeFilter) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function canonifyFilter(filter: Filter): string {\n  debugAssert(\n    filter instanceof FieldFilter || filter instanceof CompositeFilter,\n    'canonifyFilter() only supports FieldFilters and CompositeFilters'\n  );\n\n  if (filter instanceof FieldFilter) {\n    // TODO(b/29183165): Technically, this won't be unique if two values have\n    // the same description, such as the int 3 and the string \"3\". So we should\n    // add the types in here somehow, too.\n    return (\n      filter.field.canonicalString() +\n      filter.op.toString() +\n      canonicalId(filter.value)\n    );\n  } else if (compositeFilterIsFlatConjunction(filter)) {\n    // Older SDK versions use an implicit AND operation between their filters.\n    // In the new SDK versions, the developer may use an explicit AND filter.\n    // To stay consistent with the old usages, we add a special case to ensure\n    // the canonical ID for these two are the same. For example:\n    // `col.whereEquals(\"a\", 1).whereEquals(\"b\", 2)` should have the same\n    // canonical ID as `col.where(and(equals(\"a\",1), equals(\"b\",2)))`.\n    return filter.filters.map(filter => canonifyFilter(filter)).join(',');\n  } else {\n    // filter instanceof CompositeFilter\n    const canonicalIdsString = filter.filters\n      .map(filter => canonifyFilter(filter))\n      .join(',');\n    return `${filter.op}(${canonicalIdsString})`;\n  }\n}\n\nexport function filterEquals(f1: Filter, f2: Filter): boolean {\n  if (f1 instanceof FieldFilter) {\n    return fieldFilterEquals(f1, f2);\n  } else if (f1 instanceof CompositeFilter) {\n    return compositeFilterEquals(f1, f2);\n  } else {\n    fail('Only FieldFilters and CompositeFilters can be compared');\n  }\n}\n\nexport function fieldFilterEquals(f1: FieldFilter, f2: Filter): boolean {\n  return (\n    f2 instanceof FieldFilter &&\n    f1.op === f2.op &&\n    f1.field.isEqual(f2.field) &&\n    valueEquals(f1.value, f2.value)\n  );\n}\n\nexport function compositeFilterEquals(\n  f1: CompositeFilter,\n  f2: Filter\n): boolean {\n  if (\n    f2 instanceof CompositeFilter &&\n    f1.op === f2.op &&\n    f1.filters.length === f2.filters.length\n  ) {\n    const subFiltersMatch: boolean = f1.filters.reduce(\n      (result: boolean, f1Filter: Filter, index: number): boolean =>\n        result && filterEquals(f1Filter, f2.filters[index]),\n      true\n    );\n\n    return subFiltersMatch;\n  }\n\n  return false;\n}\n\n/**\n * Returns a new composite filter that contains all filter from\n * `compositeFilter` plus all the given filters in `otherFilters`.\n */\nexport function compositeFilterWithAddedFilters(\n  compositeFilter: CompositeFilter,\n  otherFilters: Filter[]\n): CompositeFilter {\n  const mergedFilters = compositeFilter.filters.concat(otherFilters);\n  return CompositeFilter.create(mergedFilters, compositeFilter.op);\n}\n\n/** Returns a debug description for `filter`. */\nexport function stringifyFilter(filter: Filter): string {\n  debugAssert(\n    filter instanceof FieldFilter || filter instanceof CompositeFilter,\n    'stringifyFilter() only supports FieldFilters and CompositeFilters'\n  );\n  if (filter instanceof FieldFilter) {\n    return stringifyFieldFilter(filter);\n  } else if (filter instanceof CompositeFilter) {\n    return stringifyCompositeFilter(filter);\n  } else {\n    return 'Filter';\n  }\n}\n\nexport function stringifyCompositeFilter(filter: CompositeFilter): string {\n  return (\n    filter.op.toString() +\n    ` {` +\n    filter.getFilters().map(stringifyFilter).join(' ,') +\n    '}'\n  );\n}\n\nexport function stringifyFieldFilter(filter: FieldFilter): string {\n  return `${filter.field.canonicalString()} ${filter.op} ${canonicalId(\n    filter.value\n  )}`;\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nexport class KeyFieldFilter extends FieldFilter {\n  private readonly key: DocumentKey;\n\n  constructor(field: FieldPath, op: Operator, value: ProtoValue) {\n    super(field, op, value);\n    debugAssert(\n      isReferenceValue(value),\n      'KeyFieldFilter expects a ReferenceValue'\n    );\n    this.key = DocumentKey.fromName(value.referenceValue);\n  }\n\n  matches(doc: Document): boolean {\n    const comparison = DocumentKey.comparator(doc.key, this.key);\n    return this.matchesComparison(comparison);\n  }\n}\n\n/** Filter that matches on key fields within an array. */\nexport class KeyFieldInFilter extends FieldFilter {\n  private readonly keys: DocumentKey[];\n\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.IN, value);\n    this.keys = extractDocumentKeysFromArrayValue(Operator.IN, value);\n  }\n\n  matches(doc: Document): boolean {\n    return this.keys.some(key => key.isEqual(doc.key));\n  }\n}\n\n/** Filter that matches on key fields not present within an array. */\nexport class KeyFieldNotInFilter extends FieldFilter {\n  private readonly keys: DocumentKey[];\n\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.NOT_IN, value);\n    this.keys = extractDocumentKeysFromArrayValue(Operator.NOT_IN, value);\n  }\n\n  matches(doc: Document): boolean {\n    return !this.keys.some(key => key.isEqual(doc.key));\n  }\n}\n\nfunction extractDocumentKeysFromArrayValue(\n  op: Operator.IN | Operator.NOT_IN,\n  value: ProtoValue\n): DocumentKey[] {\n  debugAssert(\n    isArray(value),\n    'KeyFieldInFilter/KeyFieldNotInFilter expects an ArrayValue'\n  );\n  return (value.arrayValue?.values || []).map(v => {\n    debugAssert(\n      isReferenceValue(v),\n      `Comparing on key with ${op.toString()}, but an array value was not ` +\n        `a ReferenceValue`\n    );\n    return DocumentKey.fromName(v.referenceValue);\n  });\n}\n\n/** A Filter that implements the array-contains operator. */\nexport class ArrayContainsFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.ARRAY_CONTAINS, value);\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    return isArray(other) && arrayValueContains(other.arrayValue, this.value);\n  }\n}\n\n/** A Filter that implements the IN operator. */\nexport class InFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.IN, value);\n    debugAssert(isArray(value), 'InFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    return other !== null && arrayValueContains(this.value.arrayValue!, other);\n  }\n}\n\n/** A Filter that implements the not-in operator. */\nexport class NotInFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.NOT_IN, value);\n    debugAssert(isArray(value), 'NotInFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    if (\n      arrayValueContains(this.value.arrayValue!, { nullValue: 'NULL_VALUE' })\n    ) {\n      return false;\n    }\n    const other = doc.data.field(this.field);\n    return other !== null && !arrayValueContains(this.value.arrayValue!, other);\n  }\n}\n\n/** A Filter that implements the array-contains-any operator. */\nexport class ArrayContainsAnyFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.ARRAY_CONTAINS_ANY, value);\n    debugAssert(isArray(value), 'ArrayContainsAnyFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    if (!isArray(other) || !other.arrayValue.values) {\n      return false;\n    }\n    return other.arrayValue.values.some(val =>\n      arrayValueContains(this.value.arrayValue!, val)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexGetArraySegment,\n  fieldIndexGetDirectionalSegments,\n  IndexKind\n} from '../model/field_index';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport {\n  canonicalId,\n  MAX_VALUE,\n  MIN_VALUE,\n  lowerBoundCompare,\n  upperBoundCompare,\n  valuesGetLowerBound,\n  valuesGetUpperBound\n} from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugCast } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { Bound, boundEquals } from './bound';\nimport {\n  Filter,\n  FieldFilter,\n  canonifyFilter,\n  stringifyFilter,\n  filterEquals,\n  Operator\n} from './filter';\nimport {\n  canonifyOrderBy,\n  OrderBy,\n  orderByEquals,\n  stringifyOrderBy\n} from './order_by';\n\n/**\n * A Target represents the WatchTarget representation of a Query, which is used\n * by the LocalStore and the RemoteStore to keep track of and to execute\n * backend queries. While a Query can represent multiple Targets, each Targets\n * maps to a single WatchTarget in RemoteStore and a single TargetData entry\n * in persistence.\n */\nexport interface Target {\n  readonly path: ResourcePath;\n  readonly collectionGroup: string | null;\n  readonly orderBy: OrderBy[];\n  readonly filters: Filter[];\n  readonly limit: number | null;\n  readonly startAt: Bound | null;\n  readonly endAt: Bound | null;\n}\n\n// Visible for testing\nexport class TargetImpl implements Target {\n  memoizedCanonicalId: string | null = null;\n  constructor(\n    readonly path: ResourcePath,\n    readonly collectionGroup: string | null = null,\n    readonly orderBy: OrderBy[] = [],\n    readonly filters: Filter[] = [],\n    readonly limit: number | null = null,\n    readonly startAt: Bound | null = null,\n    readonly endAt: Bound | null = null\n  ) {}\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nexport function newTarget(\n  path: ResourcePath,\n  collectionGroup: string | null = null,\n  orderBy: OrderBy[] = [],\n  filters: Filter[] = [],\n  limit: number | null = null,\n  startAt: Bound | null = null,\n  endAt: Bound | null = null\n): Target {\n  return new TargetImpl(\n    path,\n    collectionGroup,\n    orderBy,\n    filters,\n    limit,\n    startAt,\n    endAt\n  );\n}\n\nexport function canonifyTarget(target: Target): string {\n  const targetImpl = debugCast(target, TargetImpl);\n\n  if (targetImpl.memoizedCanonicalId === null) {\n    let str = targetImpl.path.canonicalString();\n    if (targetImpl.collectionGroup !== null) {\n      str += '|cg:' + targetImpl.collectionGroup;\n    }\n    str += '|f:';\n    str += targetImpl.filters.map(f => canonifyFilter(f)).join(',');\n    str += '|ob:';\n    str += targetImpl.orderBy.map(o => canonifyOrderBy(o)).join(',');\n\n    if (!isNullOrUndefined(targetImpl.limit)) {\n      str += '|l:';\n      str += targetImpl.limit!;\n    }\n    if (targetImpl.startAt) {\n      str += '|lb:';\n      str += targetImpl.startAt.inclusive ? 'b:' : 'a:';\n      str += targetImpl.startAt.position.map(p => canonicalId(p)).join(',');\n    }\n    if (targetImpl.endAt) {\n      str += '|ub:';\n      str += targetImpl.endAt.inclusive ? 'a:' : 'b:';\n      str += targetImpl.endAt.position.map(p => canonicalId(p)).join(',');\n    }\n    targetImpl.memoizedCanonicalId = str;\n  }\n  return targetImpl.memoizedCanonicalId;\n}\n\nexport function stringifyTarget(target: Target): string {\n  let str = target.path.canonicalString();\n  if (target.collectionGroup !== null) {\n    str += ' collectionGroup=' + target.collectionGroup;\n  }\n  if (target.filters.length > 0) {\n    str += `, filters: [${target.filters\n      .map(f => stringifyFilter(f))\n      .join(', ')}]`;\n  }\n  if (!isNullOrUndefined(target.limit)) {\n    str += ', limit: ' + target.limit;\n  }\n  if (target.orderBy.length > 0) {\n    str += `, orderBy: [${target.orderBy\n      .map(o => stringifyOrderBy(o))\n      .join(', ')}]`;\n  }\n  if (target.startAt) {\n    str += ', startAt: ';\n    str += target.startAt.inclusive ? 'b:' : 'a:';\n    str += target.startAt.position.map(p => canonicalId(p)).join(',');\n  }\n  if (target.endAt) {\n    str += ', endAt: ';\n    str += target.endAt.inclusive ? 'a:' : 'b:';\n    str += target.endAt.position.map(p => canonicalId(p)).join(',');\n  }\n  return `Target(${str})`;\n}\n\nexport function targetEquals(left: Target, right: Target): boolean {\n  if (left.limit !== right.limit) {\n    return false;\n  }\n\n  if (left.orderBy.length !== right.orderBy.length) {\n    return false;\n  }\n\n  for (let i = 0; i < left.orderBy.length; i++) {\n    if (!orderByEquals(left.orderBy[i], right.orderBy[i])) {\n      return false;\n    }\n  }\n\n  if (left.filters.length !== right.filters.length) {\n    return false;\n  }\n\n  for (let i = 0; i < left.filters.length; i++) {\n    if (!filterEquals(left.filters[i], right.filters[i])) {\n      return false;\n    }\n  }\n\n  if (left.collectionGroup !== right.collectionGroup) {\n    return false;\n  }\n\n  if (!left.path.isEqual(right.path)) {\n    return false;\n  }\n\n  if (!boundEquals(left.startAt, right.startAt)) {\n    return false;\n  }\n\n  return boundEquals(left.endAt, right.endAt);\n}\n\nexport function targetIsDocumentTarget(target: Target): boolean {\n  return (\n    DocumentKey.isDocumentKey(target.path) &&\n    target.collectionGroup === null &&\n    target.filters.length === 0\n  );\n}\n\n/** Returns the field filters that target the given field path. */\nexport function targetGetFieldFiltersForPath(\n  target: Target,\n  path: FieldPath\n): FieldFilter[] {\n  return target.filters.filter(\n    f => f instanceof FieldFilter && f.field.isEqual(path)\n  ) as FieldFilter[];\n}\n\n/**\n * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY\n * filters. Returns `null` if there are no such filters.\n */\nexport function targetGetArrayValues(\n  target: Target,\n  fieldIndex: FieldIndex\n): ProtoValue[] | null {\n  const segment = fieldIndexGetArraySegment(fieldIndex);\n  if (segment === undefined) {\n    return null;\n  }\n\n  for (const fieldFilter of targetGetFieldFiltersForPath(\n    target,\n    segment.fieldPath\n  )) {\n    switch (fieldFilter.op) {\n      case Operator.ARRAY_CONTAINS_ANY:\n        return fieldFilter.value.arrayValue!.values || [];\n      case Operator.ARRAY_CONTAINS:\n        return [fieldFilter.value];\n      default:\n      // Remaining filters are not array filters.\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the list of values that are used in != or NOT_IN filters. Returns\n * `null` if there are no such filters.\n */\nexport function targetGetNotInValues(\n  target: Target,\n  fieldIndex: FieldIndex\n): ProtoValue[] | null {\n  const values = new Map</* fieldPath = */ string, ProtoValue>();\n\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    for (const fieldFilter of targetGetFieldFiltersForPath(\n      target,\n      segment.fieldPath\n    )) {\n      switch (fieldFilter.op) {\n        case Operator.EQUAL:\n        case Operator.IN:\n          // Encode equality prefix, which is encoded in the index value before\n          // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to\n          // `value != 'ab'`).\n          values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n          break;\n        case Operator.NOT_IN:\n        case Operator.NOT_EQUAL:\n          // NotIn/NotEqual is always a suffix. There cannot be any remaining\n          // segments and hence we can return early here.\n          values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n          return Array.from(values.values());\n        default:\n        // Remaining filters cannot be used as notIn bounds.\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns a lower bound of field values that can be used as a starting point to\n * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound\n * exists.\n */\nexport function targetGetLowerBound(\n  target: Target,\n  fieldIndex: FieldIndex\n): Bound {\n  const values: ProtoValue[] = [];\n  let inclusive = true;\n\n  // For each segment, retrieve a lower bound if there is a suitable filter or\n  // startAt.\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    const segmentBound =\n      segment.kind === IndexKind.ASCENDING\n        ? targetGetAscendingBound(target, segment.fieldPath, target.startAt)\n        : targetGetDescendingBound(target, segment.fieldPath, target.startAt);\n\n    values.push(segmentBound.value);\n    inclusive &&= segmentBound.inclusive;\n  }\n  return new Bound(values, inclusive);\n}\n\n/**\n * Returns an upper bound of field values that can be used as an ending point\n * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no\n * upper bound exists.\n */\nexport function targetGetUpperBound(\n  target: Target,\n  fieldIndex: FieldIndex\n): Bound {\n  const values: ProtoValue[] = [];\n  let inclusive = true;\n\n  // For each segment, retrieve an upper bound if there is a suitable filter or\n  // endAt.\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    const segmentBound =\n      segment.kind === IndexKind.ASCENDING\n        ? targetGetDescendingBound(target, segment.fieldPath, target.endAt)\n        : targetGetAscendingBound(target, segment.fieldPath, target.endAt);\n\n    values.push(segmentBound.value);\n    inclusive &&= segmentBound.inclusive;\n  }\n\n  return new Bound(values, inclusive);\n}\n\n/**\n * Returns the value to use as the lower bound for ascending index segment at\n * the provided `fieldPath` (or the upper bound for an descending segment).\n */\nfunction targetGetAscendingBound(\n  target: Target,\n  fieldPath: FieldPath,\n  bound: Bound | null\n): { value: ProtoValue; inclusive: boolean } {\n  let value: ProtoValue = MIN_VALUE;\n\n  let inclusive = true;\n\n  // Process all filters to find a value for the current field segment\n  for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n    let filterValue: ProtoValue = MIN_VALUE;\n    let filterInclusive = true;\n\n    switch (fieldFilter.op) {\n      case Operator.LESS_THAN:\n      case Operator.LESS_THAN_OR_EQUAL:\n        filterValue = valuesGetLowerBound(fieldFilter.value);\n        break;\n      case Operator.EQUAL:\n      case Operator.IN:\n      case Operator.GREATER_THAN_OR_EQUAL:\n        filterValue = fieldFilter.value;\n        break;\n      case Operator.GREATER_THAN:\n        filterValue = fieldFilter.value;\n        filterInclusive = false;\n        break;\n      case Operator.NOT_EQUAL:\n      case Operator.NOT_IN:\n        filterValue = MIN_VALUE;\n        break;\n      default:\n      // Remaining filters cannot be used as lower bounds.\n    }\n\n    if (\n      lowerBoundCompare(\n        { value, inclusive },\n        { value: filterValue, inclusive: filterInclusive }\n      ) < 0\n    ) {\n      value = filterValue;\n      inclusive = filterInclusive;\n    }\n  }\n\n  // If there is an additional bound, compare the values against the existing\n  // range to see if we can narrow the scope.\n  if (bound !== null) {\n    for (let i = 0; i < target.orderBy.length; ++i) {\n      const orderBy = target.orderBy[i];\n      if (orderBy.field.isEqual(fieldPath)) {\n        const cursorValue = bound.position[i];\n        if (\n          lowerBoundCompare(\n            { value, inclusive },\n            { value: cursorValue, inclusive: bound.inclusive }\n          ) < 0\n        ) {\n          value = cursorValue;\n          inclusive = bound.inclusive;\n        }\n        break;\n      }\n    }\n  }\n\n  return { value, inclusive };\n}\n\n/**\n * Returns the value to use as the upper bound for ascending index segment at\n * the provided `fieldPath` (or the lower bound for a descending segment).\n */\nfunction targetGetDescendingBound(\n  target: Target,\n  fieldPath: FieldPath,\n  bound: Bound | null\n): { value: ProtoValue; inclusive: boolean } {\n  let value: ProtoValue = MAX_VALUE;\n  let inclusive = true;\n\n  // Process all filters to find a value for the current field segment\n  for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n    let filterValue: ProtoValue = MAX_VALUE;\n    let filterInclusive = true;\n\n    switch (fieldFilter.op) {\n      case Operator.GREATER_THAN_OR_EQUAL:\n      case Operator.GREATER_THAN:\n        filterValue = valuesGetUpperBound(fieldFilter.value);\n        filterInclusive = false;\n        break;\n      case Operator.EQUAL:\n      case Operator.IN:\n      case Operator.LESS_THAN_OR_EQUAL:\n        filterValue = fieldFilter.value;\n        break;\n      case Operator.LESS_THAN:\n        filterValue = fieldFilter.value;\n        filterInclusive = false;\n        break;\n      case Operator.NOT_EQUAL:\n      case Operator.NOT_IN:\n        filterValue = MAX_VALUE;\n        break;\n      default:\n      // Remaining filters cannot be used as upper bounds.\n    }\n\n    if (\n      upperBoundCompare(\n        { value, inclusive },\n        { value: filterValue, inclusive: filterInclusive }\n      ) > 0\n    ) {\n      value = filterValue;\n      inclusive = filterInclusive;\n    }\n  }\n\n  // If there is an additional bound, compare the values against the existing\n  // range to see if we can narrow the scope.\n  if (bound !== null) {\n    for (let i = 0; i < target.orderBy.length; ++i) {\n      const orderBy = target.orderBy[i];\n      if (orderBy.field.isEqual(fieldPath)) {\n        const cursorValue = bound.position[i];\n        if (\n          upperBoundCompare(\n            { value, inclusive },\n            { value: cursorValue, inclusive: bound.inclusive }\n          ) > 0\n        ) {\n          value = cursorValue;\n          inclusive = bound.inclusive;\n        }\n        break;\n      }\n    }\n  }\n\n  return { value, inclusive };\n}\n\n/** Returns the number of segments of a perfect index for this target. */\nexport function targetGetSegmentCount(target: Target): number {\n  let fields = new SortedSet<FieldPath>(FieldPath.comparator);\n  let hasArraySegment = false;\n\n  for (const filter of target.filters) {\n    for (const subFilter of filter.getFlattenedFilters()) {\n      // __name__ is not an explicit segment of any index, so we don't need to\n      // count it.\n      if (subFilter.field.isKeyField()) {\n        continue;\n      }\n\n      // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.\n      // For instance, it is possible to have an index for \"a ARRAY a ASC\". Even\n      // though these are on the same field, they should be counted as two\n      // separate segments in an index.\n      if (\n        subFilter.op === Operator.ARRAY_CONTAINS ||\n        subFilter.op === Operator.ARRAY_CONTAINS_ANY\n      ) {\n        hasArraySegment = true;\n      } else {\n        fields = fields.add(subFilter.field);\n      }\n    }\n  }\n\n  for (const orderBy of target.orderBy) {\n    // __name__ is not an explicit segment of any index, so we don't need to\n    // count it.\n    if (!orderBy.field.isKeyField()) {\n      fields = fields.add(orderBy.field);\n    }\n  }\n\n  return fields.size + (hasArraySegment ? 1 : 0);\n}\n\nexport function targetHasLimit(target: Target): boolean {\n  return target.limit !== null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareDocumentsByField, Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { debugAssert, debugCast, fail } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\n\nimport {\n  Bound,\n  boundSortsAfterDocument,\n  boundSortsBeforeDocument\n} from './bound';\nimport { FieldFilter, Filter } from './filter';\nimport { Direction, OrderBy } from './order_by';\nimport {\n  canonifyTarget,\n  newTarget,\n  stringifyTarget,\n  Target,\n  targetEquals\n} from './target';\n\nexport const enum LimitType {\n  First = 'F',\n  Last = 'L'\n}\n\n/**\n * The Query interface defines all external properties of a query.\n *\n * QueryImpl implements this interface to provide memoization for `queryNormalizedOrderBy`\n * and `queryToTarget`.\n */\nexport interface Query {\n  readonly path: ResourcePath;\n  readonly collectionGroup: string | null;\n  readonly explicitOrderBy: OrderBy[];\n  readonly filters: Filter[];\n  readonly limit: number | null;\n  readonly limitType: LimitType;\n  readonly startAt: Bound | null;\n  readonly endAt: Bound | null;\n}\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nexport class QueryImpl implements Query {\n  memoizedNormalizedOrderBy: OrderBy[] | null = null;\n\n  // The corresponding `Target` of this `Query` instance, for use with\n  // non-aggregate queries.\n  memoizedTarget: Target | null = null;\n\n  // The corresponding `Target` of this `Query` instance, for use with\n  // aggregate queries. Unlike targets for non-aggregate queries,\n  // aggregate query targets do not contain normalized order-bys, they only\n  // contain explicit order-bys.\n  memoizedAggregateTarget: Target | null = null;\n\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(\n    readonly path: ResourcePath,\n    readonly collectionGroup: string | null = null,\n    readonly explicitOrderBy: OrderBy[] = [],\n    readonly filters: Filter[] = [],\n    readonly limit: number | null = null,\n    readonly limitType: LimitType = LimitType.First,\n    readonly startAt: Bound | null = null,\n    readonly endAt: Bound | null = null\n  ) {\n    if (this.startAt) {\n      debugAssert(\n        this.startAt.position.length <= queryNormalizedOrderBy(this).length,\n        'Bound is longer than orderBy'\n      );\n    }\n    if (this.endAt) {\n      debugAssert(\n        this.endAt.position.length <= queryNormalizedOrderBy(this).length,\n        'Bound is longer than orderBy'\n      );\n    }\n  }\n}\n\n/** Creates a new Query instance with the options provided. */\nexport function newQuery(\n  path: ResourcePath,\n  collectionGroup: string | null,\n  explicitOrderBy: OrderBy[],\n  filters: Filter[],\n  limit: number | null,\n  limitType: LimitType,\n  startAt: Bound | null,\n  endAt: Bound | null\n): Query {\n  return new QueryImpl(\n    path,\n    collectionGroup,\n    explicitOrderBy,\n    filters,\n    limit,\n    limitType,\n    startAt,\n    endAt\n  );\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */\nexport function newQueryForPath(path: ResourcePath): Query {\n  return new QueryImpl(path);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\nexport function asCollectionQueryAtPath(\n  query: Query,\n  path: ResourcePath\n): Query {\n  return new QueryImpl(\n    path,\n    /*collectionGroup=*/ null,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\n/**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */\nexport function queryMatchesAllDocuments(query: Query): boolean {\n  return (\n    query.filters.length === 0 &&\n    query.limit === null &&\n    query.startAt == null &&\n    query.endAt == null &&\n    (query.explicitOrderBy.length === 0 ||\n      (query.explicitOrderBy.length === 1 &&\n        query.explicitOrderBy[0].field.isKeyField()))\n  );\n}\n\n// Returns the sorted set of inequality filter fields used in this query.\nexport function getInequalityFilterFields(query: Query): SortedSet<FieldPath> {\n  let result = new SortedSet<FieldPath>(FieldPath.comparator);\n  query.filters.forEach((filter: Filter) => {\n    const subFilters = filter.getFlattenedFilters();\n    subFilters.forEach((filter: FieldFilter) => {\n      if (filter.isInequality()) {\n        result = result.add(filter.field);\n      }\n    });\n  });\n  return result;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\nexport function newQueryForCollectionGroup(collectionId: string): Query {\n  return new QueryImpl(ResourcePath.emptyPath(), collectionId);\n}\n\n/**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\nexport function isDocumentQuery(query: Query): boolean {\n  return (\n    DocumentKey.isDocumentKey(query.path) &&\n    query.collectionGroup === null &&\n    query.filters.length === 0\n  );\n}\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nexport function isCollectionGroupQuery(query: Query): boolean {\n  return query.collectionGroup !== null;\n}\n\n/**\n * Returns the normalized order-by constraint that is used to execute the Query,\n * which can be different from the order-by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`). The normalized order-by\n * includes implicit order-bys in addition to the explicit user provided\n * order-bys.\n */\nexport function queryNormalizedOrderBy(query: Query): OrderBy[] {\n  const queryImpl = debugCast(query, QueryImpl);\n  if (queryImpl.memoizedNormalizedOrderBy === null) {\n    queryImpl.memoizedNormalizedOrderBy = [];\n    const fieldsNormalized = new Set<string>();\n\n    // Any explicit order by fields should be added as is.\n    for (const orderBy of queryImpl.explicitOrderBy) {\n      queryImpl.memoizedNormalizedOrderBy.push(orderBy);\n      fieldsNormalized.add(orderBy.field.canonicalString());\n    }\n\n    // The order of the implicit ordering always matches the last explicit order by.\n    const lastDirection =\n      queryImpl.explicitOrderBy.length > 0\n        ? queryImpl.explicitOrderBy[queryImpl.explicitOrderBy.length - 1].dir\n        : Direction.ASCENDING;\n\n    // Any inequality fields not explicitly ordered should be implicitly ordered in a lexicographical\n    // order. When there are multiple inequality filters on the same field, the field should be added\n    // only once.\n    // Note: `SortedSet<FieldPath>` sorts the key field before other fields. However, we want the key\n    // field to be sorted last.\n    const inequalityFields: SortedSet<FieldPath> =\n      getInequalityFilterFields(queryImpl);\n    inequalityFields.forEach(field => {\n      if (\n        !fieldsNormalized.has(field.canonicalString()) &&\n        !field.isKeyField()\n      ) {\n        queryImpl.memoizedNormalizedOrderBy!.push(\n          new OrderBy(field, lastDirection)\n        );\n      }\n    });\n\n    // Add the document key field to the last if it is not explicitly ordered.\n    if (!fieldsNormalized.has(FieldPath.keyField().canonicalString())) {\n      queryImpl.memoizedNormalizedOrderBy.push(\n        new OrderBy(FieldPath.keyField(), lastDirection)\n      );\n    }\n  }\n  return queryImpl.memoizedNormalizedOrderBy;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation.\n */\nexport function queryToTarget(query: Query): Target {\n  const queryImpl = debugCast(query, QueryImpl);\n  if (!queryImpl.memoizedTarget) {\n    queryImpl.memoizedTarget = _queryToTarget(\n      queryImpl,\n      queryNormalizedOrderBy(query)\n    );\n  }\n\n  return queryImpl.memoizedTarget;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation,\n * for use within an aggregate query. Unlike targets for non-aggregate queries,\n * aggregate query targets do not contain normalized order-bys, they only\n * contain explicit order-bys.\n */\nexport function queryToAggregateTarget(query: Query): Target {\n  const queryImpl = debugCast(query, QueryImpl);\n\n  if (!queryImpl.memoizedAggregateTarget) {\n    // Do not include implicit order-bys for aggregate queries.\n    queryImpl.memoizedAggregateTarget = _queryToTarget(\n      queryImpl,\n      query.explicitOrderBy\n    );\n  }\n\n  return queryImpl.memoizedAggregateTarget;\n}\n\nfunction _queryToTarget(queryImpl: QueryImpl, orderBys: OrderBy[]): Target {\n  if (queryImpl.limitType === LimitType.First) {\n    return newTarget(\n      queryImpl.path,\n      queryImpl.collectionGroup,\n      orderBys,\n      queryImpl.filters,\n      queryImpl.limit,\n      queryImpl.startAt,\n      queryImpl.endAt\n    );\n  } else {\n    // Flip the orderBy directions since we want the last results\n    orderBys = orderBys.map(orderBy => {\n      const dir =\n        orderBy.dir === Direction.DESCENDING\n          ? Direction.ASCENDING\n          : Direction.DESCENDING;\n      return new OrderBy(orderBy.field, dir);\n    });\n\n    // We need to swap the cursors to match the now-flipped query ordering.\n    const startAt = queryImpl.endAt\n      ? new Bound(queryImpl.endAt.position, queryImpl.endAt.inclusive)\n      : null;\n    const endAt = queryImpl.startAt\n      ? new Bound(queryImpl.startAt.position, queryImpl.startAt.inclusive)\n      : null;\n\n    // Now return as a LimitType.First query.\n    return newTarget(\n      queryImpl.path,\n      queryImpl.collectionGroup,\n      orderBys,\n      queryImpl.filters,\n      queryImpl.limit,\n      startAt,\n      endAt\n    );\n  }\n}\n\nexport function queryWithAddedFilter(query: Query, filter: Filter): Query {\n  debugAssert(\n    !isDocumentQuery(query),\n    'No filtering allowed for document query'\n  );\n\n  const newFilters = query.filters.concat([filter]);\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    newFilters,\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithAddedOrderBy(query: Query, orderBy: OrderBy): Query {\n  debugAssert(\n    !query.startAt && !query.endAt,\n    'Bounds must be set after orderBy'\n  );\n  // TODO(dimond): validate that orderBy does not list the same key twice.\n  const newOrderBy = query.explicitOrderBy.concat([orderBy]);\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    newOrderBy,\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithLimit(\n  query: Query,\n  limit: number | null,\n  limitType: LimitType\n): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    limit,\n    limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithStartAt(query: Query, bound: Bound): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    bound,\n    query.endAt\n  );\n}\n\nexport function queryWithEndAt(query: Query, bound: Bound): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    bound\n  );\n}\n\nexport function queryEquals(left: Query, right: Query): boolean {\n  return (\n    targetEquals(queryToTarget(left), queryToTarget(right)) &&\n    left.limitType === right.limitType\n  );\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nexport function canonifyQuery(query: Query): string {\n  return `${canonifyTarget(queryToTarget(query))}|lt:${query.limitType}`;\n}\n\nexport function stringifyQuery(query: Query): string {\n  return `Query(target=${stringifyTarget(queryToTarget(query))}; limitType=${\n    query.limitType\n  })`;\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */\nexport function queryMatches(query: Query, doc: Document): boolean {\n  return (\n    doc.isFoundDocument() &&\n    queryMatchesPathAndCollectionGroup(query, doc) &&\n    queryMatchesOrderBy(query, doc) &&\n    queryMatchesFilters(query, doc) &&\n    queryMatchesBounds(query, doc)\n  );\n}\n\nfunction queryMatchesPathAndCollectionGroup(\n  query: Query,\n  doc: Document\n): boolean {\n  const docPath = doc.key.path;\n  if (query.collectionGroup !== null) {\n    // NOTE: this.path is currently always empty since we don't expose Collection\n    // Group queries rooted at a document path yet.\n    return (\n      doc.key.hasCollectionId(query.collectionGroup) &&\n      query.path.isPrefixOf(docPath)\n    );\n  } else if (DocumentKey.isDocumentKey(query.path)) {\n    // exact match for document queries\n    return query.path.isEqual(docPath);\n  } else {\n    // shallow ancestor queries by default\n    return query.path.isImmediateParentOf(docPath);\n  }\n}\n\n/**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */\nfunction queryMatchesOrderBy(query: Query, doc: Document): boolean {\n  // We must use `queryNormalizedOrderBy()` to get the list of all orderBys (both implicit and explicit).\n  // Note that for OR queries, orderBy applies to all disjunction terms and implicit orderBys must\n  // be taken into account. For example, the query \"a > 1 || b==1\" has an implicit \"orderBy a\" due\n  // to the inequality, and is evaluated as \"a > 1 orderBy a || b==1 orderBy a\".\n  // A document with content of {b:1} matches the filters, but does not match the orderBy because\n  // it's missing the field 'a'.\n  for (const orderBy of queryNormalizedOrderBy(query)) {\n    // order-by key always matches\n    if (!orderBy.field.isKeyField() && doc.data.field(orderBy.field) === null) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction queryMatchesFilters(query: Query, doc: Document): boolean {\n  for (const filter of query.filters) {\n    if (!filter.matches(doc)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** Makes sure a document is within the bounds, if provided. */\nfunction queryMatchesBounds(query: Query, doc: Document): boolean {\n  if (\n    query.startAt &&\n    !boundSortsBeforeDocument(query.startAt, queryNormalizedOrderBy(query), doc)\n  ) {\n    return false;\n  }\n  if (\n    query.endAt &&\n    !boundSortsAfterDocument(query.endAt, queryNormalizedOrderBy(query), doc)\n  ) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns the collection group that this query targets.\n *\n * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab\n * synchronization for query results.\n */\nexport function queryCollectionGroup(query: Query): string {\n  return (\n    query.collectionGroup ||\n    (query.path.length % 2 === 1\n      ? query.path.lastSegment()\n      : query.path.get(query.path.length - 2))\n  );\n}\n\n/**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */\nexport function newQueryComparator(\n  query: Query\n): (d1: Document, d2: Document) => number {\n  return (d1: Document, d2: Document): number => {\n    let comparedOnKeyField = false;\n    for (const orderBy of queryNormalizedOrderBy(query)) {\n      const comp = compareDocs(orderBy, d1, d2);\n      if (comp !== 0) {\n        return comp;\n      }\n      comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n    }\n    // Assert that we actually compared by key\n    debugAssert(\n      comparedOnKeyField,\n      \"orderBy used that doesn't compare on key field\"\n    );\n    return 0;\n  };\n}\n\nexport function compareDocs(\n  orderBy: OrderBy,\n  d1: Document,\n  d2: Document\n): number {\n  const comparison = orderBy.field.isKeyField()\n    ? DocumentKey.comparator(d1.key, d2.key)\n    : compareDocumentsByField(orderBy.field, d1, d2);\n  switch (orderBy.dir) {\n    case Direction.ASCENDING:\n      return comparison;\n    case Direction.DESCENDING:\n      return -1 * comparison;\n    default:\n      return fail('Unknown direction: ' + orderBy.dir);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { forEach, isEmpty } from './obj';\n\ntype Entry<K, V> = [K, V];\n\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nexport class ObjectMap<KeyType, ValueType> {\n  /**\n   * The inner map for a key/value pair. Due to the possibility of collisions we\n   * keep a list of entries that we do a linear search through to find an actual\n   * match. Note that collisions should be rare, so we still expect near\n   * constant time lookups in practice.\n   */\n  private inner: {\n    [canonicalId: string]: Array<Entry<KeyType, ValueType>>;\n  } = {};\n\n  /** The number of entries stored in the map */\n  private innerSize = 0;\n\n  constructor(\n    private mapKeyFn: (key: KeyType) => string,\n    private equalsFn: (l: KeyType, r: KeyType) => boolean\n  ) {}\n\n  /** Get a value for this key, or undefined if it does not exist. */\n  get(key: KeyType): ValueType | undefined {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      return undefined;\n    }\n    for (const [otherKey, value] of matches) {\n      if (this.equalsFn(otherKey, key)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  has(key: KeyType): boolean {\n    return this.get(key) !== undefined;\n  }\n\n  /** Put this key and value in the map. */\n  set(key: KeyType, value: ValueType): void {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      this.inner[id] = [[key, value]];\n      this.innerSize++;\n      return;\n    }\n    for (let i = 0; i < matches.length; i++) {\n      if (this.equalsFn(matches[i][0], key)) {\n        // This is updating an existing entry and does not increase `innerSize`.\n        matches[i] = [key, value];\n        return;\n      }\n    }\n    matches.push([key, value]);\n    this.innerSize++;\n  }\n\n  /**\n   * Remove this key from the map. Returns a boolean if anything was deleted.\n   */\n  delete(key: KeyType): boolean {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      return false;\n    }\n    for (let i = 0; i < matches.length; i++) {\n      if (this.equalsFn(matches[i][0], key)) {\n        if (matches.length === 1) {\n          delete this.inner[id];\n        } else {\n          matches.splice(i, 1);\n        }\n        this.innerSize--;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  forEach(fn: (key: KeyType, val: ValueType) => void): void {\n    forEach(this.inner, (_, entries) => {\n      for (const [k, v] of entries) {\n        fn(k, v);\n      }\n    });\n  }\n\n  isEmpty(): boolean {\n    return isEmpty(this.inner);\n  }\n\n  size(): number {\n    return this.innerSize;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { OverlayedDocument } from '../local/overlayed_document';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MutableDocument } from './document';\nimport { DocumentKey } from './document_key';\nimport { Mutation } from './mutation';\nimport { Overlay } from './overlay';\n\n/** Miscellaneous collection types / constants. */\n\nexport type MutableDocumentMap = SortedMap<DocumentKey, MutableDocument>;\nconst EMPTY_MUTABLE_DOCUMENT_MAP = new SortedMap<DocumentKey, MutableDocument>(\n  DocumentKey.comparator\n);\nexport function mutableDocumentMap(): MutableDocumentMap {\n  return EMPTY_MUTABLE_DOCUMENT_MAP;\n}\n\nexport interface DocumentSizeEntries {\n  documents: MutableDocumentMap;\n  sizeMap: SortedMap<DocumentKey, number>;\n}\n\nexport type DocumentMap = SortedMap<DocumentKey, Document>;\nconst EMPTY_DOCUMENT_MAP = new SortedMap<DocumentKey, Document>(\n  DocumentKey.comparator\n);\nexport function documentMap(...docs: Document[]): DocumentMap {\n  let map = EMPTY_DOCUMENT_MAP;\n  for (const doc of docs) {\n    map = map.insert(doc.key, doc);\n  }\n  return map;\n}\n\nexport type OverlayedDocumentMap = DocumentKeyMap<OverlayedDocument>;\nexport function newOverlayedDocumentMap(): OverlayedDocumentMap {\n  return newDocumentKeyMap<OverlayedDocument>();\n}\n\nexport function convertOverlayedDocumentMapToDocumentMap(\n  collection: OverlayedDocumentMap\n): DocumentMap {\n  let documents = EMPTY_DOCUMENT_MAP;\n  collection.forEach(\n    (k, v) => (documents = documents.insert(k, v.overlayedDocument))\n  );\n  return documents;\n}\n\nexport type OverlayMap = DocumentKeyMap<Overlay>;\nexport function newOverlayMap(): OverlayMap {\n  return newDocumentKeyMap<Overlay>();\n}\n\nexport type MutationMap = DocumentKeyMap<Mutation>;\nexport function newMutationMap(): MutationMap {\n  return newDocumentKeyMap<Mutation>();\n}\n\nexport type DocumentKeyMap<T> = ObjectMap<DocumentKey, T>;\nexport function newDocumentKeyMap<T>(): DocumentKeyMap<T> {\n  return new ObjectMap<DocumentKey, T>(\n    key => key.toString(),\n    (l, r) => l.isEqual(r)\n  );\n}\n\nexport type DocumentVersionMap = SortedMap<DocumentKey, SnapshotVersion>;\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap<DocumentKey, SnapshotVersion>(\n  DocumentKey.comparator\n);\nexport function documentVersionMap(): DocumentVersionMap {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nexport type DocumentKeySet = SortedSet<DocumentKey>;\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet(...keys: DocumentKey[]): DocumentKeySet {\n  let set = EMPTY_DOCUMENT_KEY_SET;\n  for (const key of keys) {\n    set = set.add(key);\n  }\n  return set;\n}\n\nexport type TargetIdSet = SortedSet<TargetId>;\nconst EMPTY_TARGET_ID_SET = new SortedSet<TargetId>(primitiveComparator);\nexport function targetIdSet(): SortedSet<TargetId> {\n  return EMPTY_TARGET_ID_SET;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { isNegativeZero, isSafeInteger } from '../util/types';\n\n/** Base interface for the Serializer implementation. */\nexport interface Serializer {\n  readonly useProto3Json: boolean;\n}\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\nexport function toDouble(serializer: Serializer, value: number): ProtoValue {\n  if (serializer.useProto3Json) {\n    if (isNaN(value)) {\n      return { doubleValue: 'NaN' };\n    } else if (value === Infinity) {\n      return { doubleValue: 'Infinity' };\n    } else if (value === -Infinity) {\n      return { doubleValue: '-Infinity' };\n    }\n  }\n  return { doubleValue: isNegativeZero(value) ? '-0' : value };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */\nexport function toInteger(value: number): ProtoValue {\n  return { integerValue: '' + value };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nexport function toNumber(serializer: Serializer, value: number): ProtoValue {\n  return isSafeInteger(value) ? toInteger(value) : toDouble(serializer, value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { Serializer, toDouble, toInteger } from '../remote/number_serializer';\nimport { debugAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\n\nimport { normalizeNumber } from './normalize';\nimport { serverTimestamp } from './server_timestamps';\nimport { isArray, isInteger, isNumber, valueEquals } from './values';\n\n/** Used to represent a field transform on a mutation. */\nexport class TransformOperation {\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  private _ = undefined;\n}\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */\nexport function applyTransformOperationToLocalView(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null,\n  localWriteTime: Timestamp\n): ProtoValue {\n  if (transform instanceof ServerTimestampTransform) {\n    return serverTimestamp(localWriteTime, previousValue);\n  } else if (transform instanceof ArrayUnionTransformOperation) {\n    return applyArrayUnionTransformOperation(transform, previousValue);\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return applyArrayRemoveTransformOperation(transform, previousValue);\n  } else {\n    debugAssert(\n      transform instanceof NumericIncrementTransformOperation,\n      'Expected NumericIncrementTransformOperation but was: ' + transform\n    );\n    return applyNumericIncrementTransformOperationToLocalView(\n      transform,\n      previousValue\n    );\n  }\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */\nexport function applyTransformOperationToRemoteDocument(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null,\n  transformResult: ProtoValue | null\n): ProtoValue {\n  // The server just sends null as the transform result for array operations,\n  // so we have to calculate a result the same as we do for local\n  // applications.\n  if (transform instanceof ArrayUnionTransformOperation) {\n    return applyArrayUnionTransformOperation(transform, previousValue);\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return applyArrayRemoveTransformOperation(transform, previousValue);\n  }\n\n  debugAssert(\n    transformResult !== null,\n    \"Didn't receive transformResult for non-array transform\"\n  );\n  return transformResult;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */\nexport function computeTransformOperationBaseValue(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue | null {\n  if (transform instanceof NumericIncrementTransformOperation) {\n    return isNumber(previousValue) ? previousValue! : { integerValue: 0 };\n  }\n  return null;\n}\n\nexport function transformOperationEquals(\n  left: TransformOperation,\n  right: TransformOperation\n): boolean {\n  if (\n    left instanceof ArrayUnionTransformOperation &&\n    right instanceof ArrayUnionTransformOperation\n  ) {\n    return arrayEquals(left.elements, right.elements, valueEquals);\n  } else if (\n    left instanceof ArrayRemoveTransformOperation &&\n    right instanceof ArrayRemoveTransformOperation\n  ) {\n    return arrayEquals(left.elements, right.elements, valueEquals);\n  } else if (\n    left instanceof NumericIncrementTransformOperation &&\n    right instanceof NumericIncrementTransformOperation\n  ) {\n    return valueEquals(left.operand, right.operand);\n  }\n\n  return (\n    left instanceof ServerTimestampTransform &&\n    right instanceof ServerTimestampTransform\n  );\n}\n\n/** Transforms a value into a server-generated timestamp. */\nexport class ServerTimestampTransform extends TransformOperation {}\n\n/** Transforms an array value via a union operation. */\nexport class ArrayUnionTransformOperation extends TransformOperation {\n  constructor(readonly elements: ProtoValue[]) {\n    super();\n  }\n}\n\nfunction applyArrayUnionTransformOperation(\n  transform: ArrayUnionTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  const values = coercedFieldValuesArray(previousValue);\n  for (const toUnion of transform.elements) {\n    if (!values.some(element => valueEquals(element, toUnion))) {\n      values.push(toUnion);\n    }\n  }\n  return { arrayValue: { values } };\n}\n\n/** Transforms an array value via a remove operation. */\nexport class ArrayRemoveTransformOperation extends TransformOperation {\n  constructor(readonly elements: ProtoValue[]) {\n    super();\n  }\n}\n\nfunction applyArrayRemoveTransformOperation(\n  transform: ArrayRemoveTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  let values = coercedFieldValuesArray(previousValue);\n  for (const toRemove of transform.elements) {\n    values = values.filter(element => !valueEquals(element, toRemove));\n  }\n  return { arrayValue: { values } };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nexport class NumericIncrementTransformOperation extends TransformOperation {\n  constructor(readonly serializer: Serializer, readonly operand: ProtoValue) {\n    super();\n    debugAssert(\n      isNumber(operand),\n      'NumericIncrementTransform transform requires a NumberValue'\n    );\n  }\n}\n\nexport function applyNumericIncrementTransformOperationToLocalView(\n  transform: NumericIncrementTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n  // precision and resolves overflows by reducing precision, we do not\n  // manually cap overflows at 2^63.\n  const baseValue = computeTransformOperationBaseValue(\n    transform,\n    previousValue\n  )!;\n  const sum = asNumber(baseValue) + asNumber(transform.operand);\n  if (isInteger(baseValue) && isInteger(transform.operand)) {\n    return toInteger(sum);\n  } else {\n    return toDouble(transform.serializer, sum);\n  }\n}\n\nfunction asNumber(value: ProtoValue): number {\n  return normalizeNumber(value.integerValue || value.doubleValue);\n}\n\nfunction coercedFieldValuesArray(value: ProtoValue | null): ProtoValue[] {\n  return isArray(value) && value.arrayValue.values\n    ? value.arrayValue.values.slice()\n    : [];\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MutableDocument } from './document';\nimport { DocumentKey } from './document_key';\nimport { FieldMask } from './field_mask';\nimport { ObjectValue } from './object_value';\nimport { FieldPath } from './path';\nimport {\n  applyTransformOperationToLocalView,\n  applyTransformOperationToRemoteDocument,\n  computeTransformOperationBaseValue,\n  TransformOperation,\n  transformOperationEquals\n} from './transform_operation';\n\n/** A field path and the TransformOperation to perform upon it. */\nexport class FieldTransform {\n  constructor(\n    readonly field: FieldPath,\n    readonly transform: TransformOperation\n  ) {}\n}\n\nexport function fieldTransformEquals(\n  left: FieldTransform,\n  right: FieldTransform\n): boolean {\n  return (\n    left.field.isEqual(right.field) &&\n    transformOperationEquals(left.transform, right.transform)\n  );\n}\n\nexport function fieldTransformsAreEqual(\n  left?: FieldTransform[],\n  right?: FieldTransform[]\n): boolean {\n  if (left === undefined && right === undefined) {\n    return true;\n  }\n\n  if (left && right) {\n    return arrayEquals(left, right, (l, r) => fieldTransformEquals(l, r));\n  }\n\n  return false;\n}\n\n/** The result of successfully applying a mutation to the backend. */\nexport class MutationResult {\n  constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    readonly version: SnapshotVersion,\n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    readonly transformResults: Array<ProtoValue | null>\n  ) {}\n}\n\nexport const enum MutationType {\n  Set,\n  Patch,\n  Delete,\n  Verify\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nexport class Precondition {\n  private constructor(\n    readonly updateTime?: SnapshotVersion,\n    readonly exists?: boolean\n  ) {\n    debugAssert(\n      updateTime === undefined || exists === undefined,\n      'Precondition can specify \"exists\" or \"updateTime\" but not both'\n    );\n  }\n\n  /** Creates a new empty Precondition. */\n  static none(): Precondition {\n    return new Precondition();\n  }\n\n  /** Creates a new Precondition with an exists flag. */\n  static exists(exists: boolean): Precondition {\n    return new Precondition(undefined, exists);\n  }\n\n  /** Creates a new Precondition based on a version a document exists at. */\n  static updateTime(version: SnapshotVersion): Precondition {\n    return new Precondition(version);\n  }\n\n  /** Returns whether this Precondition is empty. */\n  get isNone(): boolean {\n    return this.updateTime === undefined && this.exists === undefined;\n  }\n\n  isEqual(other: Precondition): boolean {\n    return (\n      this.exists === other.exists &&\n      (this.updateTime\n        ? !!other.updateTime && this.updateTime.isEqual(other.updateTime)\n        : !other.updateTime)\n    );\n  }\n}\n\n/** Returns true if the preconditions is valid for the given document. */\nexport function preconditionIsValidForDocument(\n  precondition: Precondition,\n  document: MutableDocument\n): boolean {\n  if (precondition.updateTime !== undefined) {\n    return (\n      document.isFoundDocument() &&\n      document.version.isEqual(precondition.updateTime)\n    );\n  } else if (precondition.exists !== undefined) {\n    return precondition.exists === document.isFoundDocument();\n  } else {\n    debugAssert(precondition.isNone, 'Precondition should be empty');\n    return true;\n  }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nexport abstract class Mutation {\n  abstract readonly type: MutationType;\n  abstract readonly key: DocumentKey;\n  abstract readonly precondition: Precondition;\n  abstract readonly fieldTransforms: FieldTransform[];\n  /**\n   * Returns a `FieldMask` representing the fields that will be changed by\n   * applying this mutation. Returns `null` if the mutation will overwrite the\n   * entire document.\n   */\n  abstract getFieldMask(): FieldMask | null;\n}\n\n/**\n * A utility method to calculate a `Mutation` representing the overlay from the\n * final state of the document, and a `FieldMask` representing the fields that\n * are mutated by the local mutations.\n */\nexport function calculateOverlayMutation(\n  doc: MutableDocument,\n  mask: FieldMask | null\n): Mutation | null {\n  if (!doc.hasLocalMutations || (mask && mask!.fields.length === 0)) {\n    return null;\n  }\n\n  // mask is null when sets or deletes are applied to the current document.\n  if (mask === null) {\n    if (doc.isNoDocument()) {\n      return new DeleteMutation(doc.key, Precondition.none());\n    } else {\n      return new SetMutation(doc.key, doc.data, Precondition.none());\n    }\n  } else {\n    const docValue = doc.data;\n    const patchValue = ObjectValue.empty();\n    let maskSet = new SortedSet<FieldPath>(FieldPath.comparator);\n    for (let path of mask.fields) {\n      if (!maskSet.has(path)) {\n        let value = docValue.field(path);\n        // If we are deleting a nested field, we take the immediate parent as\n        // the mask used to construct the resulting mutation.\n        // Justification: Nested fields can create parent fields implicitly. If\n        // only a leaf entry is deleted in later mutations, the parent field\n        // should still remain, but we may have lost this information.\n        // Consider mutation (foo.bar 1), then mutation (foo.bar delete()).\n        // This leaves the final result (foo, {}). Despite the fact that `doc`\n        // has the correct result, `foo` is not in `mask`, and the resulting\n        // mutation would miss `foo`.\n        if (value === null && path.length > 1) {\n          path = path.popLast();\n          value = docValue.field(path);\n        }\n        if (value === null) {\n          patchValue.delete(path);\n        } else {\n          patchValue.set(path, value);\n        }\n        maskSet = maskSet.add(path);\n      }\n    }\n    return new PatchMutation(\n      doc.key,\n      patchValue,\n      new FieldMask(maskSet.toArray()),\n      Precondition.none()\n    );\n  }\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */\nexport function mutationApplyToRemoteDocument(\n  mutation: Mutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  mutationVerifyKeyMatches(mutation, document);\n  if (mutation instanceof SetMutation) {\n    setMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  } else if (mutation instanceof PatchMutation) {\n    patchMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  } else {\n    debugAssert(\n      mutation instanceof DeleteMutation,\n      'Unexpected mutation type: ' + mutation\n    );\n    deleteMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  }\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param previousMask - The fields that have been updated before applying this mutation.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n * @returns A `FieldMask` representing the fields that are changed by applying this mutation.\n */\nexport function mutationApplyToLocalView(\n  mutation: Mutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  mutationVerifyKeyMatches(mutation, document);\n\n  if (mutation instanceof SetMutation) {\n    return setMutationApplyToLocalView(\n      mutation,\n      document,\n      previousMask,\n      localWriteTime\n    );\n  } else if (mutation instanceof PatchMutation) {\n    return patchMutationApplyToLocalView(\n      mutation,\n      document,\n      previousMask,\n      localWriteTime\n    );\n  } else {\n    debugAssert(\n      mutation instanceof DeleteMutation,\n      'Unexpected mutation type: ' + mutation\n    );\n    return deleteMutationApplyToLocalView(mutation, document, previousMask);\n  }\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */\nexport function mutationExtractBaseValue(\n  mutation: Mutation,\n  document: Document\n): ObjectValue | null {\n  let baseObject: ObjectValue | null = null;\n  for (const fieldTransform of mutation.fieldTransforms) {\n    const existingValue = document.data.field(fieldTransform.field);\n    const coercedValue = computeTransformOperationBaseValue(\n      fieldTransform.transform,\n      existingValue || null\n    );\n\n    if (coercedValue != null) {\n      if (baseObject === null) {\n        baseObject = ObjectValue.empty();\n      }\n      baseObject.set(fieldTransform.field, coercedValue);\n    }\n  }\n  return baseObject ? baseObject : null;\n}\n\nexport function mutationEquals(left: Mutation, right: Mutation): boolean {\n  if (left.type !== right.type) {\n    return false;\n  }\n\n  if (!left.key.isEqual(right.key)) {\n    return false;\n  }\n\n  if (!left.precondition.isEqual(right.precondition)) {\n    return false;\n  }\n\n  if (!fieldTransformsAreEqual(left.fieldTransforms, right.fieldTransforms)) {\n    return false;\n  }\n\n  if (left.type === MutationType.Set) {\n    return (left as SetMutation).value.isEqual((right as SetMutation).value);\n  }\n\n  if (left.type === MutationType.Patch) {\n    return (\n      (left as PatchMutation).data.isEqual((right as PatchMutation).data) &&\n      (left as PatchMutation).fieldMask.isEqual(\n        (right as PatchMutation).fieldMask\n      )\n    );\n  }\n\n  return true;\n}\n\nfunction mutationVerifyKeyMatches(\n  mutation: Mutation,\n  document: MutableDocument\n): void {\n  debugAssert(\n    document.key.isEqual(mutation.key),\n    'Can only apply a mutation to a document with the same key'\n  );\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nexport class SetMutation extends Mutation {\n  constructor(\n    readonly key: DocumentKey,\n    readonly value: ObjectValue,\n    readonly precondition: Precondition,\n    readonly fieldTransforms: FieldTransform[] = []\n  ) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Set;\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n\nfunction setMutationApplyToRemoteDocument(\n  mutation: SetMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n  // remote document the server has accepted the mutation so the precondition\n  // must have held.\n  const newData = mutation.value.clone();\n  const transformResults = serverTransformResults(\n    mutation.fieldTransforms,\n    document,\n    mutationResult.transformResults\n  );\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(mutationResult.version, newData)\n    .setHasCommittedMutations();\n}\n\nfunction setMutationApplyToLocalView(\n  mutation: SetMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    // The mutation failed to apply (e.g. a document ID created with add()\n    // caused a name collision).\n    return previousMask;\n  }\n\n  const newData = mutation.value.clone();\n  const transformResults = localTransformResults(\n    mutation.fieldTransforms,\n    localWriteTime,\n    document\n  );\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(document.version, newData)\n    .setHasLocalMutations();\n  return null; // SetMutation overwrites all fields.\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nexport class PatchMutation extends Mutation {\n  constructor(\n    readonly key: DocumentKey,\n    readonly data: ObjectValue,\n    readonly fieldMask: FieldMask,\n    readonly precondition: Precondition,\n    readonly fieldTransforms: FieldTransform[] = []\n  ) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Patch;\n\n  getFieldMask(): FieldMask | null {\n    return this.fieldMask;\n  }\n}\n\nfunction patchMutationApplyToRemoteDocument(\n  mutation: PatchMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    // Since the mutation was not rejected, we know that the precondition\n    // matched on the backend. We therefore must not have the expected version\n    // of the document in our cache and convert to an UnknownDocument with a\n    // known updateTime.\n    document.convertToUnknownDocument(mutationResult.version);\n    return;\n  }\n\n  const transformResults = serverTransformResults(\n    mutation.fieldTransforms,\n    document,\n    mutationResult.transformResults\n  );\n  const newData = document.data;\n  newData.setAll(getPatch(mutation));\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(mutationResult.version, newData)\n    .setHasCommittedMutations();\n}\n\nfunction patchMutationApplyToLocalView(\n  mutation: PatchMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    return previousMask;\n  }\n\n  const transformResults = localTransformResults(\n    mutation.fieldTransforms,\n    localWriteTime,\n    document\n  );\n  const newData = document.data;\n  newData.setAll(getPatch(mutation));\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(document.version, newData)\n    .setHasLocalMutations();\n\n  if (previousMask === null) {\n    return null;\n  }\n\n  return previousMask\n    .unionWith(mutation.fieldMask.fields)\n    .unionWith(mutation.fieldTransforms.map(transform => transform.field));\n}\n\n/**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */\nfunction getPatch(mutation: PatchMutation): Map<FieldPath, ProtoValue | null> {\n  const result = new Map<FieldPath, ProtoValue | null>();\n  mutation.fieldMask.fields.forEach(fieldPath => {\n    if (!fieldPath.isEmpty()) {\n      const newValue = mutation.data.field(fieldPath);\n      result.set(fieldPath, newValue);\n    }\n  });\n  return result;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */\nfunction serverTransformResults(\n  fieldTransforms: FieldTransform[],\n  mutableDocument: MutableDocument,\n  serverTransformResults: Array<ProtoValue | null>\n): Map<FieldPath, ProtoValue> {\n  const transformResults = new Map<FieldPath, ProtoValue>();\n  hardAssert(\n    fieldTransforms.length === serverTransformResults.length,\n    `server transform result count (${serverTransformResults.length}) ` +\n      `should match field transform count (${fieldTransforms.length})`\n  );\n\n  for (let i = 0; i < serverTransformResults.length; i++) {\n    const fieldTransform = fieldTransforms[i];\n    const transform = fieldTransform.transform;\n    const previousValue = mutableDocument.data.field(fieldTransform.field);\n    transformResults.set(\n      fieldTransform.field,\n      applyTransformOperationToRemoteDocument(\n        transform,\n        previousValue,\n        serverTransformResults[i]\n      )\n    );\n  }\n  return transformResults;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The document to apply transforms on.\n * @returns The transform results list.\n */\nfunction localTransformResults(\n  fieldTransforms: FieldTransform[],\n  localWriteTime: Timestamp,\n  mutableDocument: MutableDocument\n): Map<FieldPath, ProtoValue> {\n  const transformResults = new Map<FieldPath, ProtoValue>();\n  for (const fieldTransform of fieldTransforms) {\n    const transform = fieldTransform.transform;\n\n    const previousValue = mutableDocument.data.field(fieldTransform.field);\n    transformResults.set(\n      fieldTransform.field,\n      applyTransformOperationToLocalView(\n        transform,\n        previousValue,\n        localWriteTime\n      )\n    );\n  }\n  return transformResults;\n}\n\n/** A mutation that deletes the document at the given key. */\nexport class DeleteMutation extends Mutation {\n  constructor(readonly key: DocumentKey, readonly precondition: Precondition) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Delete;\n  readonly fieldTransforms: FieldTransform[] = [];\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n\nfunction deleteMutationApplyToRemoteDocument(\n  mutation: DeleteMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  debugAssert(\n    mutationResult.transformResults.length === 0,\n    'Transform results received by DeleteMutation.'\n  );\n\n  // Unlike applyToLocalView, if we're applying a mutation to a remote\n  // document the server has accepted the mutation so the precondition must\n  // have held.\n  document\n    .convertToNoDocument(mutationResult.version)\n    .setHasCommittedMutations();\n}\n\nfunction deleteMutationApplyToLocalView(\n  mutation: DeleteMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null\n): FieldMask | null {\n  debugAssert(\n    document.key.isEqual(mutation.key),\n    'Can only apply mutation to document with same key'\n  );\n  if (preconditionIsValidForDocument(mutation.precondition, document)) {\n    document.convertToNoDocument(document.version).setHasLocalMutations();\n    return null;\n  }\n  return previousMask;\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nexport class VerifyMutation extends Mutation {\n  constructor(readonly key: DocumentKey, readonly precondition: Precondition) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Verify;\n  readonly fieldTransforms: FieldTransform[] = [];\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { BatchId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\n\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  MutationMap,\n  DocumentVersionMap,\n  documentVersionMap,\n  newMutationMap,\n  OverlayedDocumentMap\n} from './collections';\nimport { MutableDocument } from './document';\nimport { FieldMask } from './field_mask';\nimport {\n  calculateOverlayMutation,\n  Mutation,\n  mutationApplyToLocalView,\n  mutationApplyToRemoteDocument,\n  mutationEquals,\n  MutationResult\n} from './mutation';\n\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\nexport class MutationBatch {\n  /**\n   * @param batchId - The unique ID of this mutation batch.\n   * @param localWriteTime - The original write time of this mutation.\n   * @param baseMutations - Mutations that are used to populate the base\n   * values when this mutation is applied locally. This can be used to locally\n   * overwrite values that are persisted in the remote document cache. Base\n   * mutations are never sent to the backend.\n   * @param mutations - The user-provided mutations in this mutation batch.\n   * User-provided mutations are applied both locally and remotely on the\n   * backend.\n   */\n  constructor(\n    public batchId: BatchId,\n    public localWriteTime: Timestamp,\n    public baseMutations: Mutation[],\n    public mutations: Mutation[]\n  ) {\n    debugAssert(mutations.length > 0, 'Cannot create an empty mutation batch');\n  }\n\n  /**\n   * Applies all the mutations in this MutationBatch to the specified document\n   * to compute the state of the remote document\n   *\n   * @param document - The document to apply mutations to.\n   * @param batchResult - The result of applying the MutationBatch to the\n   * backend.\n   */\n  applyToRemoteDocument(\n    document: MutableDocument,\n    batchResult: MutationBatchResult\n  ): void {\n    const mutationResults = batchResult.mutationResults;\n    debugAssert(\n      mutationResults.length === this.mutations.length,\n      `Mismatch between mutations length\n      (${this.mutations.length}) and mutation results length\n      (${mutationResults.length}).`\n    );\n\n    for (let i = 0; i < this.mutations.length; i++) {\n      const mutation = this.mutations[i];\n      if (mutation.key.isEqual(document.key)) {\n        const mutationResult = mutationResults[i];\n        mutationApplyToRemoteDocument(mutation, document, mutationResult);\n      }\n    }\n  }\n\n  /**\n   * Computes the local view of a document given all the mutations in this\n   * batch.\n   *\n   * @param document - The document to apply mutations to.\n   * @param mutatedFields - Fields that have been updated before applying this mutation batch.\n   * @returns A `FieldMask` representing all the fields that are mutated.\n   */\n  applyToLocalView(\n    document: MutableDocument,\n    mutatedFields: FieldMask | null\n  ): FieldMask | null {\n    // First, apply the base state. This allows us to apply non-idempotent\n    // transform against a consistent set of values.\n    for (const mutation of this.baseMutations) {\n      if (mutation.key.isEqual(document.key)) {\n        mutatedFields = mutationApplyToLocalView(\n          mutation,\n          document,\n          mutatedFields,\n          this.localWriteTime\n        );\n      }\n    }\n\n    // Second, apply all user-provided mutations.\n    for (const mutation of this.mutations) {\n      if (mutation.key.isEqual(document.key)) {\n        mutatedFields = mutationApplyToLocalView(\n          mutation,\n          document,\n          mutatedFields,\n          this.localWriteTime\n        );\n      }\n    }\n    return mutatedFields;\n  }\n\n  /**\n   * Computes the local view for all provided documents given the mutations in\n   * this batch. Returns a `DocumentKey` to `Mutation` map which can be used to\n   * replace all the mutation applications.\n   */\n  applyToLocalDocumentSet(\n    documentMap: OverlayedDocumentMap,\n    documentsWithoutRemoteVersion: DocumentKeySet\n  ): MutationMap {\n    // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n    // directly (as done in `applyToLocalView()`), we can reduce the complexity\n    // to O(n).\n    const overlays = newMutationMap();\n    this.mutations.forEach(m => {\n      const overlayedDocument = documentMap.get(m.key)!;\n      // TODO(mutabledocuments): This method should take a MutableDocumentMap\n      // and we should remove this cast.\n      const mutableDocument =\n        overlayedDocument.overlayedDocument as MutableDocument;\n      let mutatedFields = this.applyToLocalView(\n        mutableDocument,\n        overlayedDocument.mutatedFields\n      );\n      // Set mutatedFields to null if the document is only from local mutations.\n      // This creates a Set or Delete mutation, instead of trying to create a\n      // patch mutation as the overlay.\n      mutatedFields = documentsWithoutRemoteVersion.has(m.key)\n        ? null\n        : mutatedFields;\n      const overlay = calculateOverlayMutation(mutableDocument, mutatedFields);\n      if (overlay !== null) {\n        overlays.set(m.key, overlay);\n      }\n\n      if (!mutableDocument.isValidDocument()) {\n        mutableDocument.convertToNoDocument(SnapshotVersion.min());\n      }\n    });\n    return overlays;\n  }\n\n  keys(): DocumentKeySet {\n    return this.mutations.reduce(\n      (keys, m) => keys.add(m.key),\n      documentKeySet()\n    );\n  }\n\n  isEqual(other: MutationBatch): boolean {\n    return (\n      this.batchId === other.batchId &&\n      arrayEquals(this.mutations, other.mutations, (l, r) =>\n        mutationEquals(l, r)\n      ) &&\n      arrayEquals(this.baseMutations, other.baseMutations, (l, r) =>\n        mutationEquals(l, r)\n      )\n    );\n  }\n}\n\n/** The result of applying a mutation batch to the backend. */\nexport class MutationBatchResult {\n  private constructor(\n    readonly batch: MutationBatch,\n    readonly commitVersion: SnapshotVersion,\n    readonly mutationResults: MutationResult[],\n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    readonly docVersions: DocumentVersionMap\n  ) {}\n\n  /**\n   * Creates a new MutationBatchResult for the given batch and results. There\n   * must be one result for each mutation in the batch. This static factory\n   * caches a document=&gt;version mapping (docVersions).\n   */\n  static from(\n    batch: MutationBatch,\n    commitVersion: SnapshotVersion,\n    results: MutationResult[]\n  ): MutationBatchResult {\n    hardAssert(\n      batch.mutations.length === results.length,\n      'Mutations sent ' +\n        batch.mutations.length +\n        ' must equal results received ' +\n        results.length\n    );\n\n    let versionMap = documentVersionMap();\n    const mutations = batch.mutations;\n    for (let i = 0; i < mutations.length; i++) {\n      versionMap = versionMap.insert(mutations[i].key, results[i].version);\n    }\n\n    return new MutationBatchResult(batch, commitVersion, results, versionMap);\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from './document_key';\nimport { Mutation } from './mutation';\n\n/**\n * Representation of an overlay computed by Firestore.\n *\n * Holds information about a mutation and the largest batch id in Firestore when\n * the mutation was created.\n */\nexport class Overlay {\n  constructor(readonly largestBatchId: number, readonly mutation: Mutation) {}\n\n  getKey(): DocumentKey {\n    return this.mutation.key;\n  }\n\n  isEqual(other: Overlay | null): boolean {\n    return other !== null && this.mutation === other.mutation;\n  }\n\n  toString(): string {\n    return `Overlay{\n      largestBatchId: ${this.largestBatchId},\n      mutation: ${this.mutation.toString()}\n    }`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BloomFilter as ProtoBloomFilter } from '../protos/firestore_proto_api';\n\nexport class ExistenceFilter {\n  constructor(public count: number, public unchangedNames?: ProtoBloomFilter) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from '../util/assert';\nimport { Code } from '../util/error';\nimport { logError } from '../util/log';\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nenum RpcCode {\n  OK = 0,\n  CANCELLED = 1,\n  UNKNOWN = 2,\n  INVALID_ARGUMENT = 3,\n  DEADLINE_EXCEEDED = 4,\n  NOT_FOUND = 5,\n  ALREADY_EXISTS = 6,\n  PERMISSION_DENIED = 7,\n  UNAUTHENTICATED = 16,\n  RESOURCE_EXHAUSTED = 8,\n  FAILED_PRECONDITION = 9,\n  ABORTED = 10,\n  OUT_OF_RANGE = 11,\n  UNIMPLEMENTED = 12,\n  INTERNAL = 13,\n  UNAVAILABLE = 14,\n  DATA_LOSS = 15\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nexport function isPermanentError(code: Code): boolean {\n  switch (code) {\n    case Code.OK:\n      return fail('Treated status OK as error');\n    case Code.CANCELLED:\n    case Code.UNKNOWN:\n    case Code.DEADLINE_EXCEEDED:\n    case Code.RESOURCE_EXHAUSTED:\n    case Code.INTERNAL:\n    case Code.UNAVAILABLE:\n    // Unauthenticated means something went wrong with our token and we need\n    // to retry with new credentials which will happen automatically.\n    case Code.UNAUTHENTICATED:\n      return false;\n    case Code.INVALID_ARGUMENT:\n    case Code.NOT_FOUND:\n    case Code.ALREADY_EXISTS:\n    case Code.PERMISSION_DENIED:\n    case Code.FAILED_PRECONDITION:\n    // Aborted might be retried in some scenarios, but that is dependant on\n    // the context and should handled individually by the calling code.\n    // See https://cloud.google.com/apis/design/errors.\n    case Code.ABORTED:\n    case Code.OUT_OF_RANGE:\n    case Code.UNIMPLEMENTED:\n    case Code.DATA_LOSS:\n      return true;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\nexport function isPermanentWriteError(code: Code): boolean {\n  return isPermanentError(code) && code !== Code.ABORTED;\n}\n\n/**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\nexport function mapCodeFromRpcStatus(status: string): Code | undefined {\n  // lookup by string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const code: RpcCode = RpcCode[status as any] as any;\n  if (code === undefined) {\n    return undefined;\n  }\n\n  return mapCodeFromRpcCode(code);\n}\n\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nexport function mapCodeFromRpcCode(code: number | undefined): Code {\n  if (code === undefined) {\n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    logError('GRPC error has no .code');\n    return Code.UNKNOWN;\n  }\n\n  switch (code) {\n    case RpcCode.OK:\n      return Code.OK;\n    case RpcCode.CANCELLED:\n      return Code.CANCELLED;\n    case RpcCode.UNKNOWN:\n      return Code.UNKNOWN;\n    case RpcCode.DEADLINE_EXCEEDED:\n      return Code.DEADLINE_EXCEEDED;\n    case RpcCode.RESOURCE_EXHAUSTED:\n      return Code.RESOURCE_EXHAUSTED;\n    case RpcCode.INTERNAL:\n      return Code.INTERNAL;\n    case RpcCode.UNAVAILABLE:\n      return Code.UNAVAILABLE;\n    case RpcCode.UNAUTHENTICATED:\n      return Code.UNAUTHENTICATED;\n    case RpcCode.INVALID_ARGUMENT:\n      return Code.INVALID_ARGUMENT;\n    case RpcCode.NOT_FOUND:\n      return Code.NOT_FOUND;\n    case RpcCode.ALREADY_EXISTS:\n      return Code.ALREADY_EXISTS;\n    case RpcCode.PERMISSION_DENIED:\n      return Code.PERMISSION_DENIED;\n    case RpcCode.FAILED_PRECONDITION:\n      return Code.FAILED_PRECONDITION;\n    case RpcCode.ABORTED:\n      return Code.ABORTED;\n    case RpcCode.OUT_OF_RANGE:\n      return Code.OUT_OF_RANGE;\n    case RpcCode.UNIMPLEMENTED:\n      return Code.UNIMPLEMENTED;\n    case RpcCode.DATA_LOSS:\n      return Code.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Maps an RPC code from a Code. This is the reverse operation from\n * mapCodeFromRpcCode and should really only be used in tests.\n */\nexport function mapRpcCodeFromCode(code: Code | undefined): number {\n  if (code === undefined) {\n    return RpcCode.OK;\n  }\n\n  switch (code) {\n    case Code.OK:\n      return RpcCode.OK;\n    case Code.CANCELLED:\n      return RpcCode.CANCELLED;\n    case Code.UNKNOWN:\n      return RpcCode.UNKNOWN;\n    case Code.DEADLINE_EXCEEDED:\n      return RpcCode.DEADLINE_EXCEEDED;\n    case Code.RESOURCE_EXHAUSTED:\n      return RpcCode.RESOURCE_EXHAUSTED;\n    case Code.INTERNAL:\n      return RpcCode.INTERNAL;\n    case Code.UNAVAILABLE:\n      return RpcCode.UNAVAILABLE;\n    case Code.UNAUTHENTICATED:\n      return RpcCode.UNAUTHENTICATED;\n    case Code.INVALID_ARGUMENT:\n      return RpcCode.INVALID_ARGUMENT;\n    case Code.NOT_FOUND:\n      return RpcCode.NOT_FOUND;\n    case Code.ALREADY_EXISTS:\n      return RpcCode.ALREADY_EXISTS;\n    case Code.PERMISSION_DENIED:\n      return RpcCode.PERMISSION_DENIED;\n    case Code.FAILED_PRECONDITION:\n      return RpcCode.FAILED_PRECONDITION;\n    case Code.ABORTED:\n      return RpcCode.ABORTED;\n    case Code.OUT_OF_RANGE:\n      return RpcCode.OUT_OF_RANGE;\n    case Code.UNIMPLEMENTED:\n      return RpcCode.UNIMPLEMENTED;\n    case Code.DATA_LOSS:\n      return RpcCode.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpStatus(status?: number): Code {\n  if (status === undefined) {\n    logError('RPC_ERROR', 'HTTP error has no status');\n    return Code.UNKNOWN;\n  }\n\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  //\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (status) {\n    case 200: // OK\n      return Code.OK;\n\n    case 400: // Bad Request\n      return Code.FAILED_PRECONDITION;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401: // Unauthorized\n      return Code.UNAUTHENTICATED;\n\n    case 403: // Forbidden\n      return Code.PERMISSION_DENIED;\n\n    case 404: // Not Found\n      return Code.NOT_FOUND;\n\n    case 409: // Conflict\n      return Code.ABORTED;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416: // Range Not Satisfiable\n      return Code.OUT_OF_RANGE;\n\n    case 429: // Too Many Requests\n      return Code.RESOURCE_EXHAUSTED;\n\n    case 499: // Client Closed Request\n      return Code.CANCELLED;\n\n    case 500: // Internal Server Error\n      return Code.UNKNOWN;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501: // Unimplemented\n      return Code.UNIMPLEMENTED;\n\n    case 503: // Service Unavailable\n      return Code.UNAVAILABLE;\n\n    case 504: // Gateway Timeout\n      return Code.DEADLINE_EXCEEDED;\n\n    default:\n      if (status >= 200 && status < 300) {\n        return Code.OK;\n      }\n      if (status >= 400 && status < 500) {\n        return Code.FAILED_PRECONDITION;\n      }\n      if (status >= 500 && status < 600) {\n        return Code.INTERNAL;\n      }\n      return Code.UNKNOWN;\n  }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpResponseErrorStatus(status: string): Code {\n  const serverError = status.toLowerCase().replace(/_/g, '-');\n  return Object.values(Code).indexOf(serverError as Code) >= 0\n    ? (serverError as Code)\n    : Code.UNKNOWN;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The global, singleton instance of TestingHooksSpi.\n *\n * This variable will be `null` in all cases _except_ when running from\n * integration tests that have registered callbacks to be notified of events\n * that happen during the test execution.\n */\nexport let testingHooksSpi: TestingHooksSpi | null = null;\n\n/**\n * Sets the value of the `testingHooksSpi` object.\n * @param instance the instance to set.\n */\nexport function setTestingHooksSpi(instance: TestingHooksSpi): void {\n  if (testingHooksSpi) {\n    throw new Error('a TestingHooksSpi instance is already set');\n  }\n  testingHooksSpi = instance;\n}\n\n/**\n * The \"service provider interface\" for the testing hooks.\n *\n * The implementation of this object will handle the callbacks made by the SDK\n * to be handled by the integration tests.\n *\n * This \"SPI\" is separated from the implementation to avoid import cycles and\n * to enable production builds to fully tree-shake away the testing hooks logic.\n */\nexport interface TestingHooksSpi {\n  /**\n   * Invokes all callbacks registered with\n   * `TestingHooks.onExistenceFilterMismatch()` with the given info.\n   */\n  notifyOnExistenceFilterMismatch(info: ExistenceFilterMismatchInfo): void;\n}\n\n/**\n * Information about an existence filter mismatch.\n * @internal\n */\nexport interface ExistenceFilterMismatchInfo {\n  /** The number of documents that matched the query in the local cache. */\n  localCacheCount: number;\n\n  /**\n   * The number of documents that matched the query on the server, as specified\n   * in the ExistenceFilter message's `count` field.\n   */\n  existenceFilterCount: number;\n\n  /**\n   * The projectId used when checking documents for membership in the bloom\n   * filter.\n   */\n  projectId: string;\n\n  /**\n   * The databaseId used when checking documents for membership in the bloom\n   * filter.\n   */\n  databaseId: string;\n\n  /**\n   * Information about the bloom filter provided by Watch in the ExistenceFilter\n   * message's `unchangedNames` field. If this property is omitted or undefined\n   * then that means that Watch did _not_ provide a bloom filter.\n   */\n  bloomFilter?: {\n    /**\n     * Whether a full requery was averted by using the bloom filter. If false,\n     * then something happened, such as a false positive, to prevent using the\n     * bloom filter to avoid a full requery.\n     */\n    applied: boolean;\n\n    /** The number of hash functions used in the bloom filter. */\n    hashCount: number;\n\n    /** The number of bytes in the bloom filter's bitmask. */\n    bitmapLength: number;\n\n    /** The number of bits of padding in the last byte of the bloom filter. */\n    padding: number;\n\n    /**\n     * Tests the given string for membership in the bloom filter created from\n     * the existence filter; will be undefined if creating the bloom filter\n     * failed.\n     */\n    mightContain?: (value: string) => boolean;\n  };\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\nexport function newTextEncoder(): TextEncoder {\n  return new TextEncoder();\n}\n\n/**\n * An instance of the Platform's 'TextDecoder' implementation.\n */\nexport function newTextDecoder(): TextDecoder {\n  return new TextDecoder('utf-8');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Md5, Integer } from '@firebase/webchannel-wrapper';\n\nimport { newTextEncoder } from '../platform/text_serializer';\n\nconst MAX_64_BIT_UNSIGNED_INTEGER = new Integer([0xffffffff, 0xffffffff], 0);\n\n// Hash a string using md5 hashing algorithm.\nfunction getMd5HashValue(value: string): Uint8Array {\n  const encodedValue = newTextEncoder().encode(value);\n  const md5 = new Md5();\n  md5.update(encodedValue);\n  return new Uint8Array(md5.digest());\n}\n\n// Interpret the 16 bytes array as two 64-bit unsigned integers, encoded using\n// 2’s complement using little endian.\nfunction get64BitUints(Bytes: Uint8Array): [Integer, Integer] {\n  const dataView = new DataView(Bytes.buffer);\n  const chunk1 = dataView.getUint32(0, /* littleEndian= */ true);\n  const chunk2 = dataView.getUint32(4, /* littleEndian= */ true);\n  const chunk3 = dataView.getUint32(8, /* littleEndian= */ true);\n  const chunk4 = dataView.getUint32(12, /* littleEndian= */ true);\n  const integer1 = new Integer([chunk1, chunk2], 0);\n  const integer2 = new Integer([chunk3, chunk4], 0);\n  return [integer1, integer2];\n}\n\nexport class BloomFilter {\n  readonly bitCount: number;\n  private readonly bitCountInInteger: Integer;\n\n  constructor(\n    readonly bitmap: Uint8Array,\n    readonly padding: number,\n    readonly hashCount: number\n  ) {\n    if (padding < 0 || padding >= 8) {\n      throw new BloomFilterError(`Invalid padding: ${padding}`);\n    }\n\n    if (hashCount < 0) {\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length > 0 && this.hashCount === 0) {\n      // Only empty bloom filter can have 0 hash count.\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length === 0 && padding !== 0) {\n      // Empty bloom filter should have 0 padding.\n      throw new BloomFilterError(\n        `Invalid padding when bitmap length is 0: ${padding}`\n      );\n    }\n\n    this.bitCount = bitmap.length * 8 - padding;\n    // Set the bit count in Integer to avoid repetition in mightContain().\n    this.bitCountInInteger = Integer.fromNumber(this.bitCount);\n  }\n\n  // Calculate the ith hash value based on the hashed 64bit integers,\n  // and calculate its corresponding bit index in the bitmap to be checked.\n  private getBitIndex(num1: Integer, num2: Integer, hashIndex: number): number {\n    // Calculate hashed value h(i) = h1 + (i * h2).\n    let hashValue = num1.add(num2.multiply(Integer.fromNumber(hashIndex)));\n    // Wrap if hash value overflow 64bit.\n    if (hashValue.compare(MAX_64_BIT_UNSIGNED_INTEGER) === 1) {\n      hashValue = new Integer([hashValue.getBits(0), hashValue.getBits(1)], 0);\n    }\n    return hashValue.modulo(this.bitCountInInteger).toNumber();\n  }\n\n  // Return whether the bit on the given index in the bitmap is set to 1.\n  private isBitSet(index: number): boolean {\n    // To retrieve bit n, calculate: (bitmap[n / 8] & (0x01 << (n % 8))).\n    const byte = this.bitmap[Math.floor(index / 8)];\n    const offset = index % 8;\n    return (byte & (0x01 << offset)) !== 0;\n  }\n\n  mightContain(value: string): boolean {\n    // Empty bitmap should always return false on membership check.\n    if (this.bitCount === 0) {\n      return false;\n    }\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      if (!this.isBitSet(index)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** Create bloom filter for testing purposes only. */\n  static create(\n    bitCount: number,\n    hashCount: number,\n    contains: string[]\n  ): BloomFilter {\n    const padding = bitCount % 8 === 0 ? 0 : 8 - (bitCount % 8);\n    const bitmap = new Uint8Array(Math.ceil(bitCount / 8));\n    const bloomFilter = new BloomFilter(bitmap, padding, hashCount);\n    contains.forEach(item => bloomFilter.insert(item));\n    return bloomFilter;\n  }\n\n  private insert(value: string): void {\n    if (this.bitCount === 0) {\n      return;\n    }\n\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      this.setBit(index);\n    }\n  }\n\n  private setBit(index: number): void {\n    const indexOfByte = Math.floor(index / 8);\n    const offset = index % 8;\n    this.bitmap[indexOfByte] |= 0x01 << offset;\n  }\n}\n\nexport class BloomFilterError extends Error {\n  readonly name = 'BloomFilterError';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { TargetPurpose } from '../local/target_data';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  mutableDocumentMap,\n  MutableDocumentMap\n} from '../model/collections';\nimport { ByteString } from '../util/byte_string';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\n\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\nexport class RemoteEvent {\n  constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    readonly snapshotVersion: SnapshotVersion,\n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    readonly targetChanges: Map<TargetId, TargetChange>,\n    /**\n     * A map of targets that is known to be inconsistent, and the purpose for\n     * re-listening. Listens for these targets should be re-established without\n     * resume tokens.\n     */\n    readonly targetMismatches: SortedMap<TargetId, TargetPurpose>,\n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    readonly documentUpdates: MutableDocumentMap,\n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    readonly resolvedLimboDocuments: DocumentKeySet\n  ) {}\n\n  /**\n   * HACK: Views require RemoteEvents in order to determine whether the view is\n   * CURRENT, but secondary tabs don't receive remote events. So this method is\n   * used to create a synthesized RemoteEvent that can be used to apply a\n   * CURRENT status change to a View, for queries executed in a different tab.\n   */\n  // PORTING NOTE: Multi-tab only\n  static createSynthesizedRemoteEventForCurrentChange(\n    targetId: TargetId,\n    current: boolean,\n    resumeToken: ByteString\n  ): RemoteEvent {\n    const targetChanges = new Map<TargetId, TargetChange>();\n    targetChanges.set(\n      targetId,\n      TargetChange.createSynthesizedTargetChangeForCurrentChange(\n        targetId,\n        current,\n        resumeToken\n      )\n    );\n    return new RemoteEvent(\n      SnapshotVersion.min(),\n      targetChanges,\n      new SortedMap<TargetId, TargetPurpose>(primitiveComparator),\n      mutableDocumentMap(),\n      documentKeySet()\n    );\n  }\n}\n\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */\nexport class TargetChange {\n  constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    readonly resumeToken: ByteString,\n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    readonly current: boolean,\n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    readonly addedDocuments: DocumentKeySet,\n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    readonly modifiedDocuments: DocumentKeySet,\n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    readonly removedDocuments: DocumentKeySet\n  ) {}\n\n  /**\n   * This method is used to create a synthesized TargetChanges that can be used to\n   * apply a CURRENT status change to a View (for queries executed in a different\n   * tab) or for new queries (to raise snapshots with correct CURRENT status).\n   */\n  static createSynthesizedTargetChangeForCurrentChange(\n    targetId: TargetId,\n    current: boolean,\n    resumeToken: ByteString\n  ): TargetChange {\n    return new TargetChange(\n      resumeToken,\n      current,\n      documentKeySet(),\n      documentKeySet(),\n      documentKeySet()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId } from '../core/database_info';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { targetIsDocumentTarget } from '../core/target';\nimport { TargetId } from '../core/types';\nimport { ChangeType } from '../core/view_snapshot';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  mutableDocumentMap\n} from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { normalizeByteString } from '../model/normalize';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { Base64DecodeError } from '../util/base64_decode_error';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport {\n  testingHooksSpi,\n  ExistenceFilterMismatchInfo as TestingHooksExistenceFilterMismatchInfo\n} from '../util/testing_hooks_spi';\n\nimport { BloomFilter, BloomFilterError } from './bloom_filter';\nimport { ExistenceFilter } from './existence_filter';\nimport { RemoteEvent, TargetChange } from './remote_event';\n\n/**\n * Internal representation of the watcher API protocol buffers.\n */\nexport type WatchChange =\n  | DocumentWatchChange\n  | WatchTargetChange\n  | ExistenceFilterChange;\n\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\nexport class DocumentWatchChange {\n  constructor(\n    /** The new document applies to all of these targets. */\n    public updatedTargetIds: TargetId[],\n    /** The new document is removed from all of these targets. */\n    public removedTargetIds: TargetId[],\n    /** The key of the document for this change. */\n    public key: DocumentKey,\n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    public newDoc: MutableDocument | null\n  ) {}\n}\n\nexport class ExistenceFilterChange {\n  constructor(\n    public targetId: TargetId,\n    public existenceFilter: ExistenceFilter\n  ) {}\n}\n\nexport const enum WatchTargetChangeState {\n  NoChange,\n  Added,\n  Removed,\n  Current,\n  Reset\n}\n\nconst enum BloomFilterApplicationStatus {\n  Success,\n  Skipped,\n  FalsePositive\n}\nexport class WatchTargetChange {\n  constructor(\n    /** What kind of change occurred to the watch target. */\n    public state: WatchTargetChangeState,\n    /** The target IDs that were added/removed/set. */\n    public targetIds: TargetId[],\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    public resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING,\n    /** An RPC error indicating why the watch failed. */\n    public cause: FirestoreError | null = null\n  ) {}\n}\n\n/** Tracks the internal state of a Watch target. */\nclass TargetState {\n  /**\n   * The number of pending responses (adds or removes) that we are waiting on.\n   * We only consider targets active that have no pending responses.\n   */\n  private pendingResponses = 0;\n\n  /**\n   * Keeps track of the document changes since the last raised snapshot.\n   *\n   * These changes are continuously updated as we receive document updates and\n   * always reflect the current set of changes against the last issued snapshot.\n   */\n  private documentChanges: SortedMap<DocumentKey, ChangeType> =\n    snapshotChangesMap();\n\n  /** See public getters for explanations of these fields. */\n  private _resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING;\n  private _current = false;\n\n  /**\n   * Whether this target state should be included in the next snapshot. We\n   * initialize to true so that newly-added targets are included in the next\n   * RemoteEvent.\n   */\n  private _hasPendingChanges = true;\n\n  /**\n   * Whether this target has been marked 'current'.\n   *\n   * 'Current' has special meaning in the RPC protocol: It implies that the\n   * Watch backend has sent us all changes up to the point at which the target\n   * was added and that the target is consistent with the rest of the watch\n   * stream.\n   */\n  get current(): boolean {\n    return this._current;\n  }\n\n  /** The last resume token sent to us for this target. */\n  get resumeToken(): ByteString {\n    return this._resumeToken;\n  }\n\n  /** Whether this target has pending target adds or target removes. */\n  get isPending(): boolean {\n    return this.pendingResponses !== 0;\n  }\n\n  /** Whether we have modified any state that should trigger a snapshot. */\n  get hasPendingChanges(): boolean {\n    return this._hasPendingChanges;\n  }\n\n  /**\n   * Applies the resume token to the TargetChange, but only when it has a new\n   * value. Empty resumeTokens are discarded.\n   */\n  updateResumeToken(resumeToken: ByteString): void {\n    if (resumeToken.approximateByteSize() > 0) {\n      this._hasPendingChanges = true;\n      this._resumeToken = resumeToken;\n    }\n  }\n\n  /**\n   * Creates a target change from the current set of changes.\n   *\n   * To reset the document changes after raising this snapshot, call\n   * `clearPendingChanges()`.\n   */\n  toTargetChange(): TargetChange {\n    let addedDocuments = documentKeySet();\n    let modifiedDocuments = documentKeySet();\n    let removedDocuments = documentKeySet();\n\n    this.documentChanges.forEach((key, changeType) => {\n      switch (changeType) {\n        case ChangeType.Added:\n          addedDocuments = addedDocuments.add(key);\n          break;\n        case ChangeType.Modified:\n          modifiedDocuments = modifiedDocuments.add(key);\n          break;\n        case ChangeType.Removed:\n          removedDocuments = removedDocuments.add(key);\n          break;\n        default:\n          fail('Encountered invalid change type: ' + changeType);\n      }\n    });\n\n    return new TargetChange(\n      this._resumeToken,\n      this._current,\n      addedDocuments,\n      modifiedDocuments,\n      removedDocuments\n    );\n  }\n\n  /**\n   * Resets the document changes and sets `hasPendingChanges` to false.\n   */\n  clearPendingChanges(): void {\n    this._hasPendingChanges = false;\n    this.documentChanges = snapshotChangesMap();\n  }\n\n  addDocumentChange(key: DocumentKey, changeType: ChangeType): void {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.insert(key, changeType);\n  }\n\n  removeDocumentChange(key: DocumentKey): void {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.remove(key);\n  }\n\n  recordPendingTargetRequest(): void {\n    this.pendingResponses += 1;\n  }\n\n  recordTargetResponse(): void {\n    this.pendingResponses -= 1;\n  }\n\n  markCurrent(): void {\n    this._hasPendingChanges = true;\n    this._current = true;\n  }\n}\n\n/**\n * Interface implemented by RemoteStore to expose target metadata to the\n * WatchChangeAggregator.\n */\nexport interface TargetMetadataProvider {\n  /**\n   * Returns the set of remote document keys for the given target ID as of the\n   * last raised snapshot.\n   */\n  getRemoteKeysForTarget(targetId: TargetId): DocumentKeySet;\n\n  /**\n   * Returns the TargetData for an active target ID or 'null' if this target\n   * has become inactive\n   */\n  getTargetDataForTarget(targetId: TargetId): TargetData | null;\n\n  /**\n   * Returns the database ID of the Firestore instance.\n   */\n  getDatabaseId(): DatabaseId;\n}\n\nconst LOG_TAG = 'WatchChangeAggregator';\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nexport class WatchChangeAggregator {\n  constructor(private metadataProvider: TargetMetadataProvider) {}\n\n  /** The internal state of all tracked targets. */\n  private targetStates = new Map<TargetId, TargetState>();\n\n  /** Keeps track of the documents to update since the last raised snapshot. */\n  private pendingDocumentUpdates = mutableDocumentMap();\n\n  /** A mapping of document keys to their set of target IDs. */\n  private pendingDocumentTargetMapping = documentTargetMap();\n\n  /**\n   * A map of targets with existence filter mismatches. These targets are\n   * known to be inconsistent and their listens needs to be re-established by\n   * RemoteStore.\n   */\n  private pendingTargetResets = new SortedMap<TargetId, TargetPurpose>(\n    primitiveComparator\n  );\n\n  /**\n   * Processes and adds the DocumentWatchChange to the current set of changes.\n   */\n  handleDocumentChange(docChange: DocumentWatchChange): void {\n    for (const targetId of docChange.updatedTargetIds) {\n      if (docChange.newDoc && docChange.newDoc.isFoundDocument()) {\n        this.addDocumentToTarget(targetId, docChange.newDoc);\n      } else {\n        this.removeDocumentFromTarget(\n          targetId,\n          docChange.key,\n          docChange.newDoc\n        );\n      }\n    }\n\n    for (const targetId of docChange.removedTargetIds) {\n      this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n    }\n  }\n\n  /** Processes and adds the WatchTargetChange to the current set of changes. */\n  handleTargetChange(targetChange: WatchTargetChange): void {\n    this.forEachTarget(targetChange, targetId => {\n      const targetState = this.ensureTargetState(targetId);\n      switch (targetChange.state) {\n        case WatchTargetChangeState.NoChange:\n          if (this.isActiveTarget(targetId)) {\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        case WatchTargetChangeState.Added:\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n          if (!targetState.isPending) {\n            // We have a freshly added target, so we need to reset any state\n            // that we had previously. This can happen e.g. when remove and add\n            // back a target for existence filter mismatches.\n            targetState.clearPendingChanges();\n          }\n          targetState.updateResumeToken(targetChange.resumeToken);\n          break;\n        case WatchTargetChangeState.Removed:\n          // We need to keep track of removed targets to we can post-filter and\n          // remove any target changes.\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n          if (!targetState.isPending) {\n            this.removeTarget(targetId);\n          }\n          debugAssert(\n            !targetChange.cause,\n            'WatchChangeAggregator does not handle errored targets'\n          );\n          break;\n        case WatchTargetChangeState.Current:\n          if (this.isActiveTarget(targetId)) {\n            targetState.markCurrent();\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        case WatchTargetChangeState.Reset:\n          if (this.isActiveTarget(targetId)) {\n            // Reset the target and synthesizes removes for all existing\n            // documents. The backend will re-add any documents that still\n            // match the target before it sends the next global snapshot.\n            this.resetTarget(targetId);\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        default:\n          fail('Unknown target watch change state: ' + targetChange.state);\n      }\n    });\n  }\n\n  /**\n   * Iterates over all targetIds that the watch change applies to: either the\n   * targetIds explicitly listed in the change or the targetIds of all currently\n   * active targets.\n   */\n  forEachTarget(\n    targetChange: WatchTargetChange,\n    fn: (targetId: TargetId) => void\n  ): void {\n    if (targetChange.targetIds.length > 0) {\n      targetChange.targetIds.forEach(fn);\n    } else {\n      this.targetStates.forEach((_, targetId) => {\n        if (this.isActiveTarget(targetId)) {\n          fn(targetId);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles existence filters and synthesizes deletes for filter mismatches.\n   * Targets that are invalidated by filter mismatches are added to\n   * `pendingTargetResets`.\n   */\n  handleExistenceFilter(watchChange: ExistenceFilterChange): void {\n    const targetId = watchChange.targetId;\n    const expectedCount = watchChange.existenceFilter.count;\n\n    const targetData = this.targetDataForActiveTarget(targetId);\n    if (targetData) {\n      const target = targetData.target;\n      if (targetIsDocumentTarget(target)) {\n        if (expectedCount === 0) {\n          // The existence filter told us the document does not exist. We deduce\n          // that this document does not exist and apply a deleted document to\n          // our updates. Without applying this deleted document there might be\n          // another query that will raise this document as part of a snapshot\n          // until it is resolved, essentially exposing inconsistency between\n          // queries.\n          const key = new DocumentKey(target.path);\n          this.removeDocumentFromTarget(\n            targetId,\n            key,\n            MutableDocument.newNoDocument(key, SnapshotVersion.min())\n          );\n        } else {\n          hardAssert(\n            expectedCount === 1,\n            'Single document existence filter with count: ' + expectedCount\n          );\n        }\n      } else {\n        const currentSize = this.getCurrentDocumentCountForTarget(targetId);\n        // Existence filter mismatch. Mark the documents as being in limbo, and\n        // raise a snapshot with `isFromCache:true`.\n        if (currentSize !== expectedCount) {\n          // Apply bloom filter to identify and mark removed documents.\n          const bloomFilter = this.parseBloomFilter(watchChange);\n          const status = bloomFilter\n            ? this.applyBloomFilter(bloomFilter, watchChange, currentSize)\n            : BloomFilterApplicationStatus.Skipped;\n\n          if (status !== BloomFilterApplicationStatus.Success) {\n            // If bloom filter application fails, we reset the mapping and\n            // trigger re-run of the query.\n            this.resetTarget(targetId);\n\n            const purpose: TargetPurpose =\n              status === BloomFilterApplicationStatus.FalsePositive\n                ? TargetPurpose.ExistenceFilterMismatchBloom\n                : TargetPurpose.ExistenceFilterMismatch;\n            this.pendingTargetResets = this.pendingTargetResets.insert(\n              targetId,\n              purpose\n            );\n          }\n          testingHooksSpi?.notifyOnExistenceFilterMismatch(\n            createExistenceFilterMismatchInfoForTestingHooks(\n              currentSize,\n              watchChange.existenceFilter,\n              this.metadataProvider.getDatabaseId(),\n              bloomFilter,\n              status\n            )\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Parse the bloom filter from the \"unchanged_names\" field of an existence\n   * filter.\n   */\n  private parseBloomFilter(\n    watchChange: ExistenceFilterChange\n  ): BloomFilter | null {\n    const unchangedNames = watchChange.existenceFilter.unchangedNames;\n    if (!unchangedNames || !unchangedNames.bits) {\n      return null;\n    }\n\n    const {\n      bits: { bitmap = '', padding = 0 },\n      hashCount = 0\n    } = unchangedNames;\n\n    let normalizedBitmap: Uint8Array;\n    try {\n      normalizedBitmap = normalizeByteString(bitmap).toUint8Array();\n    } catch (err) {\n      if (err instanceof Base64DecodeError) {\n        logWarn(\n          'Decoding the base64 bloom filter in existence filter failed (' +\n            err.message +\n            '); ignoring the bloom filter and falling back to full re-query.'\n        );\n        return null;\n      } else {\n        throw err;\n      }\n    }\n\n    let bloomFilter: BloomFilter;\n    try {\n      // BloomFilter throws error if the inputs are invalid.\n      bloomFilter = new BloomFilter(normalizedBitmap, padding, hashCount);\n    } catch (err) {\n      if (err instanceof BloomFilterError) {\n        logWarn('BloomFilter error: ', err);\n      } else {\n        logWarn('Applying bloom filter failed: ', err);\n      }\n      return null;\n    }\n\n    if (bloomFilter.bitCount === 0) {\n      return null;\n    }\n\n    return bloomFilter;\n  }\n\n  /**\n   * Apply bloom filter to remove the deleted documents, and return the\n   * application status.\n   */\n  private applyBloomFilter(\n    bloomFilter: BloomFilter,\n    watchChange: ExistenceFilterChange,\n    currentCount: number\n  ): BloomFilterApplicationStatus {\n    const expectedCount = watchChange.existenceFilter.count;\n\n    const removedDocumentCount = this.filterRemovedDocuments(\n      bloomFilter,\n      watchChange.targetId\n    );\n\n    return expectedCount === currentCount - removedDocumentCount\n      ? BloomFilterApplicationStatus.Success\n      : BloomFilterApplicationStatus.FalsePositive;\n  }\n\n  /**\n   * Filter out removed documents based on bloom filter membership result and\n   * return number of documents removed.\n   */\n  private filterRemovedDocuments(\n    bloomFilter: BloomFilter,\n    targetId: number\n  ): number {\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    let removalCount = 0;\n\n    existingKeys.forEach(key => {\n      const databaseId = this.metadataProvider.getDatabaseId();\n      const documentPath =\n        `projects/${databaseId.projectId}` +\n        `/databases/${databaseId.database}` +\n        `/documents/${key.path.canonicalString()}`;\n\n      if (!bloomFilter.mightContain(documentPath)) {\n        this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n        removalCount++;\n      }\n    });\n\n    return removalCount;\n  }\n\n  /**\n   * Converts the currently accumulated state into a remote event at the\n   * provided snapshot version. Resets the accumulated changes before returning.\n   */\n  createRemoteEvent(snapshotVersion: SnapshotVersion): RemoteEvent {\n    const targetChanges = new Map<TargetId, TargetChange>();\n\n    this.targetStates.forEach((targetState, targetId) => {\n      const targetData = this.targetDataForActiveTarget(targetId);\n      if (targetData) {\n        if (targetState.current && targetIsDocumentTarget(targetData.target)) {\n          // Document queries for document that don't exist can produce an empty\n          // result set. To update our local cache, we synthesize a document\n          // delete if we have not previously received the document. This\n          // resolves the limbo state of the document, removing it from\n          // limboDocumentRefs.\n          //\n          // TODO(dimond): Ideally we would have an explicit lookup target\n          // instead resulting in an explicit delete message and we could\n          // remove this special logic.\n          const key = new DocumentKey(targetData.target.path);\n          if (\n            this.pendingDocumentUpdates.get(key) === null &&\n            !this.targetContainsDocument(targetId, key)\n          ) {\n            this.removeDocumentFromTarget(\n              targetId,\n              key,\n              MutableDocument.newNoDocument(key, snapshotVersion)\n            );\n          }\n        }\n\n        if (targetState.hasPendingChanges) {\n          targetChanges.set(targetId, targetState.toTargetChange());\n          targetState.clearPendingChanges();\n        }\n      }\n    });\n\n    let resolvedLimboDocuments = documentKeySet();\n\n    // We extract the set of limbo-only document updates as the GC logic\n    // special-cases documents that do not appear in the target cache.\n    //\n    // TODO(gsoltis): Expand on this comment once GC is available in the JS\n    // client.\n    this.pendingDocumentTargetMapping.forEach((key, targets) => {\n      let isOnlyLimboTarget = true;\n\n      targets.forEachWhile(targetId => {\n        const targetData = this.targetDataForActiveTarget(targetId);\n        if (\n          targetData &&\n          targetData.purpose !== TargetPurpose.LimboResolution\n        ) {\n          isOnlyLimboTarget = false;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (isOnlyLimboTarget) {\n        resolvedLimboDocuments = resolvedLimboDocuments.add(key);\n      }\n    });\n\n    this.pendingDocumentUpdates.forEach((_, doc) =>\n      doc.setReadTime(snapshotVersion)\n    );\n\n    const remoteEvent = new RemoteEvent(\n      snapshotVersion,\n      targetChanges,\n      this.pendingTargetResets,\n      this.pendingDocumentUpdates,\n      resolvedLimboDocuments\n    );\n\n    this.pendingDocumentUpdates = mutableDocumentMap();\n    this.pendingDocumentTargetMapping = documentTargetMap();\n    this.pendingTargetResets = new SortedMap<TargetId, TargetPurpose>(\n      primitiveComparator\n    );\n\n    return remoteEvent;\n  }\n\n  /**\n   * Adds the provided document to the internal list of document updates and\n   * its document key to the given target's mapping.\n   */\n  // Visible for testing.\n  addDocumentToTarget(targetId: TargetId, document: MutableDocument): void {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    const changeType = this.targetContainsDocument(targetId, document.key)\n      ? ChangeType.Modified\n      : ChangeType.Added;\n\n    const targetState = this.ensureTargetState(targetId);\n    targetState.addDocumentChange(document.key, changeType);\n\n    this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(\n      document.key,\n      document\n    );\n\n    this.pendingDocumentTargetMapping =\n      this.pendingDocumentTargetMapping.insert(\n        document.key,\n        this.ensureDocumentTargetMapping(document.key).add(targetId)\n      );\n  }\n\n  /**\n   * Removes the provided document from the target mapping. If the\n   * document no longer matches the target, but the document's state is still\n   * known (e.g. we know that the document was deleted or we received the change\n   * that caused the filter mismatch), the new document can be provided\n   * to update the remote document cache.\n   */\n  // Visible for testing.\n  removeDocumentFromTarget(\n    targetId: TargetId,\n    key: DocumentKey,\n    updatedDocument: MutableDocument | null\n  ): void {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    const targetState = this.ensureTargetState(targetId);\n    if (this.targetContainsDocument(targetId, key)) {\n      targetState.addDocumentChange(key, ChangeType.Removed);\n    } else {\n      // The document may have entered and left the target before we raised a\n      // snapshot, so we can just ignore the change.\n      targetState.removeDocumentChange(key);\n    }\n\n    this.pendingDocumentTargetMapping =\n      this.pendingDocumentTargetMapping.insert(\n        key,\n        this.ensureDocumentTargetMapping(key).delete(targetId)\n      );\n\n    if (updatedDocument) {\n      this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(\n        key,\n        updatedDocument\n      );\n    }\n  }\n\n  removeTarget(targetId: TargetId): void {\n    this.targetStates.delete(targetId);\n  }\n\n  /**\n   * Returns the current count of documents in the target. This includes both\n   * the number of documents that the LocalStore considers to be part of the\n   * target as well as any accumulated changes.\n   */\n  private getCurrentDocumentCountForTarget(targetId: TargetId): number {\n    const targetState = this.ensureTargetState(targetId);\n    const targetChange = targetState.toTargetChange();\n    return (\n      this.metadataProvider.getRemoteKeysForTarget(targetId).size +\n      targetChange.addedDocuments.size -\n      targetChange.removedDocuments.size\n    );\n  }\n\n  /**\n   * Increment the number of acks needed from watch before we can consider the\n   * server to be 'in-sync' with the client's active targets.\n   */\n  recordPendingTargetRequest(targetId: TargetId): void {\n    // For each request we get we need to record we need a response for it.\n    const targetState = this.ensureTargetState(targetId);\n    targetState.recordPendingTargetRequest();\n  }\n\n  private ensureTargetState(targetId: TargetId): TargetState {\n    let result = this.targetStates.get(targetId);\n    if (!result) {\n      result = new TargetState();\n      this.targetStates.set(targetId, result);\n    }\n    return result;\n  }\n\n  private ensureDocumentTargetMapping(key: DocumentKey): SortedSet<TargetId> {\n    let targetMapping = this.pendingDocumentTargetMapping.get(key);\n\n    if (!targetMapping) {\n      targetMapping = new SortedSet<TargetId>(primitiveComparator);\n      this.pendingDocumentTargetMapping =\n        this.pendingDocumentTargetMapping.insert(key, targetMapping);\n    }\n\n    return targetMapping;\n  }\n\n  /**\n   * Verifies that the user is still interested in this target (by calling\n   * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n   * from watch.\n   */\n  protected isActiveTarget(targetId: TargetId): boolean {\n    const targetActive = this.targetDataForActiveTarget(targetId) !== null;\n    if (!targetActive) {\n      logDebug(LOG_TAG, 'Detected inactive target', targetId);\n    }\n    return targetActive;\n  }\n\n  /**\n   * Returns the TargetData for an active target (i.e. a target that the user\n   * is still interested in that has no outstanding target change requests).\n   */\n  protected targetDataForActiveTarget(targetId: TargetId): TargetData | null {\n    const targetState = this.targetStates.get(targetId);\n    return targetState && targetState.isPending\n      ? null\n      : this.metadataProvider.getTargetDataForTarget(targetId);\n  }\n\n  /**\n   * Resets the state of a Watch target to its initial state (e.g. sets\n   * 'current' to false, clears the resume token and removes its target mapping\n   * from all documents).\n   */\n  private resetTarget(targetId: TargetId): void {\n    debugAssert(\n      !this.targetStates.get(targetId)!.isPending,\n      'Should only reset active targets'\n    );\n    this.targetStates.set(targetId, new TargetState());\n\n    // Trigger removal for any documents currently mapped to this target.\n    // These removals will be part of the initial snapshot if Watch does not\n    // resend these documents.\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    existingKeys.forEach(key => {\n      this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n    });\n  }\n  /**\n   * Returns whether the LocalStore considers the document to be part of the\n   * specified target.\n   */\n  private targetContainsDocument(\n    targetId: TargetId,\n    key: DocumentKey\n  ): boolean {\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    return existingKeys.has(key);\n  }\n}\n\nfunction documentTargetMap(): SortedMap<DocumentKey, SortedSet<TargetId>> {\n  return new SortedMap<DocumentKey, SortedSet<TargetId>>(\n    DocumentKey.comparator\n  );\n}\n\nfunction snapshotChangesMap(): SortedMap<DocumentKey, ChangeType> {\n  return new SortedMap<DocumentKey, ChangeType>(DocumentKey.comparator);\n}\n\nfunction createExistenceFilterMismatchInfoForTestingHooks(\n  localCacheCount: number,\n  existenceFilter: ExistenceFilter,\n  databaseId: DatabaseId,\n  bloomFilter: BloomFilter | null,\n  bloomFilterStatus: BloomFilterApplicationStatus\n): TestingHooksExistenceFilterMismatchInfo {\n  const result: TestingHooksExistenceFilterMismatchInfo = {\n    localCacheCount,\n    existenceFilterCount: existenceFilter.count,\n    databaseId: databaseId.database,\n    projectId: databaseId.projectId\n  };\n\n  const unchangedNames = existenceFilter.unchangedNames;\n  if (unchangedNames) {\n    result.bloomFilter = {\n      applied: bloomFilterStatus === BloomFilterApplicationStatus.Success,\n      hashCount: unchangedNames?.hashCount ?? 0,\n      bitmapLength: unchangedNames?.bits?.bitmap?.length ?? 0,\n      padding: unchangedNames?.bits?.padding ?? 0,\n      mightContain: (value: string): boolean =>\n        bloomFilter?.mightContain(value) ?? false\n    };\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Aggregate } from '../core/aggregate';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  compositeFilterIsFlatConjunction,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport { Direction, OrderBy } from '../core/order_by';\nimport {\n  LimitType,\n  newQuery,\n  newQueryForPath,\n  Query,\n  queryToTarget\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { targetIsDocumentTarget, Target } from '../core/target';\nimport { TargetId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  DeleteMutation,\n  FieldTransform,\n  Mutation,\n  MutationResult,\n  PatchMutation,\n  Precondition,\n  SetMutation,\n  VerifyMutation\n} from '../model/mutation';\nimport { normalizeTimestamp } from '../model/normalize';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform,\n  TransformOperation\n} from '../model/transform_operation';\nimport { isNanValue, isNullValue } from '../model/values';\nimport {\n  ApiClientObjectMap as ProtoApiClientObjectMap,\n  BatchGetDocumentsResponse as ProtoBatchGetDocumentsResponse,\n  CompositeFilterOp as ProtoCompositeFilterOp,\n  Cursor as ProtoCursor,\n  Document as ProtoDocument,\n  DocumentMask as ProtoDocumentMask,\n  DocumentsTarget as ProtoDocumentsTarget,\n  FieldFilterOp as ProtoFieldFilterOp,\n  FieldReference as ProtoFieldReference,\n  FieldTransform as ProtoFieldTransform,\n  Filter as ProtoFilter,\n  ListenResponse as ProtoListenResponse,\n  Order as ProtoOrder,\n  OrderDirection as ProtoOrderDirection,\n  Precondition as ProtoPrecondition,\n  QueryTarget as ProtoQueryTarget,\n  RunAggregationQueryRequest as ProtoRunAggregationQueryRequest,\n  Aggregation as ProtoAggregation,\n  Status as ProtoStatus,\n  Target as ProtoTarget,\n  TargetChangeTargetChangeType as ProtoTargetChangeTargetChangeType,\n  Timestamp as ProtoTimestamp,\n  Write as ProtoWrite,\n  WriteResult as ProtoWriteResult\n} from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { ExistenceFilter } from './existence_filter';\nimport { Serializer } from './number_serializer';\nimport { mapCodeFromRpcCode } from './rpc_error';\nimport {\n  DocumentWatchChange,\n  ExistenceFilterChange,\n  WatchChange,\n  WatchTargetChange,\n  WatchTargetChangeState\n} from './watch_change';\n\nconst DIRECTIONS = (() => {\n  const dirs: { [dir: string]: ProtoOrderDirection } = {};\n  dirs[Direction.ASCENDING] = 'ASCENDING';\n  dirs[Direction.DESCENDING] = 'DESCENDING';\n  return dirs;\n})();\n\nconst OPERATORS = (() => {\n  const ops: { [op: string]: ProtoFieldFilterOp } = {};\n  ops[Operator.LESS_THAN] = 'LESS_THAN';\n  ops[Operator.LESS_THAN_OR_EQUAL] = 'LESS_THAN_OR_EQUAL';\n  ops[Operator.GREATER_THAN] = 'GREATER_THAN';\n  ops[Operator.GREATER_THAN_OR_EQUAL] = 'GREATER_THAN_OR_EQUAL';\n  ops[Operator.EQUAL] = 'EQUAL';\n  ops[Operator.NOT_EQUAL] = 'NOT_EQUAL';\n  ops[Operator.ARRAY_CONTAINS] = 'ARRAY_CONTAINS';\n  ops[Operator.IN] = 'IN';\n  ops[Operator.NOT_IN] = 'NOT_IN';\n  ops[Operator.ARRAY_CONTAINS_ANY] = 'ARRAY_CONTAINS_ANY';\n  return ops;\n})();\n\nconst COMPOSITE_OPERATORS = (() => {\n  const ops: { [op: string]: ProtoCompositeFilterOp } = {};\n  ops[CompositeOperator.AND] = 'AND';\n  ops[CompositeOperator.OR] = 'OR';\n  return ops;\n})();\n\nfunction assertPresent(value: unknown, description: string): asserts value {\n  debugAssert(!isNullOrUndefined(value), description + ' is missing');\n}\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nexport class JsonProtoSerializer implements Serializer {\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly useProto3Json: boolean\n  ) {}\n}\n\nfunction fromRpcStatus(status: ProtoStatus): FirestoreError {\n  const code =\n    status.code === undefined ? Code.UNKNOWN : mapCodeFromRpcCode(status.code);\n  return new FirestoreError(code, status.message || '');\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\nfunction toInt32Proto(\n  serializer: JsonProtoSerializer,\n  val: number | null\n): number | { value: number } | null {\n  if (serializer.useProto3Json || isNullOrUndefined(val)) {\n    return val;\n  } else {\n    return { value: val };\n  }\n}\n\n/**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */\nfunction fromInt32Proto(\n  val: number | { value: number } | undefined\n): number | null {\n  let result;\n  if (typeof val === 'object') {\n    result = val.value;\n  } else {\n    result = val;\n  }\n  return isNullOrUndefined(result) ? null : result;\n}\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nexport function toTimestamp(\n  serializer: JsonProtoSerializer,\n  timestamp: Timestamp\n): ProtoTimestamp {\n  if (serializer.useProto3Json) {\n    // Serialize to ISO-8601 date format, but with full nano resolution.\n    // Since JS Date has only millis, let's only use it for the seconds and\n    // then manually add the fractions to the end.\n    const jsDateStr = new Date(timestamp.seconds * 1000).toISOString();\n    // Remove .xxx frac part and Z in the end.\n    const strUntilSeconds = jsDateStr.replace(/\\.\\d*/, '').replace('Z', '');\n    // Pad the fraction out to 9 digits (nanos).\n    const nanoStr = ('000000000' + timestamp.nanoseconds).slice(-9);\n\n    return `${strUntilSeconds}.${nanoStr}Z`;\n  } else {\n    return {\n      seconds: '' + timestamp.seconds,\n      nanos: timestamp.nanoseconds\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  }\n}\n\nfunction fromTimestamp(date: ProtoTimestamp): Timestamp {\n  const timestamp = normalizeTimestamp(date);\n  return new Timestamp(timestamp.seconds, timestamp.nanos);\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nexport function toBytes(\n  serializer: JsonProtoSerializer,\n  bytes: ByteString\n): string | Uint8Array {\n  if (serializer.useProto3Json) {\n    return bytes.toBase64();\n  } else {\n    return bytes.toUint8Array();\n  }\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */\nexport function fromBytes(\n  serializer: JsonProtoSerializer,\n  value: string | Uint8Array | undefined\n): ByteString {\n  if (serializer.useProto3Json) {\n    hardAssert(\n      value === undefined || typeof value === 'string',\n      'value must be undefined or a string when using proto3 Json'\n    );\n    return ByteString.fromBase64String(value ? value : '');\n  } else {\n    hardAssert(\n      value === undefined || value instanceof Uint8Array,\n      'value must be undefined or Uint8Array'\n    );\n    return ByteString.fromUint8Array(value ? value : new Uint8Array());\n  }\n}\n\nexport function toVersion(\n  serializer: JsonProtoSerializer,\n  version: SnapshotVersion\n): ProtoTimestamp {\n  return toTimestamp(serializer, version.toTimestamp());\n}\n\nexport function fromVersion(version: ProtoTimestamp): SnapshotVersion {\n  hardAssert(!!version, \"Trying to deserialize version that isn't set\");\n  return SnapshotVersion.fromTimestamp(fromTimestamp(version));\n}\n\nexport function toResourceName(\n  databaseId: DatabaseId,\n  path: ResourcePath\n): string {\n  return fullyQualifiedPrefixPath(databaseId)\n    .child('documents')\n    .child(path)\n    .canonicalString();\n}\n\nfunction fromResourceName(name: string): ResourcePath {\n  const resource = ResourcePath.fromString(name);\n  hardAssert(\n    isValidResourceName(resource),\n    'Tried to deserialize invalid key ' + resource.toString()\n  );\n  return resource;\n}\n\nexport function toName(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey\n): string {\n  return toResourceName(serializer.databaseId, key.path);\n}\n\nexport function fromName(\n  serializer: JsonProtoSerializer,\n  name: string\n): DocumentKey {\n  const resource = fromResourceName(name);\n\n  if (resource.get(1) !== serializer.databaseId.projectId) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different project: ' +\n        resource.get(1) +\n        ' vs ' +\n        serializer.databaseId.projectId\n    );\n  }\n\n  if (resource.get(3) !== serializer.databaseId.database) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different database: ' +\n        resource.get(3) +\n        ' vs ' +\n        serializer.databaseId.database\n    );\n  }\n  return new DocumentKey(extractLocalPathFromResourceName(resource));\n}\n\nfunction toQueryPath(\n  serializer: JsonProtoSerializer,\n  path: ResourcePath\n): string {\n  return toResourceName(serializer.databaseId, path);\n}\n\nfunction fromQueryPath(name: string): ResourcePath {\n  const resourceName = fromResourceName(name);\n  // In v1beta1 queries for collections at the root did not have a trailing\n  // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n  // ability to read the v1beta1 form for compatibility with queries persisted\n  // in the local target cache.\n  if (resourceName.length === 4) {\n    return ResourcePath.emptyPath();\n  }\n  return extractLocalPathFromResourceName(resourceName);\n}\n\nexport function getEncodedDatabaseId(serializer: JsonProtoSerializer): string {\n  const path = new ResourcePath([\n    'projects',\n    serializer.databaseId.projectId,\n    'databases',\n    serializer.databaseId.database\n  ]);\n  return path.canonicalString();\n}\n\nfunction fullyQualifiedPrefixPath(databaseId: DatabaseId): ResourcePath {\n  return new ResourcePath([\n    'projects',\n    databaseId.projectId,\n    'databases',\n    databaseId.database\n  ]);\n}\n\nfunction extractLocalPathFromResourceName(\n  resourceName: ResourcePath\n): ResourcePath {\n  hardAssert(\n    resourceName.length > 4 && resourceName.get(4) === 'documents',\n    'tried to deserialize invalid key ' + resourceName.toString()\n  );\n  return resourceName.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */\nexport function toMutationDocument(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey,\n  fields: ObjectValue\n): ProtoDocument {\n  return {\n    name: toName(serializer, key),\n    fields: fields.value.mapValue.fields\n  };\n}\n\nexport function toDocument(\n  serializer: JsonProtoSerializer,\n  document: MutableDocument\n): ProtoDocument {\n  debugAssert(\n    !document.hasLocalMutations,\n    \"Can't serialize documents with mutations.\"\n  );\n  return {\n    name: toName(serializer, document.key),\n    fields: document.data.value.mapValue.fields,\n    updateTime: toTimestamp(serializer, document.version.toTimestamp()),\n    createTime: toTimestamp(serializer, document.createTime.toTimestamp())\n  };\n}\n\nexport function fromDocument(\n  serializer: JsonProtoSerializer,\n  document: ProtoDocument,\n  hasCommittedMutations?: boolean\n): MutableDocument {\n  const key = fromName(serializer, document.name!);\n  const version = fromVersion(document.updateTime!);\n  // If we read a document from persistence that is missing createTime, it's due\n  // to older SDK versions not storing this information. In such cases, we'll\n  // set the createTime to zero. This can be removed in the long term.\n  const createTime = document.createTime\n    ? fromVersion(document.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: document.fields } });\n  const result = MutableDocument.newFoundDocument(\n    key,\n    version,\n    createTime,\n    data\n  );\n  if (hasCommittedMutations) {\n    result.setHasCommittedMutations();\n  }\n  return hasCommittedMutations ? result.setHasCommittedMutations() : result;\n}\n\nfunction fromFound(\n  serializer: JsonProtoSerializer,\n  doc: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!doc.found,\n    'Tried to deserialize a found document from a missing document.'\n  );\n  assertPresent(doc.found.name, 'doc.found.name');\n  assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n  const key = fromName(serializer, doc.found.name);\n  const version = fromVersion(doc.found.updateTime);\n  const createTime = doc.found.createTime\n    ? fromVersion(doc.found.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: doc.found.fields } });\n  return MutableDocument.newFoundDocument(key, version, createTime, data);\n}\n\nfunction fromMissing(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!result.missing,\n    'Tried to deserialize a missing document from a found document.'\n  );\n  hardAssert(\n    !!result.readTime,\n    'Tried to deserialize a missing document without a read time.'\n  );\n  const key = fromName(serializer, result.missing);\n  const version = fromVersion(result.readTime);\n  return MutableDocument.newNoDocument(key, version);\n}\n\nexport function fromBatchGetDocumentsResponse(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  if ('found' in result) {\n    return fromFound(serializer, result);\n  } else if ('missing' in result) {\n    return fromMissing(serializer, result);\n  }\n  return fail('invalid batch get response: ' + JSON.stringify(result));\n}\n\nexport function fromWatchChange(\n  serializer: JsonProtoSerializer,\n  change: ProtoListenResponse\n): WatchChange {\n  let watchChange: WatchChange;\n  if ('targetChange' in change) {\n    assertPresent(change.targetChange, 'targetChange');\n    // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n    // if unset\n    const state = fromWatchTargetChangeState(\n      change.targetChange.targetChangeType || 'NO_CHANGE'\n    );\n    const targetIds: TargetId[] = change.targetChange.targetIds || [];\n\n    const resumeToken = fromBytes(serializer, change.targetChange.resumeToken);\n    const causeProto = change.targetChange!.cause;\n    const cause = causeProto && fromRpcStatus(causeProto);\n    watchChange = new WatchTargetChange(\n      state,\n      targetIds,\n      resumeToken,\n      cause || null\n    );\n  } else if ('documentChange' in change) {\n    assertPresent(change.documentChange, 'documentChange');\n    const entityChange = change.documentChange;\n    assertPresent(entityChange.document, 'documentChange.name');\n    assertPresent(entityChange.document.name, 'documentChange.document.name');\n    assertPresent(\n      entityChange.document.updateTime,\n      'documentChange.document.updateTime'\n    );\n    const key = fromName(serializer, entityChange.document.name);\n    const version = fromVersion(entityChange.document.updateTime);\n    const createTime = entityChange.document.createTime\n      ? fromVersion(entityChange.document.createTime)\n      : SnapshotVersion.min();\n    const data = new ObjectValue({\n      mapValue: { fields: entityChange.document.fields }\n    });\n    const doc = MutableDocument.newFoundDocument(\n      key,\n      version,\n      createTime,\n      data\n    );\n    const updatedTargetIds = entityChange.targetIds || [];\n    const removedTargetIds = entityChange.removedTargetIds || [];\n    watchChange = new DocumentWatchChange(\n      updatedTargetIds,\n      removedTargetIds,\n      doc.key,\n      doc\n    );\n  } else if ('documentDelete' in change) {\n    assertPresent(change.documentDelete, 'documentDelete');\n    const docDelete = change.documentDelete;\n    assertPresent(docDelete.document, 'documentDelete.document');\n    const key = fromName(serializer, docDelete.document);\n    const version = docDelete.readTime\n      ? fromVersion(docDelete.readTime)\n      : SnapshotVersion.min();\n    const doc = MutableDocument.newNoDocument(key, version);\n    const removedTargetIds = docDelete.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n  } else if ('documentRemove' in change) {\n    assertPresent(change.documentRemove, 'documentRemove');\n    const docRemove = change.documentRemove;\n    assertPresent(docRemove.document, 'documentRemove');\n    const key = fromName(serializer, docRemove.document);\n    const removedTargetIds = docRemove.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n  } else if ('filter' in change) {\n    // TODO(dimond): implement existence filter parsing with strategy.\n    assertPresent(change.filter, 'filter');\n    const filter = change.filter;\n    assertPresent(filter.targetId, 'filter.targetId');\n    const { count = 0, unchangedNames } = filter;\n    const existenceFilter = new ExistenceFilter(count, unchangedNames);\n    const targetId = filter.targetId;\n    watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n  } else {\n    return fail('Unknown change type ' + JSON.stringify(change));\n  }\n  return watchChange;\n}\n\nfunction fromWatchTargetChangeState(\n  state: ProtoTargetChangeTargetChangeType\n): WatchTargetChangeState {\n  if (state === 'NO_CHANGE') {\n    return WatchTargetChangeState.NoChange;\n  } else if (state === 'ADD') {\n    return WatchTargetChangeState.Added;\n  } else if (state === 'REMOVE') {\n    return WatchTargetChangeState.Removed;\n  } else if (state === 'CURRENT') {\n    return WatchTargetChangeState.Current;\n  } else if (state === 'RESET') {\n    return WatchTargetChangeState.Reset;\n  } else {\n    return fail('Got unexpected TargetChange.state: ' + state);\n  }\n}\n\nexport function versionFromListenResponse(\n  change: ProtoListenResponse\n): SnapshotVersion {\n  // We have only reached a consistent snapshot for the entire stream if there\n  // is a read_time set and it applies to all targets (i.e. the list of\n  // targets is empty). The backend is guaranteed to send such responses.\n  if (!('targetChange' in change)) {\n    return SnapshotVersion.min();\n  }\n  const targetChange = change.targetChange!;\n  if (targetChange.targetIds && targetChange.targetIds.length) {\n    return SnapshotVersion.min();\n  }\n  if (!targetChange.readTime) {\n    return SnapshotVersion.min();\n  }\n  return fromVersion(targetChange.readTime);\n}\n\nexport function toMutation(\n  serializer: JsonProtoSerializer,\n  mutation: Mutation\n): ProtoWrite {\n  let result: ProtoWrite;\n  if (mutation instanceof SetMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.value)\n    };\n  } else if (mutation instanceof DeleteMutation) {\n    result = { delete: toName(serializer, mutation.key) };\n  } else if (mutation instanceof PatchMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.data),\n      updateMask: toDocumentMask(mutation.fieldMask)\n    };\n  } else if (mutation instanceof VerifyMutation) {\n    result = {\n      verify: toName(serializer, mutation.key)\n    };\n  } else {\n    return fail('Unknown mutation type ' + mutation.type);\n  }\n\n  if (mutation.fieldTransforms.length > 0) {\n    result.updateTransforms = mutation.fieldTransforms.map(transform =>\n      toFieldTransform(serializer, transform)\n    );\n  }\n\n  if (!mutation.precondition.isNone) {\n    result.currentDocument = toPrecondition(serializer, mutation.precondition);\n  }\n\n  return result;\n}\n\nexport function fromMutation(\n  serializer: JsonProtoSerializer,\n  proto: ProtoWrite\n): Mutation {\n  const precondition = proto.currentDocument\n    ? fromPrecondition(proto.currentDocument)\n    : Precondition.none();\n\n  const fieldTransforms = proto.updateTransforms\n    ? proto.updateTransforms.map(transform =>\n        fromFieldTransform(serializer, transform)\n      )\n    : [];\n\n  if (proto.update) {\n    assertPresent(proto.update.name, 'name');\n    const key = fromName(serializer, proto.update.name);\n    const value = new ObjectValue({\n      mapValue: { fields: proto.update.fields }\n    });\n\n    if (proto.updateMask) {\n      const fieldMask = fromDocumentMask(proto.updateMask);\n      return new PatchMutation(\n        key,\n        value,\n        fieldMask,\n        precondition,\n        fieldTransforms\n      );\n    } else {\n      return new SetMutation(key, value, precondition, fieldTransforms);\n    }\n  } else if (proto.delete) {\n    const key = fromName(serializer, proto.delete);\n    return new DeleteMutation(key, precondition);\n  } else if (proto.verify) {\n    const key = fromName(serializer, proto.verify);\n    return new VerifyMutation(key, precondition);\n  } else {\n    return fail('unknown mutation proto: ' + JSON.stringify(proto));\n  }\n}\n\nfunction toPrecondition(\n  serializer: JsonProtoSerializer,\n  precondition: Precondition\n): ProtoPrecondition {\n  debugAssert(!precondition.isNone, \"Can't serialize an empty precondition\");\n  if (precondition.updateTime !== undefined) {\n    return {\n      updateTime: toVersion(serializer, precondition.updateTime)\n    };\n  } else if (precondition.exists !== undefined) {\n    return { exists: precondition.exists };\n  } else {\n    return fail('Unknown precondition');\n  }\n}\n\nfunction fromPrecondition(precondition: ProtoPrecondition): Precondition {\n  if (precondition.updateTime !== undefined) {\n    return Precondition.updateTime(fromVersion(precondition.updateTime));\n  } else if (precondition.exists !== undefined) {\n    return Precondition.exists(precondition.exists);\n  } else {\n    return Precondition.none();\n  }\n}\n\nfunction fromWriteResult(\n  proto: ProtoWriteResult,\n  commitTime: ProtoTimestamp\n): MutationResult {\n  // NOTE: Deletes don't have an updateTime.\n  let version = proto.updateTime\n    ? fromVersion(proto.updateTime)\n    : fromVersion(commitTime);\n\n  if (version.isEqual(SnapshotVersion.min())) {\n    // The Firestore Emulator currently returns an update time of 0 for\n    // deletes of non-existing documents (rather than null). This breaks the\n    // test \"get deleted doc while offline with source=cache\" as NoDocuments\n    // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n    // TODO(#2149): Remove this when Emulator is fixed\n    version = fromVersion(commitTime);\n  }\n\n  return new MutationResult(version, proto.transformResults || []);\n}\n\nexport function fromWriteResults(\n  protos: ProtoWriteResult[] | undefined,\n  commitTime?: ProtoTimestamp\n): MutationResult[] {\n  if (protos && protos.length > 0) {\n    hardAssert(\n      commitTime !== undefined,\n      'Received a write result without a commit time'\n    );\n    return protos.map(proto => fromWriteResult(proto, commitTime));\n  } else {\n    return [];\n  }\n}\n\nfunction toFieldTransform(\n  serializer: JsonProtoSerializer,\n  fieldTransform: FieldTransform\n): ProtoFieldTransform {\n  const transform = fieldTransform.transform;\n  if (transform instanceof ServerTimestampTransform) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      setToServerValue: 'REQUEST_TIME'\n    };\n  } else if (transform instanceof ArrayUnionTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      appendMissingElements: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      removeAllFromArray: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof NumericIncrementTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      increment: transform.operand\n    };\n  } else {\n    throw fail('Unknown transform: ' + fieldTransform.transform);\n  }\n}\n\nfunction fromFieldTransform(\n  serializer: JsonProtoSerializer,\n  proto: ProtoFieldTransform\n): FieldTransform {\n  let transform: TransformOperation | null = null;\n  if ('setToServerValue' in proto) {\n    hardAssert(\n      proto.setToServerValue === 'REQUEST_TIME',\n      'Unknown server value transform proto: ' + JSON.stringify(proto)\n    );\n    transform = new ServerTimestampTransform();\n  } else if ('appendMissingElements' in proto) {\n    const values = proto.appendMissingElements!.values || [];\n    transform = new ArrayUnionTransformOperation(values);\n  } else if ('removeAllFromArray' in proto) {\n    const values = proto.removeAllFromArray!.values || [];\n    transform = new ArrayRemoveTransformOperation(values);\n  } else if ('increment' in proto) {\n    transform = new NumericIncrementTransformOperation(\n      serializer,\n      proto.increment!\n    );\n  } else {\n    fail('Unknown transform proto: ' + JSON.stringify(proto));\n  }\n  const fieldPath = FieldPath.fromServerFormat(proto.fieldPath!);\n  return new FieldTransform(fieldPath, transform!);\n}\n\nexport function toDocumentsTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): ProtoDocumentsTarget {\n  return { documents: [toQueryPath(serializer, target.path)] };\n}\n\nexport function fromDocumentsTarget(\n  documentsTarget: ProtoDocumentsTarget\n): Target {\n  const count = documentsTarget.documents!.length;\n  hardAssert(\n    count === 1,\n    'DocumentsTarget contained other than 1 document: ' + count\n  );\n  const name = documentsTarget.documents![0];\n  return queryToTarget(newQueryForPath(fromQueryPath(name)));\n}\n\nexport function toQueryTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): ProtoQueryTarget {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const result: ProtoQueryTarget = { structuredQuery: {} };\n  const path = target.path;\n  if (target.collectionGroup !== null) {\n    debugAssert(\n      path.length % 2 === 0,\n      'Collection Group queries should be within a document path or root.'\n    );\n    result.parent = toQueryPath(serializer, path);\n    result.structuredQuery!.from = [\n      {\n        collectionId: target.collectionGroup,\n        allDescendants: true\n      }\n    ];\n  } else {\n    debugAssert(\n      path.length % 2 !== 0,\n      'Document queries with filters are not supported.'\n    );\n    result.parent = toQueryPath(serializer, path.popLast());\n    result.structuredQuery!.from = [{ collectionId: path.lastSegment() }];\n  }\n\n  const where = toFilters(target.filters);\n  if (where) {\n    result.structuredQuery!.where = where;\n  }\n\n  const orderBy = toOrder(target.orderBy);\n  if (orderBy) {\n    result.structuredQuery!.orderBy = orderBy;\n  }\n\n  const limit = toInt32Proto(serializer, target.limit);\n  if (limit !== null) {\n    result.structuredQuery!.limit = limit;\n  }\n\n  if (target.startAt) {\n    result.structuredQuery!.startAt = toStartAtCursor(target.startAt);\n  }\n  if (target.endAt) {\n    result.structuredQuery!.endAt = toEndAtCursor(target.endAt);\n  }\n\n  return result;\n}\n\nexport function toRunAggregationQueryRequest(\n  serializer: JsonProtoSerializer,\n  target: Target,\n  aggregates: Aggregate[]\n): {\n  request: ProtoRunAggregationQueryRequest;\n  aliasMap: Record<string, string>;\n} {\n  const queryTarget = toQueryTarget(serializer, target);\n  const aliasMap: Record<string, string> = {};\n\n  const aggregations: ProtoAggregation[] = [];\n  let aggregationNum = 0;\n\n  aggregates.forEach(aggregate => {\n    // Map all client-side aliases to a unique short-form\n    // alias. This avoids issues with client-side aliases that\n    // exceed the 1500-byte string size limit.\n    const serverAlias = `aggregate_${aggregationNum++}`;\n    aliasMap[serverAlias] = aggregate.alias;\n\n    if (aggregate.aggregateType === 'count') {\n      aggregations.push({\n        alias: serverAlias,\n        count: {}\n      });\n    } else if (aggregate.aggregateType === 'avg') {\n      aggregations.push({\n        alias: serverAlias,\n        avg: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    } else if (aggregate.aggregateType === 'sum') {\n      aggregations.push({\n        alias: serverAlias,\n        sum: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    }\n  });\n\n  return {\n    request: {\n      structuredAggregationQuery: {\n        aggregations,\n        structuredQuery: queryTarget.structuredQuery\n      },\n      parent: queryTarget.parent\n    },\n    aliasMap\n  };\n}\n\nexport function convertQueryTargetToQuery(target: ProtoQueryTarget): Query {\n  let path = fromQueryPath(target.parent!);\n\n  const query = target.structuredQuery!;\n  const fromCount = query.from ? query.from.length : 0;\n  let collectionGroup: string | null = null;\n  if (fromCount > 0) {\n    hardAssert(\n      fromCount === 1,\n      'StructuredQuery.from with more than one collection is not supported.'\n    );\n    const from = query.from![0];\n    if (from.allDescendants) {\n      collectionGroup = from.collectionId!;\n    } else {\n      path = path.child(from.collectionId!);\n    }\n  }\n\n  let filterBy: Filter[] = [];\n  if (query.where) {\n    filterBy = fromFilters(query.where);\n  }\n\n  let orderBy: OrderBy[] = [];\n  if (query.orderBy) {\n    orderBy = fromOrder(query.orderBy);\n  }\n\n  let limit: number | null = null;\n  if (query.limit) {\n    limit = fromInt32Proto(query.limit);\n  }\n\n  let startAt: Bound | null = null;\n  if (query.startAt) {\n    startAt = fromStartAtCursor(query.startAt);\n  }\n\n  let endAt: Bound | null = null;\n  if (query.endAt) {\n    endAt = fromEndAtCursor(query.endAt);\n  }\n\n  return newQuery(\n    path,\n    collectionGroup,\n    orderBy,\n    filterBy,\n    limit,\n    LimitType.First,\n    startAt,\n    endAt\n  );\n}\n\nexport function fromQueryTarget(target: ProtoQueryTarget): Target {\n  return queryToTarget(convertQueryTargetToQuery(target));\n}\n\nexport function toListenRequestLabels(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoApiClientObjectMap<string> | null {\n  const value = toLabel(targetData.purpose);\n  if (value == null) {\n    return null;\n  } else {\n    return {\n      'goog-listen-tags': value\n    };\n  }\n}\n\nexport function toLabel(purpose: TargetPurpose): string | null {\n  switch (purpose) {\n    case TargetPurpose.Listen:\n      return null;\n    case TargetPurpose.ExistenceFilterMismatch:\n      return 'existence-filter-mismatch';\n    case TargetPurpose.ExistenceFilterMismatchBloom:\n      return 'existence-filter-mismatch-bloom';\n    case TargetPurpose.LimboResolution:\n      return 'limbo-document';\n    default:\n      return fail('Unrecognized query purpose: ' + purpose);\n  }\n}\n\nexport function toTarget(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoTarget {\n  let result: ProtoTarget;\n  const target = targetData.target;\n\n  if (targetIsDocumentTarget(target)) {\n    result = { documents: toDocumentsTarget(serializer, target) };\n  } else {\n    result = { query: toQueryTarget(serializer, target) };\n  }\n\n  result.targetId = targetData.targetId;\n\n  if (targetData.resumeToken.approximateByteSize() > 0) {\n    result.resumeToken = toBytes(serializer, targetData.resumeToken);\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  } else if (targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0) {\n    // TODO(wuandy): Consider removing above check because it is most likely true.\n    // Right now, many tests depend on this behaviour though (leaving min() out\n    // of serialization).\n    result.readTime = toTimestamp(\n      serializer,\n      targetData.snapshotVersion.toTimestamp()\n    );\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  }\n\n  return result;\n}\n\nfunction toFilters(filters: Filter[]): ProtoFilter | undefined {\n  if (filters.length === 0) {\n    return;\n  }\n\n  return toFilter(CompositeFilter.create(filters, CompositeOperator.AND));\n}\n\nfunction fromFilters(filter: ProtoFilter): Filter[] {\n  const result = fromFilter(filter);\n\n  if (\n    result instanceof CompositeFilter &&\n    compositeFilterIsFlatConjunction(result)\n  ) {\n    return result.getFilters();\n  }\n\n  return [result];\n}\n\nfunction fromFilter(filter: ProtoFilter): Filter {\n  if (filter.unaryFilter !== undefined) {\n    return fromUnaryFilter(filter);\n  } else if (filter.fieldFilter !== undefined) {\n    return fromFieldFilter(filter);\n  } else if (filter.compositeFilter !== undefined) {\n    return fromCompositeFilter(filter);\n  } else {\n    return fail('Unknown filter: ' + JSON.stringify(filter));\n  }\n}\n\nfunction toOrder(orderBys: OrderBy[]): ProtoOrder[] | undefined {\n  if (orderBys.length === 0) {\n    return;\n  }\n  return orderBys.map(order => toPropertyOrder(order));\n}\n\nfunction fromOrder(orderBys: ProtoOrder[]): OrderBy[] {\n  return orderBys.map(order => fromPropertyOrder(order));\n}\n\nfunction toStartAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction toEndAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: !cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction fromStartAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !!cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\nfunction fromEndAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\n// visible for testing\nexport function toDirection(dir: Direction): ProtoOrderDirection {\n  return DIRECTIONS[dir];\n}\n\n// visible for testing\nexport function fromDirection(\n  dir: ProtoOrderDirection | undefined\n): Direction | undefined {\n  switch (dir) {\n    case 'ASCENDING':\n      return Direction.ASCENDING;\n    case 'DESCENDING':\n      return Direction.DESCENDING;\n    default:\n      return undefined;\n  }\n}\n\n// visible for testing\nexport function toOperatorName(op: Operator): ProtoFieldFilterOp {\n  return OPERATORS[op];\n}\n\nexport function toCompositeOperatorName(\n  op: CompositeOperator\n): ProtoCompositeFilterOp {\n  return COMPOSITE_OPERATORS[op];\n}\n\nexport function fromOperatorName(op: ProtoFieldFilterOp): Operator {\n  switch (op) {\n    case 'EQUAL':\n      return Operator.EQUAL;\n    case 'NOT_EQUAL':\n      return Operator.NOT_EQUAL;\n    case 'GREATER_THAN':\n      return Operator.GREATER_THAN;\n    case 'GREATER_THAN_OR_EQUAL':\n      return Operator.GREATER_THAN_OR_EQUAL;\n    case 'LESS_THAN':\n      return Operator.LESS_THAN;\n    case 'LESS_THAN_OR_EQUAL':\n      return Operator.LESS_THAN_OR_EQUAL;\n    case 'ARRAY_CONTAINS':\n      return Operator.ARRAY_CONTAINS;\n    case 'IN':\n      return Operator.IN;\n    case 'NOT_IN':\n      return Operator.NOT_IN;\n    case 'ARRAY_CONTAINS_ANY':\n      return Operator.ARRAY_CONTAINS_ANY;\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified operator');\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function fromCompositeOperatorName(\n  op: ProtoCompositeFilterOp\n): CompositeOperator {\n  switch (op) {\n    case 'AND':\n      return CompositeOperator.AND;\n    case 'OR':\n      return CompositeOperator.OR;\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function toFieldPathReference(path: FieldPath): ProtoFieldReference {\n  return { fieldPath: path.canonicalString() };\n}\n\nexport function fromFieldPathReference(\n  fieldReference: ProtoFieldReference\n): FieldPath {\n  return FieldPath.fromServerFormat(fieldReference.fieldPath!);\n}\n\n// visible for testing\nexport function toPropertyOrder(orderBy: OrderBy): ProtoOrder {\n  return {\n    field: toFieldPathReference(orderBy.field),\n    direction: toDirection(orderBy.dir)\n  };\n}\n\nexport function fromPropertyOrder(orderBy: ProtoOrder): OrderBy {\n  return new OrderBy(\n    fromFieldPathReference(orderBy.field!),\n    fromDirection(orderBy.direction)\n  );\n}\n\n// visible for testing\nexport function toFilter(filter: Filter): ProtoFilter {\n  if (filter instanceof FieldFilter) {\n    return toUnaryOrFieldFilter(filter);\n  } else if (filter instanceof CompositeFilter) {\n    return toCompositeFilter(filter);\n  } else {\n    return fail('Unrecognized filter type ' + JSON.stringify(filter));\n  }\n}\n\nexport function toCompositeFilter(filter: CompositeFilter): ProtoFilter {\n  const protos = filter.getFilters().map(filter => toFilter(filter));\n\n  if (protos.length === 1) {\n    return protos[0];\n  }\n\n  return {\n    compositeFilter: {\n      op: toCompositeOperatorName(filter.op),\n      filters: protos\n    }\n  };\n}\n\nexport function toUnaryOrFieldFilter(filter: FieldFilter): ProtoFilter {\n  if (filter.op === Operator.EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NULL'\n        }\n      };\n    }\n  } else if (filter.op === Operator.NOT_EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NULL'\n        }\n      };\n    }\n  }\n  return {\n    fieldFilter: {\n      field: toFieldPathReference(filter.field),\n      op: toOperatorName(filter.op),\n      value: filter.value\n    }\n  };\n}\n\nexport function fromUnaryFilter(filter: ProtoFilter): Filter {\n  switch (filter.unaryFilter!.op!) {\n    case 'IS_NAN':\n      const nanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nanField, Operator.EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NULL':\n      const nullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nullField, Operator.EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'IS_NOT_NAN':\n      const notNanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNanField, Operator.NOT_EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NOT_NULL':\n      const notNullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNullField, Operator.NOT_EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified filter');\n    default:\n      return fail('Unknown filter');\n  }\n}\n\nexport function fromFieldFilter(filter: ProtoFilter): FieldFilter {\n  return FieldFilter.create(\n    fromFieldPathReference(filter.fieldFilter!.field!),\n    fromOperatorName(filter.fieldFilter!.op!),\n    filter.fieldFilter!.value!\n  );\n}\n\nexport function fromCompositeFilter(filter: ProtoFilter): CompositeFilter {\n  return CompositeFilter.create(\n    filter.compositeFilter!.filters!.map(filter => fromFilter(filter)),\n    fromCompositeOperatorName(filter.compositeFilter!.op!)\n  );\n}\n\nexport function toDocumentMask(fieldMask: FieldMask): ProtoDocumentMask {\n  const canonicalFields: string[] = [];\n  fieldMask.fields.forEach(field =>\n    canonicalFields.push(field.canonicalString())\n  );\n  return {\n    fieldPaths: canonicalFields\n  };\n}\n\nexport function fromDocumentMask(proto: ProtoDocumentMask): FieldMask {\n  const paths = proto.fieldPaths || [];\n  return new FieldMask(paths.map(path => FieldPath.fromServerFormat(path)));\n}\n\nexport function isValidResourceName(path: ResourcePath): boolean {\n  // Resource names have at least 4 components (project ID, database ID)\n  return (\n    path.length >= 4 &&\n    path.get(0) === 'projects' &&\n    path.get(2) === 'databases'\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Target } from '../core/target';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { ByteString } from '../util/byte_string';\n\n/** An enumeration of the different purposes we have for targets. */\nexport const enum TargetPurpose {\n  /** A regular, normal query target. */\n  Listen = 'TargetPurposeListen',\n\n  /**\n   * The query target was used to refill a query after an existence filter\n   * mismatch.\n   */\n  ExistenceFilterMismatch = 'TargetPurposeExistenceFilterMismatch',\n\n  /**\n   * The query target was used if the query is the result of a false positive in\n   * the bloom filter.\n   */\n  ExistenceFilterMismatchBloom = 'TargetPurposeExistenceFilterMismatchBloom',\n\n  /** The query target was used to resolve a limbo document. */\n  LimboResolution = 'TargetPurposeLimboResolution'\n}\n\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */\nexport class TargetData {\n  constructor(\n    /** The target being listened to. */\n    readonly target: Target,\n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    readonly targetId: TargetId,\n    /** The purpose of the target. */\n    readonly purpose: TargetPurpose,\n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    readonly sequenceNumber: ListenSequenceNumber,\n    /** The latest snapshot version seen for this target. */\n    readonly snapshotVersion: SnapshotVersion = SnapshotVersion.min(),\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */\n    readonly lastLimboFreeSnapshotVersion: SnapshotVersion = SnapshotVersion.min(),\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    readonly resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING,\n    /**\n     * The number of documents that last matched the query at the resume token or\n     * read time. Documents are counted only when making a listen request with\n     * resume token or read time, otherwise, keep it null.\n     */\n    readonly expectedCount: number | null = null\n  ) {}\n\n  /** Creates a new target data instance with an updated sequence number. */\n  withSequenceNumber(sequenceNumber: number): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      sequenceNumber,\n      this.snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      this.expectedCount\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated resume token and\n   * snapshot version.\n   */\n  withResumeToken(\n    resumeToken: ByteString,\n    snapshotVersion: SnapshotVersion\n  ): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      resumeToken,\n      /* expectedCount= */ null\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated expected count.\n   */\n  withExpectedCount(expectedCount: number): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      this.snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      expectedCount\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated last limbo free\n   * snapshot version number.\n   */\n  withLastLimboFreeSnapshotVersion(\n    lastLimboFreeSnapshotVersion: SnapshotVersion\n  ): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      this.snapshotVersion,\n      lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      this.expectedCount\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../api/timestamp';\nimport { User } from '../auth/user';\nimport { BundleMetadata, NamedQuery } from '../core/bundle';\nimport { LimitType, Query, queryWithLimit } from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetIsDocumentTarget } from '../core/target';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  IndexOffset,\n  IndexSegment,\n  IndexState\n} from '../model/field_index';\nimport { MutationBatch } from '../model/mutation_batch';\nimport { Overlay } from '../model/overlay';\nimport { FieldPath } from '../model/path';\nimport {\n  BundledQuery as ProtoBundledQuery,\n  BundleMetadata as ProtoBundleMetadata,\n  NamedQuery as ProtoNamedQuery\n} from '../protos/firestore_bundle_proto';\nimport { DocumentsTarget as PublicDocumentsTarget } from '../protos/firestore_proto_api';\nimport {\n  convertQueryTargetToQuery,\n  fromDocument,\n  fromDocumentsTarget,\n  fromMutation,\n  fromQueryTarget,\n  fromVersion,\n  JsonProtoSerializer,\n  toDocument,\n  toDocumentsTarget,\n  toMutation,\n  toQueryTarget\n} from '../remote/serializer';\nimport { debugAssert, fail } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\n\nimport {\n  decodeResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport {\n  DbBundle,\n  DbDocumentOverlay,\n  DbIndexConfiguration,\n  DbIndexState,\n  DbMutationBatch,\n  DbNamedQuery,\n  DbQuery,\n  DbRemoteDocument,\n  DbTarget,\n  DbTimestamp\n} from './indexeddb_schema';\nimport { DbDocumentOverlayKey, DbTimestampKey } from './indexeddb_sentinels';\nimport { TargetData, TargetPurpose } from './target_data';\n\n/** Serializer for values stored in the LocalStore. */\nexport class LocalSerializer {\n  constructor(readonly remoteSerializer: JsonProtoSerializer) {}\n}\n\n/** Decodes a remote document from storage locally to a Document. */\nexport function fromDbRemoteDocument(\n  localSerializer: LocalSerializer,\n  remoteDoc: DbRemoteDocument\n): MutableDocument {\n  let doc: MutableDocument;\n  if (remoteDoc.document) {\n    doc = fromDocument(\n      localSerializer.remoteSerializer,\n      remoteDoc.document,\n      !!remoteDoc.hasCommittedMutations\n    );\n  } else if (remoteDoc.noDocument) {\n    const key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\n    const version = fromDbTimestamp(remoteDoc.noDocument.readTime);\n    doc = MutableDocument.newNoDocument(key, version);\n    if (remoteDoc.hasCommittedMutations) {\n      doc.setHasCommittedMutations();\n    }\n  } else if (remoteDoc.unknownDocument) {\n    const key = DocumentKey.fromSegments(remoteDoc.unknownDocument.path);\n    const version = fromDbTimestamp(remoteDoc.unknownDocument.version);\n    doc = MutableDocument.newUnknownDocument(key, version);\n  } else {\n    return fail('Unexpected DbRemoteDocument');\n  }\n\n  if (remoteDoc.readTime) {\n    doc.setReadTime(fromDbTimestampKey(remoteDoc.readTime));\n  }\n\n  return doc;\n}\n\n/** Encodes a document for storage locally. */\nexport function toDbRemoteDocument(\n  localSerializer: LocalSerializer,\n  document: MutableDocument\n): DbRemoteDocument {\n  const key = document.key;\n  const remoteDoc: DbRemoteDocument = {\n    prefixPath: key.getCollectionPath().popLast().toArray(),\n    collectionGroup: key.collectionGroup,\n    documentId: key.path.lastSegment(),\n    readTime: toDbTimestampKey(document.readTime),\n    hasCommittedMutations: document.hasCommittedMutations\n  };\n\n  if (document.isFoundDocument()) {\n    remoteDoc.document = toDocument(localSerializer.remoteSerializer, document);\n  } else if (document.isNoDocument()) {\n    remoteDoc.noDocument = {\n      path: key.path.toArray(),\n      readTime: toDbTimestamp(document.version)\n    };\n  } else if (document.isUnknownDocument()) {\n    remoteDoc.unknownDocument = {\n      path: key.path.toArray(),\n      version: toDbTimestamp(document.version)\n    };\n  } else {\n    return fail('Unexpected Document ' + document);\n  }\n  return remoteDoc;\n}\n\nexport function toDbTimestampKey(\n  snapshotVersion: SnapshotVersion\n): DbTimestampKey {\n  const timestamp = snapshotVersion.toTimestamp();\n  return [timestamp.seconds, timestamp.nanoseconds];\n}\n\nexport function fromDbTimestampKey(\n  dbTimestampKey: DbTimestampKey\n): SnapshotVersion {\n  const timestamp = new Timestamp(dbTimestampKey[0], dbTimestampKey[1]);\n  return SnapshotVersion.fromTimestamp(timestamp);\n}\n\nexport function toDbTimestamp(snapshotVersion: SnapshotVersion): DbTimestamp {\n  const timestamp = snapshotVersion.toTimestamp();\n  return { seconds: timestamp.seconds, nanoseconds: timestamp.nanoseconds };\n}\n\nfunction fromDbTimestamp(dbTimestamp: DbTimestamp): SnapshotVersion {\n  const timestamp = new Timestamp(dbTimestamp.seconds, dbTimestamp.nanoseconds);\n  return SnapshotVersion.fromTimestamp(timestamp);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\nexport function toDbMutationBatch(\n  localSerializer: LocalSerializer,\n  userId: string,\n  batch: MutationBatch\n): DbMutationBatch {\n  const serializedBaseMutations = batch.baseMutations.map(m =>\n    toMutation(localSerializer.remoteSerializer, m)\n  );\n  const serializedMutations = batch.mutations.map(m =>\n    toMutation(localSerializer.remoteSerializer, m)\n  );\n  return {\n    userId,\n    batchId: batch.batchId,\n    localWriteTimeMs: batch.localWriteTime.toMillis(),\n    baseMutations: serializedBaseMutations,\n    mutations: serializedMutations\n  };\n}\n\n/** Decodes a DbMutationBatch into a MutationBatch */\nexport function fromDbMutationBatch(\n  localSerializer: LocalSerializer,\n  dbBatch: DbMutationBatch\n): MutationBatch {\n  const baseMutations = (dbBatch.baseMutations || []).map(m =>\n    fromMutation(localSerializer.remoteSerializer, m)\n  );\n\n  // Squash old transform mutations into existing patch or set mutations.\n  // The replacement of representing `transforms` with `update_transforms`\n  // on the SDK means that old `transform` mutations stored in IndexedDB need\n  // to be updated to `update_transforms`.\n  // TODO(b/174608374): Remove this code once we perform a schema migration.\n  for (let i = 0; i < dbBatch.mutations.length - 1; ++i) {\n    const currentMutation = dbBatch.mutations[i];\n    const hasTransform =\n      i + 1 < dbBatch.mutations.length &&\n      dbBatch.mutations[i + 1].transform !== undefined;\n    if (hasTransform) {\n      debugAssert(\n        dbBatch.mutations[i].transform === undefined &&\n          dbBatch.mutations[i].update !== undefined,\n        'TransformMutation should be preceded by a patch or set mutation'\n      );\n      const transformMutation = dbBatch.mutations[i + 1];\n      currentMutation.updateTransforms =\n        transformMutation.transform!.fieldTransforms;\n      dbBatch.mutations.splice(i + 1, 1);\n      ++i;\n    }\n  }\n\n  const mutations = dbBatch.mutations.map(m =>\n    fromMutation(localSerializer.remoteSerializer, m)\n  );\n  const timestamp = Timestamp.fromMillis(dbBatch.localWriteTimeMs);\n  return new MutationBatch(\n    dbBatch.batchId,\n    timestamp,\n    baseMutations,\n    mutations\n  );\n}\n\n/** Decodes a DbTarget into TargetData */\nexport function fromDbTarget(dbTarget: DbTarget): TargetData {\n  const version = fromDbTimestamp(dbTarget.readTime);\n  const lastLimboFreeSnapshotVersion =\n    dbTarget.lastLimboFreeSnapshotVersion !== undefined\n      ? fromDbTimestamp(dbTarget.lastLimboFreeSnapshotVersion)\n      : SnapshotVersion.min();\n\n  let target: Target;\n  if (isDocumentQuery(dbTarget.query)) {\n    target = fromDocumentsTarget(dbTarget.query);\n  } else {\n    target = fromQueryTarget(dbTarget.query);\n  }\n  return new TargetData(\n    target,\n    dbTarget.targetId,\n    TargetPurpose.Listen,\n    dbTarget.lastListenSequenceNumber,\n    version,\n    lastLimboFreeSnapshotVersion,\n    ByteString.fromBase64String(dbTarget.resumeToken)\n  );\n}\n\n/** Encodes TargetData into a DbTarget for storage locally. */\nexport function toDbTarget(\n  localSerializer: LocalSerializer,\n  targetData: TargetData\n): DbTarget {\n  debugAssert(\n    TargetPurpose.Listen === targetData.purpose,\n    'Only queries with purpose ' +\n      TargetPurpose.Listen +\n      ' may be stored, got ' +\n      targetData.purpose\n  );\n  const dbTimestamp = toDbTimestamp(targetData.snapshotVersion);\n  const dbLastLimboFreeTimestamp = toDbTimestamp(\n    targetData.lastLimboFreeSnapshotVersion\n  );\n  let queryProto: DbQuery;\n  if (targetIsDocumentTarget(targetData.target)) {\n    queryProto = toDocumentsTarget(\n      localSerializer.remoteSerializer,\n      targetData.target\n    );\n  } else {\n    queryProto = toQueryTarget(\n      localSerializer.remoteSerializer,\n      targetData.target\n    );\n  }\n\n  // We can't store the resumeToken as a ByteString in IndexedDb, so we\n  // convert it to a base64 string for storage.\n  const resumeToken = targetData.resumeToken.toBase64();\n\n  // lastListenSequenceNumber is always 0 until we do real GC.\n  return {\n    targetId: targetData.targetId,\n    canonicalId: canonifyTarget(targetData.target),\n    readTime: dbTimestamp,\n    resumeToken,\n    lastListenSequenceNumber: targetData.sequenceNumber,\n    lastLimboFreeSnapshotVersion: dbLastLimboFreeTimestamp,\n    query: queryProto\n  };\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\nfunction isDocumentQuery(dbQuery: DbQuery): dbQuery is PublicDocumentsTarget {\n  return (dbQuery as PublicDocumentsTarget).documents !== undefined;\n}\n\n/** Encodes a DbBundle to a BundleMetadata object. */\nexport function fromDbBundle(dbBundle: DbBundle): BundleMetadata {\n  return {\n    id: dbBundle.bundleId,\n    createTime: fromDbTimestamp(dbBundle.createTime),\n    version: dbBundle.version\n  };\n}\n\n/** Encodes a BundleMetadata to a DbBundle. */\nexport function toDbBundle(metadata: ProtoBundleMetadata): DbBundle {\n  return {\n    bundleId: metadata.id!,\n    createTime: toDbTimestamp(fromVersion(metadata.createTime!)),\n    version: metadata.version!\n  };\n}\n\n/** Encodes a DbNamedQuery to a NamedQuery. */\nexport function fromDbNamedQuery(dbNamedQuery: DbNamedQuery): NamedQuery {\n  return {\n    name: dbNamedQuery.name,\n    query: fromBundledQuery(dbNamedQuery.bundledQuery),\n    readTime: fromDbTimestamp(dbNamedQuery.readTime)\n  };\n}\n\n/** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */\nexport function toDbNamedQuery(query: ProtoNamedQuery): DbNamedQuery {\n  return {\n    name: query.name!,\n    readTime: toDbTimestamp(fromVersion(query.readTime!)),\n    bundledQuery: query.bundledQuery!\n  };\n}\n\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nexport function fromBundledQuery(bundledQuery: ProtoBundledQuery): Query {\n  const query = convertQueryTargetToQuery({\n    parent: bundledQuery.parent!,\n    structuredQuery: bundledQuery.structuredQuery!\n  });\n  if (bundledQuery.limitType === 'LAST') {\n    debugAssert(\n      !!query.limit,\n      'Bundled query has limitType LAST, but limit is null'\n    );\n    return queryWithLimit(query, query.limit, LimitType.Last);\n  }\n  return query;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\nexport function fromProtoNamedQuery(namedQuery: ProtoNamedQuery): NamedQuery {\n  return {\n    name: namedQuery.name!,\n    query: fromBundledQuery(namedQuery.bundledQuery!),\n    readTime: fromVersion(namedQuery.readTime!)\n  };\n}\n\n/** Decodes a BundleMetadata proto into a BundleMetadata object. */\nexport function fromBundleMetadata(\n  metadata: ProtoBundleMetadata\n): BundleMetadata {\n  return {\n    id: metadata.id!,\n    version: metadata.version!,\n    createTime: fromVersion(metadata.createTime!)\n  };\n}\n\n/** Encodes a DbDocumentOverlay object to an Overlay model object. */\nexport function fromDbDocumentOverlay(\n  localSerializer: LocalSerializer,\n  dbDocumentOverlay: DbDocumentOverlay\n): Overlay {\n  return new Overlay(\n    dbDocumentOverlay.largestBatchId,\n    fromMutation(\n      localSerializer.remoteSerializer,\n      dbDocumentOverlay.overlayMutation\n    )\n  );\n}\n\n/** Decodes an Overlay model object into a DbDocumentOverlay object. */\nexport function toDbDocumentOverlay(\n  localSerializer: LocalSerializer,\n  userId: string,\n  overlay: Overlay\n): DbDocumentOverlay {\n  const [_, collectionPath, documentId] = toDbDocumentOverlayKey(\n    userId,\n    overlay.mutation.key\n  );\n  return {\n    userId,\n    collectionPath,\n    documentId,\n    collectionGroup: overlay.mutation.key.getCollectionGroup(),\n    largestBatchId: overlay.largestBatchId,\n    overlayMutation: toMutation(\n      localSerializer.remoteSerializer,\n      overlay.mutation\n    )\n  };\n}\n\n/**\n * Returns the DbDocumentOverlayKey corresponding to the given user and\n * document key.\n */\nexport function toDbDocumentOverlayKey(\n  userId: string,\n  docKey: DocumentKey\n): DbDocumentOverlayKey {\n  const docId = docKey.path.lastSegment();\n  const collectionPath = encodeResourcePath(docKey.path.popLast());\n  return [userId, collectionPath, docId];\n}\n\nexport function toDbIndexConfiguration(\n  index: FieldIndex\n): DbIndexConfiguration {\n  return {\n    indexId: index.indexId,\n    collectionGroup: index.collectionGroup,\n    fields: index.fields.map(s => [s.fieldPath.canonicalString(), s.kind])\n  };\n}\n\nexport function fromDbIndexConfiguration(\n  index: DbIndexConfiguration,\n  state: DbIndexState | null\n): FieldIndex {\n  const decodedState = state\n    ? new IndexState(\n        state.sequenceNumber,\n        new IndexOffset(\n          fromDbTimestamp(state.readTime),\n          new DocumentKey(decodeResourcePath(state.documentKey)),\n          state.largestBatchId\n        )\n      )\n    : IndexState.empty();\n  const decodedSegments = index.fields.map(\n    ([fieldPath, kind]) =>\n      new IndexSegment(FieldPath.fromServerFormat(fieldPath), kind)\n  );\n  return new FieldIndex(\n    index.indexId!,\n    index.collectionGroup,\n    decodedSegments,\n    decodedState\n  );\n}\n\nexport function toDbIndexState(\n  indexId: number,\n  user: User,\n  sequenceNumber: number,\n  offset: IndexOffset\n): DbIndexState {\n  return {\n    indexId,\n    uid: user.uid || '',\n    sequenceNumber,\n    readTime: toDbTimestamp(offset.readTime),\n    documentKey: encodeResourcePath(offset.documentKey.path),\n    largestBatchId: offset.largestBatchId\n  };\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport { normalizeByteString, normalizeNumber } from '../model/normalize';\nimport { isMaxValue } from '../model/values';\nimport { ArrayValue, MapValue, Value } from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { isNegativeZero } from '../util/types';\n\nimport { DirectionalIndexByteEncoder } from './directional_index_byte_encoder';\n\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\n\nconst INDEX_TYPE_NULL = 5;\nconst INDEX_TYPE_BOOLEAN = 10;\nconst INDEX_TYPE_NAN = 13;\nconst INDEX_TYPE_NUMBER = 15;\nconst INDEX_TYPE_TIMESTAMP = 20;\nconst INDEX_TYPE_STRING = 25;\nconst INDEX_TYPE_BLOB = 30;\nconst INDEX_TYPE_REFERENCE = 37;\nconst INDEX_TYPE_GEOPOINT = 45;\nconst INDEX_TYPE_ARRAY = 50;\nconst INDEX_TYPE_MAP = 55;\nconst INDEX_TYPE_REFERENCE_SEGMENT = 60;\n\n// A terminator that indicates that a truncatable value was not truncated.\n// This must be smaller than all other type labels.\nconst NOT_TRUNCATED = 2;\n\n/** Firestore index value writer.  */\nexport class FirestoreIndexValueWriter {\n  static INSTANCE = new FirestoreIndexValueWriter();\n\n  private constructor() {}\n\n  // The write methods below short-circuit writing terminators for values\n  // containing a (terminating) truncated value.\n  //\n  // As an example, consider the resulting encoding for:\n  //\n  // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n  // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n  // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n\n  /** Writes an index value.  */\n  writeIndexValue(value: Value, encoder: DirectionalIndexByteEncoder): void {\n    this.writeIndexValueAux(value, encoder);\n    // Write separator to split index values\n    // (see go/firestore-storage-format#encodings).\n    encoder.writeInfinity();\n  }\n\n  private writeIndexValueAux(\n    indexValue: Value,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    if ('nullValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NULL);\n    } else if ('booleanValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BOOLEAN);\n      encoder.writeNumber(indexValue.booleanValue ? 1 : 0);\n    } else if ('integerValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n      encoder.writeNumber(normalizeNumber(indexValue.integerValue));\n    } else if ('doubleValue' in indexValue) {\n      const n = normalizeNumber(indexValue.doubleValue);\n      if (isNaN(n)) {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NAN);\n      } else {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n        if (isNegativeZero(n)) {\n          // -0.0, 0 and 0.0 are all considered the same\n          encoder.writeNumber(0.0);\n        } else {\n          encoder.writeNumber(n);\n        }\n      }\n    } else if ('timestampValue' in indexValue) {\n      const timestamp = indexValue.timestampValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_TIMESTAMP);\n      if (typeof timestamp === 'string') {\n        encoder.writeString(timestamp);\n      } else {\n        encoder.writeString(`${timestamp.seconds || ''}`);\n        encoder.writeNumber(timestamp.nanos || 0);\n      }\n    } else if ('stringValue' in indexValue) {\n      this.writeIndexString(indexValue.stringValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else if ('bytesValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BLOB);\n      encoder.writeBytes(normalizeByteString(indexValue.bytesValue!));\n      this.writeTruncationMarker(encoder);\n    } else if ('referenceValue' in indexValue) {\n      this.writeIndexEntityRef(indexValue.referenceValue!, encoder);\n    } else if ('geoPointValue' in indexValue) {\n      const geoPoint = indexValue.geoPointValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_GEOPOINT);\n      encoder.writeNumber(geoPoint.latitude || 0);\n      encoder.writeNumber(geoPoint.longitude || 0);\n    } else if ('mapValue' in indexValue) {\n      if (isMaxValue(indexValue)) {\n        this.writeValueTypeLabel(encoder, Number.MAX_SAFE_INTEGER);\n      } else {\n        this.writeIndexMap(indexValue.mapValue!, encoder);\n        this.writeTruncationMarker(encoder);\n      }\n    } else if ('arrayValue' in indexValue) {\n      this.writeIndexArray(indexValue.arrayValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else {\n      fail('unknown index value type ' + indexValue);\n    }\n  }\n\n  private writeIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_STRING);\n    this.writeUnlabeledIndexString(stringIndexValue, encoder);\n  }\n\n  private writeUnlabeledIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    encoder.writeString(stringIndexValue);\n  }\n\n  private writeIndexMap(\n    mapIndexValue: MapValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const map = mapIndexValue.fields || {};\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_MAP);\n    for (const key of Object.keys(map)) {\n      this.writeIndexString(key, encoder);\n      this.writeIndexValueAux(map[key], encoder);\n    }\n  }\n\n  private writeIndexArray(\n    arrayIndexValue: ArrayValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const values = arrayIndexValue.values || [];\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_ARRAY);\n    for (const element of values) {\n      this.writeIndexValueAux(element, encoder);\n    }\n  }\n\n  private writeIndexEntityRef(\n    referenceValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE);\n    const path = DocumentKey.fromName(referenceValue).path;\n    path.forEach(segment => {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE_SEGMENT);\n      this.writeUnlabeledIndexString(segment, encoder);\n    });\n  }\n\n  private writeValueTypeLabel(\n    encoder: DirectionalIndexByteEncoder,\n    typeOrder: number\n  ): void {\n    encoder.writeNumber(typeOrder);\n  }\n\n  private writeTruncationMarker(encoder: DirectionalIndexByteEncoder): void {\n    // While the SDK does not implement truncation, the truncation marker is\n    // used to terminate all variable length values (which are strings, bytes,\n    // references, arrays and maps).\n    encoder.writeNumber(NOT_TRUNCATED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Target } from '../core/target';\nimport { DocumentMap } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldIndex, IndexOffset } from '../model/field_index';\nimport { ResourcePath } from '../model/path';\nimport { debugAssert } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { IndexManager, IndexType } from './index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory implementation of IndexManager.\n */\nexport class MemoryIndexManager implements IndexManager {\n  private collectionParentIndex = new MemoryCollectionParentIndex();\n\n  addToCollectionParentIndex(\n    transaction: PersistenceTransaction,\n    collectionPath: ResourcePath\n  ): PersistencePromise<void> {\n    this.collectionParentIndex.add(collectionPath);\n    return PersistencePromise.resolve();\n  }\n\n  getCollectionParents(\n    transaction: PersistenceTransaction,\n    collectionId: string\n  ): PersistencePromise<ResourcePath[]> {\n    return PersistencePromise.resolve(\n      this.collectionParentIndex.getEntries(collectionId)\n    );\n  }\n\n  addFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  deleteFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  deleteAllFieldIndexes(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  createTargetIndexes(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  getDocumentsMatchingTarget(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<DocumentKey[] | null> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<DocumentKey[] | null>(null);\n  }\n\n  getIndexType(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexType> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<IndexType>(IndexType.NONE);\n  }\n\n  getFieldIndexes(\n    transaction: PersistenceTransaction,\n    collectionGroup?: string\n  ): PersistencePromise<FieldIndex[]> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<FieldIndex[]>([]);\n  }\n\n  getNextCollectionGroupToUpdate(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<string | null> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<string | null>(null);\n  }\n\n  getMinOffset(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.resolve(IndexOffset.min());\n  }\n\n  getMinOffsetFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.resolve(IndexOffset.min());\n  }\n\n  updateCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  updateIndexEntries(\n    transaction: PersistenceTransaction,\n    documents: DocumentMap\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n}\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */\nexport class MemoryCollectionParentIndex {\n  private index = {} as {\n    [collectionId: string]: SortedSet<ResourcePath>;\n  };\n\n  // Returns false if the entry already existed.\n  add(collectionPath: ResourcePath): boolean {\n    debugAssert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    const collectionId = collectionPath.lastSegment();\n    const parentPath = collectionPath.popLast();\n    const existingParents =\n      this.index[collectionId] ||\n      new SortedSet<ResourcePath>(ResourcePath.comparator);\n    const added = !existingParents.has(parentPath);\n    this.index[collectionId] = existingParents.add(parentPath);\n    return added;\n  }\n\n  has(collectionPath: ResourcePath): boolean {\n    const collectionId = collectionPath.lastSegment();\n    const parentPath = collectionPath.popLast();\n    const existingParents = this.index[collectionId];\n    return existingParents && existingParents.has(parentPath);\n  }\n\n  getEntries(collectionId: string): ResourcePath[] {\n    const parentPaths =\n      this.index[collectionId] ||\n      new SortedSet<ResourcePath>(ResourcePath.comparator);\n    return parentPaths.toArray();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport {\n  canonifyTarget,\n  newTarget,\n  Target,\n  targetEquals,\n  targetGetArrayValues,\n  targetGetLowerBound,\n  targetGetNotInValues,\n  targetGetSegmentCount,\n  targetGetUpperBound,\n  targetHasLimit\n} from '../core/target';\nimport { FirestoreIndexValueWriter } from '../index/firestore_index_value_writer';\nimport { IndexByteEncoder } from '../index/index_byte_encoder';\nimport { IndexEntry, indexEntryComparator } from '../index/index_entry';\nimport { documentKeySet, DocumentMap } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexGetArraySegment,\n  fieldIndexGetDirectionalSegments,\n  fieldIndexGetKeyOrder,\n  fieldIndexToString,\n  IndexKind,\n  IndexOffset,\n  indexOffsetComparator,\n  IndexSegment\n} from '../model/field_index';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { TargetIndexMatcher } from '../model/target_index_matcher';\nimport { isArray, refValue } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { logDebug } from '../util/log';\nimport { getDnfTerms } from '../util/logic_utils';\nimport { immediateSuccessor, primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { diffSortedSets, SortedSet } from '../util/sorted_set';\n\nimport {\n  decodeResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { IndexManager, IndexType } from './index_manager';\nimport {\n  DbCollectionParent,\n  DbIndexConfiguration,\n  DbIndexEntry,\n  DbIndexState\n} from './indexeddb_schema';\nimport {\n  DbCollectionParentKey,\n  DbCollectionParentStore,\n  DbIndexConfigurationCollectionGroupIndex,\n  DbIndexConfigurationKey,\n  DbIndexConfigurationStore,\n  DbIndexEntryDocumentKeyIndex,\n  DbIndexEntryKey,\n  DbIndexEntryStore,\n  DbIndexStateKey,\n  DbIndexStateSequenceNumberIndex,\n  DbIndexStateStore\n} from './indexeddb_sentinels';\nimport { getStore } from './indexeddb_transaction';\nimport {\n  fromDbIndexConfiguration,\n  toDbIndexConfiguration,\n  toDbIndexState\n} from './local_serializer';\nimport { MemoryCollectionParentIndex } from './memory_index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { SimpleDbStore } from './simple_db';\n\nconst LOG_TAG = 'IndexedDbIndexManager';\n\nconst EMPTY_VALUE = new Uint8Array(0);\n\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nexport class IndexedDbIndexManager implements IndexManager {\n  /**\n   * An in-memory copy of the index entries we've already written since the SDK\n   * launched. Used to avoid re-writing the same entry repeatedly.\n   *\n   * This is *NOT* a complete cache of what's in persistence and so can never be\n   * used to satisfy reads.\n   */\n  private collectionParentsCache = new MemoryCollectionParentIndex();\n\n  private uid: string;\n\n  /**\n   * Maps from a target to its equivalent list of sub-targets. Each sub-target\n   * contains only one term from the target's disjunctive normal form (DNF).\n   */\n  private targetToDnfSubTargets = new ObjectMap<Target, Target[]>(\n    t => canonifyTarget(t),\n    (l, r) => targetEquals(l, r)\n  );\n\n  constructor(private user: User, private readonly databaseId: DatabaseId) {\n    this.uid = user.uid || '';\n  }\n\n  /**\n   * Adds a new entry to the collection parent index.\n   *\n   * Repeated calls for the same collectionPath should be avoided within a\n   * transaction as IndexedDbIndexManager only caches writes once a transaction\n   * has been committed.\n   */\n  addToCollectionParentIndex(\n    transaction: PersistenceTransaction,\n    collectionPath: ResourcePath\n  ): PersistencePromise<void> {\n    debugAssert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    if (!this.collectionParentsCache.has(collectionPath)) {\n      const collectionId = collectionPath.lastSegment();\n      const parentPath = collectionPath.popLast();\n\n      transaction.addOnCommittedListener(() => {\n        // Add the collection to the in memory cache only if the transaction was\n        // successfully committed.\n        this.collectionParentsCache.add(collectionPath);\n      });\n\n      const collectionParent: DbCollectionParent = {\n        collectionId,\n        parent: encodeResourcePath(parentPath)\n      };\n      return collectionParentsStore(transaction).put(collectionParent);\n    }\n    return PersistencePromise.resolve();\n  }\n\n  getCollectionParents(\n    transaction: PersistenceTransaction,\n    collectionId: string\n  ): PersistencePromise<ResourcePath[]> {\n    const parentPaths = [] as ResourcePath[];\n    const range = IDBKeyRange.bound(\n      [collectionId, ''],\n      [immediateSuccessor(collectionId), ''],\n      /*lowerOpen=*/ false,\n      /*upperOpen=*/ true\n    );\n    return collectionParentsStore(transaction)\n      .loadAll(range)\n      .next(entries => {\n        for (const entry of entries) {\n          // This collectionId guard shouldn't be necessary (and isn't as long\n          // as we're running in a real browser), but there's a bug in\n          // indexeddbshim that breaks our range in our tests running in node:\n          // https://github.com/axemclion/IndexedDBShim/issues/334\n          if (entry.collectionId !== collectionId) {\n            break;\n          }\n          parentPaths.push(decodeResourcePath(entry.parent));\n        }\n        return parentPaths;\n      });\n  }\n\n  addFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // TODO(indexing): Verify that the auto-incrementing index ID works in\n    // Safari & Firefox.\n    const indexes = indexConfigurationStore(transaction);\n    const dbIndex = toDbIndexConfiguration(index);\n    delete dbIndex.indexId; // `indexId` is auto-populated by IndexedDb\n    const result = indexes.add(dbIndex);\n    if (index.indexState) {\n      const states = indexStateStore(transaction);\n      return result.next(indexId => {\n        states.put(\n          toDbIndexState(\n            indexId,\n            this.user,\n            index.indexState.sequenceNumber,\n            index.indexState.offset\n          )\n        );\n      });\n    } else {\n      return result.next();\n    }\n  }\n\n  deleteFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    return indexes\n      .delete(index.indexId)\n      .next(() =>\n        states.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      )\n      .next(() =>\n        entries.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      );\n  }\n\n  deleteAllFieldIndexes(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return indexes\n      .deleteAll()\n      .next(() => entries.deleteAll())\n      .next(() => states.deleteAll());\n  }\n\n  createTargetIndexes(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getIndexType(transaction, subTarget).next(type => {\n          if (type === IndexType.NONE || type === IndexType.PARTIAL) {\n            const targetIndexMatcher = new TargetIndexMatcher(subTarget);\n            const fieldIndex = targetIndexMatcher.buildTargetIndex();\n            if (fieldIndex != null) {\n              return this.addFieldIndex(transaction, fieldIndex);\n            }\n          }\n        });\n      }\n    );\n  }\n\n  getDocumentsMatchingTarget(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<DocumentKey[] | null> {\n    const indexEntries = indexEntriesStore(transaction);\n\n    let canServeTarget = true;\n    const indexes = new Map<Target, FieldIndex | null>();\n\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getFieldIndex(transaction, subTarget).next(index => {\n          canServeTarget &&= !!index;\n          indexes.set(subTarget, index);\n        });\n      }\n    ).next(() => {\n      if (!canServeTarget) {\n        return PersistencePromise.resolve(null as DocumentKey[] | null);\n      } else {\n        let existingKeys = documentKeySet();\n        const result: DocumentKey[] = [];\n        return PersistencePromise.forEach(indexes, (index, subTarget) => {\n          logDebug(\n            LOG_TAG,\n            `Using index ${fieldIndexToString(\n              index!\n            )} to execute ${canonifyTarget(target)}`\n          );\n\n          const arrayValues = targetGetArrayValues(subTarget, index!);\n          const notInValues = targetGetNotInValues(subTarget, index!);\n          const lowerBound = targetGetLowerBound(subTarget, index!);\n          const upperBound = targetGetUpperBound(subTarget, index!);\n\n          const lowerBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            lowerBound\n          );\n          const upperBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            upperBound\n          );\n          const notInEncoded = this.encodeValues(\n            index!,\n            subTarget,\n            notInValues\n          );\n\n          const indexRanges = this.generateIndexRanges(\n            index!.indexId,\n            arrayValues,\n            lowerBoundEncoded,\n            lowerBound.inclusive,\n            upperBoundEncoded,\n            upperBound.inclusive,\n            notInEncoded\n          );\n          return PersistencePromise.forEach(\n            indexRanges,\n            (indexRange: IDBKeyRange) => {\n              return indexEntries\n                .loadFirst(indexRange, target.limit)\n                .next(entries => {\n                  entries.forEach(entry => {\n                    const documentKey = DocumentKey.fromSegments(\n                      entry.documentKey\n                    );\n                    if (!existingKeys.has(documentKey)) {\n                      existingKeys = existingKeys.add(documentKey);\n                      result.push(documentKey);\n                    }\n                  });\n                });\n            }\n          );\n        }).next(() => result as DocumentKey[] | null);\n      }\n    });\n  }\n\n  private getSubTargets(target: Target): Target[] {\n    let subTargets = this.targetToDnfSubTargets.get(target);\n    if (subTargets) {\n      return subTargets;\n    }\n\n    if (target.filters.length === 0) {\n      subTargets = [target];\n    } else {\n      // There is an implicit AND operation between all the filters stored in the target\n      const dnf: Filter[] = getDnfTerms(\n        CompositeFilter.create(target.filters, CompositeOperator.AND)\n      );\n\n      subTargets = dnf.map(term =>\n        newTarget(\n          target.path,\n          target.collectionGroup,\n          target.orderBy,\n          term.getFilters(),\n          target.limit,\n          target.startAt,\n          target.endAt\n        )\n      );\n    }\n\n    this.targetToDnfSubTargets.set(target, subTargets);\n    return subTargets;\n  }\n\n  /**\n   * Constructs a key range query on `DbIndexEntryStore` that unions all\n   * bounds.\n   */\n  private generateIndexRanges(\n    indexId: number,\n    arrayValues: ProtoValue[] | null,\n    lowerBounds: Uint8Array[],\n    lowerBoundInclusive: boolean,\n    upperBounds: Uint8Array[],\n    upperBoundInclusive: boolean,\n    notInValues: Uint8Array[]\n  ): IDBKeyRange[] {\n    // The number of total index scans we union together. This is similar to a\n    // distributed normal form, but adapted for array values. We create a single\n    // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n    // combined with the values from the query bounds.\n    const totalScans =\n      (arrayValues != null ? arrayValues.length : 1) *\n      Math.max(lowerBounds.length, upperBounds.length);\n    const scansPerArrayElement =\n      totalScans / (arrayValues != null ? arrayValues.length : 1);\n\n    const indexRanges: IDBKeyRange[] = [];\n    for (let i = 0; i < totalScans; ++i) {\n      const arrayValue = arrayValues\n        ? this.encodeSingleElement(arrayValues[i / scansPerArrayElement])\n        : EMPTY_VALUE;\n\n      const lowerBound = this.generateLowerBound(\n        indexId,\n        arrayValue,\n        lowerBounds[i % scansPerArrayElement],\n        lowerBoundInclusive\n      );\n      const upperBound = this.generateUpperBound(\n        indexId,\n        arrayValue,\n        upperBounds[i % scansPerArrayElement],\n        upperBoundInclusive\n      );\n\n      const notInBound = notInValues.map(notIn =>\n        this.generateLowerBound(\n          indexId,\n          arrayValue,\n          notIn,\n          /* inclusive= */ true\n        )\n      );\n\n      indexRanges.push(...this.createRange(lowerBound, upperBound, notInBound));\n    }\n\n    return indexRanges;\n  }\n\n  /** Generates the lower bound for `arrayValue` and `directionalValue`. */\n  private generateLowerBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry : entry.successor();\n  }\n\n  /** Generates the upper bound for `arrayValue` and `directionalValue`. */\n  private generateUpperBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry.successor() : entry;\n  }\n\n  private getFieldIndex(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<FieldIndex | null> {\n    const targetIndexMatcher = new TargetIndexMatcher(target);\n    const collectionGroup =\n      target.collectionGroup != null\n        ? target.collectionGroup\n        : target.path.lastSegment();\n\n    return this.getFieldIndexes(transaction, collectionGroup).next(indexes => {\n      // Return the index with the most number of segments.\n      let index: FieldIndex | null = null;\n      for (const candidate of indexes) {\n        const matches = targetIndexMatcher.servedByIndex(candidate);\n        if (\n          matches &&\n          (!index || candidate.fields.length > index.fields.length)\n        ) {\n          index = candidate;\n        }\n      }\n      return index;\n    });\n  }\n\n  getIndexType(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexType> {\n    let indexType = IndexType.FULL;\n    const subTargets = this.getSubTargets(target);\n    return PersistencePromise.forEach(subTargets, (target: Target) => {\n      return this.getFieldIndex(transaction, target).next(index => {\n        if (!index) {\n          indexType = IndexType.NONE;\n        } else if (\n          indexType !== IndexType.NONE &&\n          index.fields.length < targetGetSegmentCount(target)\n        ) {\n          indexType = IndexType.PARTIAL;\n        }\n      });\n    }).next(() => {\n      // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider\n      // OR queries that have a `limit` to have a partial index. For such queries we perform sorting\n      // and apply the limit in memory as a post-processing step.\n      if (\n        targetHasLimit(target) &&\n        subTargets.length > 1 &&\n        indexType === IndexType.FULL\n      ) {\n        return IndexType.PARTIAL;\n      }\n\n      return indexType;\n    });\n  }\n\n  /**\n   * Returns the byte encoded form of the directional values in the field index.\n   * Returns `null` if the document does not have all fields specified in the\n   * index.\n   */\n  private encodeDirectionalElements(\n    fieldIndex: FieldIndex,\n    document: Document\n  ): Uint8Array | null {\n    const encoder = new IndexByteEncoder();\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const field = document.data.field(segment.fieldPath);\n      if (field == null) {\n        return null;\n      }\n      const directionalEncoder = encoder.forKind(segment.kind);\n      FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n        field,\n        directionalEncoder\n      );\n    }\n    return encoder.encodedBytes();\n  }\n\n  /** Encodes a single value to the ascending index format. */\n  private encodeSingleElement(value: ProtoValue): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      value,\n      encoder.forKind(IndexKind.ASCENDING)\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Returns an encoded form of the document key that sorts based on the key\n   * ordering of the field index.\n   */\n  private encodeDirectionalKey(\n    fieldIndex: FieldIndex,\n    documentKey: DocumentKey\n  ): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      refValue(this.databaseId, documentKey),\n      encoder.forKind(fieldIndexGetKeyOrder(fieldIndex))\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Encodes the given field values according to the specification in `target`.\n   * For IN queries, a list of possible values is returned.\n   */\n  private encodeValues(\n    fieldIndex: FieldIndex,\n    target: Target,\n    values: ProtoValue[] | null\n  ): Uint8Array[] {\n    if (values === null) {\n      return [];\n    }\n\n    let encoders: IndexByteEncoder[] = [];\n    encoders.push(new IndexByteEncoder());\n\n    let valueIdx = 0;\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const value = values[valueIdx++];\n      for (const encoder of encoders) {\n        if (this.isInFilter(target, segment.fieldPath) && isArray(value)) {\n          encoders = this.expandIndexValues(encoders, segment, value);\n        } else {\n          const directionalEncoder = encoder.forKind(segment.kind);\n          FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n            value,\n            directionalEncoder\n          );\n        }\n      }\n    }\n    return this.getEncodedBytes(encoders);\n  }\n\n  /**\n   * Encodes the given bounds according to the specification in `target`. For IN\n   * queries, a list of possible values is returned.\n   */\n  private encodeBound(\n    fieldIndex: FieldIndex,\n    target: Target,\n    bound: Bound\n  ): Uint8Array[] {\n    return this.encodeValues(fieldIndex, target, bound.position);\n  }\n\n  /** Returns the byte representation for the provided encoders. */\n  private getEncodedBytes(encoders: IndexByteEncoder[]): Uint8Array[] {\n    const result: Uint8Array[] = [];\n    for (let i = 0; i < encoders.length; ++i) {\n      result[i] = encoders[i].encodedBytes();\n    }\n    return result;\n  }\n\n  /**\n   * Creates a separate encoder for each element of an array.\n   *\n   * The method appends each value to all existing encoders (e.g. filter(\"a\",\n   * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n   * list of new encoders is returned.\n   */\n  private expandIndexValues(\n    encoders: IndexByteEncoder[],\n    segment: IndexSegment,\n    value: ProtoValue\n  ): IndexByteEncoder[] {\n    const prefixes = [...encoders];\n    const results: IndexByteEncoder[] = [];\n    for (const arrayElement of value.arrayValue!.values || []) {\n      for (const prefix of prefixes) {\n        const clonedEncoder = new IndexByteEncoder();\n        clonedEncoder.seed(prefix.encodedBytes());\n        FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n          arrayElement,\n          clonedEncoder.forKind(segment.kind)\n        );\n        results.push(clonedEncoder);\n      }\n    }\n    return results;\n  }\n\n  private isInFilter(target: Target, fieldPath: FieldPath): boolean {\n    return !!target.filters.find(\n      f =>\n        f instanceof FieldFilter &&\n        f.field.isEqual(fieldPath) &&\n        (f.op === Operator.IN || f.op === Operator.NOT_IN)\n    );\n  }\n\n  getFieldIndexes(\n    transaction: PersistenceTransaction,\n    collectionGroup?: string\n  ): PersistencePromise<FieldIndex[]> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return (\n      collectionGroup\n        ? indexes.loadAll(\n            DbIndexConfigurationCollectionGroupIndex,\n            IDBKeyRange.bound(collectionGroup, collectionGroup)\n          )\n        : indexes.loadAll()\n    ).next(indexConfigs => {\n      const result: FieldIndex[] = [];\n      return PersistencePromise.forEach(\n        indexConfigs,\n        (indexConfig: DbIndexConfiguration) => {\n          return states\n            .get([indexConfig.indexId!, this.uid])\n            .next(indexState => {\n              result.push(fromDbIndexConfiguration(indexConfig, indexState));\n            });\n        }\n      ).next(() => result);\n    });\n  }\n\n  getNextCollectionGroupToUpdate(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<string | null> {\n    return this.getFieldIndexes(transaction).next(indexes => {\n      if (indexes.length === 0) {\n        return null;\n      }\n      indexes.sort((l, r) => {\n        const cmp = l.indexState.sequenceNumber - r.indexState.sequenceNumber;\n        return cmp !== 0\n          ? cmp\n          : primitiveComparator(l.collectionGroup, r.collectionGroup);\n      });\n      return indexes[0].collectionGroup;\n    });\n  }\n\n  updateCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    return this.getNextSequenceNumber(transaction).next(nextSequenceNumber =>\n      indexes\n        .loadAll(\n          DbIndexConfigurationCollectionGroupIndex,\n          IDBKeyRange.bound(collectionGroup, collectionGroup)\n        )\n        .next(configs =>\n          PersistencePromise.forEach(configs, (config: DbIndexConfiguration) =>\n            states.put(\n              toDbIndexState(\n                config.indexId!,\n                this.user,\n                nextSequenceNumber,\n                offset\n              )\n            )\n          )\n        )\n    );\n  }\n\n  updateIndexEntries(\n    transaction: PersistenceTransaction,\n    documents: DocumentMap\n  ): PersistencePromise<void> {\n    // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n    // it could be used across different IndexedDB transactions. As any cached\n    // data might be invalidated by other multi-tab clients, we can only trust\n    // data within a single IndexedDB transaction. We therefore add a cache\n    // here.\n    const memoizedIndexes = new Map<string, FieldIndex[]>();\n    return PersistencePromise.forEach(documents, (key, doc) => {\n      const memoizedCollectionIndexes = memoizedIndexes.get(\n        key.collectionGroup\n      );\n      const fieldIndexes = memoizedCollectionIndexes\n        ? PersistencePromise.resolve(memoizedCollectionIndexes)\n        : this.getFieldIndexes(transaction, key.collectionGroup);\n\n      return fieldIndexes.next(fieldIndexes => {\n        memoizedIndexes.set(key.collectionGroup, fieldIndexes);\n        return PersistencePromise.forEach(\n          fieldIndexes,\n          (fieldIndex: FieldIndex) => {\n            return this.getExistingIndexEntries(\n              transaction,\n              key,\n              fieldIndex\n            ).next(existingEntries => {\n              const newEntries = this.computeIndexEntries(doc, fieldIndex);\n              if (!existingEntries.isEqual(newEntries)) {\n                return this.updateEntries(\n                  transaction,\n                  doc,\n                  fieldIndex,\n                  existingEntries,\n                  newEntries\n                );\n              }\n              return PersistencePromise.resolve();\n            });\n          }\n        );\n      });\n    });\n  }\n\n  private addIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.put({\n      indexId: indexEntry.indexId,\n      uid: this.uid,\n      arrayValue: indexEntry.arrayValue,\n      directionalValue: indexEntry.directionalValue,\n      orderedDocumentKey: this.encodeDirectionalKey(fieldIndex, document.key),\n      documentKey: document.key.path.toArray()\n    });\n  }\n\n  private deleteIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.delete([\n      indexEntry.indexId,\n      this.uid,\n      indexEntry.arrayValue,\n      indexEntry.directionalValue,\n      this.encodeDirectionalKey(fieldIndex, document.key),\n      document.key.path.toArray()\n    ]);\n  }\n\n  private getExistingIndexEntries(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey,\n    fieldIndex: FieldIndex\n  ): PersistencePromise<SortedSet<IndexEntry>> {\n    const indexEntries = indexEntriesStore(transaction);\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n    return indexEntries\n      .iterate(\n        {\n          index: DbIndexEntryDocumentKeyIndex,\n          range: IDBKeyRange.only([\n            fieldIndex.indexId,\n            this.uid,\n            this.encodeDirectionalKey(fieldIndex, documentKey)\n          ])\n        },\n        (_, entry) => {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              documentKey,\n              entry.arrayValue,\n              entry.directionalValue\n            )\n          );\n        }\n      )\n      .next(() => results);\n  }\n\n  /** Creates the index entries for the given document. */\n  private computeIndexEntries(\n    document: Document,\n    fieldIndex: FieldIndex\n  ): SortedSet<IndexEntry> {\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n\n    const directionalValue = this.encodeDirectionalElements(\n      fieldIndex,\n      document\n    );\n    if (directionalValue == null) {\n      return results;\n    }\n\n    const arraySegment = fieldIndexGetArraySegment(fieldIndex);\n    if (arraySegment != null) {\n      const value = document.data.field(arraySegment.fieldPath);\n      if (isArray(value)) {\n        for (const arrayValue of value.arrayValue!.values || []) {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              document.key,\n              this.encodeSingleElement(arrayValue),\n              directionalValue\n            )\n          );\n        }\n      }\n    } else {\n      results = results.add(\n        new IndexEntry(\n          fieldIndex.indexId,\n          document.key,\n          EMPTY_VALUE,\n          directionalValue\n        )\n      );\n    }\n\n    return results;\n  }\n\n  /**\n   * Updates the index entries for the provided document by deleting entries\n   * that are no longer referenced in `newEntries` and adding all newly added\n   * entries.\n   */\n  private updateEntries(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    existingEntries: SortedSet<IndexEntry>,\n    newEntries: SortedSet<IndexEntry>\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, \"Updating index entries for document '%s'\", document.key);\n\n    const promises: Array<PersistencePromise<void>> = [];\n    diffSortedSets(\n      existingEntries,\n      newEntries,\n      indexEntryComparator,\n      /* onAdd= */ entry => {\n        promises.push(\n          this.addIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      },\n      /* onRemove= */ entry => {\n        promises.push(\n          this.deleteIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      }\n    );\n\n    return PersistencePromise.waitFor(promises);\n  }\n\n  private getNextSequenceNumber(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<number> {\n    let nextSequenceNumber = 1;\n    const states = indexStateStore(transaction);\n    return states\n      .iterate(\n        {\n          index: DbIndexStateSequenceNumberIndex,\n          reverse: true,\n          range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER])\n        },\n        (_, state, controller) => {\n          controller.done();\n          nextSequenceNumber = state.sequenceNumber + 1;\n        }\n      )\n      .next(() => nextSequenceNumber);\n  }\n\n  /**\n   * Returns a new set of IDB ranges that splits the existing range and excludes\n   * any values that match the `notInValue` from these ranges. As an example,\n   * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n   */\n  private createRange(\n    lower: IndexEntry,\n    upper: IndexEntry,\n    notInValues: IndexEntry[]\n  ): IDBKeyRange[] {\n    // The notIn values need to be sorted and unique so that we can return a\n    // sorted set of non-overlapping ranges.\n    notInValues = notInValues\n      .sort((l, r) => indexEntryComparator(l, r))\n      .filter(\n        (el, i, values) => !i || indexEntryComparator(el, values[i - 1]) !== 0\n      );\n\n    const bounds: IndexEntry[] = [];\n    bounds.push(lower);\n    for (const notInValue of notInValues) {\n      const cmpToLower = indexEntryComparator(notInValue, lower);\n      const cmpToUpper = indexEntryComparator(notInValue, upper);\n\n      if (cmpToLower === 0) {\n        // `notInValue` is the lower bound. We therefore need to raise the bound\n        // to the next value.\n        bounds[0] = lower.successor();\n      } else if (cmpToLower > 0 && cmpToUpper < 0) {\n        // `notInValue` is in the middle of the range\n        bounds.push(notInValue);\n        bounds.push(notInValue.successor());\n      } else if (cmpToUpper > 0) {\n        // `notInValue` (and all following values) are out of the range\n        break;\n      }\n    }\n    bounds.push(upper);\n\n    const ranges: IDBKeyRange[] = [];\n    for (let i = 0; i < bounds.length; i += 2) {\n      // If we encounter two bounds that will create an unmatchable key range,\n      // then we return an empty set of key ranges.\n      if (this.isRangeMatchable(bounds[i], bounds[i + 1])) {\n        return [];\n      }\n\n      const lowerBound = [\n        bounds[i].indexId,\n        this.uid,\n        bounds[i].arrayValue,\n        bounds[i].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      const upperBound = [\n        bounds[i + 1].indexId,\n        this.uid,\n        bounds[i + 1].arrayValue,\n        bounds[i + 1].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      ranges.push(IDBKeyRange.bound(lowerBound, upperBound));\n    }\n    return ranges;\n  }\n\n  isRangeMatchable(lowerBound: IndexEntry, upperBound: IndexEntry): boolean {\n    // If lower bound is greater than the upper bound, then the key\n    // range can never be matched.\n    return indexEntryComparator(lowerBound, upperBound) > 0;\n  }\n\n  getMinOffsetFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string\n  ): PersistencePromise<IndexOffset> {\n    return this.getFieldIndexes(transaction, collectionGroup).next(\n      getMinOffsetFromFieldIndexes\n    );\n  }\n\n  getMinOffset(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.mapArray(\n      this.getSubTargets(target),\n      (subTarget: Target) =>\n        this.getFieldIndex(transaction, subTarget).next(index =>\n          index ? index : fail('Target cannot be served from index')\n        )\n    ).next(getMinOffsetFromFieldIndexes);\n  }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\nfunction collectionParentsStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbCollectionParentKey, DbCollectionParent> {\n  return getStore<DbCollectionParentKey, DbCollectionParent>(\n    txn,\n    DbCollectionParentStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */\nfunction indexEntriesStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexEntryKey, DbIndexEntry> {\n  return getStore<DbIndexEntryKey, DbIndexEntry>(txn, DbIndexEntryStore);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */\nfunction indexConfigurationStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexConfigurationKey, DbIndexConfiguration> {\n  return getStore<DbIndexConfigurationKey, DbIndexConfiguration>(\n    txn,\n    DbIndexConfigurationStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */\nfunction indexStateStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexStateKey, DbIndexState> {\n  return getStore<DbIndexStateKey, DbIndexState>(txn, DbIndexStateStore);\n}\n\nfunction getMinOffsetFromFieldIndexes(fieldIndexes: FieldIndex[]): IndexOffset {\n  hardAssert(\n    fieldIndexes.length !== 0,\n    'Found empty index group when looking for least recent index offset.'\n  );\n\n  let minOffset: IndexOffset = fieldIndexes[0].indexState.offset;\n  let maxBatchId: number = minOffset.largestBatchId;\n  for (let i = 1; i < fieldIndexes.length; i++) {\n    const newOffset: IndexOffset = fieldIndexes[i].indexState.offset;\n    if (indexOffsetComparator(newOffset, minOffset) < 0) {\n      minOffset = newOffset;\n    }\n    if (maxBatchId < newOffset.largestBatchId) {\n      maxBatchId = newOffset.largestBatchId;\n    }\n  }\n  return new IndexOffset(minOffset.readTime, minOffset.documentKey, maxBatchId);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { TargetData } from './target_data';\n\n/**\n * Describes a map whose keys are active target ids. We do not care about the type of the\n * values.\n */\nexport type ActiveTargets = SortedMap<TargetId, unknown>;\n\nexport const GC_DID_NOT_RUN: LruResults = {\n  didRun: false,\n  sequenceNumbersCollected: 0,\n  targetsRemoved: 0,\n  documentsRemoved: 0\n};\n\nexport const LRU_COLLECTION_DISABLED = -1;\nexport const LRU_DEFAULT_CACHE_SIZE_BYTES = 40 * 1024 * 1024;\n\nexport class LruParams {\n  private static readonly DEFAULT_COLLECTION_PERCENTILE = 10;\n  private static readonly DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1000;\n\n  static withCacheSize(cacheSize: number): LruParams {\n    return new LruParams(\n      cacheSize,\n      LruParams.DEFAULT_COLLECTION_PERCENTILE,\n      LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n    );\n  }\n\n  static readonly DEFAULT: LruParams = new LruParams(\n    LRU_DEFAULT_CACHE_SIZE_BYTES,\n    LruParams.DEFAULT_COLLECTION_PERCENTILE,\n    LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n  );\n\n  static readonly DISABLED: LruParams = new LruParams(\n    LRU_COLLECTION_DISABLED,\n    0,\n    0\n  );\n\n  constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    readonly cacheSizeCollectionThreshold: number,\n    // The percentage of sequence numbers that we will attempt to collect\n    readonly percentileToCollect: number,\n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    readonly maximumSequenceNumbersToCollect: number\n  ) {}\n}\n\nexport interface LruGarbageCollector {\n  readonly params: LruParams;\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults>;\n\n  /** Given a percentile of target to collect, returns the number of targets to collect. */\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number>;\n\n  /** Returns the nth sequence number, counting in order from the smallest. */\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes documents that have a sequence number equal to or less than the\n   * upper bound and are not otherwise pinned.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n\n  /**\n   * Removes targets with a sequence number equal to or less than the given\n   * upper bound, and removes document associations with those targets.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n}\n\n/**\n * Describes the results of a garbage collection run. `didRun` will be set to\n * `false` if collection was skipped (either it is disabled or the cache size\n * has not hit the threshold). If collection ran, the other fields will be\n * filled in with the details of the results.\n */\nexport interface LruResults {\n  readonly didRun: boolean;\n  readonly sequenceNumbersCollected: number;\n  readonly targetsRemoved: number;\n  readonly documentsRemoved: number;\n}\n\n/**\n * Persistence layers intending to use LRU Garbage collection should have\n * reference delegates that implement this interface. This interface defines the\n * operations that the LRU garbage collector needs from the persistence layer.\n */\nexport interface LruDelegate {\n  readonly garbageCollector: LruGarbageCollector;\n\n  /** Enumerates all the targets in the TargetCache. */\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (target: TargetData) => void\n  ): PersistencePromise<void>;\n\n  getSequenceNumberCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number>;\n\n  /**\n   * Enumerates sequence numbers for documents not associated with a target.\n   * Note that this may include duplicate sequence numbers.\n   */\n  forEachOrphanedDocumentSequenceNumber(\n    txn: PersistenceTransaction,\n    f: (sequenceNumber: ListenSequenceNumber) => void\n  ): PersistencePromise<void>;\n\n  /**\n   * Removes all targets that have a sequence number less than or equal to\n   * `upperBound`, and are not present in the `activeTargetIds` set.\n   *\n   * @returns the number of targets removed.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes all unreferenced documents from the cache that have a sequence\n   * number less than or equal to the given `upperBound`.\n   *\n   * @returns the number of documents removed.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TargetId } from './types';\n\n/** Offset to ensure non-overlapping target ids. */\nconst OFFSET = 2;\n\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nexport class TargetIdGenerator {\n  constructor(private lastId: number) {}\n\n  next(): TargetId {\n    this.lastId += OFFSET;\n    return this.lastId;\n  }\n\n  static forTargetCache(): TargetIdGenerator {\n    // The target cache generator must return '2' in its first call to `next()`\n    // as there is no differentiation in the protocol layer between an unset\n    // number and the number '0'. If we were to sent a target with target ID\n    // '0', the backend would consider it unset and replace it with its own ID.\n    return new TargetIdGenerator(2 - OFFSET);\n  }\n\n  static forSyncEngine(): TargetIdGenerator {\n    // Sync engine assigns target IDs for limbo document detection.\n    return new TargetIdGenerator(1 - OFFSET);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { DocumentKeySet, MutableDocumentMap } from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert } from '../util/assert';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */\nexport abstract class RemoteDocumentChangeBuffer {\n  // A mapping of document key to the new cache entry that should be written.\n  protected changes: ObjectMap<DocumentKey, MutableDocument> = new ObjectMap(\n    key => key.toString(),\n    (l, r) => l.isEqual(r)\n  );\n\n  private changesApplied = false;\n\n  protected abstract getFromCache(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument>;\n\n  protected abstract getAllFromCache(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap>;\n\n  protected abstract applyChanges(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void>;\n\n  /**\n   * Buffers a `RemoteDocumentCache.addEntry()` call.\n   *\n   * You can only modify documents that have already been retrieved via\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n   */\n  addEntry(document: MutableDocument): void {\n    this.assertNotApplied();\n    this.changes.set(document.key, document);\n  }\n\n  /**\n   * Buffers a `RemoteDocumentCache.removeEntry()` call.\n   *\n   * You can only remove documents that have already been retrieved via\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n   */\n  removeEntry(key: DocumentKey, readTime: SnapshotVersion): void {\n    this.assertNotApplied();\n    this.changes.set(\n      key,\n      MutableDocument.newInvalidDocument(key).setReadTime(readTime)\n    );\n  }\n\n  /**\n   * Looks up an entry in the cache. The buffered changes will first be checked,\n   * and if no buffered change applies, this will forward to\n   * `RemoteDocumentCache.getEntry()`.\n   *\n   * @param transaction - The transaction in which to perform any persistence\n   *     operations.\n   * @param documentKey - The key of the entry to look up.\n   * @returns The cached document or an invalid document if we have nothing\n   * cached.\n   */\n  getEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    this.assertNotApplied();\n    const bufferedEntry = this.changes.get(documentKey);\n    if (bufferedEntry !== undefined) {\n      return PersistencePromise.resolve(bufferedEntry);\n    } else {\n      return this.getFromCache(transaction, documentKey);\n    }\n  }\n\n  /**\n   * Looks up several entries in the cache, forwarding to\n   * `RemoteDocumentCache.getEntry()`.\n   *\n   * @param transaction - The transaction in which to perform any persistence\n   *     operations.\n   * @param documentKeys - The keys of the entries to look up.\n   * @returns A map of cached documents, indexed by key. If an entry cannot be\n   *     found, the corresponding key will be mapped to an invalid document.\n   */\n  getEntries(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    return this.getAllFromCache(transaction, documentKeys);\n  }\n\n  /**\n   * Applies buffered changes to the underlying RemoteDocumentCache, using\n   * the provided transaction.\n   */\n  apply(transaction: PersistenceTransaction): PersistencePromise<void> {\n    this.assertNotApplied();\n    this.changesApplied = true;\n    return this.applyChanges(transaction);\n  }\n\n  /** Helper to assert this.changes is not null  */\n  protected assertNotApplied(): void {\n    debugAssert(!this.changesApplied, 'Changes have already been applied.');\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { FieldMask } from '../model/field_mask';\n\n/**\n * Represents a local view (overlay) of a document, and the fields that are\n * locally mutated.\n */\nexport class OverlayedDocument {\n  constructor(\n    readonly overlayedDocument: Document,\n\n    /**\n     * The fields that are locally mutated by patch mutations.\n     *\n     * If the overlayed\tdocument is from set or delete mutations, this is `null`.\n     * If there is no overlay (mutation) for the document, this is an empty `FieldMask`.\n     */\n    readonly mutatedFields: FieldMask | null\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  asCollectionQueryAtPath,\n  isCollectionGroupQuery,\n  isDocumentQuery,\n  Query,\n  queryMatches\n} from '../core/query';\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  DocumentKeySet,\n  OverlayMap,\n  DocumentMap,\n  MutableDocumentMap,\n  newDocumentKeyMap,\n  newMutationMap,\n  newOverlayMap,\n  documentMap,\n  mutableDocumentMap,\n  documentKeySet,\n  DocumentKeyMap,\n  convertOverlayedDocumentMapToDocumentMap,\n  OverlayedDocumentMap,\n  newOverlayedDocumentMap\n} from '../model/collections';\nimport { Document, MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { IndexOffset, INITIAL_LARGEST_BATCH_ID } from '../model/field_index';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  calculateOverlayMutation,\n  mutationApplyToLocalView,\n  PatchMutation\n} from '../model/mutation';\nimport { Overlay } from '../model/overlay';\nimport { ResourcePath } from '../model/path';\nimport { debugAssert } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { IndexManager } from './index_manager';\nimport { LocalWriteResult } from './local_store_impl';\nimport { MutationQueue } from './mutation_queue';\nimport { OverlayedDocument } from './overlayed_document';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryContext } from './query_context';\nimport { RemoteDocumentCache } from './remote_document_cache';\n\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nexport class LocalDocumentsView {\n  constructor(\n    readonly remoteDocumentCache: RemoteDocumentCache,\n    readonly mutationQueue: MutationQueue,\n    readonly documentOverlayCache: DocumentOverlayCache,\n    readonly indexManager: IndexManager\n  ) {}\n\n  /**\n   * Get the local view of the document identified by `key`.\n   *\n   * @returns Local view of the document or null if we don't have any cached\n   * state for it.\n   */\n  getDocument(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<Document> {\n    let overlay: Overlay | null = null;\n    return this.documentOverlayCache\n      .getOverlay(transaction, key)\n      .next(value => {\n        overlay = value;\n        return this.remoteDocumentCache.getEntry(transaction, key);\n      })\n      .next(document => {\n        if (overlay !== null) {\n          mutationApplyToLocalView(\n            overlay.mutation,\n            document,\n            FieldMask.empty(),\n            Timestamp.now()\n          );\n        }\n        return document as Document;\n      });\n  }\n\n  /**\n   * Gets the local view of the documents identified by `keys`.\n   *\n   * If we don't have cached state for a document in `keys`, a NoDocument will\n   * be stored for that key in the resulting set.\n   */\n  getDocuments(\n    transaction: PersistenceTransaction,\n    keys: DocumentKeySet\n  ): PersistencePromise<DocumentMap> {\n    return this.remoteDocumentCache\n      .getEntries(transaction, keys)\n      .next(docs =>\n        this.getLocalViewOfDocuments(transaction, docs, documentKeySet()).next(\n          () => docs as DocumentMap\n        )\n      );\n  }\n\n  /**\n   * Similar to `getDocuments`, but creates the local view from the given\n   * `baseDocs` without retrieving documents from the local store.\n   *\n   * @param transaction - The transaction this operation is scoped to.\n   * @param docs - The documents to apply local mutations to get the local views.\n   * @param existenceStateChanged - The set of document keys whose existence state\n   *   is changed. This is useful to determine if some documents overlay needs\n   *   to be recalculated.\n   */\n  getLocalViewOfDocuments(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap,\n    existenceStateChanged: DocumentKeySet = documentKeySet()\n  ): PersistencePromise<DocumentMap> {\n    const overlays = newOverlayMap();\n    return this.populateOverlays(transaction, overlays, docs).next(() => {\n      return this.computeViews(\n        transaction,\n        docs,\n        overlays,\n        existenceStateChanged\n      ).next(computeViewsResult => {\n        let result = documentMap();\n        computeViewsResult.forEach((documentKey, overlayedDocument) => {\n          result = result.insert(\n            documentKey,\n            overlayedDocument.overlayedDocument\n          );\n        });\n        return result;\n      });\n    });\n  }\n\n  /**\n   * Gets the overlayed documents for the given document map, which will include\n   * the local view of those documents and a `FieldMask` indicating which fields\n   * are mutated locally, `null` if overlay is a Set or Delete mutation.\n   */\n  getOverlayedDocuments(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap\n  ): PersistencePromise<OverlayedDocumentMap> {\n    const overlays = newOverlayMap();\n    return this.populateOverlays(transaction, overlays, docs).next(() =>\n      this.computeViews(transaction, docs, overlays, documentKeySet())\n    );\n  }\n\n  /**\n   * Fetches the overlays for {@code docs} and adds them to provided overlay map\n   * if the map does not already contain an entry for the given document key.\n   */\n  private populateOverlays(\n    transaction: PersistenceTransaction,\n    overlays: OverlayMap,\n    docs: MutableDocumentMap\n  ): PersistencePromise<void> {\n    const missingOverlays: DocumentKey[] = [];\n    docs.forEach(key => {\n      if (!overlays.has(key)) {\n        missingOverlays.push(key);\n      }\n    });\n    return this.documentOverlayCache\n      .getOverlays(transaction, missingOverlays)\n      .next(result => {\n        result.forEach((key, val) => {\n          overlays.set(key, val);\n        });\n      });\n  }\n\n  /**\n   * Computes the local view for the given documents.\n   *\n   * @param docs - The documents to compute views for. It also has the base\n   *   version of the documents.\n   * @param overlays - The overlays that need to be applied to the given base\n   *   version of the documents.\n   * @param existenceStateChanged - A set of documents whose existence states\n   *   might have changed. This is used to determine if we need to re-calculate\n   *   overlays from mutation queues.\n   * @return A map represents the local documents view.\n   */\n  computeViews(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap,\n    overlays: OverlayMap,\n    existenceStateChanged: DocumentKeySet\n  ): PersistencePromise<OverlayedDocumentMap> {\n    let recalculateDocuments = mutableDocumentMap();\n    const mutatedFields = newDocumentKeyMap<FieldMask | null>();\n    const results = newOverlayedDocumentMap();\n    docs.forEach((_, doc) => {\n      const overlay = overlays.get(doc.key);\n      // Recalculate an overlay if the document's existence state changed due to\n      // a remote event *and* the overlay is a PatchMutation. This is because\n      // document existence state can change if some patch mutation's\n      // preconditions are met.\n      // NOTE: we recalculate when `overlay` is undefined as well, because there\n      // might be a patch mutation whose precondition does not match before the\n      // change (hence overlay is undefined), but would now match.\n      if (\n        existenceStateChanged.has(doc.key) &&\n        (overlay === undefined || overlay.mutation instanceof PatchMutation)\n      ) {\n        recalculateDocuments = recalculateDocuments.insert(doc.key, doc);\n      } else if (overlay !== undefined) {\n        mutatedFields.set(doc.key, overlay.mutation.getFieldMask());\n        mutationApplyToLocalView(\n          overlay.mutation,\n          doc,\n          overlay.mutation.getFieldMask(),\n          Timestamp.now()\n        );\n      } else {\n        // no overlay exists\n        // Using EMPTY to indicate there is no overlay for the document.\n        mutatedFields.set(doc.key, FieldMask.empty());\n      }\n    });\n\n    return this.recalculateAndSaveOverlays(\n      transaction,\n      recalculateDocuments\n    ).next(recalculatedFields => {\n      recalculatedFields.forEach((documentKey, mask) =>\n        mutatedFields.set(documentKey, mask)\n      );\n      docs.forEach((documentKey, document) =>\n        results.set(\n          documentKey,\n          new OverlayedDocument(\n            document,\n            mutatedFields.get(documentKey) ?? null\n          )\n        )\n      );\n      return results;\n    });\n  }\n\n  private recalculateAndSaveOverlays(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap\n  ): PersistencePromise<DocumentKeyMap<FieldMask | null>> {\n    const masks = newDocumentKeyMap<FieldMask | null>();\n    // A reverse lookup map from batch id to the documents within that batch.\n    let documentsByBatchId = new SortedMap<number, DocumentKeySet>(\n      (key1: number, key2: number) => key1 - key2\n    );\n    let processed = documentKeySet();\n    return this.mutationQueue\n      .getAllMutationBatchesAffectingDocumentKeys(transaction, docs)\n      .next(batches => {\n        for (const batch of batches) {\n          batch.keys().forEach(key => {\n            const baseDoc = docs.get(key);\n            if (baseDoc === null) {\n              return;\n            }\n            let mask: FieldMask | null = masks.get(key) || FieldMask.empty();\n            mask = batch.applyToLocalView(baseDoc, mask);\n            masks.set(key, mask);\n            const newSet = (\n              documentsByBatchId.get(batch.batchId) || documentKeySet()\n            ).add(key);\n            documentsByBatchId = documentsByBatchId.insert(\n              batch.batchId,\n              newSet\n            );\n          });\n        }\n      })\n      .next(() => {\n        const promises: Array<PersistencePromise<void>> = [];\n        // Iterate in descending order of batch IDs, and skip documents that are\n        // already saved.\n        const iter = documentsByBatchId.getReverseIterator();\n        while (iter.hasNext()) {\n          const entry = iter.getNext();\n          const batchId = entry.key;\n          const keys = entry.value;\n          const overlays = newMutationMap();\n          keys.forEach(key => {\n            if (!processed.has(key)) {\n              const overlayMutation = calculateOverlayMutation(\n                docs.get(key)!,\n                masks.get(key)!\n              );\n              if (overlayMutation !== null) {\n                overlays.set(key, overlayMutation);\n              }\n              processed = processed.add(key);\n            }\n          });\n          promises.push(\n            this.documentOverlayCache.saveOverlays(\n              transaction,\n              batchId,\n              overlays\n            )\n          );\n        }\n        return PersistencePromise.waitFor(promises);\n      })\n      .next(() => masks);\n  }\n\n  /**\n   * Recalculates overlays by reading the documents from remote document cache\n   * first, and saves them after they are calculated.\n   */\n  recalculateAndSaveOverlaysForDocumentKeys(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<DocumentKeyMap<FieldMask | null>> {\n    return this.remoteDocumentCache\n      .getEntries(transaction, documentKeys)\n      .next(docs => this.recalculateAndSaveOverlays(transaction, docs));\n  }\n\n  /**\n   * Performs a query against the local view of all documents.\n   *\n   * @param transaction - The persistence transaction.\n   * @param query - The query to match documents against.\n   * @param offset - Read time and key to start scanning by (exclusive).\n   * @param context - A optional tracker to keep a record of important details\n   *   during database local query execution.\n   */\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    if (isDocumentQuery(query)) {\n      return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n    } else if (isCollectionGroupQuery(query)) {\n      return this.getDocumentsMatchingCollectionGroupQuery(\n        transaction,\n        query,\n        offset,\n        context\n      );\n    } else {\n      return this.getDocumentsMatchingCollectionQuery(\n        transaction,\n        query,\n        offset,\n        context\n      );\n    }\n  }\n\n  /**\n   * Given a collection group, returns the next documents that follow the provided offset, along\n   * with an updated batch ID.\n   *\n   * <p>The documents returned by this method are ordered by remote version from the provided\n   * offset. If there are no more remote documents after the provided offset, documents with\n   * mutations in order of batch id from the offset are returned. Since all documents in a batch are\n   * returned together, the total number of documents returned can exceed {@code count}.\n   *\n   * @param transaction\n   * @param collectionGroup The collection group for the documents.\n   * @param offset The offset to index into.\n   * @param count The number of documents to return\n   * @return A LocalWriteResult with the documents that follow the provided offset and the last processed batch id.\n   */\n  getNextDocuments(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset,\n    count: number\n  ): PersistencePromise<LocalWriteResult> {\n    return this.remoteDocumentCache\n      .getAllFromCollectionGroup(transaction, collectionGroup, offset, count)\n      .next((originalDocs: MutableDocumentMap) => {\n        const overlaysPromise: PersistencePromise<OverlayMap> =\n          count - originalDocs.size > 0\n            ? this.documentOverlayCache.getOverlaysForCollectionGroup(\n                transaction,\n                collectionGroup,\n                offset.largestBatchId,\n                count - originalDocs.size\n              )\n            : PersistencePromise.resolve(newOverlayMap());\n        // The callsite will use the largest batch ID together with the latest read time to create\n        // a new index offset. Since we only process batch IDs if all remote documents have been read,\n        // no overlay will increase the overall read time. This is why we only need to special case\n        // the batch id.\n        let largestBatchId = INITIAL_LARGEST_BATCH_ID;\n        let modifiedDocs = originalDocs;\n        return overlaysPromise.next(overlays => {\n          return PersistencePromise.forEach(\n            overlays,\n            (key: DocumentKey, overlay: Overlay) => {\n              if (largestBatchId < overlay.largestBatchId) {\n                largestBatchId = overlay.largestBatchId;\n              }\n              if (originalDocs.get(key)) {\n                return PersistencePromise.resolve();\n              }\n              return this.remoteDocumentCache\n                .getEntry(transaction, key)\n                .next(doc => {\n                  modifiedDocs = modifiedDocs.insert(key, doc);\n                });\n            }\n          )\n            .next(() =>\n              this.populateOverlays(transaction, overlays, originalDocs)\n            )\n            .next(() =>\n              this.computeViews(\n                transaction,\n                modifiedDocs,\n                overlays,\n                documentKeySet()\n              )\n            )\n            .next(localDocs => ({\n              batchId: largestBatchId,\n              changes: convertOverlayedDocumentMapToDocumentMap(localDocs)\n            }));\n        });\n      });\n  }\n\n  private getDocumentsMatchingDocumentQuery(\n    transaction: PersistenceTransaction,\n    docPath: ResourcePath\n  ): PersistencePromise<DocumentMap> {\n    // Just do a simple document lookup.\n    return this.getDocument(transaction, new DocumentKey(docPath)).next(\n      document => {\n        let result = documentMap();\n        if (document.isFoundDocument()) {\n          result = result.insert(document.key, document);\n        }\n        return result;\n      }\n    );\n  }\n\n  private getDocumentsMatchingCollectionGroupQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    debugAssert(\n      query.path.isEmpty(),\n      'Currently we only support collection group queries at the root.'\n    );\n    const collectionId = query.collectionGroup!;\n    let results = documentMap();\n    return this.indexManager\n      .getCollectionParents(transaction, collectionId)\n      .next(parents => {\n        // Perform a collection query against each parent that contains the\n        // collectionId and aggregate the results.\n        return PersistencePromise.forEach(parents, (parent: ResourcePath) => {\n          const collectionQuery = asCollectionQueryAtPath(\n            query,\n            parent.child(collectionId)\n          );\n          return this.getDocumentsMatchingCollectionQuery(\n            transaction,\n            collectionQuery,\n            offset,\n            context\n          ).next(r => {\n            r.forEach((key, doc) => {\n              results = results.insert(key, doc);\n            });\n          });\n        }).next(() => results);\n      });\n  }\n\n  private getDocumentsMatchingCollectionQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    // Query the remote documents and overlay mutations.\n    let overlays: OverlayMap;\n    return this.documentOverlayCache\n      .getOverlaysForCollection(transaction, query.path, offset.largestBatchId)\n      .next(result => {\n        overlays = result;\n        return this.remoteDocumentCache.getDocumentsMatchingQuery(\n          transaction,\n          query,\n          offset,\n          overlays,\n          context\n        );\n      })\n      .next(remoteDocuments => {\n        // As documents might match the query because of their overlay we need to\n        // include documents for all overlays in the initial document set.\n        overlays.forEach((_, overlay) => {\n          const key = overlay.getKey();\n          if (remoteDocuments.get(key) === null) {\n            remoteDocuments = remoteDocuments.insert(\n              key,\n              MutableDocument.newInvalidDocument(key)\n            );\n          }\n        });\n\n        // Apply the overlays and match against the query.\n        let results = documentMap();\n        remoteDocuments.forEach((key, document) => {\n          const overlay = overlays.get(key);\n          if (overlay !== undefined) {\n            mutationApplyToLocalView(\n              overlay.mutation,\n              document,\n              FieldMask.empty(),\n              Timestamp.now()\n            );\n          }\n          // Finally, insert the documents that still match the query\n          if (queryMatches(query, document)) {\n            results = results.insert(key, document);\n          }\n        });\n        return results;\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BundleMetadata, NamedQuery } from '../core/bundle';\nimport {\n  NamedQuery as ProtoNamedQuery,\n  BundleMetadata as ProtoBundleMetadata\n} from '../protos/firestore_bundle_proto';\n\nimport { BundleCache } from './bundle_cache';\nimport {\n  fromBundleMetadata,\n  fromProtoNamedQuery,\n  LocalSerializer\n} from './local_serializer';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\nexport class MemoryBundleCache implements BundleCache {\n  private bundles = new Map<string, BundleMetadata>();\n  private namedQueries = new Map<string, NamedQuery>();\n\n  constructor(private serializer: LocalSerializer) {}\n\n  getBundleMetadata(\n    transaction: PersistenceTransaction,\n    bundleId: string\n  ): PersistencePromise<BundleMetadata | undefined> {\n    return PersistencePromise.resolve(this.bundles.get(bundleId));\n  }\n\n  saveBundleMetadata(\n    transaction: PersistenceTransaction,\n    bundleMetadata: ProtoBundleMetadata\n  ): PersistencePromise<void> {\n    this.bundles.set(bundleMetadata.id!, fromBundleMetadata(bundleMetadata));\n    return PersistencePromise.resolve();\n  }\n\n  getNamedQuery(\n    transaction: PersistenceTransaction,\n    queryName: string\n  ): PersistencePromise<NamedQuery | undefined> {\n    return PersistencePromise.resolve(this.namedQueries.get(queryName));\n  }\n\n  saveNamedQuery(\n    transaction: PersistenceTransaction,\n    query: ProtoNamedQuery\n  ): PersistencePromise<void> {\n    this.namedQueries.set(query.name!, fromProtoNamedQuery(query));\n    return PersistencePromise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  MutationMap,\n  OverlayMap,\n  newOverlayMap\n} from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { Overlay } from '../model/overlay';\nimport { ResourcePath } from '../model/path';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory implementation of DocumentOverlayCache.\n */\nexport class MemoryDocumentOverlayCache implements DocumentOverlayCache {\n  // A map sorted by DocumentKey, whose value is a pair of the largest batch id\n  // for the overlay and the overlay itself.\n  private overlays = new SortedMap<DocumentKey, Overlay>(\n    DocumentKey.comparator\n  );\n  private overlayByBatchId = new Map<number, DocumentKeySet>();\n\n  getOverlay(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<Overlay | null> {\n    return PersistencePromise.resolve(this.overlays.get(key));\n  }\n\n  getOverlays(\n    transaction: PersistenceTransaction,\n    keys: DocumentKey[]\n  ): PersistencePromise<OverlayMap> {\n    const result = newOverlayMap();\n    return PersistencePromise.forEach(keys, (key: DocumentKey) => {\n      return this.getOverlay(transaction, key).next(overlay => {\n        if (overlay !== null) {\n          result.set(key, overlay);\n        }\n      });\n    }).next(() => result);\n  }\n\n  saveOverlays(\n    transaction: PersistenceTransaction,\n    largestBatchId: number,\n    overlays: MutationMap\n  ): PersistencePromise<void> {\n    overlays.forEach((_, mutation) => {\n      this.saveOverlay(transaction, largestBatchId, mutation);\n    });\n    return PersistencePromise.resolve();\n  }\n\n  removeOverlaysForBatchId(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet,\n    batchId: number\n  ): PersistencePromise<void> {\n    const keys = this.overlayByBatchId.get(batchId);\n    if (keys !== undefined) {\n      keys.forEach(key => (this.overlays = this.overlays.remove(key)));\n      this.overlayByBatchId.delete(batchId);\n    }\n    return PersistencePromise.resolve();\n  }\n\n  getOverlaysForCollection(\n    transaction: PersistenceTransaction,\n    collection: ResourcePath,\n    sinceBatchId: number\n  ): PersistencePromise<OverlayMap> {\n    const result = newOverlayMap();\n\n    const immediateChildrenPathLength = collection.length + 1;\n    const prefix = new DocumentKey(collection.child(''));\n    const iter = this.overlays.getIteratorFrom(prefix);\n    while (iter.hasNext()) {\n      const entry = iter.getNext();\n      const overlay = entry.value;\n      const key = overlay.getKey();\n      if (!collection.isPrefixOf(key.path)) {\n        break;\n      }\n      // Documents from sub-collections\n      if (key.path.length !== immediateChildrenPathLength) {\n        continue;\n      }\n      if (overlay.largestBatchId > sinceBatchId) {\n        result.set(overlay.getKey(), overlay);\n      }\n    }\n\n    return PersistencePromise.resolve(result);\n  }\n\n  getOverlaysForCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    sinceBatchId: number,\n    count: number\n  ): PersistencePromise<OverlayMap> {\n    let batchIdToOverlays = new SortedMap<number, OverlayMap>(\n      (key1: number, key2: number) => key1 - key2\n    );\n\n    const iter = this.overlays.getIterator();\n    while (iter.hasNext()) {\n      const entry = iter.getNext();\n      const overlay = entry.value;\n      const key = overlay.getKey();\n      if (key.getCollectionGroup() !== collectionGroup) {\n        continue;\n      }\n      if (overlay.largestBatchId > sinceBatchId) {\n        let overlaysForBatchId = batchIdToOverlays.get(overlay.largestBatchId);\n        if (overlaysForBatchId === null) {\n          overlaysForBatchId = newOverlayMap();\n          batchIdToOverlays = batchIdToOverlays.insert(\n            overlay.largestBatchId,\n            overlaysForBatchId\n          );\n        }\n        overlaysForBatchId.set(overlay.getKey(), overlay);\n      }\n    }\n\n    const result = newOverlayMap();\n    const batchIter = batchIdToOverlays.getIterator();\n    while (batchIter.hasNext()) {\n      const entry = batchIter.getNext();\n      const overlays = entry.value;\n      overlays.forEach((key, overlay) => result.set(key, overlay));\n      if (result.size() >= count) {\n        break;\n      }\n    }\n    return PersistencePromise.resolve(result);\n  }\n\n  private saveOverlay(\n    transaction: PersistenceTransaction,\n    largestBatchId: number,\n    mutation: Mutation\n  ): void {\n    // Remove the association of the overlay to its batch id.\n    const existing = this.overlays.get(mutation.key);\n    if (existing !== null) {\n      const newSet = this.overlayByBatchId\n        .get(existing.largestBatchId)!\n        .delete(mutation.key);\n      this.overlayByBatchId.set(existing.largestBatchId, newSet);\n    }\n\n    this.overlays = this.overlays.insert(\n      mutation.key,\n      new Overlay(largestBatchId, mutation)\n    );\n\n    // Create the association of this overlay to the given largestBatchId.\n    let batch = this.overlayByBatchId.get(largestBatchId);\n    if (batch === undefined) {\n      batch = documentKeySet();\n      this.overlayByBatchId.set(largestBatchId, batch);\n    }\n    this.overlayByBatchId.set(largestBatchId, batch.add(mutation.key));\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchId, TargetId } from '../core/types';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\nexport class ReferenceSet {\n  // A set of outstanding references to a document sorted by key.\n  private refsByKey = new SortedSet(DocReference.compareByKey);\n\n  // A set of outstanding references to a document sorted by target id.\n  private refsByTarget = new SortedSet(DocReference.compareByTargetId);\n\n  /** Returns true if the reference set contains no references. */\n  isEmpty(): boolean {\n    return this.refsByKey.isEmpty();\n  }\n\n  /** Adds a reference to the given document key for the given ID. */\n  addReference(key: DocumentKey, id: TargetId | BatchId): void {\n    const ref = new DocReference(key, id);\n    this.refsByKey = this.refsByKey.add(ref);\n    this.refsByTarget = this.refsByTarget.add(ref);\n  }\n\n  /** Add references to the given document keys for the given ID. */\n  addReferences(keys: DocumentKeySet, id: TargetId | BatchId): void {\n    keys.forEach(key => this.addReference(key, id));\n  }\n\n  /**\n   * Removes a reference to the given document key for the given\n   * ID.\n   */\n  removeReference(key: DocumentKey, id: TargetId | BatchId): void {\n    this.removeRef(new DocReference(key, id));\n  }\n\n  removeReferences(keys: DocumentKeySet, id: TargetId | BatchId): void {\n    keys.forEach(key => this.removeReference(key, id));\n  }\n\n  /**\n   * Clears all references with a given ID. Calls removeRef() for each key\n   * removed.\n   */\n  removeReferencesForId(id: TargetId | BatchId): DocumentKey[] {\n    const emptyKey = new DocumentKey(new ResourcePath([]));\n    const startRef = new DocReference(emptyKey, id);\n    const endRef = new DocReference(emptyKey, id + 1);\n    const keys: DocumentKey[] = [];\n    this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n      this.removeRef(ref);\n      keys.push(ref.key);\n    });\n    return keys;\n  }\n\n  removeAllReferences(): void {\n    this.refsByKey.forEach(ref => this.removeRef(ref));\n  }\n\n  private removeRef(ref: DocReference): void {\n    this.refsByKey = this.refsByKey.delete(ref);\n    this.refsByTarget = this.refsByTarget.delete(ref);\n  }\n\n  referencesForId(id: TargetId | BatchId): DocumentKeySet {\n    const emptyKey = new DocumentKey(new ResourcePath([]));\n    const startRef = new DocReference(emptyKey, id);\n    const endRef = new DocReference(emptyKey, id + 1);\n    let keys = documentKeySet();\n    this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n      keys = keys.add(ref.key);\n    });\n    return keys;\n  }\n\n  containsKey(key: DocumentKey): boolean {\n    const ref = new DocReference(key, 0);\n    const firstRef = this.refsByKey.firstAfterOrEqual(ref);\n    return firstRef !== null && key.isEqual(firstRef.key);\n  }\n}\n\nexport class DocReference {\n  constructor(\n    public key: DocumentKey,\n    public targetOrBatchId: TargetId | BatchId\n  ) {}\n\n  /** Compare by key then by ID */\n  static compareByKey(left: DocReference, right: DocReference): number {\n    return (\n      DocumentKey.comparator(left.key, right.key) ||\n      primitiveComparator(left.targetOrBatchId, right.targetOrBatchId)\n    );\n  }\n\n  /** Compare by ID then by key */\n  static compareByTargetId(left: DocReference, right: DocReference): number {\n    return (\n      primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) ||\n      DocumentKey.comparator(left.key, right.key)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isCollectionGroupQuery, Query } from '../core/query';\nimport { BatchId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { MutationBatch } from '../model/mutation_batch';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { IndexManager } from './index_manager';\nimport { MutationQueue } from './mutation_queue';\nimport { ReferenceDelegate } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { DocReference } from './reference_set';\n\nexport class MemoryMutationQueue implements MutationQueue {\n  /**\n   * The set of all mutations that have been sent but not yet been applied to\n   * the backend.\n   */\n  private mutationQueue: MutationBatch[] = [];\n\n  /** Next value to use when assigning sequential IDs to each mutation batch. */\n  private nextBatchId: BatchId = 1;\n\n  /** An ordered mapping between documents and the mutations batch IDs. */\n  private batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\n\n  constructor(\n    private readonly indexManager: IndexManager,\n    private readonly referenceDelegate: ReferenceDelegate\n  ) {}\n\n  checkEmpty(transaction: PersistenceTransaction): PersistencePromise<boolean> {\n    return PersistencePromise.resolve(this.mutationQueue.length === 0);\n  }\n\n  addMutationBatch(\n    transaction: PersistenceTransaction,\n    localWriteTime: Timestamp,\n    baseMutations: Mutation[],\n    mutations: Mutation[]\n  ): PersistencePromise<MutationBatch> {\n    debugAssert(mutations.length !== 0, 'Mutation batches should not be empty');\n\n    const batchId = this.nextBatchId;\n    this.nextBatchId++;\n\n    if (this.mutationQueue.length > 0) {\n      const prior = this.mutationQueue[this.mutationQueue.length - 1];\n      debugAssert(\n        prior.batchId < batchId,\n        'Mutation batchIDs must be monotonically increasing order'\n      );\n    }\n\n    const batch = new MutationBatch(\n      batchId,\n      localWriteTime,\n      baseMutations,\n      mutations\n    );\n    this.mutationQueue.push(batch);\n\n    // Track references by document key and index collection parents.\n    for (const mutation of mutations) {\n      this.batchesByDocumentKey = this.batchesByDocumentKey.add(\n        new DocReference(mutation.key, batchId)\n      );\n\n      this.indexManager.addToCollectionParentIndex(\n        transaction,\n        mutation.key.path.popLast()\n      );\n    }\n\n    return PersistencePromise.resolve(batch);\n  }\n\n  lookupMutationBatch(\n    transaction: PersistenceTransaction,\n    batchId: BatchId\n  ): PersistencePromise<MutationBatch | null> {\n    return PersistencePromise.resolve(this.findMutationBatch(batchId));\n  }\n\n  getNextMutationBatchAfterBatchId(\n    transaction: PersistenceTransaction,\n    batchId: BatchId\n  ): PersistencePromise<MutationBatch | null> {\n    const nextBatchId = batchId + 1;\n\n    // The requested batchId may still be out of range so normalize it to the\n    // start of the queue.\n    const rawIndex = this.indexOfBatchId(nextBatchId);\n    const index = rawIndex < 0 ? 0 : rawIndex;\n    return PersistencePromise.resolve(\n      this.mutationQueue.length > index ? this.mutationQueue[index] : null\n    );\n  }\n\n  getHighestUnacknowledgedBatchId(): PersistencePromise<BatchId> {\n    return PersistencePromise.resolve(\n      this.mutationQueue.length === 0 ? BATCHID_UNKNOWN : this.nextBatchId - 1\n    );\n  }\n\n  getAllMutationBatches(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<MutationBatch[]> {\n    return PersistencePromise.resolve(this.mutationQueue.slice());\n  }\n\n  getAllMutationBatchesAffectingDocumentKey(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutationBatch[]> {\n    const start = new DocReference(documentKey, 0);\n    const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n    const result: MutationBatch[] = [];\n    this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n      debugAssert(\n        documentKey.isEqual(ref.key),\n        \"Should only iterate over a single key's batches\"\n      );\n      const batch = this.findMutationBatch(ref.targetOrBatchId);\n      debugAssert(\n        batch !== null,\n        'Batches in the index must exist in the main table'\n      );\n      result.push(batch!);\n    });\n\n    return PersistencePromise.resolve(result);\n  }\n\n  getAllMutationBatchesAffectingDocumentKeys(\n    transaction: PersistenceTransaction,\n    documentKeys: SortedMap<DocumentKey, unknown>\n  ): PersistencePromise<MutationBatch[]> {\n    let uniqueBatchIDs = new SortedSet<number>(primitiveComparator);\n\n    documentKeys.forEach(documentKey => {\n      const start = new DocReference(documentKey, 0);\n      const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n      this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n        debugAssert(\n          documentKey.isEqual(ref.key),\n          \"For each key, should only iterate over a single key's batches\"\n        );\n\n        uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n      });\n    });\n\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  }\n\n  getAllMutationBatchesAffectingQuery(\n    transaction: PersistenceTransaction,\n    query: Query\n  ): PersistencePromise<MutationBatch[]> {\n    debugAssert(\n      !isCollectionGroupQuery(query),\n      'CollectionGroup queries should be handled in LocalDocumentsView'\n    );\n    // Use the query path as a prefix for testing if a document matches the\n    // query.\n    const prefix = query.path;\n    const immediateChildrenPathLength = prefix.length + 1;\n\n    // Construct a document reference for actually scanning the index. Unlike\n    // the prefix the document key in this reference must have an even number of\n    // segments. The empty segment can be used a suffix of the query path\n    // because it precedes all other segments in an ordered traversal.\n    let startPath = prefix;\n    if (!DocumentKey.isDocumentKey(startPath)) {\n      startPath = startPath.child('');\n    }\n\n    const start = new DocReference(new DocumentKey(startPath), 0);\n\n    // Find unique batchIDs referenced by all documents potentially matching the\n    // query.\n    let uniqueBatchIDs = new SortedSet<number>(primitiveComparator);\n\n    this.batchesByDocumentKey.forEachWhile(ref => {\n      const rowKeyPath = ref.key.path;\n      if (!prefix.isPrefixOf(rowKeyPath)) {\n        return false;\n      } else {\n        // Rows with document keys more than one segment longer than the query\n        // path can't be matches. For example, a query on 'rooms' can't match\n        // the document /rooms/abc/messages/xyx.\n        // TODO(mcg): we'll need a different scanner when we implement\n        // ancestor queries.\n        if (rowKeyPath.length === immediateChildrenPathLength) {\n          uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n        }\n        return true;\n      }\n    }, start);\n\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  }\n\n  private findMutationBatches(batchIDs: SortedSet<number>): MutationBatch[] {\n    // Construct an array of matching batches, sorted by batchID to ensure that\n    // multiple mutations affecting the same document key are applied in order.\n    const result: MutationBatch[] = [];\n    batchIDs.forEach(batchId => {\n      const batch = this.findMutationBatch(batchId);\n      if (batch !== null) {\n        result.push(batch);\n      }\n    });\n    return result;\n  }\n\n  removeMutationBatch(\n    transaction: PersistenceTransaction,\n    batch: MutationBatch\n  ): PersistencePromise<void> {\n    // Find the position of the first batch for removal.\n    const batchIndex = this.indexOfExistingBatchId(batch.batchId, 'removed');\n    hardAssert(\n      batchIndex === 0,\n      'Can only remove the first entry of the mutation queue'\n    );\n    this.mutationQueue.shift();\n\n    let references = this.batchesByDocumentKey;\n    return PersistencePromise.forEach(batch.mutations, (mutation: Mutation) => {\n      const ref = new DocReference(mutation.key, batch.batchId);\n      references = references.delete(ref);\n      return this.referenceDelegate.markPotentiallyOrphaned(\n        transaction,\n        mutation.key\n      );\n    }).next(() => {\n      this.batchesByDocumentKey = references;\n    });\n  }\n\n  removeCachedMutationKeys(batchId: BatchId): void {\n    // No-op since the memory mutation queue does not maintain a separate cache.\n  }\n\n  containsKey(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    const ref = new DocReference(key, 0);\n    const firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n    return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\n  }\n\n  performConsistencyCheck(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    if (this.mutationQueue.length === 0) {\n      debugAssert(\n        this.batchesByDocumentKey.isEmpty(),\n        'Document leak -- detected dangling mutation references when queue is empty.'\n      );\n    }\n    return PersistencePromise.resolve();\n  }\n\n  /**\n   * Finds the index of the given batchId in the mutation queue and asserts that\n   * the resulting index is within the bounds of the queue.\n   *\n   * @param batchId - The batchId to search for\n   * @param action - A description of what the caller is doing, phrased in passive\n   * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n   */\n  private indexOfExistingBatchId(batchId: BatchId, action: string): number {\n    const index = this.indexOfBatchId(batchId);\n    debugAssert(\n      index >= 0 && index < this.mutationQueue.length,\n      'Batches must exist to be ' + action\n    );\n    return index;\n  }\n\n  /**\n   * Finds the index of the given batchId in the mutation queue. This operation\n   * is O(1).\n   *\n   * @returns The computed index of the batch with the given batchId, based on\n   * the state of the queue. Note this index can be negative if the requested\n   * batchId has already been remvoed from the queue or past the end of the\n   * queue if the batchId is larger than the last added batch.\n   */\n  private indexOfBatchId(batchId: BatchId): number {\n    if (this.mutationQueue.length === 0) {\n      // As an index this is past the end of the queue\n      return 0;\n    }\n\n    // Examine the front of the queue to figure out the difference between the\n    // batchId and indexes in the array. Note that since the queue is ordered\n    // by batchId, if the first batch has a larger batchId then the requested\n    // batchId doesn't exist in the queue.\n    const firstBatchId = this.mutationQueue[0].batchId;\n    return batchId - firstBatchId;\n  }\n\n  /**\n   * A version of lookupMutationBatch that doesn't return a promise, this makes\n   * other functions that uses this code easier to read and more efficent.\n   */\n  private findMutationBatch(batchId: BatchId): MutationBatch | null {\n    const index = this.indexOfBatchId(batchId);\n    if (index < 0 || index >= this.mutationQueue.length) {\n      return null;\n    }\n\n    const batch = this.mutationQueue[index];\n    debugAssert(batch.batchId === batchId, 'If found batch must match');\n    return batch;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query, queryMatches } from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport {\n  DocumentKeySet,\n  MutableDocumentMap,\n  mutableDocumentMap,\n  OverlayMap\n} from '../model/collections';\nimport { Document, MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  IndexOffset,\n  indexOffsetComparator,\n  newIndexOffsetFromDocument\n} from '../model/field_index';\nimport { debugAssert, fail } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { IndexManager } from './index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { RemoteDocumentCache } from './remote_document_cache';\nimport { RemoteDocumentChangeBuffer } from './remote_document_change_buffer';\n\nexport type DocumentSizer = (doc: Document) => number;\n\n/** Miscellaneous collection types / constants. */\ninterface MemoryRemoteDocumentCacheEntry {\n  document: Document;\n  size: number;\n}\n\ntype DocumentEntryMap = SortedMap<DocumentKey, MemoryRemoteDocumentCacheEntry>;\nfunction documentEntryMap(): DocumentEntryMap {\n  return new SortedMap<DocumentKey, MemoryRemoteDocumentCacheEntry>(\n    DocumentKey.comparator\n  );\n}\n\nexport interface MemoryRemoteDocumentCache extends RemoteDocumentCache {\n  forEachDocumentKey(\n    transaction: PersistenceTransaction,\n    f: (key: DocumentKey) => PersistencePromise<void>\n  ): PersistencePromise<void>;\n}\n\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass MemoryRemoteDocumentCacheImpl implements MemoryRemoteDocumentCache {\n  /** Underlying cache of documents and their read times. */\n  private docs = documentEntryMap();\n  private indexManager!: IndexManager;\n\n  /** Size of all cached documents. */\n  private size = 0;\n\n  /**\n   * @param sizer - Used to assess the size of a document. For eager GC, this is\n   * expected to just return 0 to avoid unnecessarily doing the work of\n   * calculating the size.\n   */\n  constructor(private readonly sizer: DocumentSizer) {}\n\n  setIndexManager(indexManager: IndexManager): void {\n    this.indexManager = indexManager;\n  }\n\n  /**\n   * Adds the supplied entry to the cache and updates the cache size as appropriate.\n   *\n   * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()`.\n   */\n  addEntry(\n    transaction: PersistenceTransaction,\n    doc: MutableDocument\n  ): PersistencePromise<void> {\n    debugAssert(\n      !doc.readTime.isEqual(SnapshotVersion.min()),\n      'Cannot add a document with a read time of zero'\n    );\n\n    const key = doc.key;\n    const entry = this.docs.get(key);\n    const previousSize = entry ? entry.size : 0;\n    const currentSize = this.sizer(doc);\n\n    this.docs = this.docs.insert(key, {\n      document: doc.mutableCopy(),\n      size: currentSize\n    });\n\n    this.size += currentSize - previousSize;\n\n    return this.indexManager.addToCollectionParentIndex(\n      transaction,\n      key.path.popLast()\n    );\n  }\n\n  /**\n   * Removes the specified entry from the cache and updates the cache size as appropriate.\n   *\n   * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()`.\n   */\n  removeEntry(documentKey: DocumentKey): void {\n    const entry = this.docs.get(documentKey);\n    if (entry) {\n      this.docs = this.docs.remove(documentKey);\n      this.size -= entry.size;\n    }\n  }\n\n  getEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    const entry = this.docs.get(documentKey);\n    return PersistencePromise.resolve(\n      entry\n        ? entry.document.mutableCopy()\n        : MutableDocument.newInvalidDocument(documentKey)\n    );\n  }\n\n  getEntries(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    let results = mutableDocumentMap();\n    documentKeys.forEach(documentKey => {\n      const entry = this.docs.get(documentKey);\n      results = results.insert(\n        documentKey,\n        entry\n          ? entry.document.mutableCopy()\n          : MutableDocument.newInvalidDocument(documentKey)\n      );\n    });\n    return PersistencePromise.resolve(results);\n  }\n\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    mutatedDocs: OverlayMap\n  ): PersistencePromise<MutableDocumentMap> {\n    let results = mutableDocumentMap();\n\n    // Documents are ordered by key, so we can use a prefix scan to narrow down\n    // the documents we need to match the query against.\n    const collectionPath = query.path;\n    const prefix = new DocumentKey(collectionPath.child(''));\n    const iterator = this.docs.getIteratorFrom(prefix);\n    while (iterator.hasNext()) {\n      const {\n        key,\n        value: { document }\n      } = iterator.getNext();\n      if (!collectionPath.isPrefixOf(key.path)) {\n        break;\n      }\n      if (key.path.length > collectionPath.length + 1) {\n        // Exclude entries from subcollections.\n        continue;\n      }\n      if (\n        indexOffsetComparator(newIndexOffsetFromDocument(document), offset) <= 0\n      ) {\n        // The document sorts before the offset.\n        continue;\n      }\n      if (!mutatedDocs.has(document.key) && !queryMatches(query, document)) {\n        // The document cannot possibly match the query.\n        continue;\n      }\n\n      results = results.insert(document.key, document.mutableCopy());\n    }\n    return PersistencePromise.resolve(results);\n  }\n\n  getAllFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset,\n    limti: number\n  ): PersistencePromise<MutableDocumentMap> {\n    // This method should only be called from the IndexBackfiller if persistence\n    // is enabled.\n    fail('getAllFromCollectionGroup() is not supported.');\n  }\n\n  forEachDocumentKey(\n    transaction: PersistenceTransaction,\n    f: (key: DocumentKey) => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(this.docs, (key: DocumentKey) => f(key));\n  }\n\n  newChangeBuffer(options?: {\n    trackRemovals: boolean;\n  }): RemoteDocumentChangeBuffer {\n    // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n    // a separate changelog and does not need special handling for removals.\n    return new MemoryRemoteDocumentChangeBuffer(this);\n  }\n\n  getSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return PersistencePromise.resolve(this.size);\n  }\n}\n\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\nexport function newMemoryRemoteDocumentCache(\n  sizer: DocumentSizer\n): MemoryRemoteDocumentCache {\n  return new MemoryRemoteDocumentCacheImpl(sizer);\n}\n\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass MemoryRemoteDocumentChangeBuffer extends RemoteDocumentChangeBuffer {\n  constructor(private readonly documentCache: MemoryRemoteDocumentCacheImpl) {\n    super();\n  }\n\n  protected applyChanges(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    const promises: Array<PersistencePromise<void>> = [];\n    this.changes.forEach((key, doc) => {\n      if (doc.isValidDocument()) {\n        promises.push(this.documentCache.addEntry(transaction, doc));\n      } else {\n        this.documentCache.removeEntry(key);\n      }\n    });\n    return PersistencePromise.waitFor(promises);\n  }\n\n  protected getFromCache(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    return this.documentCache.getEntry(transaction, documentKey);\n  }\n\n  protected getAllFromCache(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    return this.documentCache.getEntries(transaction, documentKeys);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetEquals } from '../core/target';\nimport { TargetIdGenerator } from '../core/target_id_generator';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { DocumentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert } from '../util/assert';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { ActiveTargets } from './lru_garbage_collector';\nimport { Persistence } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { ReferenceSet } from './reference_set';\nimport { TargetCache } from './target_cache';\nimport { TargetData } from './target_data';\n\nexport class MemoryTargetCache implements TargetCache {\n  /**\n   * Maps a target to the data about that target\n   */\n  private targets = new ObjectMap<Target, TargetData>(\n    t => canonifyTarget(t),\n    targetEquals\n  );\n\n  /** The last received snapshot version. */\n  private lastRemoteSnapshotVersion = SnapshotVersion.min();\n  /** The highest numbered target ID encountered. */\n  private highestTargetId: TargetId = 0;\n  /** The highest sequence number encountered. */\n  private highestSequenceNumber: ListenSequenceNumber = 0;\n  /**\n   * A ordered bidirectional mapping between documents and the remote target\n   * IDs.\n   */\n  private references = new ReferenceSet();\n\n  private targetCount = 0;\n\n  private targetIdGenerator = TargetIdGenerator.forTargetCache();\n\n  constructor(private readonly persistence: Persistence) {}\n\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (q: TargetData) => void\n  ): PersistencePromise<void> {\n    this.targets.forEach((_, targetData) => f(targetData));\n    return PersistencePromise.resolve();\n  }\n\n  getLastRemoteSnapshotVersion(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<SnapshotVersion> {\n    return PersistencePromise.resolve(this.lastRemoteSnapshotVersion);\n  }\n\n  getHighestSequenceNumber(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<ListenSequenceNumber> {\n    return PersistencePromise.resolve(this.highestSequenceNumber);\n  }\n\n  allocateTargetId(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<TargetId> {\n    this.highestTargetId = this.targetIdGenerator.next();\n    return PersistencePromise.resolve(this.highestTargetId);\n  }\n\n  setTargetsMetadata(\n    transaction: PersistenceTransaction,\n    highestListenSequenceNumber: number,\n    lastRemoteSnapshotVersion?: SnapshotVersion\n  ): PersistencePromise<void> {\n    if (lastRemoteSnapshotVersion) {\n      this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    }\n    if (highestListenSequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = highestListenSequenceNumber;\n    }\n    return PersistencePromise.resolve();\n  }\n\n  private saveTargetData(targetData: TargetData): void {\n    this.targets.set(targetData.target, targetData);\n    const targetId = targetData.targetId;\n    if (targetId > this.highestTargetId) {\n      this.targetIdGenerator = new TargetIdGenerator(targetId);\n      this.highestTargetId = targetId;\n    }\n    if (targetData.sequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = targetData.sequenceNumber;\n    }\n  }\n\n  addTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(\n      !this.targets.has(targetData.target),\n      'Adding a target that already exists'\n    );\n    this.saveTargetData(targetData);\n    this.targetCount += 1;\n    return PersistencePromise.resolve();\n  }\n\n  updateTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(\n      this.targets.has(targetData.target),\n      'Updating a non-existent target'\n    );\n    this.saveTargetData(targetData);\n    return PersistencePromise.resolve();\n  }\n\n  removeTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(this.targetCount > 0, 'Removing a target from an empty cache');\n    debugAssert(\n      this.targets.has(targetData.target),\n      'Removing a non-existent target from the cache'\n    );\n    this.targets.delete(targetData.target);\n    this.references.removeReferencesForId(targetData.targetId);\n    this.targetCount -= 1;\n    return PersistencePromise.resolve();\n  }\n\n  removeTargets(\n    transaction: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    let count = 0;\n    const removals: Array<PersistencePromise<void>> = [];\n    this.targets.forEach((key, targetData) => {\n      if (\n        targetData.sequenceNumber <= upperBound &&\n        activeTargetIds.get(targetData.targetId) === null\n      ) {\n        this.targets.delete(key);\n        removals.push(\n          this.removeMatchingKeysForTargetId(transaction, targetData.targetId)\n        );\n        count++;\n      }\n    });\n    return PersistencePromise.waitFor(removals).next(() => count);\n  }\n\n  getTargetCount(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<number> {\n    return PersistencePromise.resolve(this.targetCount);\n  }\n\n  getTargetData(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<TargetData | null> {\n    const targetData = this.targets.get(target) || null;\n    return PersistencePromise.resolve(targetData);\n  }\n\n  addMatchingKeys(\n    txn: PersistenceTransaction,\n    keys: DocumentKeySet,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.addReferences(keys, targetId);\n    return PersistencePromise.resolve();\n  }\n\n  removeMatchingKeys(\n    txn: PersistenceTransaction,\n    keys: DocumentKeySet,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.removeReferences(keys, targetId);\n    const referenceDelegate = this.persistence.referenceDelegate;\n    const promises: Array<PersistencePromise<void>> = [];\n    if (referenceDelegate) {\n      keys.forEach(key => {\n        promises.push(referenceDelegate.markPotentiallyOrphaned(txn, key));\n      });\n    }\n    return PersistencePromise.waitFor(promises);\n  }\n\n  removeMatchingKeysForTargetId(\n    txn: PersistenceTransaction,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.removeReferencesForId(targetId);\n    return PersistencePromise.resolve();\n  }\n\n  getMatchingKeysForTargetId(\n    txn: PersistenceTransaction,\n    targetId: TargetId\n  ): PersistencePromise<DocumentKeySet> {\n    const matchingKeys = this.references.referencesForId(targetId);\n    return PersistencePromise.resolve(matchingKeys);\n  }\n\n  containsKey(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.resolve(this.references.containsKey(key));\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { ListenSequence } from '../core/listen_sequence';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { estimateByteSize } from '../model/values';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { fail } from '../util/assert';\nimport { logDebug } from '../util/log';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { encodeResourcePath } from './encoded_resource_path';\nimport { IndexManager } from './index_manager';\nimport { LocalSerializer } from './local_serializer';\nimport {\n  ActiveTargets,\n  LruDelegate,\n  LruGarbageCollector,\n  LruParams\n} from './lru_garbage_collector';\nimport { newLruGarbageCollector } from './lru_garbage_collector_impl';\nimport { MemoryBundleCache } from './memory_bundle_cache';\nimport { MemoryDocumentOverlayCache } from './memory_document_overlay_cache';\nimport { MemoryIndexManager } from './memory_index_manager';\nimport { MemoryMutationQueue } from './memory_mutation_queue';\nimport {\n  MemoryRemoteDocumentCache,\n  newMemoryRemoteDocumentCache\n} from './memory_remote_document_cache';\nimport { MemoryTargetCache } from './memory_target_cache';\nimport { MutationQueue } from './mutation_queue';\nimport { Persistence, ReferenceDelegate } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport {\n  PersistenceTransaction,\n  PersistenceTransactionMode\n} from './persistence_transaction';\nimport { ReferenceSet } from './reference_set';\nimport { TargetData } from './target_data';\n\nconst LOG_TAG = 'MemoryPersistence';\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nexport class MemoryPersistence implements Persistence {\n  /**\n   * Note that these are retained here to make it easier to write tests\n   * affecting both the in-memory and IndexedDB-backed persistence layers. Tests\n   * can create a new LocalStore wrapping this Persistence instance and this\n   * will make the in-memory persistence layer behave as if it were actually\n   * persisting values.\n   */\n  private readonly indexManager: MemoryIndexManager;\n  private mutationQueues: { [user: string]: MemoryMutationQueue } = {};\n  private overlays: { [user: string]: MemoryDocumentOverlayCache } = {};\n  private readonly remoteDocumentCache: MemoryRemoteDocumentCache;\n  private readonly targetCache: MemoryTargetCache;\n  private readonly bundleCache: MemoryBundleCache;\n  private readonly listenSequence = new ListenSequence(0);\n  private serializer: LocalSerializer;\n\n  private _started = false;\n\n  readonly referenceDelegate: MemoryReferenceDelegate;\n\n  /**\n   * The constructor accepts a factory for creating a reference delegate. This\n   * allows both the delegate and this instance to have strong references to\n   * each other without having nullable fields that would then need to be\n   * checked or asserted on every access.\n   */\n  constructor(\n    referenceDelegateFactory: (p: MemoryPersistence) => MemoryReferenceDelegate,\n    serializer: JsonProtoSerializer\n  ) {\n    this._started = true;\n    this.referenceDelegate = referenceDelegateFactory(this);\n    this.targetCache = new MemoryTargetCache(this);\n    const sizer = (doc: Document): number =>\n      this.referenceDelegate.documentSize(doc);\n    this.indexManager = new MemoryIndexManager();\n    this.remoteDocumentCache = newMemoryRemoteDocumentCache(sizer);\n    this.serializer = new LocalSerializer(serializer);\n    this.bundleCache = new MemoryBundleCache(this.serializer);\n  }\n\n  start(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  shutdown(): Promise<void> {\n    // No durable state to ensure is closed on shutdown.\n    this._started = false;\n    return Promise.resolve();\n  }\n\n  get started(): boolean {\n    return this._started;\n  }\n\n  setDatabaseDeletedListener(): void {\n    // No op.\n  }\n\n  setNetworkEnabled(): void {\n    // No op.\n  }\n\n  getIndexManager(user: User): MemoryIndexManager {\n    // We do not currently support indices for memory persistence, so we can\n    // return the same shared instance of the memory index manager.\n    return this.indexManager;\n  }\n\n  getDocumentOverlayCache(user: User): DocumentOverlayCache {\n    let overlay = this.overlays[user.toKey()];\n    if (!overlay) {\n      overlay = new MemoryDocumentOverlayCache();\n      this.overlays[user.toKey()] = overlay;\n    }\n    return overlay;\n  }\n\n  getMutationQueue(user: User, indexManager: IndexManager): MutationQueue {\n    let queue = this.mutationQueues[user.toKey()];\n    if (!queue) {\n      queue = new MemoryMutationQueue(indexManager, this.referenceDelegate);\n      this.mutationQueues[user.toKey()] = queue;\n    }\n    return queue;\n  }\n\n  getTargetCache(): MemoryTargetCache {\n    return this.targetCache;\n  }\n\n  getRemoteDocumentCache(): MemoryRemoteDocumentCache {\n    return this.remoteDocumentCache;\n  }\n\n  getBundleCache(): MemoryBundleCache {\n    return this.bundleCache;\n  }\n\n  runTransaction<T>(\n    action: string,\n    mode: PersistenceTransactionMode,\n    transactionOperation: (\n      transaction: PersistenceTransaction\n    ) => PersistencePromise<T>\n  ): Promise<T> {\n    logDebug(LOG_TAG, 'Starting transaction:', action);\n    const txn = new MemoryTransaction(this.listenSequence.next());\n    this.referenceDelegate.onTransactionStarted();\n    return transactionOperation(txn)\n      .next(result => {\n        return this.referenceDelegate\n          .onTransactionCommitted(txn)\n          .next(() => result);\n      })\n      .toPromise()\n      .then(result => {\n        txn.raiseOnCommittedEvent();\n        return result;\n      });\n  }\n\n  mutationQueuesContainKey(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or(\n      Object.values(this.mutationQueues).map(\n        queue => () => queue.containsKey(transaction, key)\n      )\n    );\n  }\n}\n\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */\nexport class MemoryTransaction extends PersistenceTransaction {\n  constructor(readonly currentSequenceNumber: ListenSequenceNumber) {\n    super();\n  }\n}\n\nexport interface MemoryReferenceDelegate extends ReferenceDelegate {\n  documentSize(doc: Document): number;\n  onTransactionStarted(): void;\n  onTransactionCommitted(txn: PersistenceTransaction): PersistencePromise<void>;\n}\n\nexport class MemoryEagerDelegate implements MemoryReferenceDelegate {\n  /** Tracks all documents that are active in Query views. */\n  private localViewReferences: ReferenceSet = new ReferenceSet();\n  /** The list of documents that are potentially GCed after each transaction. */\n  private _orphanedDocuments: Set</* path= */ string> | null = null;\n\n  private constructor(private readonly persistence: MemoryPersistence) {}\n\n  static factory(persistence: MemoryPersistence): MemoryEagerDelegate {\n    return new MemoryEagerDelegate(persistence);\n  }\n\n  private get orphanedDocuments(): Set<string> {\n    if (!this._orphanedDocuments) {\n      throw fail('orphanedDocuments is only valid during a transaction.');\n    } else {\n      return this._orphanedDocuments;\n    }\n  }\n\n  addReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.localViewReferences.addReference(key, targetId);\n    this.orphanedDocuments.delete(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  removeReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.localViewReferences.removeReference(key, targetId);\n    this.orphanedDocuments.add(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  markPotentiallyOrphaned(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedDocuments.add(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  removeTarget(\n    txn: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    const orphaned = this.localViewReferences.removeReferencesForId(\n      targetData.targetId\n    );\n    orphaned.forEach(key => this.orphanedDocuments.add(key.toString()));\n    const cache = this.persistence.getTargetCache();\n    return cache\n      .getMatchingKeysForTargetId(txn, targetData.targetId)\n      .next(keys => {\n        keys.forEach(key => this.orphanedDocuments.add(key.toString()));\n      })\n      .next(() => cache.removeTargetData(txn, targetData));\n  }\n\n  onTransactionStarted(): void {\n    this._orphanedDocuments = new Set<string>();\n  }\n\n  onTransactionCommitted(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    // Remove newly orphaned documents.\n    const cache = this.persistence.getRemoteDocumentCache();\n    const changeBuffer = cache.newChangeBuffer();\n    return PersistencePromise.forEach(\n      this.orphanedDocuments,\n      (path: string) => {\n        const key = DocumentKey.fromPath(path);\n        return this.isReferenced(txn, key).next(isReferenced => {\n          if (!isReferenced) {\n            changeBuffer.removeEntry(key, SnapshotVersion.min());\n          }\n        });\n      }\n    ).next(() => {\n      this._orphanedDocuments = null;\n      return changeBuffer.apply(txn);\n    });\n  }\n\n  updateLimboDocument(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    return this.isReferenced(txn, key).next(isReferenced => {\n      if (isReferenced) {\n        this.orphanedDocuments.delete(key.toString());\n      } else {\n        this.orphanedDocuments.add(key.toString());\n      }\n    });\n  }\n\n  documentSize(doc: Document): number {\n    // For eager GC, we don't care about the document size, there are no size thresholds.\n    return 0;\n  }\n\n  private isReferenced(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or([\n      () =>\n        PersistencePromise.resolve(this.localViewReferences.containsKey(key)),\n      () => this.persistence.getTargetCache().containsKey(txn, key),\n      () => this.persistence.mutationQueuesContainKey(txn, key)\n    ]);\n  }\n}\n\nexport class MemoryLruDelegate implements ReferenceDelegate, LruDelegate {\n  private orphanedSequenceNumbers: ObjectMap<\n    DocumentKey,\n    ListenSequenceNumber\n  > = new ObjectMap(\n    k => encodeResourcePath(k.path),\n    (l, r) => l.isEqual(r)\n  );\n\n  readonly garbageCollector: LruGarbageCollector;\n\n  constructor(\n    private readonly persistence: MemoryPersistence,\n    lruParams: LruParams\n  ) {\n    this.garbageCollector = newLruGarbageCollector(this, lruParams);\n  }\n\n  static factory(\n    persistence: MemoryPersistence,\n    lruParams: LruParams\n  ): MemoryLruDelegate {\n    return new MemoryLruDelegate(persistence, lruParams);\n  }\n\n  // No-ops, present so memory persistence doesn't have to care which delegate\n  // it has.\n  onTransactionStarted(): void {}\n\n  onTransactionCommitted(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    return PersistencePromise.resolve();\n  }\n\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (q: TargetData) => void\n  ): PersistencePromise<void> {\n    return this.persistence.getTargetCache().forEachTarget(txn, f);\n  }\n\n  getSequenceNumberCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number> {\n    const docCountPromise = this.orphanedDocumentCount(txn);\n    const targetCountPromise = this.persistence\n      .getTargetCache()\n      .getTargetCount(txn);\n    return targetCountPromise.next(targetCount =>\n      docCountPromise.next(docCount => targetCount + docCount)\n    );\n  }\n\n  private orphanedDocumentCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number> {\n    let orphanedCount = 0;\n    return this.forEachOrphanedDocumentSequenceNumber(txn, _ => {\n      orphanedCount++;\n    }).next(() => orphanedCount);\n  }\n\n  forEachOrphanedDocumentSequenceNumber(\n    txn: PersistenceTransaction,\n    f: (sequenceNumber: ListenSequenceNumber) => void\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(\n      this.orphanedSequenceNumbers,\n      (key, sequenceNumber) => {\n        // Pass in the exact sequence number as the upper bound so we know it won't be pinned by\n        // being too recent.\n        return this.isPinned(txn, key, sequenceNumber).next(isPinned => {\n          if (!isPinned) {\n            return f(sequenceNumber);\n          } else {\n            return PersistencePromise.resolve();\n          }\n        });\n      }\n    );\n  }\n\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    return this.persistence\n      .getTargetCache()\n      .removeTargets(txn, upperBound, activeTargetIds);\n  }\n\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number> {\n    let count = 0;\n    const cache = this.persistence.getRemoteDocumentCache();\n    const changeBuffer = cache.newChangeBuffer();\n    const p = cache.forEachDocumentKey(txn, key => {\n      return this.isPinned(txn, key, upperBound).next(isPinned => {\n        if (!isPinned) {\n          count++;\n          changeBuffer.removeEntry(key, SnapshotVersion.min());\n        }\n      });\n    });\n    return p.next(() => changeBuffer.apply(txn)).next(() => count);\n  }\n\n  markPotentiallyOrphaned(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  removeTarget(\n    txn: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    const updated = targetData.withSequenceNumber(txn.currentSequenceNumber);\n    return this.persistence.getTargetCache().updateTargetData(txn, updated);\n  }\n\n  addReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  removeReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  updateLimboDocument(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  documentSize(document: Document): number {\n    let documentSize = document.key.toString().length;\n    if (document.isFoundDocument()) {\n      documentSize += estimateByteSize(document.data.value);\n    }\n    return documentSize;\n  }\n\n  private isPinned(\n    txn: PersistenceTransaction,\n    key: DocumentKey,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or([\n      () => this.persistence.mutationQueuesContainKey(txn, key),\n      () => this.persistence.getTargetCache().containsKey(txn, key),\n      () => {\n        const orphanedAt = this.orphanedSequenceNumbers.get(key);\n        return PersistencePromise.resolve(\n          orphanedAt !== undefined && orphanedAt > upperBound\n        );\n      }\n    ]);\n  }\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return this.persistence.getRemoteDocumentCache().getSize(txn);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TargetId } from '../core/types';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nexport class LocalViewChanges {\n  constructor(\n    readonly targetId: TargetId,\n    readonly fromCache: boolean,\n    readonly addedKeys: DocumentKeySet,\n    readonly removedKeys: DocumentKeySet\n  ) {}\n\n  static fromSnapshot(\n    targetId: TargetId,\n    viewSnapshot: ViewSnapshot\n  ): LocalViewChanges {\n    let addedKeys = documentKeySet();\n    let removedKeys = documentKeySet();\n\n    for (const docChange of viewSnapshot.docChanges) {\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return new LocalViewChanges(\n      targetId,\n      viewSnapshot.fromCache,\n      addedKeys,\n      removedKeys\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A tracker to keep a record of important details during database local query\n * execution.\n */\nexport class QueryContext {\n  /**\n   * Counts the number of documents passed through during local query execution.\n   */\n  private _documentReadCount = 0;\n\n  get documentReadCount(): number {\n    return this._documentReadCount;\n  }\n\n  incrementDocumentReadCount(amount: number): void {\n    this._documentReadCount += amount;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LimitType,\n  newQueryComparator,\n  Query,\n  queryMatches,\n  queryMatchesAllDocuments,\n  queryToTarget,\n  queryWithLimit,\n  stringifyQuery\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport {\n  IndexOffset,\n  INITIAL_LARGEST_BATCH_ID,\n  newIndexOffsetSuccessorFromReadTime\n} from '../model/field_index';\nimport { debugAssert } from '../util/assert';\nimport { getLogLevel, logDebug, LogLevel } from '../util/log';\nimport { Iterable } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { IndexManager, IndexType } from './index_manager';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryContext } from './query_context';\n\nconst DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE = 100;\n\n/**\n * This cost represents the evaluation result of\n * (([index, docKey] + [docKey, docContent]) per document in the result set)\n * / ([docKey, docContent] per documents in full collection scan) coming from\n * experiment [enter PR experiment URL here].\n * TODO(b/299284287) Choose a value appropriate for the browser/OS combination,\n *  as determined by more data points from running the experiment.\n */\nconst DEFAULT_RELATIVE_INDEX_READ_COST_PER_DOCUMENT = 8;\n\n/**\n * The Firestore query engine.\n *\n * Firestore queries can be executed in three modes. The Query Engine determines\n * what mode to use based on what data is persisted. The mode only determines\n * the runtime complexity of the query - the result set is equivalent across all\n * implementations.\n *\n * The Query engine will use indexed-based execution if a user has configured\n * any index that can be used to execute query (via `setIndexConfiguration()`).\n * Otherwise, the engine will try to optimize the query by re-using a previously\n * persisted query result. If that is not possible, the query will be executed\n * via a full collection scan.\n *\n * Index-based execution is the default when available. The query engine\n * supports partial indexed execution and merges the result from the index\n * lookup with documents that have not yet been indexed. The index evaluation\n * matches the backend's format and as such, the SDK can use indexing for all\n * queries that the backend supports.\n *\n * If no index exists, the query engine tries to take advantage of the target\n * document mapping in the TargetCache. These mappings exists for all queries\n * that have been synced with the backend at least once and allow the query\n * engine to only read documents that previously matched a query plus any\n * documents that were edited after the query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */\nexport class QueryEngine {\n  private localDocumentsView!: LocalDocumentsView;\n  private indexManager!: IndexManager;\n  private initialized = false;\n\n  indexAutoCreationEnabled = false;\n\n  /**\n   * SDK only decides whether it should create index when collection size is\n   * larger than this.\n   */\n  indexAutoCreationMinCollectionSize =\n    DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE;\n\n  relativeIndexReadCostPerDocument =\n    DEFAULT_RELATIVE_INDEX_READ_COST_PER_DOCUMENT;\n\n  /** Sets the document view to query against. */\n  initialize(\n    localDocuments: LocalDocumentsView,\n    indexManager: IndexManager\n  ): void {\n    this.localDocumentsView = localDocuments;\n    this.indexManager = indexManager;\n    this.initialized = true;\n  }\n\n  /** Returns all local documents matching the specified query. */\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    lastLimboFreeSnapshotVersion: SnapshotVersion,\n    remoteKeys: DocumentKeySet\n  ): PersistencePromise<DocumentMap> {\n    debugAssert(this.initialized, 'initialize() not called');\n\n    // Stores the result from executing the query; using this object is more\n    // convenient than passing the result between steps of the persistence\n    // transaction and improves readability comparatively.\n    const queryResult: { result: DocumentMap | null } = { result: null };\n\n    return this.performQueryUsingIndex(transaction, query)\n      .next(result => {\n        queryResult.result = result;\n      })\n      .next(() => {\n        if (queryResult.result) {\n          return;\n        }\n        return this.performQueryUsingRemoteKeys(\n          transaction,\n          query,\n          remoteKeys,\n          lastLimboFreeSnapshotVersion\n        ).next(result => {\n          queryResult.result = result;\n        });\n      })\n      .next(() => {\n        if (queryResult.result) {\n          return;\n        }\n        const context = new QueryContext();\n        return this.executeFullCollectionScan(transaction, query, context).next(\n          result => {\n            queryResult.result = result;\n            if (this.indexAutoCreationEnabled) {\n              return this.createCacheIndexes(\n                transaction,\n                query,\n                context,\n                result.size\n              );\n            }\n          }\n        );\n      })\n      .next(() => queryResult.result!);\n  }\n\n  createCacheIndexes(\n    transaction: PersistenceTransaction,\n    query: Query,\n    context: QueryContext,\n    resultSize: number\n  ): PersistencePromise<void> {\n    if (context.documentReadCount < this.indexAutoCreationMinCollectionSize) {\n      if (getLogLevel() <= LogLevel.DEBUG) {\n        logDebug(\n          'QueryEngine',\n          'SDK will not create cache indexes for query:',\n          stringifyQuery(query),\n          'since it only creates cache indexes for collection contains',\n          'more than or equal to',\n          this.indexAutoCreationMinCollectionSize,\n          'documents'\n        );\n      }\n      return PersistencePromise.resolve();\n    }\n\n    if (getLogLevel() <= LogLevel.DEBUG) {\n      logDebug(\n        'QueryEngine',\n        'Query:',\n        stringifyQuery(query),\n        'scans',\n        context.documentReadCount,\n        'local documents and returns',\n        resultSize,\n        'documents as results.'\n      );\n    }\n\n    if (\n      context.documentReadCount >\n      this.relativeIndexReadCostPerDocument * resultSize\n    ) {\n      if (getLogLevel() <= LogLevel.DEBUG) {\n        logDebug(\n          'QueryEngine',\n          'The SDK decides to create cache indexes for query:',\n          stringifyQuery(query),\n          'as using cache indexes may help improve performance.'\n        );\n      }\n      return this.indexManager.createTargetIndexes(\n        transaction,\n        queryToTarget(query)\n      );\n    }\n\n    return PersistencePromise.resolve();\n  }\n\n  /**\n   * Performs an indexed query that evaluates the query based on a collection's\n   * persisted index values. Returns `null` if an index is not available.\n   */\n  private performQueryUsingIndex(\n    transaction: PersistenceTransaction,\n    query: Query\n  ): PersistencePromise<DocumentMap | null> {\n    if (queryMatchesAllDocuments(query)) {\n      // Queries that match all documents don't benefit from using\n      // key-based lookups. It is more efficient to scan all documents in a\n      // collection, rather than to perform individual lookups.\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    let target = queryToTarget(query);\n    return this.indexManager\n      .getIndexType(transaction, target)\n      .next(indexType => {\n        if (indexType === IndexType.NONE) {\n          // The target cannot be served from any index.\n          return null;\n        }\n\n        if (query.limit !== null && indexType === IndexType.PARTIAL) {\n          // We cannot apply a limit for targets that are served using a partial\n          // index. If a partial index will be used to serve the target, the\n          // query may return a superset of documents that match the target\n          // (e.g. if the index doesn't include all the target's filters), or\n          // may return the correct set of documents in the wrong order (e.g. if\n          // the index doesn't include a segment for one of the orderBys).\n          // Therefore, a limit should not be applied in such cases.\n          query = queryWithLimit(query, null, LimitType.First);\n          target = queryToTarget(query);\n        }\n\n        return this.indexManager\n          .getDocumentsMatchingTarget(transaction, target)\n          .next(keys => {\n            debugAssert(\n              !!keys,\n              'Index manager must return results for partial and full indexes.'\n            );\n            const sortedKeys = documentKeySet(...keys);\n            return this.localDocumentsView\n              .getDocuments(transaction, sortedKeys)\n              .next(indexedDocuments => {\n                return this.indexManager\n                  .getMinOffset(transaction, target)\n                  .next(offset => {\n                    const previousResults = this.applyQuery(\n                      query,\n                      indexedDocuments\n                    );\n\n                    if (\n                      this.needsRefill(\n                        query,\n                        previousResults,\n                        sortedKeys,\n                        offset.readTime\n                      )\n                    ) {\n                      // A limit query whose boundaries change due to local\n                      // edits can be re-run against the cache by excluding the\n                      // limit. This ensures that all documents that match the\n                      // query's filters are included in the result set. The SDK\n                      // can then apply the limit once all local edits are\n                      // incorporated.\n                      return this.performQueryUsingIndex(\n                        transaction,\n                        queryWithLimit(query, null, LimitType.First)\n                      );\n                    }\n\n                    return this.appendRemainingResults(\n                      transaction,\n                      previousResults,\n                      query,\n                      offset\n                    ) as PersistencePromise<DocumentMap | null>;\n                  });\n              });\n          });\n      });\n  }\n\n  /**\n   * Performs a query based on the target's persisted query mapping. Returns\n   * `null` if the mapping is not available or cannot be used.\n   */\n  private performQueryUsingRemoteKeys(\n    transaction: PersistenceTransaction,\n    query: Query,\n    remoteKeys: DocumentKeySet,\n    lastLimboFreeSnapshotVersion: SnapshotVersion\n  ): PersistencePromise<DocumentMap | null> {\n    if (queryMatchesAllDocuments(query)) {\n      // Queries that match all documents don't benefit from using\n      // key-based lookups. It is more efficient to scan all documents in a\n      // collection, rather than to perform individual lookups.\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    // Queries that have never seen a snapshot without limbo free documents\n    // should also be run as a full collection scan.\n    if (lastLimboFreeSnapshotVersion.isEqual(SnapshotVersion.min())) {\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    return this.localDocumentsView!.getDocuments(transaction, remoteKeys).next(\n      documents => {\n        const previousResults = this.applyQuery(query, documents);\n\n        if (\n          this.needsRefill(\n            query,\n            previousResults,\n            remoteKeys,\n            lastLimboFreeSnapshotVersion\n          )\n        ) {\n          return PersistencePromise.resolve<DocumentMap | null>(null);\n        }\n\n        if (getLogLevel() <= LogLevel.DEBUG) {\n          logDebug(\n            'QueryEngine',\n            'Re-using previous result from %s to execute query: %s',\n            lastLimboFreeSnapshotVersion.toString(),\n            stringifyQuery(query)\n          );\n        }\n\n        // Retrieve all results for documents that were updated since the last\n        // limbo-document free remote snapshot.\n        return this.appendRemainingResults(\n          transaction,\n          previousResults,\n          query,\n          newIndexOffsetSuccessorFromReadTime(\n            lastLimboFreeSnapshotVersion,\n            INITIAL_LARGEST_BATCH_ID\n          )\n        ).next<DocumentMap | null>(results => results);\n      }\n    );\n  }\n\n  /** Applies the query filter and sorting to the provided documents.  */\n  private applyQuery(\n    query: Query,\n    documents: DocumentMap\n  ): SortedSet<Document> {\n    // Sort the documents and re-apply the query filter since previously\n    // matching documents do not necessarily still match the query.\n    let queryResults = new SortedSet<Document>(newQueryComparator(query));\n    documents.forEach((_, maybeDoc) => {\n      if (queryMatches(query, maybeDoc)) {\n        queryResults = queryResults.add(maybeDoc);\n      }\n    });\n    return queryResults;\n  }\n\n  /**\n   * Determines if a limit query needs to be refilled from cache, making it\n   * ineligible for index-free execution.\n   *\n   * @param query - The query.\n   * @param sortedPreviousResults - The documents that matched the query when it\n   * was last synchronized, sorted by the query's comparator.\n   * @param remoteKeys - The document keys that matched the query at the last\n   * snapshot.\n   * @param limboFreeSnapshotVersion - The version of the snapshot when the\n   * query was last synchronized.\n   */\n  private needsRefill(\n    query: Query,\n    sortedPreviousResults: SortedSet<Document>,\n    remoteKeys: DocumentKeySet,\n    limboFreeSnapshotVersion: SnapshotVersion\n  ): boolean {\n    if (query.limit === null) {\n      // Queries without limits do not need to be refilled.\n      return false;\n    }\n\n    if (remoteKeys.size !== sortedPreviousResults.size) {\n      // The query needs to be refilled if a previously matching document no\n      // longer matches.\n      return true;\n    }\n\n    // Limit queries are not eligible for index-free query execution if there is\n    // a potential that an older document from cache now sorts before a document\n    // that was previously part of the limit. This, however, can only happen if\n    // the document at the edge of the limit goes out of limit.\n    // If a document that is not the limit boundary sorts differently,\n    // the boundary of the limit itself did not change and documents from cache\n    // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n    // any modifications that don't affect the last document.\n    const docAtLimitEdge =\n      query.limitType === LimitType.First\n        ? sortedPreviousResults.last()\n        : sortedPreviousResults.first();\n    if (!docAtLimitEdge) {\n      // We don't need to refill the query if there were already no documents.\n      return false;\n    }\n    return (\n      docAtLimitEdge.hasPendingWrites ||\n      docAtLimitEdge.version.compareTo(limboFreeSnapshotVersion) > 0\n    );\n  }\n\n  private executeFullCollectionScan(\n    transaction: PersistenceTransaction,\n    query: Query,\n    context: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    if (getLogLevel() <= LogLevel.DEBUG) {\n      logDebug(\n        'QueryEngine',\n        'Using full collection scan to execute query:',\n        stringifyQuery(query)\n      );\n    }\n\n    return this.localDocumentsView!.getDocumentsMatchingQuery(\n      transaction,\n      query,\n      IndexOffset.min(),\n      context\n    );\n  }\n\n  /**\n   * Combines the results from an indexed execution with the remaining documents\n   * that have not yet been indexed.\n   */\n  private appendRemainingResults(\n    transaction: PersistenceTransaction,\n    indexedResults: Iterable<Document>,\n    query: Query,\n    offset: IndexOffset\n  ): PersistencePromise<DocumentMap> {\n    // Retrieve all results for documents that were updated since the offset.\n    return this.localDocumentsView\n      .getDocumentsMatchingQuery(transaction, query, offset)\n      .next(remainingResults => {\n        // Merge with existing results\n        indexedResults.forEach(d => {\n          remainingResults = remainingResults.insert(d.key, d);\n        });\n        return remainingResults;\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { BundleConverter, BundledDocuments, NamedQuery } from '../core/bundle';\nimport {\n  newQueryForPath,\n  Query,\n  queryCollectionGroup,\n  queryToTarget\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetEquals } from '../core/target';\nimport { BatchId, TargetId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  convertOverlayedDocumentMapToDocumentMap,\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap,\n  mutableDocumentMap,\n  MutableDocumentMap,\n  OverlayedDocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexSemanticComparator,\n  INITIAL_LARGEST_BATCH_ID,\n  newIndexOffsetSuccessorFromReadTime\n} from '../model/field_index';\nimport {\n  mutationExtractBaseValue,\n  Mutation,\n  PatchMutation,\n  Precondition\n} from '../model/mutation';\nimport { MutationBatch, MutationBatchResult } from '../model/mutation_batch';\nimport { extractFieldMask } from '../model/object_value';\nimport { ResourcePath } from '../model/path';\nimport {\n  BundleMetadata,\n  NamedQuery as ProtoNamedQuery\n} from '../protos/firestore_bundle_proto';\nimport { RemoteEvent, TargetChange } from '../remote/remote_event';\nimport { fromVersion, JsonProtoSerializer } from '../remote/serializer';\nimport { diffArrays } from '../util/array';\nimport { debugAssert, debugCast, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { logDebug } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { BundleCache } from './bundle_cache';\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { IndexManager } from './index_manager';\nimport { IndexedDbMutationQueue } from './indexeddb_mutation_queue';\nimport { IndexedDbPersistence } from './indexeddb_persistence';\nimport { IndexedDbTargetCache } from './indexeddb_target_cache';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { fromBundledQuery } from './local_serializer';\nimport { LocalStore } from './local_store';\nimport { LocalViewChanges } from './local_view_changes';\nimport { LruGarbageCollector, LruResults } from './lru_garbage_collector';\nimport { MutationQueue } from './mutation_queue';\nimport { Persistence } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryEngine } from './query_engine';\nimport { RemoteDocumentCache } from './remote_document_cache';\nimport { RemoteDocumentChangeBuffer } from './remote_document_change_buffer';\nimport { ClientId } from './shared_client_state';\nimport { isIndexedDbTransactionError } from './simple_db';\nimport { TargetCache } from './target_cache';\nimport { TargetData, TargetPurpose } from './target_data';\n\nexport const LOG_TAG = 'LocalStore';\n\n/**\n * The maximum time to leave a resume token buffered without writing it out.\n * This value is arbitrary: it's long enough to avoid several writes\n * (possibly indefinitely if updates come more frequently than this) but\n * short enough that restarting after crashing will still have a pretty\n * recent resume token.\n */\nconst RESUME_TOKEN_MAX_AGE_MICROS = 5 * 60 * 1e6;\n\n/** The result of a write to the local store. */\nexport interface LocalWriteResult {\n  batchId: BatchId;\n  changes: DocumentMap;\n}\n\n/** The result of a user-change operation in the local store. */\nexport interface UserChangeResult {\n  readonly affectedDocuments: DocumentMap;\n  readonly removedBatchIds: BatchId[];\n  readonly addedBatchIds: BatchId[];\n}\n\n/** The result of executing a query against the local store. */\nexport interface QueryResult {\n  readonly documents: DocumentMap;\n  readonly remoteKeys: DocumentKeySet;\n}\n\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass LocalStoreImpl implements LocalStore {\n  /**\n   * The set of all mutations that have been sent but not yet been applied to\n   * the backend.\n   */\n  mutationQueue!: MutationQueue;\n\n  /**\n   * The overlays that can be used to short circuit applying all mutations from\n   * mutation queue.\n   */\n  documentOverlayCache!: DocumentOverlayCache;\n\n  /** The set of all cached remote documents. */\n  remoteDocuments: RemoteDocumentCache;\n\n  /**\n   * The \"local\" view of all documents (layering mutationQueue on top of\n   * remoteDocumentCache).\n   */\n  localDocuments!: LocalDocumentsView;\n\n  /** Manages the list of active field and collection indices. */\n  indexManager!: IndexManager;\n\n  /** The set of all cached bundle metadata and named queries. */\n  bundleCache: BundleCache;\n\n  /** Maps a target to its `TargetData`. */\n  targetCache: TargetCache;\n\n  /**\n   * Maps a targetID to data about its target.\n   *\n   * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n   * of `applyRemoteEvent()` idempotent.\n   */\n  targetDataByTarget = new SortedMap<TargetId, TargetData>(primitiveComparator);\n\n  /** Maps a target to its targetID. */\n  // TODO(wuandy): Evaluate if TargetId can be part of Target.\n  targetIdByTarget = new ObjectMap<Target, TargetId>(\n    t => canonifyTarget(t),\n    targetEquals\n  );\n\n  /**\n   * A per collection group index of the last read time processed by\n   * `getNewDocumentChanges()`.\n   *\n   * PORTING NOTE: This is only used for multi-tab synchronization.\n   */\n  collectionGroupReadTime = new Map<string, SnapshotVersion>();\n\n  constructor(\n    /** Manages our in-memory or durable persistence. */\n    readonly persistence: Persistence,\n    readonly queryEngine: QueryEngine,\n    initialUser: User,\n    readonly serializer: JsonProtoSerializer\n  ) {\n    debugAssert(\n      persistence.started,\n      'LocalStore was passed an unstarted persistence implementation'\n    );\n    this.remoteDocuments = persistence.getRemoteDocumentCache();\n    this.targetCache = persistence.getTargetCache();\n    this.bundleCache = persistence.getBundleCache();\n\n    this.initializeUserComponents(initialUser);\n  }\n\n  initializeUserComponents(user: User): void {\n    // TODO(indexing): Add spec tests that test these components change after a\n    // user change\n    this.documentOverlayCache = this.persistence.getDocumentOverlayCache(user);\n    this.indexManager = this.persistence.getIndexManager(user);\n    this.mutationQueue = this.persistence.getMutationQueue(\n      user,\n      this.indexManager\n    );\n    this.localDocuments = new LocalDocumentsView(\n      this.remoteDocuments,\n      this.mutationQueue,\n      this.documentOverlayCache,\n      this.indexManager\n    );\n    this.remoteDocuments.setIndexManager(this.indexManager);\n    this.queryEngine.initialize(this.localDocuments, this.indexManager);\n  }\n\n  collectGarbage(garbageCollector: LruGarbageCollector): Promise<LruResults> {\n    return this.persistence.runTransaction(\n      'Collect garbage',\n      'readwrite-primary',\n      txn => garbageCollector.collect(txn, this.targetDataByTarget)\n    );\n  }\n}\n\ninterface DocumentChangeResult {\n  changedDocuments: MutableDocumentMap;\n  existenceChangedKeys: DocumentKeySet;\n}\n\nexport function newLocalStore(\n  /** Manages our in-memory or durable persistence. */\n  persistence: Persistence,\n  queryEngine: QueryEngine,\n  initialUser: User,\n  serializer: JsonProtoSerializer\n): LocalStore {\n  return new LocalStoreImpl(persistence, queryEngine, initialUser, serializer);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nexport async function localStoreHandleUserChange(\n  localStore: LocalStore,\n  user: User\n): Promise<UserChangeResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n\n  const result = await localStoreImpl.persistence.runTransaction(\n    'Handle user change',\n    'readonly',\n    txn => {\n      // Swap out the mutation queue, grabbing the pending mutation batches\n      // before and after.\n      let oldBatches: MutationBatch[];\n      return localStoreImpl.mutationQueue\n        .getAllMutationBatches(txn)\n        .next(promisedOldBatches => {\n          oldBatches = promisedOldBatches;\n          localStoreImpl.initializeUserComponents(user);\n          return localStoreImpl.mutationQueue.getAllMutationBatches(txn);\n        })\n        .next(newBatches => {\n          const removedBatchIds: BatchId[] = [];\n          const addedBatchIds: BatchId[] = [];\n\n          // Union the old/new changed keys.\n          let changedKeys = documentKeySet();\n\n          for (const batch of oldBatches) {\n            removedBatchIds.push(batch.batchId);\n            for (const mutation of batch.mutations) {\n              changedKeys = changedKeys.add(mutation.key);\n            }\n          }\n\n          for (const batch of newBatches) {\n            addedBatchIds.push(batch.batchId);\n            for (const mutation of batch.mutations) {\n              changedKeys = changedKeys.add(mutation.key);\n            }\n          }\n\n          // Return the set of all (potentially) changed documents and the list\n          // of mutation batch IDs that were affected by change.\n          return localStoreImpl.localDocuments\n            .getDocuments(txn, changedKeys)\n            .next(affectedDocuments => {\n              return {\n                affectedDocuments,\n                removedBatchIds,\n                addedBatchIds\n              };\n            });\n        });\n    }\n  );\n\n  return result;\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\nexport function localStoreWriteLocally(\n  localStore: LocalStore,\n  mutations: Mutation[]\n): Promise<LocalWriteResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const localWriteTime = Timestamp.now();\n  const keys = mutations.reduce((keys, m) => keys.add(m.key), documentKeySet());\n\n  let overlayedDocuments: OverlayedDocumentMap;\n  let mutationBatch: MutationBatch;\n\n  return localStoreImpl.persistence\n    .runTransaction('Locally write mutations', 'readwrite', txn => {\n      // Figure out which keys do not have a remote version in the cache, this\n      // is needed to create the right overlay mutation: if no remote version\n      // presents, we do not need to create overlays as patch mutations.\n      // TODO(Overlay): Is there a better way to determine this? Using the\n      //  document version does not work because local mutations set them back\n      //  to 0.\n      let remoteDocs = mutableDocumentMap();\n      let docsWithoutRemoteVersion = documentKeySet();\n      return localStoreImpl.remoteDocuments\n        .getEntries(txn, keys)\n        .next(docs => {\n          remoteDocs = docs;\n          remoteDocs.forEach((key, doc) => {\n            if (!doc.isValidDocument()) {\n              docsWithoutRemoteVersion = docsWithoutRemoteVersion.add(key);\n            }\n          });\n        })\n        .next(() => {\n          // Load and apply all existing mutations. This lets us compute the\n          // current base state for all non-idempotent transforms before applying\n          // any additional user-provided writes.\n          return localStoreImpl.localDocuments.getOverlayedDocuments(\n            txn,\n            remoteDocs\n          );\n        })\n        .next((docs: OverlayedDocumentMap) => {\n          overlayedDocuments = docs;\n\n          // For non-idempotent mutations (such as `FieldValue.increment()`),\n          // we record the base state in a separate patch mutation. This is\n          // later used to guarantee consistent values and prevents flicker\n          // even if the backend sends us an update that already includes our\n          // transform.\n          const baseMutations: Mutation[] = [];\n\n          for (const mutation of mutations) {\n            const baseValue = mutationExtractBaseValue(\n              mutation,\n              overlayedDocuments.get(mutation.key)!.overlayedDocument\n            );\n            if (baseValue != null) {\n              // NOTE: The base state should only be applied if there's some\n              // existing document to override, so use a Precondition of\n              // exists=true\n              baseMutations.push(\n                new PatchMutation(\n                  mutation.key,\n                  baseValue,\n                  extractFieldMask(baseValue.value.mapValue),\n                  Precondition.exists(true)\n                )\n              );\n            }\n          }\n\n          return localStoreImpl.mutationQueue.addMutationBatch(\n            txn,\n            localWriteTime,\n            baseMutations,\n            mutations\n          );\n        })\n        .next(batch => {\n          mutationBatch = batch;\n          const overlays = batch.applyToLocalDocumentSet(\n            overlayedDocuments,\n            docsWithoutRemoteVersion\n          );\n          return localStoreImpl.documentOverlayCache.saveOverlays(\n            txn,\n            batch.batchId,\n            overlays\n          );\n        });\n    })\n    .then(() => ({\n      batchId: mutationBatch.batchId,\n      changes: convertOverlayedDocumentMapToDocumentMap(overlayedDocuments)\n    }));\n}\n\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nexport function localStoreAcknowledgeBatch(\n  localStore: LocalStore,\n  batchResult: MutationBatchResult\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Acknowledge batch',\n    'readwrite-primary',\n    txn => {\n      const affected = batchResult.batch.keys();\n      const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n        trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n      });\n      return applyWriteToRemoteDocuments(\n        localStoreImpl,\n        txn,\n        batchResult,\n        documentBuffer\n      )\n        .next(() => documentBuffer.apply(txn))\n        .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n        .next(() =>\n          localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(\n            txn,\n            affected,\n            batchResult.batch.batchId\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(\n            txn,\n            getKeysWithTransformResults(batchResult)\n          )\n        )\n        .next(() => localStoreImpl.localDocuments.getDocuments(txn, affected));\n    }\n  );\n}\n\nfunction getKeysWithTransformResults(\n  batchResult: MutationBatchResult\n): DocumentKeySet {\n  let result = documentKeySet();\n\n  for (let i = 0; i < batchResult.mutationResults.length; ++i) {\n    const mutationResult = batchResult.mutationResults[i];\n    if (mutationResult.transformResults.length > 0) {\n      result = result.add(batchResult.batch.mutations[i].key);\n    }\n  }\n  return result;\n}\n\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\nexport function localStoreRejectBatch(\n  localStore: LocalStore,\n  batchId: BatchId\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Reject batch',\n    'readwrite-primary',\n    txn => {\n      let affectedKeys: DocumentKeySet;\n      return localStoreImpl.mutationQueue\n        .lookupMutationBatch(txn, batchId)\n        .next((batch: MutationBatch | null) => {\n          hardAssert(batch !== null, 'Attempt to reject nonexistent batch!');\n          affectedKeys = batch.keys();\n          return localStoreImpl.mutationQueue.removeMutationBatch(txn, batch);\n        })\n        .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n        .next(() =>\n          localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(\n            txn,\n            affectedKeys,\n            batchId\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(\n            txn,\n            affectedKeys\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.getDocuments(txn, affectedKeys)\n        );\n    }\n  );\n}\n\n/**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */\nexport function localStoreGetHighestUnacknowledgedBatchId(\n  localStore: LocalStore\n): Promise<BatchId> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get highest unacknowledged batch id',\n    'readonly',\n    txn => localStoreImpl.mutationQueue.getHighestUnacknowledgedBatchId(txn)\n  );\n}\n\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nexport function localStoreGetLastRemoteSnapshotVersion(\n  localStore: LocalStore\n): Promise<SnapshotVersion> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get last remote snapshot version',\n    'readonly',\n    txn => localStoreImpl.targetCache.getLastRemoteSnapshotVersion(txn)\n  );\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nexport function localStoreApplyRemoteEventToLocalCache(\n  localStore: LocalStore,\n  remoteEvent: RemoteEvent\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const remoteVersion = remoteEvent.snapshotVersion;\n  let newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n\n  return localStoreImpl.persistence\n    .runTransaction('Apply remote event', 'readwrite-primary', txn => {\n      const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n        trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n      });\n\n      // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n      newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n\n      const promises = [] as Array<PersistencePromise<void>>;\n      remoteEvent.targetChanges.forEach((change, targetId) => {\n        const oldTargetData = newTargetDataByTargetMap.get(targetId);\n        if (!oldTargetData) {\n          return;\n        }\n\n        // Only update the remote keys if the target is still active. This\n        // ensures that we can persist the updated target data along with\n        // the updated assignment.\n        promises.push(\n          localStoreImpl.targetCache\n            .removeMatchingKeys(txn, change.removedDocuments, targetId)\n            .next(() => {\n              return localStoreImpl.targetCache.addMatchingKeys(\n                txn,\n                change.addedDocuments,\n                targetId\n              );\n            })\n        );\n\n        let newTargetData = oldTargetData.withSequenceNumber(\n          txn.currentSequenceNumber\n        );\n        if (remoteEvent.targetMismatches.get(targetId) !== null) {\n          newTargetData = newTargetData\n            .withResumeToken(\n              ByteString.EMPTY_BYTE_STRING,\n              SnapshotVersion.min()\n            )\n            .withLastLimboFreeSnapshotVersion(SnapshotVersion.min());\n        } else if (change.resumeToken.approximateByteSize() > 0) {\n          newTargetData = newTargetData.withResumeToken(\n            change.resumeToken,\n            remoteVersion\n          );\n        }\n\n        newTargetDataByTargetMap = newTargetDataByTargetMap.insert(\n          targetId,\n          newTargetData\n        );\n\n        // Update the target data if there are target changes (or if\n        // sufficient time has passed since the last update).\n        if (shouldPersistTargetData(oldTargetData, newTargetData, change)) {\n          promises.push(\n            localStoreImpl.targetCache.updateTargetData(txn, newTargetData)\n          );\n        }\n      });\n\n      let changedDocs = mutableDocumentMap();\n      let existenceChangedKeys = documentKeySet();\n      remoteEvent.documentUpdates.forEach(key => {\n        if (remoteEvent.resolvedLimboDocuments.has(key)) {\n          promises.push(\n            localStoreImpl.persistence.referenceDelegate.updateLimboDocument(\n              txn,\n              key\n            )\n          );\n        }\n      });\n\n      // Each loop iteration only affects its \"own\" doc, so it's safe to get all\n      // the remote documents in advance in a single call.\n      promises.push(\n        populateDocumentChangeBuffer(\n          txn,\n          documentBuffer,\n          remoteEvent.documentUpdates\n        ).next(result => {\n          changedDocs = result.changedDocuments;\n          existenceChangedKeys = result.existenceChangedKeys;\n        })\n      );\n\n      // HACK: The only reason we allow a null snapshot version is so that we\n      // can synthesize remote events when we get permission denied errors while\n      // trying to resolve the state of a locally cached document that is in\n      // limbo.\n      if (!remoteVersion.isEqual(SnapshotVersion.min())) {\n        const updateRemoteVersion = localStoreImpl.targetCache\n          .getLastRemoteSnapshotVersion(txn)\n          .next(lastRemoteSnapshotVersion => {\n            debugAssert(\n              remoteVersion.compareTo(lastRemoteSnapshotVersion) >= 0,\n              'Watch stream reverted to previous snapshot?? ' +\n                remoteVersion +\n                ' < ' +\n                lastRemoteSnapshotVersion\n            );\n            return localStoreImpl.targetCache.setTargetsMetadata(\n              txn,\n              txn.currentSequenceNumber,\n              remoteVersion\n            );\n          });\n        promises.push(updateRemoteVersion);\n      }\n\n      return PersistencePromise.waitFor(promises)\n        .next(() => documentBuffer.apply(txn))\n        .next(() =>\n          localStoreImpl.localDocuments.getLocalViewOfDocuments(\n            txn,\n            changedDocs,\n            existenceChangedKeys\n          )\n        )\n        .next(() => changedDocs);\n    })\n    .then(changedDocs => {\n      localStoreImpl.targetDataByTarget = newTargetDataByTargetMap;\n      return changedDocs;\n    });\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents, and\n * also a set of documents whose existence state are changed as a result.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n */\nfunction populateDocumentChangeBuffer(\n  txn: PersistenceTransaction,\n  documentBuffer: RemoteDocumentChangeBuffer,\n  documents: MutableDocumentMap\n): PersistencePromise<DocumentChangeResult> {\n  let updatedKeys = documentKeySet();\n  let existenceChangedKeys = documentKeySet();\n  documents.forEach(k => (updatedKeys = updatedKeys.add(k)));\n  return documentBuffer.getEntries(txn, updatedKeys).next(existingDocs => {\n    let changedDocuments = mutableDocumentMap();\n    documents.forEach((key, doc) => {\n      const existingDoc = existingDocs.get(key)!;\n\n      // Check if see if there is a existence state change for this document.\n      if (doc.isFoundDocument() !== existingDoc.isFoundDocument()) {\n        existenceChangedKeys = existenceChangedKeys.add(key);\n      }\n\n      // Note: The order of the steps below is important, since we want\n      // to ensure that rejected limbo resolutions (which fabricate\n      // NoDocuments with SnapshotVersion.min()) never add documents to\n      // cache.\n      if (doc.isNoDocument() && doc.version.isEqual(SnapshotVersion.min())) {\n        // NoDocuments with SnapshotVersion.min() are used in manufactured\n        // events. We remove these documents from cache since we lost\n        // access.\n        documentBuffer.removeEntry(key, doc.readTime);\n        changedDocuments = changedDocuments.insert(key, doc);\n      } else if (\n        !existingDoc.isValidDocument() ||\n        doc.version.compareTo(existingDoc.version) > 0 ||\n        (doc.version.compareTo(existingDoc.version) === 0 &&\n          existingDoc.hasPendingWrites)\n      ) {\n        debugAssert(\n          !SnapshotVersion.min().isEqual(doc.readTime),\n          'Cannot add a document when the remote version is zero'\n        );\n        documentBuffer.addEntry(doc);\n        changedDocuments = changedDocuments.insert(key, doc);\n      } else {\n        logDebug(\n          LOG_TAG,\n          'Ignoring outdated watch update for ',\n          key,\n          '. Current version:',\n          existingDoc.version,\n          ' Watch version:',\n          doc.version\n        );\n      }\n    });\n    return { changedDocuments, existenceChangedKeys };\n  });\n}\n\n/**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\nfunction shouldPersistTargetData(\n  oldTargetData: TargetData,\n  newTargetData: TargetData,\n  change: TargetChange\n): boolean {\n  // Always persist target data if we don't already have a resume token.\n  if (oldTargetData.resumeToken.approximateByteSize() === 0) {\n    return true;\n  }\n\n  // Don't allow resume token changes to be buffered indefinitely. This\n  // allows us to be reasonably up-to-date after a crash and avoids needing\n  // to loop over all active queries on shutdown. Especially in the browser\n  // we may not get time to do anything interesting while the current tab is\n  // closing.\n  const timeDelta =\n    newTargetData.snapshotVersion.toMicroseconds() -\n    oldTargetData.snapshotVersion.toMicroseconds();\n  if (timeDelta >= RESUME_TOKEN_MAX_AGE_MICROS) {\n    return true;\n  }\n\n  // Otherwise if the only thing that has changed about a target is its resume\n  // token it's not worth persisting. Note that the RemoteStore keeps an\n  // in-memory view of the currently active targets which includes the current\n  // resume token, so stream failure or user changes will still use an\n  // up-to-date resume token regardless of what we do here.\n  const changes =\n    change.addedDocuments.size +\n    change.modifiedDocuments.size +\n    change.removedDocuments.size;\n  return changes > 0;\n}\n\n/**\n * Notifies local store of the changed views to locally pin documents.\n */\nexport async function localStoreNotifyLocalViewChanges(\n  localStore: LocalStore,\n  viewChanges: LocalViewChanges[]\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  try {\n    await localStoreImpl.persistence.runTransaction(\n      'notifyLocalViewChanges',\n      'readwrite',\n      txn => {\n        return PersistencePromise.forEach(\n          viewChanges,\n          (viewChange: LocalViewChanges) => {\n            return PersistencePromise.forEach(\n              viewChange.addedKeys,\n              (key: DocumentKey) =>\n                localStoreImpl.persistence.referenceDelegate.addReference(\n                  txn,\n                  viewChange.targetId,\n                  key\n                )\n            ).next(() =>\n              PersistencePromise.forEach(\n                viewChange.removedKeys,\n                (key: DocumentKey) =>\n                  localStoreImpl.persistence.referenceDelegate.removeReference(\n                    txn,\n                    viewChange.targetId,\n                    key\n                  )\n              )\n            );\n          }\n        );\n      }\n    );\n  } catch (e) {\n    if (isIndexedDbTransactionError(e as Error)) {\n      // If `notifyLocalViewChanges` fails, we did not advance the sequence\n      // number for the documents that were included in this transaction.\n      // This might trigger them to be deleted earlier than they otherwise\n      // would have, but it should not invalidate the integrity of the data.\n      logDebug(LOG_TAG, 'Failed to update sequence numbers: ' + e);\n    } else {\n      throw e;\n    }\n  }\n\n  for (const viewChange of viewChanges) {\n    const targetId = viewChange.targetId;\n\n    if (!viewChange.fromCache) {\n      const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n      debugAssert(\n        targetData !== null,\n        `Can't set limbo-free snapshot version for unknown target: ${targetId}`\n      );\n\n      // Advance the last limbo free snapshot version\n      const lastLimboFreeSnapshotVersion = targetData.snapshotVersion;\n      const updatedTargetData = targetData.withLastLimboFreeSnapshotVersion(\n        lastLimboFreeSnapshotVersion\n      );\n      localStoreImpl.targetDataByTarget =\n        localStoreImpl.targetDataByTarget.insert(targetId, updatedTargetData);\n\n      // TODO(b/272564316): Apply the optimization done on other platforms.\n      // This is a problem for web because saving the updated targetData from\n      // non-primary client conflicts with what primary client saved.\n    }\n  }\n}\n\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nexport function localStoreGetNextMutationBatch(\n  localStore: LocalStore,\n  afterBatchId?: BatchId\n): Promise<MutationBatch | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get next mutation batch',\n    'readonly',\n    txn => {\n      if (afterBatchId === undefined) {\n        afterBatchId = BATCHID_UNKNOWN;\n      }\n      return localStoreImpl.mutationQueue.getNextMutationBatchAfterBatchId(\n        txn,\n        afterBatchId\n      );\n    }\n  );\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\nexport function localStoreReadDocument(\n  localStore: LocalStore,\n  key: DocumentKey\n): Promise<Document> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'read document',\n    'readonly',\n    txn => localStoreImpl.localDocuments.getDocument(txn, key)\n  );\n}\n\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nexport function localStoreAllocateTarget(\n  localStore: LocalStore,\n  target: Target\n): Promise<TargetData> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence\n    .runTransaction('Allocate target', 'readwrite', txn => {\n      let targetData: TargetData;\n      return localStoreImpl.targetCache\n        .getTargetData(txn, target)\n        .next((cached: TargetData | null) => {\n          if (cached) {\n            // This target has been listened to previously, so reuse the\n            // previous targetID.\n            // TODO(mcg): freshen last accessed date?\n            targetData = cached;\n            return PersistencePromise.resolve(targetData);\n          } else {\n            return localStoreImpl.targetCache\n              .allocateTargetId(txn)\n              .next(targetId => {\n                targetData = new TargetData(\n                  target,\n                  targetId,\n                  TargetPurpose.Listen,\n                  txn.currentSequenceNumber\n                );\n                return localStoreImpl.targetCache\n                  .addTargetData(txn, targetData)\n                  .next(() => targetData);\n              });\n          }\n        });\n    })\n    .then(targetData => {\n      // If Multi-Tab is enabled, the existing target data may be newer than\n      // the in-memory data\n      const cachedTargetData = localStoreImpl.targetDataByTarget.get(\n        targetData.targetId\n      );\n      if (\n        cachedTargetData === null ||\n        targetData.snapshotVersion.compareTo(cachedTargetData.snapshotVersion) >\n          0\n      ) {\n        localStoreImpl.targetDataByTarget =\n          localStoreImpl.targetDataByTarget.insert(\n            targetData.targetId,\n            targetData\n          );\n        localStoreImpl.targetIdByTarget.set(target, targetData.targetId);\n      }\n      return targetData;\n    });\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\nexport function localStoreGetTargetData(\n  localStore: LocalStore,\n  transaction: PersistenceTransaction,\n  target: Target\n): PersistencePromise<TargetData | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetId = localStoreImpl.targetIdByTarget.get(target);\n  if (targetId !== undefined) {\n    return PersistencePromise.resolve<TargetData | null>(\n      localStoreImpl.targetDataByTarget.get(targetId)\n    );\n  } else {\n    return localStoreImpl.targetCache.getTargetData(transaction, target);\n  }\n}\n\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nexport async function localStoreReleaseTarget(\n  localStore: LocalStore,\n  targetId: number,\n  keepPersistedTargetData: boolean\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n  debugAssert(\n    targetData !== null,\n    `Tried to release nonexistent target: ${targetId}`\n  );\n\n  const mode = keepPersistedTargetData ? 'readwrite' : 'readwrite-primary';\n\n  try {\n    if (!keepPersistedTargetData) {\n      await localStoreImpl.persistence.runTransaction(\n        'Release target',\n        mode,\n        txn => {\n          return localStoreImpl.persistence.referenceDelegate.removeTarget(\n            txn,\n            targetData!\n          );\n        }\n      );\n    }\n  } catch (e) {\n    if (isIndexedDbTransactionError(e as Error)) {\n      // All `releaseTarget` does is record the final metadata state for the\n      // target, but we've been recording this periodically during target\n      // activity. If we lose this write this could cause a very slight\n      // difference in the order of target deletion during GC, but we\n      // don't define exact LRU semantics so this is acceptable.\n      logDebug(\n        LOG_TAG,\n        `Failed to update sequence numbers for target ${targetId}: ${e}`\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  localStoreImpl.targetDataByTarget =\n    localStoreImpl.targetDataByTarget.remove(targetId);\n  localStoreImpl.targetIdByTarget.delete(targetData!.target);\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */\nexport function localStoreExecuteQuery(\n  localStore: LocalStore,\n  query: Query,\n  usePreviousResults: boolean\n): Promise<QueryResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  let lastLimboFreeSnapshotVersion = SnapshotVersion.min();\n  let remoteKeys = documentKeySet();\n\n  return localStoreImpl.persistence.runTransaction(\n    'Execute query',\n    'readwrite', // Use readwrite instead of readonly so indexes can be created\n    txn => {\n      return localStoreGetTargetData(localStoreImpl, txn, queryToTarget(query))\n        .next(targetData => {\n          if (targetData) {\n            lastLimboFreeSnapshotVersion =\n              targetData.lastLimboFreeSnapshotVersion;\n            return localStoreImpl.targetCache\n              .getMatchingKeysForTargetId(txn, targetData.targetId)\n              .next(result => {\n                remoteKeys = result;\n              });\n          }\n        })\n        .next(() =>\n          localStoreImpl.queryEngine.getDocumentsMatchingQuery(\n            txn,\n            query,\n            usePreviousResults\n              ? lastLimboFreeSnapshotVersion\n              : SnapshotVersion.min(),\n            usePreviousResults ? remoteKeys : documentKeySet()\n          )\n        )\n        .next(documents => {\n          setMaxReadTime(\n            localStoreImpl,\n            queryCollectionGroup(query),\n            documents\n          );\n          return { documents, remoteKeys };\n        });\n    }\n  );\n}\n\nfunction applyWriteToRemoteDocuments(\n  localStoreImpl: LocalStoreImpl,\n  txn: PersistenceTransaction,\n  batchResult: MutationBatchResult,\n  documentBuffer: RemoteDocumentChangeBuffer\n): PersistencePromise<void> {\n  const batch = batchResult.batch;\n  const docKeys = batch.keys();\n  let promiseChain = PersistencePromise.resolve();\n  docKeys.forEach(docKey => {\n    promiseChain = promiseChain\n      .next(() => documentBuffer.getEntry(txn, docKey))\n      .next(doc => {\n        const ackVersion = batchResult.docVersions.get(docKey);\n        hardAssert(\n          ackVersion !== null,\n          'ackVersions should contain every doc in the write.'\n        );\n        if (doc.version.compareTo(ackVersion!) < 0) {\n          batch.applyToRemoteDocument(doc, batchResult);\n          if (doc.isValidDocument()) {\n            // We use the commitVersion as the readTime rather than the\n            // document's updateTime since the updateTime is not advanced\n            // for updates that do not modify the underlying document.\n            doc.setReadTime(batchResult.commitVersion);\n            documentBuffer.addEntry(doc);\n          }\n        }\n      });\n  });\n  return promiseChain.next(() =>\n    localStoreImpl.mutationQueue.removeMutationBatch(txn, batch)\n  );\n}\n\n/** Returns the local view of the documents affected by a mutation batch. */\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreLookupMutationDocuments(\n  localStore: LocalStore,\n  batchId: BatchId\n): Promise<DocumentMap | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const mutationQueueImpl = debugCast(\n    localStoreImpl.mutationQueue,\n    IndexedDbMutationQueue // We only support IndexedDb in multi-tab mode.\n  );\n  return localStoreImpl.persistence.runTransaction(\n    'Lookup mutation documents',\n    'readonly',\n    txn => {\n      return mutationQueueImpl.lookupMutationKeys(txn, batchId).next(keys => {\n        if (keys) {\n          return localStoreImpl.localDocuments.getDocuments(\n            txn,\n            keys\n          ) as PersistencePromise<DocumentMap | null>;\n        } else {\n          return PersistencePromise.resolve<DocumentMap | null>(null);\n        }\n      });\n    }\n  );\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreRemoveCachedMutationBatchMetadata(\n  localStore: LocalStore,\n  batchId: BatchId\n): void {\n  const mutationQueueImpl = debugCast(\n    debugCast(localStore, LocalStoreImpl).mutationQueue,\n    IndexedDbMutationQueue // We only support IndexedDb in multi-tab mode.\n  );\n  mutationQueueImpl.removeCachedMutationKeys(batchId);\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetActiveClients(\n  localStore: LocalStore\n): Promise<ClientId[]> {\n  const persistenceImpl = debugCast(\n    debugCast(localStore, LocalStoreImpl).persistence,\n    IndexedDbPersistence // We only support IndexedDb in multi-tab mode.\n  );\n  return persistenceImpl.getActiveClients();\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetCachedTarget(\n  localStore: LocalStore,\n  targetId: TargetId\n): Promise<Target | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetCacheImpl = debugCast(\n    localStoreImpl.targetCache,\n    IndexedDbTargetCache // We only support IndexedDb in multi-tab mode.\n  );\n  const cachedTargetData = localStoreImpl.targetDataByTarget.get(targetId);\n  if (cachedTargetData) {\n    return Promise.resolve(cachedTargetData.target);\n  } else {\n    return localStoreImpl.persistence.runTransaction(\n      'Get target data',\n      'readonly',\n      txn => {\n        return targetCacheImpl\n          .getTargetDataForTarget(txn, targetId)\n          .next(targetData => (targetData ? targetData.target : null));\n      }\n    );\n  }\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetNewDocumentChanges(\n  localStore: LocalStore,\n  collectionGroup: string\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n\n  // Get the current maximum read time for the collection. This should always\n  // exist, but to reduce the chance for regressions we default to\n  // SnapshotVersion.Min()\n  // TODO(indexing): Consider removing the default value.\n  const readTime =\n    localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n    SnapshotVersion.min();\n\n  return localStoreImpl.persistence\n    .runTransaction('Get new document changes', 'readonly', txn =>\n      localStoreImpl.remoteDocuments.getAllFromCollectionGroup(\n        txn,\n        collectionGroup,\n        newIndexOffsetSuccessorFromReadTime(readTime, INITIAL_LARGEST_BATCH_ID),\n        /* limit= */ Number.MAX_SAFE_INTEGER\n      )\n    )\n    .then(changedDocs => {\n      setMaxReadTime(localStoreImpl, collectionGroup, changedDocs);\n      return changedDocs;\n    });\n}\n\n/** Sets the collection group's maximum read time from the given documents. */\n// PORTING NOTE: Multi-Tab only.\nfunction setMaxReadTime(\n  localStoreImpl: LocalStoreImpl,\n  collectionGroup: string,\n  changedDocs: SortedMap<DocumentKey, Document>\n): void {\n  let readTime =\n    localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n    SnapshotVersion.min();\n  changedDocs.forEach((_, doc) => {\n    if (doc.readTime.compareTo(readTime) > 0) {\n      readTime = doc.readTime;\n    }\n  });\n  localStoreImpl.collectionGroupReadTime.set(collectionGroup, readTime);\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\nfunction umbrellaTarget(bundleName: string): Target {\n  // It is OK that the path used for the query is not valid, because this will\n  // not be read and queried.\n  return queryToTarget(\n    newQueryForPath(ResourcePath.fromString(`__bundle__/docs/${bundleName}`))\n  );\n}\n\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nexport async function localStoreApplyBundledDocuments(\n  localStore: LocalStore,\n  bundleConverter: BundleConverter,\n  documents: BundledDocuments,\n  bundleName: string\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  let documentKeys = documentKeySet();\n  let documentMap = mutableDocumentMap();\n  for (const bundleDoc of documents) {\n    const documentKey = bundleConverter.toDocumentKey(bundleDoc.metadata.name!);\n    if (bundleDoc.document) {\n      documentKeys = documentKeys.add(documentKey);\n    }\n    const doc = bundleConverter.toMutableDocument(bundleDoc);\n    doc.setReadTime(\n      bundleConverter.toSnapshotVersion(bundleDoc.metadata.readTime!)\n    );\n    documentMap = documentMap.insert(documentKey, doc);\n  }\n\n  const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n    trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n  });\n\n  // Allocates a target to hold all document keys from the bundle, such that\n  // they will not get garbage collected right away.\n  const umbrellaTargetData = await localStoreAllocateTarget(\n    localStoreImpl,\n    umbrellaTarget(bundleName)\n  );\n  return localStoreImpl.persistence.runTransaction(\n    'Apply bundle documents',\n    'readwrite',\n    txn => {\n      return populateDocumentChangeBuffer(txn, documentBuffer, documentMap)\n        .next(documentChangeResult => {\n          documentBuffer.apply(txn);\n          return documentChangeResult;\n        })\n        .next(documentChangeResult => {\n          return localStoreImpl.targetCache\n            .removeMatchingKeysForTargetId(txn, umbrellaTargetData.targetId)\n            .next(() =>\n              localStoreImpl.targetCache.addMatchingKeys(\n                txn,\n                documentKeys,\n                umbrellaTargetData.targetId\n              )\n            )\n            .next(() =>\n              localStoreImpl.localDocuments.getLocalViewOfDocuments(\n                txn,\n                documentChangeResult.changedDocuments,\n                documentChangeResult.existenceChangedKeys\n              )\n            )\n            .next(() => documentChangeResult.changedDocuments);\n        });\n    }\n  );\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\nexport function localStoreHasNewerBundle(\n  localStore: LocalStore,\n  bundleMetadata: BundleMetadata\n): Promise<boolean> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const currentReadTime = fromVersion(bundleMetadata.createTime!);\n  return localStoreImpl.persistence\n    .runTransaction('hasNewerBundle', 'readonly', transaction => {\n      return localStoreImpl.bundleCache.getBundleMetadata(\n        transaction,\n        bundleMetadata.id!\n      );\n    })\n    .then(cached => {\n      return !!cached && cached.createTime!.compareTo(currentReadTime) >= 0;\n    });\n}\n\n/**\n * Saves the given `BundleMetadata` to local persistence.\n */\nexport function localStoreSaveBundle(\n  localStore: LocalStore,\n  bundleMetadata: BundleMetadata\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Save bundle',\n    'readwrite',\n    transaction => {\n      return localStoreImpl.bundleCache.saveBundleMetadata(\n        transaction,\n        bundleMetadata\n      );\n    }\n  );\n}\n\n/**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */\nexport function localStoreGetNamedQuery(\n  localStore: LocalStore,\n  queryName: string\n): Promise<NamedQuery | undefined> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get named query',\n    'readonly',\n    transaction =>\n      localStoreImpl.bundleCache.getNamedQuery(transaction, queryName)\n  );\n}\n\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nexport async function localStoreSaveNamedQuery(\n  localStore: LocalStore,\n  query: ProtoNamedQuery,\n  documents: DocumentKeySet = documentKeySet()\n): Promise<void> {\n  // Allocate a target for the named query such that it can be resumed\n  // from associated read time if users use it to listen.\n  // NOTE: this also means if no corresponding target exists, the new target\n  // will remain active and will not get collected, unless users happen to\n  // unlisten the query somehow.\n  const allocated = await localStoreAllocateTarget(\n    localStore,\n    queryToTarget(fromBundledQuery(query.bundledQuery!))\n  );\n\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Save named query',\n    'readwrite',\n    transaction => {\n      const readTime = fromVersion(query.readTime!);\n      // Simply save the query itself if it is older than what the SDK already\n      // has.\n      if (allocated.snapshotVersion.compareTo(readTime) >= 0) {\n        return localStoreImpl.bundleCache.saveNamedQuery(transaction, query);\n      }\n\n      // Update existing target data because the query from the bundle is newer.\n      const newTargetData = allocated.withResumeToken(\n        ByteString.EMPTY_BYTE_STRING,\n        readTime\n      );\n      localStoreImpl.targetDataByTarget =\n        localStoreImpl.targetDataByTarget.insert(\n          newTargetData.targetId,\n          newTargetData\n        );\n      return localStoreImpl.targetCache\n        .updateTargetData(transaction, newTargetData)\n        .next(() =>\n          localStoreImpl.targetCache.removeMatchingKeysForTargetId(\n            transaction,\n            allocated.targetId\n          )\n        )\n        .next(() =>\n          localStoreImpl.targetCache.addMatchingKeys(\n            transaction,\n            documents,\n            allocated.targetId\n          )\n        )\n        .next(() =>\n          localStoreImpl.bundleCache.saveNamedQuery(transaction, query)\n        );\n    }\n  );\n}\n\nexport async function localStoreConfigureFieldIndexes(\n  localStore: LocalStore,\n  newFieldIndexes: FieldIndex[]\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const indexManager = localStoreImpl.indexManager;\n  const promises: Array<PersistencePromise<void>> = [];\n  return localStoreImpl.persistence.runTransaction(\n    'Configure indexes',\n    'readwrite',\n    transaction =>\n      indexManager\n        .getFieldIndexes(transaction)\n        .next(oldFieldIndexes =>\n          diffArrays(\n            oldFieldIndexes,\n            newFieldIndexes,\n            fieldIndexSemanticComparator,\n            fieldIndex => {\n              promises.push(\n                indexManager.addFieldIndex(transaction, fieldIndex)\n              );\n            },\n            fieldIndex => {\n              promises.push(\n                indexManager.deleteFieldIndex(transaction, fieldIndex)\n              );\n            }\n          )\n        )\n        .next(() => PersistencePromise.waitFor(promises))\n  );\n}\n\nexport function localStoreSetIndexAutoCreationEnabled(\n  localStore: LocalStore,\n  isEnabled: boolean\n): void {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  localStoreImpl.queryEngine.indexAutoCreationEnabled = isEnabled;\n}\n\nexport function localStoreDeleteAllFieldIndexes(\n  localStore: LocalStore\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const indexManager = localStoreImpl.indexManager;\n  return localStoreImpl.persistence.runTransaction(\n    'Delete All Indexes',\n    'readwrite',\n    transaction => indexManager.deleteAllFieldIndexes(transaction)\n  );\n}\n\n/**\n * Test-only hooks into the SDK for use exclusively by tests.\n */\nexport class TestingHooks {\n  private constructor() {\n    throw new Error('creating instances is not supported');\n  }\n\n  static setIndexAutoCreationSettings(\n    localStore: LocalStore,\n    settings: {\n      indexAutoCreationMinCollectionSize?: number;\n      relativeIndexReadCostPerDocument?: number;\n    }\n  ): void {\n    const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n    if (settings.indexAutoCreationMinCollectionSize !== undefined) {\n      localStoreImpl.queryEngine.indexAutoCreationMinCollectionSize =\n        settings.indexAutoCreationMinCollectionSize;\n    }\n    if (settings.relativeIndexReadCostPerDocument !== undefined) {\n      localStoreImpl.queryEngine.relativeIndexReadCostPerDocument =\n        settings.relativeIndexReadCostPerDocument;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { ListenSequence } from '../core/listen_sequence';\nimport {\n  BatchId,\n  ListenSequenceNumber,\n  MutationBatchState,\n  OnlineState,\n  TargetId\n} from '../core/types';\nimport { TargetIdSet, targetIdSet } from '../model/collections';\nimport { hardAssert, debugAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logError, logDebug } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport { isSafeInteger, WindowLike } from '../util/types';\n\nimport {\n  CLIENT_STATE_KEY_PREFIX,\n  ClientStateSchema,\n  createBundleLoadedKey,\n  createWebStorageClientStateKey,\n  createWebStorageMutationBatchKey,\n  createWebStorageOnlineStateKey,\n  createWebStorageQueryTargetMetadataKey,\n  createWebStorageSequenceNumberKey,\n  MUTATION_BATCH_KEY_PREFIX,\n  MutationMetadataSchema,\n  QUERY_TARGET_KEY_PREFIX,\n  QueryTargetStateSchema,\n  SharedOnlineStateSchema\n} from './shared_client_state_schema';\nimport {\n  QueryTargetState,\n  SharedClientStateSyncer\n} from './shared_client_state_syncer';\n\nconst LOG_TAG = 'SharedClientState';\n\n/**\n * A randomly-generated key assigned to each Firestore instance at startup.\n */\nexport type ClientId = string;\n\n/**\n * A `SharedClientState` keeps track of the global state of the mutations\n * and query targets for all active clients with the same persistence key (i.e.\n * project ID and FirebaseApp name). It relays local changes to other clients\n * and updates its local state as new state is observed.\n *\n * `SharedClientState` is primarily used for synchronization in Multi-Tab\n * environments. Each tab is responsible for registering its active query\n * targets and mutations. `SharedClientState` will then notify the listener\n * assigned to `.syncEngine` for updates to mutations and queries that\n * originated in other clients.\n *\n * To receive notifications, `.syncEngine` and `.onlineStateHandler` has to be\n * assigned before calling `start()`.\n */\nexport interface SharedClientState {\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null;\n\n  /** Registers the Mutation Batch ID of a newly pending mutation. */\n  addPendingMutation(batchId: BatchId): void;\n\n  /**\n   * Records that a pending mutation has been acknowledged or rejected.\n   * Called by the primary client to notify secondary clients of mutation\n   * results as they come back from the backend.\n   */\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void;\n\n  /**\n   * Associates a new Query Target ID with the local Firestore client. Returns\n   * the new query state for the query (which can be 'current' if the query is\n   * already associated with another tab).\n   *\n   * If the target id is already associated with local client, the method simply\n   * returns its `QueryTargetState`.\n   */\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState;\n\n  /** Removes the Query Target ID association from the local client. */\n  removeLocalQueryTarget(targetId: TargetId): void;\n\n  /** Checks whether the target is associated with the local client. */\n  isLocalQueryTarget(targetId: TargetId): boolean;\n\n  /**\n   * Processes an update to a query target.\n   *\n   * Called by the primary client to notify secondary clients of document\n   * changes or state transitions that affect the provided query target.\n   */\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void;\n\n  /**\n   * Removes the target's metadata entry.\n   *\n   * Called by the primary client when all clients stopped listening to a query\n   * target.\n   */\n  clearQueryState(targetId: TargetId): void;\n\n  /**\n   * Gets the active Query Targets IDs for all active clients.\n   *\n   * The implementation for this may require O(n) runtime, where 'n' is the size\n   * of the result set.\n   */\n  // Visible for testing\n  getAllActiveQueryTargets(): SortedSet<TargetId>;\n\n  /**\n   * Checks whether the provided target ID is currently being listened to by\n   * any of the active clients.\n   *\n   * The implementation may require O(n*log m) runtime, where 'n' is the number\n   * of clients and 'm' the number of targets.\n   */\n  isActiveQueryTarget(targetId: TargetId): boolean;\n\n  /**\n   * Starts the SharedClientState, reads existing client data and registers\n   * listeners for updates to new and existing clients.\n   */\n  start(): Promise<void>;\n\n  /** Shuts down the `SharedClientState` and its listeners. */\n  shutdown(): void;\n\n  /**\n   * Changes the active user and removes all existing user-specific data. The\n   * user change does not call back into SyncEngine (for example, no mutations\n   * will be marked as removed).\n   */\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void;\n\n  /** Changes the shared online state of all clients. */\n  setOnlineState(onlineState: OnlineState): void;\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void;\n\n  /**\n   * Notifies other clients when remote documents have changed due to loading\n   * a bundle.\n   *\n   * @param collectionGroups The collection groups affected by this bundle.\n   */\n  notifyBundleLoaded(collectionGroups: Set<string>): void;\n}\n\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nexport class MutationMetadata {\n  constructor(\n    readonly user: User,\n    readonly batchId: BatchId,\n    readonly state: MutationBatchState,\n    readonly error?: FirestoreError\n  ) {\n    debugAssert(\n      (error !== undefined) === (state === 'rejected'),\n      `MutationMetadata must contain an error iff state is 'rejected'`\n    );\n  }\n\n  /**\n   * Parses a MutationMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    user: User,\n    batchId: BatchId,\n    value: string\n  ): MutationMetadata | null {\n    const mutationBatch = JSON.parse(value) as MutationMetadataSchema;\n\n    let validData =\n      typeof mutationBatch === 'object' &&\n      ['pending', 'acknowledged', 'rejected'].indexOf(mutationBatch.state) !==\n        -1 &&\n      (mutationBatch.error === undefined ||\n        typeof mutationBatch.error === 'object');\n\n    let firestoreError: FirestoreError | undefined = undefined;\n\n    if (validData && mutationBatch.error) {\n      validData =\n        typeof mutationBatch.error.message === 'string' &&\n        typeof mutationBatch.error.code === 'string';\n      if (validData) {\n        firestoreError = new FirestoreError(\n          mutationBatch.error.code as Code,\n          mutationBatch.error.message\n        );\n      }\n    }\n\n    if (validData) {\n      return new MutationMetadata(\n        user,\n        batchId,\n        mutationBatch.state,\n        firestoreError\n      );\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse mutation state for ID '${batchId}': ${value}`\n      );\n      return null;\n    }\n  }\n\n  toWebStorageJSON(): string {\n    const batchMetadata: MutationMetadataSchema = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n\n    if (this.error) {\n      batchMetadata.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(batchMetadata);\n  }\n}\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nexport class QueryTargetMetadata {\n  constructor(\n    readonly targetId: TargetId,\n    readonly state: QueryTargetState,\n    readonly error?: FirestoreError\n  ) {\n    debugAssert(\n      (error !== undefined) === (state === 'rejected'),\n      `QueryTargetMetadata must contain an error iff state is 'rejected'`\n    );\n  }\n\n  /**\n   * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    targetId: TargetId,\n    value: string\n  ): QueryTargetMetadata | null {\n    const targetState = JSON.parse(value) as QueryTargetStateSchema;\n\n    let validData =\n      typeof targetState === 'object' &&\n      ['not-current', 'current', 'rejected'].indexOf(targetState.state) !==\n        -1 &&\n      (targetState.error === undefined ||\n        typeof targetState.error === 'object');\n\n    let firestoreError: FirestoreError | undefined = undefined;\n\n    if (validData && targetState.error) {\n      validData =\n        typeof targetState.error.message === 'string' &&\n        typeof targetState.error.code === 'string';\n      if (validData) {\n        firestoreError = new FirestoreError(\n          targetState.error.code as Code,\n          targetState.error.message\n        );\n      }\n    }\n\n    if (validData) {\n      return new QueryTargetMetadata(\n        targetId,\n        targetState.state,\n        firestoreError\n      );\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse target state for ID '${targetId}': ${value}`\n      );\n      return null;\n    }\n  }\n\n  toWebStorageJSON(): string {\n    const targetState: QueryTargetStateSchema = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n\n    if (this.error) {\n      targetState.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(targetState);\n  }\n}\n\n/**\n * Metadata state of a single client denoting the query targets it is actively\n * listening to.\n */\n// Visible for testing.\nexport interface ClientState {\n  readonly activeTargetIds: TargetIdSet;\n}\n\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */\nclass RemoteClientState implements ClientState {\n  private constructor(\n    readonly clientId: ClientId,\n    readonly activeTargetIds: TargetIdSet\n  ) {}\n\n  /**\n   * Parses a RemoteClientState from the JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    clientId: ClientId,\n    value: string\n  ): RemoteClientState | null {\n    const clientState = JSON.parse(value) as ClientStateSchema;\n\n    let validData =\n      typeof clientState === 'object' &&\n      clientState.activeTargetIds instanceof Array;\n\n    let activeTargetIdsSet = targetIdSet();\n\n    for (let i = 0; validData && i < clientState.activeTargetIds.length; ++i) {\n      validData = isSafeInteger(clientState.activeTargetIds[i]);\n      activeTargetIdsSet = activeTargetIdsSet.add(\n        clientState.activeTargetIds[i]\n      );\n    }\n\n    if (validData) {\n      return new RemoteClientState(clientId, activeTargetIdsSet);\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse client data for instance '${clientId}': ${value}`\n      );\n      return null;\n    }\n  }\n}\n\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */\nexport class SharedOnlineState {\n  constructor(readonly clientId: string, readonly onlineState: OnlineState) {}\n\n  /**\n   * Parses a SharedOnlineState from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(value: string): SharedOnlineState | null {\n    const onlineState = JSON.parse(value) as SharedOnlineStateSchema;\n\n    const validData =\n      typeof onlineState === 'object' &&\n      ['Unknown', 'Online', 'Offline'].indexOf(onlineState.onlineState) !==\n        -1 &&\n      typeof onlineState.clientId === 'string';\n\n    if (validData) {\n      return new SharedOnlineState(\n        onlineState.clientId,\n        onlineState.onlineState as OnlineState\n      );\n    } else {\n      logError(LOG_TAG, `Failed to parse online state: ${value}`);\n      return null;\n    }\n  }\n}\n\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nexport class LocalClientState implements ClientState {\n  activeTargetIds = targetIdSet();\n\n  addQueryTarget(targetId: TargetId): void {\n    this.activeTargetIds = this.activeTargetIds.add(targetId);\n  }\n\n  removeQueryTarget(targetId: TargetId): void {\n    this.activeTargetIds = this.activeTargetIds.delete(targetId);\n  }\n\n  /**\n   * Converts this entry into a JSON-encoded format we can use for WebStorage.\n   * Does not encode `clientId` as it is part of the key in WebStorage.\n   */\n  toWebStorageJSON(): string {\n    const data: ClientStateSchema = {\n      activeTargetIds: this.activeTargetIds.toArray(),\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n    return JSON.stringify(data);\n  }\n}\n\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */\nexport class WebStorageSharedClientState implements SharedClientState {\n  syncEngine: SharedClientStateSyncer | null = null;\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null = null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null = null;\n\n  private readonly storage: Storage;\n  private readonly localClientStorageKey: string;\n  private readonly sequenceNumberKey: string;\n  private readonly storageListener = this.handleWebStorageEvent.bind(this);\n  private readonly onlineStateKey: string;\n  private readonly bundleLoadedKey: string;\n  private readonly clientStateKeyRe: RegExp;\n  private readonly mutationBatchKeyRe: RegExp;\n  private readonly queryTargetKeyRe: RegExp;\n  private activeClients = new SortedMap<string, ClientState>(\n    primitiveComparator\n  );\n  private started = false;\n  private currentUser: User;\n\n  /**\n   * Captures WebStorage events that occur before `start()` is called. These\n   * events are replayed once `WebStorageSharedClientState` is started.\n   */\n  private earlyEvents: StorageEvent[] = [];\n\n  constructor(\n    private readonly window: WindowLike,\n    private readonly queue: AsyncQueue,\n    private readonly persistenceKey: string,\n    private readonly localClientId: ClientId,\n    initialUser: User\n  ) {\n    // Escape the special characters mentioned here:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n    const escapedPersistenceKey = persistenceKey.replace(\n      /[.*+?^${}()|[\\]\\\\]/g,\n      '\\\\$&'\n    );\n\n    this.storage = this.window.localStorage;\n    this.currentUser = initialUser;\n    this.localClientStorageKey = createWebStorageClientStateKey(\n      this.persistenceKey,\n      this.localClientId\n    );\n    this.sequenceNumberKey = createWebStorageSequenceNumberKey(\n      this.persistenceKey\n    );\n    this.activeClients = this.activeClients.insert(\n      this.localClientId,\n      new LocalClientState()\n    );\n\n    this.clientStateKeyRe = new RegExp(\n      `^${CLIENT_STATE_KEY_PREFIX}_${escapedPersistenceKey}_([^_]*)$`\n    );\n    this.mutationBatchKeyRe = new RegExp(\n      `^${MUTATION_BATCH_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)(?:_(.*))?$`\n    );\n    this.queryTargetKeyRe = new RegExp(\n      `^${QUERY_TARGET_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)$`\n    );\n\n    this.onlineStateKey = createWebStorageOnlineStateKey(this.persistenceKey);\n\n    this.bundleLoadedKey = createBundleLoadedKey(this.persistenceKey);\n\n    // Rather than adding the storage observer during start(), we add the\n    // storage observer during initialization. This ensures that we collect\n    // events before other components populate their initial state (during their\n    // respective start() calls). Otherwise, we might for example miss a\n    // mutation that is added after LocalStore's start() processed the existing\n    // mutations but before we observe WebStorage events.\n    this.window.addEventListener('storage', this.storageListener);\n  }\n\n  /** Returns 'true' if WebStorage is available in the current environment. */\n  static isAvailable(window: WindowLike | null): window is WindowLike {\n    return !!(window && window.localStorage);\n  }\n\n  async start(): Promise<void> {\n    debugAssert(!this.started, 'WebStorageSharedClientState already started');\n    debugAssert(\n      this.syncEngine !== null,\n      'syncEngine property must be set before calling start()'\n    );\n    debugAssert(\n      this.onlineStateHandler !== null,\n      'onlineStateHandler property must be set before calling start()'\n    );\n\n    // Retrieve the list of existing clients to backfill the data in\n    // SharedClientState.\n    const existingClients = await this.syncEngine!.getActiveClients();\n\n    for (const clientId of existingClients) {\n      if (clientId === this.localClientId) {\n        continue;\n      }\n\n      const storageItem = this.getItem(\n        createWebStorageClientStateKey(this.persistenceKey, clientId)\n      );\n      if (storageItem) {\n        const clientState = RemoteClientState.fromWebStorageEntry(\n          clientId,\n          storageItem\n        );\n        if (clientState) {\n          this.activeClients = this.activeClients.insert(\n            clientState.clientId,\n            clientState\n          );\n        }\n      }\n    }\n\n    this.persistClientState();\n\n    // Check if there is an existing online state and call the callback handler\n    // if applicable.\n    const onlineStateJSON = this.storage.getItem(this.onlineStateKey);\n    if (onlineStateJSON) {\n      const onlineState = this.fromWebStorageOnlineState(onlineStateJSON);\n      if (onlineState) {\n        this.handleOnlineStateEvent(onlineState);\n      }\n    }\n\n    for (const event of this.earlyEvents) {\n      this.handleWebStorageEvent(event);\n    }\n\n    this.earlyEvents = [];\n\n    // Register a window unload hook to remove the client metadata entry from\n    // WebStorage even if `shutdown()` was not called.\n    this.window.addEventListener('pagehide', () => this.shutdown());\n\n    this.started = true;\n  }\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void {\n    this.setItem(this.sequenceNumberKey, JSON.stringify(sequenceNumber));\n  }\n\n  getAllActiveQueryTargets(): TargetIdSet {\n    return this.extractActiveQueryTargets(this.activeClients);\n  }\n\n  isActiveQueryTarget(targetId: TargetId): boolean {\n    let found = false;\n    this.activeClients.forEach((key, value) => {\n      if (value.activeTargetIds.has(targetId)) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  addPendingMutation(batchId: BatchId): void {\n    this.persistMutationState(batchId, 'pending');\n  }\n\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void {\n    this.persistMutationState(batchId, state, error);\n\n    // Once a final mutation result is observed by other clients, they no longer\n    // access the mutation's metadata entry. Since WebStorage replays events\n    // in order, it is safe to delete the entry right after updating it.\n    this.removeMutationState(batchId);\n  }\n\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState {\n    let queryState: QueryTargetState = 'not-current';\n\n    // Lookup an existing query state if the target ID was already registered\n    // by another tab\n    if (this.isActiveQueryTarget(targetId)) {\n      const storageItem = this.storage.getItem(\n        createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId)\n      );\n\n      if (storageItem) {\n        const metadata = QueryTargetMetadata.fromWebStorageEntry(\n          targetId,\n          storageItem\n        );\n        if (metadata) {\n          queryState = metadata.state;\n        }\n      }\n    }\n\n    this.localClientState.addQueryTarget(targetId);\n    this.persistClientState();\n\n    return queryState;\n  }\n\n  removeLocalQueryTarget(targetId: TargetId): void {\n    this.localClientState.removeQueryTarget(targetId);\n    this.persistClientState();\n  }\n\n  isLocalQueryTarget(targetId: TargetId): boolean {\n    return this.localClientState.activeTargetIds.has(targetId);\n  }\n\n  clearQueryState(targetId: TargetId): void {\n    this.removeItem(\n      createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId)\n    );\n  }\n\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    this.persistQueryTargetState(targetId, state, error);\n  }\n\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void {\n    removedBatchIds.forEach(batchId => {\n      this.removeMutationState(batchId);\n    });\n    this.currentUser = user;\n    addedBatchIds.forEach(batchId => {\n      this.addPendingMutation(batchId);\n    });\n  }\n\n  setOnlineState(onlineState: OnlineState): void {\n    this.persistOnlineState(onlineState);\n  }\n\n  notifyBundleLoaded(collectionGroups: Set<string>): void {\n    this.persistBundleLoadedState(collectionGroups);\n  }\n\n  shutdown(): void {\n    if (this.started) {\n      this.window.removeEventListener('storage', this.storageListener);\n      this.removeItem(this.localClientStorageKey);\n      this.started = false;\n    }\n  }\n\n  private getItem(key: string): string | null {\n    const value = this.storage.getItem(key);\n    logDebug(LOG_TAG, 'READ', key, value);\n    return value;\n  }\n\n  private setItem(key: string, value: string): void {\n    logDebug(LOG_TAG, 'SET', key, value);\n    this.storage.setItem(key, value);\n  }\n\n  private removeItem(key: string): void {\n    logDebug(LOG_TAG, 'REMOVE', key);\n    this.storage.removeItem(key);\n  }\n\n  private handleWebStorageEvent(event: Event): void {\n    // Note: The function is typed to take Event to be interface-compatible with\n    // `Window.addEventListener`.\n    const storageEvent = event as StorageEvent;\n    if (storageEvent.storageArea === this.storage) {\n      logDebug(LOG_TAG, 'EVENT', storageEvent.key, storageEvent.newValue);\n\n      if (storageEvent.key === this.localClientStorageKey) {\n        logError(\n          'Received WebStorage notification for local change. Another client might have ' +\n            'garbage-collected our state'\n        );\n        return;\n      }\n\n      this.queue.enqueueRetryable(async () => {\n        if (!this.started) {\n          this.earlyEvents.push(storageEvent);\n          return;\n        }\n\n        if (storageEvent.key === null) {\n          return;\n        }\n\n        if (this.clientStateKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue != null) {\n            const clientState = this.fromWebStorageClientState(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (clientState) {\n              return this.handleClientStateEvent(\n                clientState.clientId,\n                clientState\n              );\n            }\n          } else {\n            const clientId = this.fromWebStorageClientStateKey(\n              storageEvent.key\n            )!;\n            return this.handleClientStateEvent(clientId, null);\n          }\n        } else if (this.mutationBatchKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue !== null) {\n            const mutationMetadata = this.fromWebStorageMutationMetadata(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (mutationMetadata) {\n              return this.handleMutationBatchEvent(mutationMetadata);\n            }\n          }\n        } else if (this.queryTargetKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue !== null) {\n            const queryTargetMetadata = this.fromWebStorageQueryTargetMetadata(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (queryTargetMetadata) {\n              return this.handleQueryTargetEvent(queryTargetMetadata);\n            }\n          }\n        } else if (storageEvent.key === this.onlineStateKey) {\n          if (storageEvent.newValue !== null) {\n            const onlineState = this.fromWebStorageOnlineState(\n              storageEvent.newValue\n            );\n            if (onlineState) {\n              return this.handleOnlineStateEvent(onlineState);\n            }\n          }\n        } else if (storageEvent.key === this.sequenceNumberKey) {\n          debugAssert(\n            !!this.sequenceNumberHandler,\n            'Missing sequenceNumberHandler'\n          );\n          const sequenceNumber = fromWebStorageSequenceNumber(\n            storageEvent.newValue\n          );\n          if (sequenceNumber !== ListenSequence.INVALID) {\n            this.sequenceNumberHandler!(sequenceNumber);\n          }\n        } else if (storageEvent.key === this.bundleLoadedKey) {\n          const collectionGroups = this.fromWebStoreBundleLoadedState(\n            storageEvent.newValue!\n          );\n          await Promise.all(\n            collectionGroups.map(cg =>\n              this.syncEngine!.synchronizeWithChangedDocuments(cg)\n            )\n          );\n        }\n      });\n    }\n  }\n\n  private get localClientState(): LocalClientState {\n    return this.activeClients.get(this.localClientId) as LocalClientState;\n  }\n\n  private persistClientState(): void {\n    this.setItem(\n      this.localClientStorageKey,\n      this.localClientState.toWebStorageJSON()\n    );\n  }\n\n  private persistMutationState(\n    batchId: BatchId,\n    state: MutationBatchState,\n    error?: FirestoreError\n  ): void {\n    const mutationState = new MutationMetadata(\n      this.currentUser,\n      batchId,\n      state,\n      error\n    );\n    const mutationKey = createWebStorageMutationBatchKey(\n      this.persistenceKey,\n      this.currentUser,\n      batchId\n    );\n    this.setItem(mutationKey, mutationState.toWebStorageJSON());\n  }\n\n  private removeMutationState(batchId: BatchId): void {\n    const mutationKey = createWebStorageMutationBatchKey(\n      this.persistenceKey,\n      this.currentUser,\n      batchId\n    );\n    this.removeItem(mutationKey);\n  }\n\n  private persistOnlineState(onlineState: OnlineState): void {\n    const entry: SharedOnlineStateSchema = {\n      clientId: this.localClientId,\n      onlineState\n    };\n    this.storage.setItem(this.onlineStateKey, JSON.stringify(entry));\n  }\n\n  private persistQueryTargetState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    const targetKey = createWebStorageQueryTargetMetadataKey(\n      this.persistenceKey,\n      targetId\n    );\n    const targetMetadata = new QueryTargetMetadata(targetId, state, error);\n    this.setItem(targetKey, targetMetadata.toWebStorageJSON());\n  }\n\n  private persistBundleLoadedState(collectionGroups: Set<string>): void {\n    const json = JSON.stringify(Array.from(collectionGroups));\n    this.setItem(this.bundleLoadedKey, json);\n  }\n\n  /**\n   * Parses a client state key in WebStorage. Returns null if the key does not\n   * match the expected key format.\n   */\n  private fromWebStorageClientStateKey(key: string): ClientId | null {\n    const match = this.clientStateKeyRe.exec(key);\n    return match ? match[1] : null;\n  }\n\n  /**\n   * Parses a client state in WebStorage. Returns 'null' if the value could not\n   * be parsed.\n   */\n  private fromWebStorageClientState(\n    key: string,\n    value: string\n  ): RemoteClientState | null {\n    const clientId = this.fromWebStorageClientStateKey(key);\n    debugAssert(clientId !== null, `Cannot parse client state key '${key}'`);\n    return RemoteClientState.fromWebStorageEntry(clientId, value);\n  }\n\n  /**\n   * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageMutationMetadata(\n    key: string,\n    value: string\n  ): MutationMetadata | null {\n    const match = this.mutationBatchKeyRe.exec(key);\n    debugAssert(match !== null, `Cannot parse mutation batch key '${key}'`);\n\n    const batchId = Number(match[1]);\n    const userId = match[2] !== undefined ? match[2] : null;\n    return MutationMetadata.fromWebStorageEntry(\n      new User(userId),\n      batchId,\n      value\n    );\n  }\n\n  /**\n   * Parses a query target state from WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageQueryTargetMetadata(\n    key: string,\n    value: string\n  ): QueryTargetMetadata | null {\n    const match = this.queryTargetKeyRe.exec(key);\n    debugAssert(match !== null, `Cannot parse query target key '${key}'`);\n\n    const targetId = Number(match[1]);\n    return QueryTargetMetadata.fromWebStorageEntry(targetId, value);\n  }\n\n  /**\n   * Parses an online state from WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageOnlineState(value: string): SharedOnlineState | null {\n    return SharedOnlineState.fromWebStorageEntry(value);\n  }\n\n  private fromWebStoreBundleLoadedState(value: string): string[] {\n    return JSON.parse(value) as string[];\n  }\n\n  private async handleMutationBatchEvent(\n    mutationBatch: MutationMetadata\n  ): Promise<void> {\n    if (mutationBatch.user.uid !== this.currentUser.uid) {\n      logDebug(\n        LOG_TAG,\n        `Ignoring mutation for non-active user ${mutationBatch.user.uid}`\n      );\n      return;\n    }\n\n    return this.syncEngine!.applyBatchState(\n      mutationBatch.batchId,\n      mutationBatch.state,\n      mutationBatch.error\n    );\n  }\n\n  private handleQueryTargetEvent(\n    targetMetadata: QueryTargetMetadata\n  ): Promise<void> {\n    return this.syncEngine!.applyTargetState(\n      targetMetadata.targetId,\n      targetMetadata.state,\n      targetMetadata.error\n    );\n  }\n\n  private handleClientStateEvent(\n    clientId: ClientId,\n    clientState: RemoteClientState | null\n  ): Promise<void> {\n    const updatedClients = clientState\n      ? this.activeClients.insert(clientId, clientState)\n      : this.activeClients.remove(clientId);\n\n    const existingTargets = this.extractActiveQueryTargets(this.activeClients);\n    const newTargets = this.extractActiveQueryTargets(updatedClients);\n\n    const addedTargets: TargetId[] = [];\n    const removedTargets: TargetId[] = [];\n\n    newTargets.forEach(targetId => {\n      if (!existingTargets.has(targetId)) {\n        addedTargets.push(targetId);\n      }\n    });\n\n    existingTargets.forEach(targetId => {\n      if (!newTargets.has(targetId)) {\n        removedTargets.push(targetId);\n      }\n    });\n\n    return this.syncEngine!.applyActiveTargetsChange(\n      addedTargets,\n      removedTargets\n    ).then(() => {\n      this.activeClients = updatedClients;\n    });\n  }\n\n  private handleOnlineStateEvent(onlineState: SharedOnlineState): void {\n    // We check whether the client that wrote this online state is still active\n    // by comparing its client ID to the list of clients kept active in\n    // IndexedDb. If a client does not update their IndexedDb client state\n    // within 5 seconds, it is considered inactive and we don't emit an online\n    // state event.\n    if (this.activeClients.get(onlineState.clientId)) {\n      this.onlineStateHandler!(onlineState.onlineState);\n    }\n  }\n\n  private extractActiveQueryTargets(\n    clients: SortedMap<string, ClientState>\n  ): SortedSet<TargetId> {\n    let activeTargets = targetIdSet();\n    clients.forEach((kev, value) => {\n      activeTargets = activeTargets.unionWith(value.activeTargetIds);\n    });\n    return activeTargets;\n  }\n}\n\nfunction fromWebStorageSequenceNumber(\n  seqString: string | null\n): ListenSequenceNumber {\n  let sequenceNumber = ListenSequence.INVALID;\n  if (seqString != null) {\n    try {\n      const parsed = JSON.parse(seqString);\n      hardAssert(\n        typeof parsed === 'number',\n        'Found non-numeric sequence number'\n      );\n      sequenceNumber = parsed;\n    } catch (e) {\n      logError(LOG_TAG, 'Failed to read sequence number from WebStorage', e);\n    }\n  }\n  return sequenceNumber;\n}\n\n/**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */\nexport class MemorySharedClientState implements SharedClientState {\n  private localState = new LocalClientState();\n  private queryState: { [targetId: number]: QueryTargetState } = {};\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null = null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null = null;\n\n  addPendingMutation(batchId: BatchId): void {\n    // No op.\n  }\n\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void {\n    // No op.\n  }\n\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState {\n    this.localState.addQueryTarget(targetId);\n    return this.queryState[targetId] || 'not-current';\n  }\n\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    this.queryState[targetId] = state;\n  }\n\n  removeLocalQueryTarget(targetId: TargetId): void {\n    this.localState.removeQueryTarget(targetId);\n  }\n\n  isLocalQueryTarget(targetId: TargetId): boolean {\n    return this.localState.activeTargetIds.has(targetId);\n  }\n\n  clearQueryState(targetId: TargetId): void {\n    delete this.queryState[targetId];\n  }\n\n  getAllActiveQueryTargets(): TargetIdSet {\n    return this.localState.activeTargetIds;\n  }\n\n  isActiveQueryTarget(targetId: TargetId): boolean {\n    return this.localState.activeTargetIds.has(targetId);\n  }\n\n  start(): Promise<void> {\n    this.localState = new LocalClientState();\n    return Promise.resolve();\n  }\n\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void {\n    // No op.\n  }\n\n  setOnlineState(onlineState: OnlineState): void {\n    // No op.\n  }\n\n  shutdown(): void {}\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void {}\n\n  notifyBundleLoaded(collectionGroups: Set<string>): void {\n    // No op.\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConnectivityMonitor, NetworkStatus } from './connectivity_monitor';\n\nexport class NoopConnectivityMonitor implements ConnectivityMonitor {\n  addCallback(callback: (status: NetworkStatus) => void): void {\n    // No-op.\n  }\n\n  shutdown(): void {\n    // No-op.\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ConnectivityMonitor,\n  ConnectivityMonitorCallback,\n  NetworkStatus\n} from '../../remote/connectivity_monitor';\nimport { logDebug } from '../../util/log';\n\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n/* eslint-disable no-restricted-globals */\n\nconst LOG_TAG = 'ConnectivityMonitor';\n\n/**\n * Browser implementation of ConnectivityMonitor.\n */\nexport class BrowserConnectivityMonitor implements ConnectivityMonitor {\n  private readonly networkAvailableListener = (): void =>\n    this.onNetworkAvailable();\n  private readonly networkUnavailableListener = (): void =>\n    this.onNetworkUnavailable();\n  private callbacks: ConnectivityMonitorCallback[] = [];\n\n  constructor() {\n    this.configureNetworkMonitoring();\n  }\n\n  addCallback(callback: (status: NetworkStatus) => void): void {\n    this.callbacks.push(callback);\n  }\n\n  shutdown(): void {\n    window.removeEventListener('online', this.networkAvailableListener);\n    window.removeEventListener('offline', this.networkUnavailableListener);\n  }\n\n  private configureNetworkMonitoring(): void {\n    window.addEventListener('online', this.networkAvailableListener);\n    window.addEventListener('offline', this.networkUnavailableListener);\n  }\n\n  private onNetworkAvailable(): void {\n    logDebug(LOG_TAG, 'Network connectivity changed: AVAILABLE');\n    for (const callback of this.callbacks) {\n      callback(NetworkStatus.AVAILABLE);\n    }\n  }\n\n  private onNetworkUnavailable(): void {\n    logDebug(LOG_TAG, 'Network connectivity changed: UNAVAILABLE');\n    for (const callback of this.callbacks) {\n      callback(NetworkStatus.UNAVAILABLE);\n    }\n  }\n\n  // TODO(chenbrian): Consider passing in window either into this component or\n  // here for testing via FakeWindow.\n  /** Checks that all used attributes of window are available. */\n  static isAvailable(): boolean {\n    return (\n      typeof window !== 'undefined' &&\n      window.addEventListener !== undefined &&\n      window.removeEventListener !== undefined\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\nlet lastUniqueDebugId: number | null = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\nfunction generateInitialUniqueDebugId(): number {\n  const minResult = 0x10000000;\n  const maxResult = 0x90000000;\n  const resultRange = maxResult - minResult;\n  const resultOffset = Math.round(resultRange * Math.random());\n  return minResult + resultOffset;\n}\n\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nexport function generateUniqueDebugId(): string {\n  if (lastUniqueDebugId === null) {\n    lastUniqueDebugId = generateInitialUniqueDebugId();\n  } else {\n    lastUniqueDebugId++;\n  }\n  return '0x' + lastUniqueDebugId.toString(16);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '../../src/core/version';\nimport { Token } from '../api/credentials';\nimport {\n  DatabaseId,\n  DatabaseInfo,\n  DEFAULT_DATABASE_NAME\n} from '../core/database_info';\nimport { debugAssert } from '../util/assert';\nimport { generateUniqueDebugId } from '../util/debug_uid';\nimport { FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { StringMap } from '../util/types';\n\nimport { Connection, Stream } from './connection';\n\nconst LOG_TAG = 'RestConnection';\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\nconst RPC_NAME_URL_MAPPING: StringMap = {};\n\nRPC_NAME_URL_MAPPING['BatchGetDocuments'] = 'batchGet';\nRPC_NAME_URL_MAPPING['Commit'] = 'commit';\nRPC_NAME_URL_MAPPING['RunQuery'] = 'runQuery';\nRPC_NAME_URL_MAPPING['RunAggregationQuery'] = 'runAggregationQuery';\n\nconst RPC_URL_VERSION = 'v1';\n\n// SDK_VERSION is updated to different value at runtime depending on the entry point,\n// so we need to get its value when we need it in a function.\nfunction getGoogApiClientValue(): string {\n  return 'gl-js/ fire/' + SDK_VERSION;\n}\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nexport abstract class RestConnection implements Connection {\n  protected readonly databaseId: DatabaseId;\n  protected readonly baseUrl: string;\n  private readonly databasePath: string;\n  private readonly requestParams: string;\n\n  get shouldResourcePathBeIncludedInRequest(): boolean {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return false;\n  }\n\n  constructor(private readonly databaseInfo: DatabaseInfo) {\n    this.databaseId = databaseInfo.databaseId;\n    const proto = databaseInfo.ssl ? 'https' : 'http';\n    const projectId = encodeURIComponent(this.databaseId.projectId);\n    const databaseId = encodeURIComponent(this.databaseId.database);\n    this.baseUrl = proto + '://' + databaseInfo.host;\n    this.databasePath = `projects/${projectId}/databases/${databaseId}`;\n    this.requestParams =\n      this.databaseId.database === DEFAULT_DATABASE_NAME\n        ? `project_id=${projectId}`\n        : `project_id=${projectId}&database_id=${databaseId}`;\n  }\n\n  invokeRPC<Req, Resp>(\n    rpcName: string,\n    path: string,\n    req: Req,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Promise<Resp> {\n    const streamId = generateUniqueDebugId();\n    const url = this.makeUrl(rpcName, path);\n    logDebug(LOG_TAG, `Sending RPC '${rpcName}' ${streamId}:`, url, req);\n\n    const headers: StringMap = {\n      'google-cloud-resource-prefix': this.databasePath,\n      'x-goog-request-params': this.requestParams\n    };\n    this.modifyHeadersForRequest(headers, authToken, appCheckToken);\n\n    return this.performRPCRequest<Req, Resp>(rpcName, url, headers, req).then(\n      response => {\n        logDebug(LOG_TAG, `Received RPC '${rpcName}' ${streamId}: `, response);\n        return response;\n      },\n      (err: FirestoreError) => {\n        logWarn(\n          LOG_TAG,\n          `RPC '${rpcName}' ${streamId} failed with error: `,\n          err,\n          'url: ',\n          url,\n          'request:',\n          req\n        );\n        throw err;\n      }\n    );\n  }\n\n  invokeStreamingRPC<Req, Resp>(\n    rpcName: string,\n    path: string,\n    request: Req,\n    authToken: Token | null,\n    appCheckToken: Token | null,\n    expectedResponseCount?: number\n  ): Promise<Resp[]> {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.invokeRPC<Req, Resp[]>(\n      rpcName,\n      path,\n      request,\n      authToken,\n      appCheckToken\n    );\n  }\n\n  abstract openStream<Req, Resp>(\n    rpcName: string,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<Req, Resp>;\n\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n  protected modifyHeadersForRequest(\n    headers: StringMap,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): void {\n    headers['X-Goog-Api-Client'] = getGoogApiClientValue();\n\n    // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    headers['Content-Type'] = 'text/plain';\n\n    if (this.databaseInfo.appId) {\n      headers['X-Firebase-GMPID'] = this.databaseInfo.appId;\n    }\n\n    if (authToken) {\n      authToken.headers.forEach((value, key) => (headers[key] = value));\n    }\n    if (appCheckToken) {\n      appCheckToken.headers.forEach((value, key) => (headers[key] = value));\n    }\n  }\n\n  /**\n   * Performs an RPC request using an implementation specific networking layer.\n   */\n  protected abstract performRPCRequest<Req, Resp>(\n    rpcName: string,\n    url: string,\n    headers: StringMap,\n    body: Req\n  ): Promise<Resp>;\n\n  private makeUrl(rpcName: string, path: string): string {\n    const urlRpcName = RPC_NAME_URL_MAPPING[rpcName];\n    debugAssert(\n      urlRpcName !== undefined,\n      'Unknown REST mapping for: ' + rpcName\n    );\n    return `${this.baseUrl}/${RPC_URL_VERSION}/${path}:${urlRpcName}`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\nimport { FirestoreError } from '../util/error';\n\nimport { Stream } from './connection';\n\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nexport class StreamBridge<I, O> implements Stream<I, O> {\n  private wrappedOnOpen: (() => void) | undefined;\n  private wrappedOnClose: ((err?: FirestoreError) => void) | undefined;\n  private wrappedOnMessage: ((msg: O) => void) | undefined;\n\n  private sendFn: (msg: I) => void;\n  private closeFn: () => void;\n\n  constructor(args: { sendFn: (msg: I) => void; closeFn: () => void }) {\n    this.sendFn = args.sendFn;\n    this.closeFn = args.closeFn;\n  }\n\n  onOpen(callback: () => void): void {\n    debugAssert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n    this.wrappedOnOpen = callback;\n  }\n\n  onClose(callback: (err?: FirestoreError) => void): void {\n    debugAssert(!this.wrappedOnClose, 'Called onClose on stream twice!');\n    this.wrappedOnClose = callback;\n  }\n\n  onMessage(callback: (msg: O) => void): void {\n    debugAssert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n    this.wrappedOnMessage = callback;\n  }\n\n  close(): void {\n    this.closeFn();\n  }\n\n  send(msg: I): void {\n    this.sendFn(msg);\n  }\n\n  callOnOpen(): void {\n    debugAssert(\n      this.wrappedOnOpen !== undefined,\n      'Cannot call onOpen because no callback was set'\n    );\n    this.wrappedOnOpen();\n  }\n\n  callOnClose(err?: FirestoreError): void {\n    debugAssert(\n      this.wrappedOnClose !== undefined,\n      'Cannot call onClose because no callback was set'\n    );\n    this.wrappedOnClose(err);\n  }\n\n  callOnMessage(msg: O): void {\n    debugAssert(\n      this.wrappedOnMessage !== undefined,\n      'Cannot call onMessage because no callback was set'\n    );\n    this.wrappedOnMessage(msg);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createWebChannelTransport,\n  ErrorCode,\n  EventType,\n  WebChannel,\n  WebChannelError,\n  WebChannelOptions,\n  XhrIo,\n  getStatEventTarget,\n  EventTarget,\n  StatEvent,\n  Event,\n  Stat,\n  FetchXmlHttpFactory\n} from '@firebase/webchannel-wrapper';\n\nimport { Token } from '../../api/credentials';\nimport { ExperimentalLongPollingOptions } from '../../api/long_polling_options';\nimport { DatabaseInfo } from '../../core/database_info';\nimport { Stream } from '../../remote/connection';\nimport { RestConnection } from '../../remote/rest_connection';\nimport {\n  mapCodeFromRpcStatus,\n  mapCodeFromHttpResponseErrorStatus\n} from '../../remote/rpc_error';\nimport { StreamBridge } from '../../remote/stream_bridge';\nimport { fail, hardAssert } from '../../util/assert';\nimport { generateUniqueDebugId } from '../../util/debug_uid';\nimport { Code, FirestoreError } from '../../util/error';\nimport { logDebug, logWarn } from '../../util/log';\nimport { Rejecter, Resolver } from '../../util/promise';\nimport { StringMap } from '../../util/types';\n\nconst LOG_TAG = 'WebChannelConnection';\n\nconst RPC_STREAM_SERVICE = 'google.firestore.v1.Firestore';\n\nconst XHR_TIMEOUT_SECS = 15;\n\nexport class WebChannelConnection extends RestConnection {\n  private readonly forceLongPolling: boolean;\n  private readonly autoDetectLongPolling: boolean;\n  private readonly useFetchStreams: boolean;\n  private readonly longPollingOptions: ExperimentalLongPollingOptions;\n\n  constructor(info: DatabaseInfo) {\n    super(info);\n    this.forceLongPolling = info.forceLongPolling;\n    this.autoDetectLongPolling = info.autoDetectLongPolling;\n    this.useFetchStreams = info.useFetchStreams;\n    this.longPollingOptions = info.longPollingOptions;\n  }\n\n  protected performRPCRequest<Req, Resp>(\n    rpcName: string,\n    url: string,\n    headers: StringMap,\n    body: Req\n  ): Promise<Resp> {\n    const streamId = generateUniqueDebugId();\n    return new Promise((resolve: Resolver<Resp>, reject: Rejecter) => {\n      const xhr = new XhrIo();\n      xhr.setWithCredentials(true);\n      xhr.listenOnce(EventType.COMPLETE, () => {\n        try {\n          switch (xhr.getLastErrorCode()) {\n            case ErrorCode.NO_ERROR:\n              const json = xhr.getResponseJson() as Resp;\n              logDebug(\n                LOG_TAG,\n                `XHR for RPC '${rpcName}' ${streamId} received:`,\n                JSON.stringify(json)\n              );\n              resolve(json);\n              break;\n            case ErrorCode.TIMEOUT:\n              logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} timed out`);\n              reject(\n                new FirestoreError(Code.DEADLINE_EXCEEDED, 'Request time out')\n              );\n              break;\n            case ErrorCode.HTTP_ERROR:\n              const status = xhr.getStatus();\n              logDebug(\n                LOG_TAG,\n                `RPC '${rpcName}' ${streamId} failed with status:`,\n                status,\n                'response text:',\n                xhr.getResponseText()\n              );\n              if (status > 0) {\n                let response = xhr.getResponseJson();\n                if (Array.isArray(response)) {\n                  response = response[0];\n                }\n                const responseError = (response as WebChannelError)?.error;\n                if (\n                  !!responseError &&\n                  !!responseError.status &&\n                  !!responseError.message\n                ) {\n                  const firestoreErrorCode = mapCodeFromHttpResponseErrorStatus(\n                    responseError.status\n                  );\n                  reject(\n                    new FirestoreError(\n                      firestoreErrorCode,\n                      responseError.message\n                    )\n                  );\n                } else {\n                  reject(\n                    new FirestoreError(\n                      Code.UNKNOWN,\n                      'Server responded with status ' + xhr.getStatus()\n                    )\n                  );\n                }\n              } else {\n                // If we received an HTTP_ERROR but there's no status code,\n                // it's most probably a connection issue\n                reject(\n                  new FirestoreError(Code.UNAVAILABLE, 'Connection failed.')\n                );\n              }\n              break;\n            default:\n              fail(\n                `RPC '${rpcName}' ${streamId} ` +\n                  'failed with unanticipated webchannel error: ' +\n                  xhr.getLastErrorCode() +\n                  ': ' +\n                  xhr.getLastError() +\n                  ', giving up.'\n              );\n          }\n        } finally {\n          logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} completed.`);\n        }\n      });\n\n      const requestString = JSON.stringify(body);\n      logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} sending request:`, body);\n      xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\n    });\n  }\n\n  openStream<Req, Resp>(\n    rpcName: string,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<Req, Resp> {\n    const streamId = generateUniqueDebugId();\n    const urlParts = [\n      this.baseUrl,\n      '/',\n      RPC_STREAM_SERVICE,\n      '/',\n      rpcName,\n      '/channel'\n    ];\n    const webchannelTransport = createWebChannelTransport();\n    const requestStats = getStatEventTarget();\n    const request: WebChannelOptions = {\n      // Required for backend stickiness, routing behavior is based on this\n      // parameter.\n      httpSessionIdParam: 'gsessionid',\n      initMessageHeaders: {},\n      messageUrlParams: {\n        // This param is used to improve routing and project isolation by the\n        // backend and must be included in every request.\n        database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`\n      },\n      sendRawJson: true,\n      supportsCrossDomainXhr: true,\n      internalChannelParams: {\n        // Override the default timeout (randomized between 10-20 seconds) since\n        // a large write batch on a slow internet connection may take a long\n        // time to send to the backend. Rather than have WebChannel impose a\n        // tight timeout which could lead to infinite timeouts and retries, we\n        // set it very large (5-10 minutes) and rely on the browser's builtin\n        // timeouts to kick in if the request isn't working.\n        forwardChannelRequestTimeoutMs: 10 * 60 * 1000\n      },\n      forceLongPolling: this.forceLongPolling,\n      detectBufferingProxy: this.autoDetectLongPolling\n    };\n\n    const longPollingTimeoutSeconds = this.longPollingOptions.timeoutSeconds;\n    if (longPollingTimeoutSeconds !== undefined) {\n      request.longPollingTimeout = Math.round(longPollingTimeoutSeconds * 1000);\n    }\n\n    if (this.useFetchStreams) {\n      // TODO(b/307942499): switch to `useFetchStreams` once WebChannel is fixed.\n      request.xmlHttpFactory = new FetchXmlHttpFactory({});\n    }\n\n    this.modifyHeadersForRequest(\n      request.initMessageHeaders!,\n      authToken,\n      appCheckToken\n    );\n\n    // Sending the custom headers we just added to request.initMessageHeaders\n    // (Authorization, etc.) will trigger the browser to make a CORS preflight\n    // request because the XHR will no longer meet the criteria for a \"simple\"\n    // CORS request:\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n    //\n    // Therefore to avoid the CORS preflight request (an extra network\n    // roundtrip), we use the encodeInitMessageHeaders option to specify that\n    // the headers should instead be encoded in the request's POST payload,\n    // which is recognized by the webchannel backend.\n    request.encodeInitMessageHeaders = true;\n\n    const url = urlParts.join('');\n    logDebug(\n      LOG_TAG,\n      `Creating RPC '${rpcName}' stream ${streamId}: ${url}`,\n      request\n    );\n    const channel = webchannelTransport.createWebChannel(url, request);\n\n    // WebChannel supports sending the first message with the handshake - saving\n    // a network round trip. However, it will have to call send in the same\n    // JS event loop as open. In order to enforce this, we delay actually\n    // opening the WebChannel until send is called. Whether we have called\n    // open is tracked with this variable.\n    let opened = false;\n\n    // A flag to determine whether the stream was closed (by us or through an\n    // error/close event) to avoid delivering multiple close events or sending\n    // on a closed stream\n    let closed = false;\n\n    const streamBridge = new StreamBridge<Req, Resp>({\n      sendFn: (msg: Req) => {\n        if (!closed) {\n          if (!opened) {\n            logDebug(\n              LOG_TAG,\n              `Opening RPC '${rpcName}' stream ${streamId} transport.`\n            );\n            channel.open();\n            opened = true;\n          }\n          logDebug(\n            LOG_TAG,\n            `RPC '${rpcName}' stream ${streamId} sending:`,\n            msg\n          );\n          channel.send(msg);\n        } else {\n          logDebug(\n            LOG_TAG,\n            `Not sending because RPC '${rpcName}' stream ${streamId} ` +\n              'is closed:',\n            msg\n          );\n        }\n      },\n      closeFn: () => channel.close()\n    });\n\n    // Closure events are guarded and exceptions are swallowed, so catch any\n    // exception and rethrow using a setTimeout so they become visible again.\n    // Note that eventually this function could go away if we are confident\n    // enough the code is exception free.\n    const unguardedEventListen = <T>(\n      target: EventTarget,\n      type: string | number,\n      fn: (param: T) => void\n    ): void => {\n      // TODO(dimond): closure typing seems broken because WebChannel does\n      // not implement goog.events.Listenable\n      target.listen(type, (param: unknown) => {\n        try {\n          fn(param as T);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          }, 0);\n        }\n      });\n    };\n\n    unguardedEventListen(channel, WebChannel.EventType.OPEN, () => {\n      if (!closed) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport opened.`\n        );\n      }\n    });\n\n    unguardedEventListen(channel, WebChannel.EventType.CLOSE, () => {\n      if (!closed) {\n        closed = true;\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport closed`\n        );\n        streamBridge.callOnClose();\n      }\n    });\n\n    unguardedEventListen<Error>(channel, WebChannel.EventType.ERROR, err => {\n      if (!closed) {\n        closed = true;\n        logWarn(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport errored:`,\n          err\n        );\n        streamBridge.callOnClose(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'The operation could not be completed'\n          )\n        );\n      }\n    });\n\n    // WebChannel delivers message events as array. If batching is not enabled\n    // (it's off by default) each message will be delivered alone, resulting in\n    // a single element array.\n    interface WebChannelResponse {\n      data: Resp[];\n    }\n\n    unguardedEventListen<WebChannelResponse>(\n      channel,\n      WebChannel.EventType.MESSAGE,\n      msg => {\n        if (!closed) {\n          const msgData = msg.data[0];\n          hardAssert(!!msgData, 'Got a webchannel message without data.');\n          // TODO(b/35143891): There is a bug in One Platform that caused errors\n          // (and only errors) to be wrapped in an extra array. To be forward\n          // compatible with the bug we need to check either condition. The latter\n          // can be removed once the fix has been rolled out.\n          // Use any because msgData.error is not typed.\n          const msgDataOrError: WebChannelError | object = msgData;\n          const error =\n            msgDataOrError.error ||\n            (msgDataOrError as WebChannelError[])[0]?.error;\n          if (error) {\n            logDebug(\n              LOG_TAG,\n              `RPC '${rpcName}' stream ${streamId} received error:`,\n              error\n            );\n            // error.status will be a string like 'OK' or 'NOT_FOUND'.\n            const status: string = error.status;\n            let code = mapCodeFromRpcStatus(status);\n            let message = error.message;\n            if (code === undefined) {\n              code = Code.INTERNAL;\n              message =\n                'Unknown error status: ' +\n                status +\n                ' with message ' +\n                error.message;\n            }\n            // Mark closed so no further events are propagated\n            closed = true;\n            streamBridge.callOnClose(new FirestoreError(code, message));\n            channel.close();\n          } else {\n            logDebug(\n              LOG_TAG,\n              `RPC '${rpcName}' stream ${streamId} received:`,\n              msgData\n            );\n            streamBridge.callOnMessage(msgData);\n          }\n        }\n      }\n    );\n\n    unguardedEventListen<StatEvent>(requestStats, Event.STAT_EVENT, event => {\n      if (event.stat === Stat.PROXY) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} detected buffering proxy`\n        );\n      } else if (event.stat === Stat.NOPROXY) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} detected no buffering proxy`\n        );\n      }\n    });\n\n    setTimeout(() => {\n      // Technically we could/should wait for the WebChannel opened event,\n      // but because we want to send the first message with the WebChannel\n      // handshake we pretend the channel opened here (asynchronously), and\n      // then delay the actual open until the first message is sent.\n      streamBridge.callOnOpen();\n    }, 0);\n    return streamBridge;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'window' implementation or null if not available. */\nexport function getWindow(): Window | null {\n  // `window` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */\nexport function getDocument(): Document | null {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof document !== 'undefined' ? document : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Return the Platform-specific serializer monitor. */\nimport { DatabaseId } from '../../core/database_info';\nimport { JsonProtoSerializer } from '../../remote/serializer';\n\nexport function newSerializer(databaseId: DatabaseId): JsonProtoSerializer {\n  return new JsonProtoSerializer(databaseId, /* useProto3Json= */ true);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { logDebug } from '../util/log';\n\nconst LOG_TAG = 'ExponentialBackoff';\n\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nconst DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\n\nconst DEFAULT_BACKOFF_FACTOR = 1.5;\n\n/** Maximum backoff time in milliseconds */\nconst DEFAULT_BACKOFF_MAX_DELAY_MS = 60 * 1000;\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nexport class ExponentialBackoff {\n  private currentBaseMs: number = 0;\n  private timerPromise: DelayedOperation<void> | null = null;\n  /** The last backoff attempt, as epoch milliseconds. */\n  private lastAttemptTime = Date.now();\n\n  constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    private readonly queue: AsyncQueue,\n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    private readonly timerId: TimerId,\n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    private readonly initialDelayMs: number = DEFAULT_BACKOFF_INITIAL_DELAY_MS,\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */\n    private readonly backoffFactor: number = DEFAULT_BACKOFF_FACTOR,\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */\n    private readonly maxDelayMs: number = DEFAULT_BACKOFF_MAX_DELAY_MS\n  ) {\n    this.reset();\n  }\n\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset(): void {\n    this.currentBaseMs = 0;\n  }\n\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  resetToMax(): void {\n    this.currentBaseMs = this.maxDelayMs;\n  }\n\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  backoffAndRun(op: () => Promise<void>): void {\n    // Cancel any pending backoff operation.\n    this.cancel();\n\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const desiredDelayWithJitterMs = Math.floor(\n      this.currentBaseMs + this.jitterDelayMs()\n    );\n\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    const delaySoFarMs = Math.max(0, Date.now() - this.lastAttemptTime);\n\n    // Guard against the backoff delay already being past.\n    const remainingDelayMs = Math.max(\n      0,\n      desiredDelayWithJitterMs - delaySoFarMs\n    );\n\n    if (remainingDelayMs > 0) {\n      logDebug(\n        LOG_TAG,\n        `Backing off for ${remainingDelayMs} ms ` +\n          `(base delay: ${this.currentBaseMs} ms, ` +\n          `delay with jitter: ${desiredDelayWithJitterMs} ms, ` +\n          `last attempt: ${delaySoFarMs} ms ago)`\n      );\n    }\n\n    this.timerPromise = this.queue.enqueueAfterDelay(\n      this.timerId,\n      remainingDelayMs,\n      () => {\n        this.lastAttemptTime = Date.now();\n        return op();\n      }\n    );\n\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.currentBaseMs *= this.backoffFactor;\n    if (this.currentBaseMs < this.initialDelayMs) {\n      this.currentBaseMs = this.initialDelayMs;\n    }\n    if (this.currentBaseMs > this.maxDelayMs) {\n      this.currentBaseMs = this.maxDelayMs;\n    }\n  }\n\n  skipBackoff(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.skipDelay();\n      this.timerPromise = null;\n    }\n  }\n\n  cancel(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.cancel();\n      this.timerPromise = null;\n    }\n  }\n\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  private jitterDelayMs(): number {\n    return (Math.random() - 0.5) * this.currentBaseMs;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider, Token } from '../api/credentials';\nimport { User } from '../auth/user';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { TargetData } from '../local/target_data';\nimport { Mutation, MutationResult } from '../model/mutation';\nimport {\n  ListenRequest as ProtoListenRequest,\n  ListenResponse as ProtoListenResponse,\n  WriteRequest as ProtoWriteRequest,\n  WriteResponse as ProtoWriteResponse\n} from '../protos/firestore_proto_api';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logError } from '../util/log';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { ExponentialBackoff } from './backoff';\nimport { Connection, Stream } from './connection';\nimport {\n  fromVersion,\n  fromWatchChange,\n  fromWriteResults,\n  getEncodedDatabaseId,\n  JsonProtoSerializer,\n  toListenRequestLabels,\n  toMutation,\n  toTarget,\n  versionFromListenResponse\n} from './serializer';\nimport { WatchChange } from './watch_change';\n\nconst LOG_TAG = 'PersistentStream';\n\n// The generated proto interfaces for these class are missing the database\n// field. So we add it here.\n// TODO(b/36015800): Remove this once the api generator is fixed.\ninterface ListenRequest extends ProtoListenRequest {\n  database?: string;\n}\nexport interface WriteRequest extends ProtoWriteRequest {\n  database?: string;\n}\n/**\n * PersistentStream can be in one of 5 states (each described in detail below)\n * based on the following state transition diagram:\n *\n *          start() called             auth & connection succeeded\n * INITIAL ----------------> STARTING -----------------------------> OPEN\n *                             ^  |                                   |\n *                             |  |                    error occurred |\n *                             |  \\-----------------------------v-----/\n *                             |                                |\n *                    backoff  |                                |\n *                    elapsed  |              start() called    |\n *                             \\--- BACKOFF <---------------- ERROR\n *\n * [any state] --------------------------> INITIAL\n *               stop() called or\n *               idle timer expired\n */\nconst enum PersistentStreamState {\n  /**\n   * The streaming RPC is not yet running and there's no error condition.\n   * Calling start() will start the stream immediately without backoff.\n   * While in this state isStarted() will return false.\n   */\n  Initial,\n\n  /**\n   * The stream is starting, either waiting for an auth token or for the stream\n   * to successfully open. While in this state, isStarted() will return true but\n   * isOpen() will return false.\n   */\n  Starting,\n\n  /**\n   * The streaming RPC is up and running. Requests and responses can flow\n   * freely. Both isStarted() and isOpen() will return true.\n   */\n  Open,\n\n  /**\n   * The stream is healthy and has been connected for more than 10 seconds. We\n   * therefore assume that the credentials we passed were valid. Both\n   * isStarted() and isOpen() will return true.\n   */\n  Healthy,\n\n  /**\n   * The stream encountered an error. The next start attempt will back off.\n   * While in this state isStarted() will return false.\n   */\n  Error,\n\n  /**\n   * An in-between state after an error where the stream is waiting before\n   * re-starting. After waiting is complete, the stream will try to open.\n   * While in this state isStarted() will return true but isOpen() will return\n   * false.\n   */\n  Backoff\n}\n\n/**\n * Provides a common interface that is shared by the listeners for stream\n * events by the concrete implementation classes.\n */\nexport interface PersistentStreamListener {\n  /**\n   * Called after the stream was established and can accept outgoing\n   * messages\n   */\n  onOpen: () => Promise<void>;\n  /**\n   * Called after the stream has closed. If there was an error, the\n   * FirestoreError will be set.\n   */\n  onClose: (err?: FirestoreError) => Promise<void>;\n}\n\n/** The time a stream stays open after it is marked idle. */\nconst IDLE_TIMEOUT_MS = 60 * 1000;\n\n/** The time a stream stays open until we consider it healthy. */\nconst HEALTHY_TIMEOUT_MS = 10 * 1000;\n\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nexport abstract class PersistentStream<\n  SendType,\n  ReceiveType,\n  ListenerType extends PersistentStreamListener\n> {\n  private state = PersistentStreamState.Initial;\n  /**\n   * A close count that's incremented every time the stream is closed; used by\n   * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n   * close.\n   */\n  private closeCount = 0;\n\n  private idleTimer: DelayedOperation<void> | null = null;\n  private healthCheck: DelayedOperation<void> | null = null;\n  private stream: Stream<SendType, ReceiveType> | null = null;\n\n  protected backoff: ExponentialBackoff;\n\n  constructor(\n    private queue: AsyncQueue,\n    connectionTimerId: TimerId,\n    private idleTimerId: TimerId,\n    private healthTimerId: TimerId,\n    protected connection: Connection,\n    private authCredentialsProvider: CredentialsProvider<User>,\n    private appCheckCredentialsProvider: CredentialsProvider<string>,\n    protected listener: ListenerType\n  ) {\n    this.backoff = new ExponentialBackoff(queue, connectionTimerId);\n  }\n\n  /**\n   * Returns true if start() has been called and no error has occurred. True\n   * indicates the stream is open or in the process of opening (which\n   * encompasses respecting backoff, getting auth tokens, and starting the\n   * actual RPC). Use isOpen() to determine if the stream is open and ready for\n   * outbound requests.\n   */\n  isStarted(): boolean {\n    return (\n      this.state === PersistentStreamState.Starting ||\n      this.state === PersistentStreamState.Backoff ||\n      this.isOpen()\n    );\n  }\n\n  /**\n   * Returns true if the underlying RPC is open (the onOpen() listener has been\n   * called) and the stream is ready for outbound requests.\n   */\n  isOpen(): boolean {\n    return (\n      this.state === PersistentStreamState.Open ||\n      this.state === PersistentStreamState.Healthy\n    );\n  }\n\n  /**\n   * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n   * not immediately ready for use: onOpen() will be invoked when the RPC is\n   * ready for outbound requests, at which point isOpen() will return true.\n   *\n   * When start returns, isStarted() will return true.\n   */\n  start(): void {\n    if (this.state === PersistentStreamState.Error) {\n      this.performBackoff();\n      return;\n    }\n\n    debugAssert(\n      this.state === PersistentStreamState.Initial,\n      'Already started'\n    );\n    this.auth();\n  }\n\n  /**\n   * Stops the RPC. This call is idempotent and allowed regardless of the\n   * current isStarted() state.\n   *\n   * When stop returns, isStarted() and isOpen() will both return false.\n   */\n  async stop(): Promise<void> {\n    if (this.isStarted()) {\n      await this.close(PersistentStreamState.Initial);\n    }\n  }\n\n  /**\n   * After an error the stream will usually back off on the next attempt to\n   * start it. If the error warrants an immediate restart of the stream, the\n   * sender can use this to indicate that the receiver should not back off.\n   *\n   * Each error will call the onClose() listener. That function can decide to\n   * inhibit backoff if required.\n   */\n  inhibitBackoff(): void {\n    debugAssert(\n      !this.isStarted(),\n      'Can only inhibit backoff in a stopped state'\n    );\n\n    this.state = PersistentStreamState.Initial;\n    this.backoff.reset();\n  }\n\n  /**\n   * Marks this stream as idle. If no further actions are performed on the\n   * stream for one minute, the stream will automatically close itself and\n   * notify the stream's onClose() handler with Status.OK. The stream will then\n   * be in a !isStarted() state, requiring the caller to start the stream again\n   * before further use.\n   *\n   * Only streams that are in state 'Open' can be marked idle, as all other\n   * states imply pending network operations.\n   */\n  markIdle(): void {\n    // Starts the idle time if we are in state 'Open' and are not yet already\n    // running a timer (in which case the previous idle timeout still applies).\n    if (this.isOpen() && this.idleTimer === null) {\n      this.idleTimer = this.queue.enqueueAfterDelay(\n        this.idleTimerId,\n        IDLE_TIMEOUT_MS,\n        () => this.handleIdleCloseTimer()\n      );\n    }\n  }\n\n  /** Sends a message to the underlying stream. */\n  protected sendRequest(msg: SendType): void {\n    this.cancelIdleCheck();\n    this.stream!.send(msg);\n  }\n\n  /** Called by the idle timer when the stream should close due to inactivity. */\n  private async handleIdleCloseTimer(): Promise<void> {\n    if (this.isOpen()) {\n      // When timing out an idle stream there's no reason to force the stream into backoff when\n      // it restarts so set the stream state to Initial instead of Error.\n      return this.close(PersistentStreamState.Initial);\n    }\n  }\n\n  /** Marks the stream as active again. */\n  private cancelIdleCheck(): void {\n    if (this.idleTimer) {\n      this.idleTimer.cancel();\n      this.idleTimer = null;\n    }\n  }\n\n  /** Cancels the health check delayed operation. */\n  private cancelHealthCheck(): void {\n    if (this.healthCheck) {\n      this.healthCheck.cancel();\n      this.healthCheck = null;\n    }\n  }\n\n  /**\n   * Closes the stream and cleans up as necessary:\n   *\n   * * closes the underlying GRPC stream;\n   * * calls the onClose handler with the given 'error';\n   * * sets internal stream state to 'finalState';\n   * * adjusts the backoff timer based on the error\n   *\n   * A new stream can be opened by calling start().\n   *\n   * @param finalState - the intended state of the stream after closing.\n   * @param error - the error the connection was closed with.\n   */\n  private async close(\n    finalState: PersistentStreamState,\n    error?: FirestoreError\n  ): Promise<void> {\n    debugAssert(this.isStarted(), 'Only started streams should be closed.');\n    debugAssert(\n      finalState === PersistentStreamState.Error || isNullOrUndefined(error),\n      \"Can't provide an error when not in an error state.\"\n    );\n\n    // Cancel any outstanding timers (they're guaranteed not to execute).\n    this.cancelIdleCheck();\n    this.cancelHealthCheck();\n    this.backoff.cancel();\n\n    // Invalidates any stream-related callbacks (e.g. from auth or the\n    // underlying stream), guaranteeing they won't execute.\n    this.closeCount++;\n\n    if (finalState !== PersistentStreamState.Error) {\n      // If this is an intentional close ensure we don't delay our next connection attempt.\n      this.backoff.reset();\n    } else if (error && error.code === Code.RESOURCE_EXHAUSTED) {\n      // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n      logError(error.toString());\n      logError(\n        'Using maximum backoff delay to prevent overloading the backend.'\n      );\n      this.backoff.resetToMax();\n    } else if (\n      error &&\n      error.code === Code.UNAUTHENTICATED &&\n      this.state !== PersistentStreamState.Healthy\n    ) {\n      // \"unauthenticated\" error means the token was rejected. This should rarely\n      // happen since both Auth and AppCheck ensure a sufficient TTL when we\n      // request a token. If a user manually resets their system clock this can\n      // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n      // before we received the first message and we need to invalidate the token\n      // to ensure that we fetch a new token.\n      this.authCredentialsProvider.invalidateToken();\n      this.appCheckCredentialsProvider.invalidateToken();\n    }\n\n    // Clean up the underlying stream because we are no longer interested in events.\n    if (this.stream !== null) {\n      this.tearDown();\n      this.stream.close();\n      this.stream = null;\n    }\n\n    // This state must be assigned before calling onClose() to allow the callback to\n    // inhibit backoff or otherwise manipulate the state in its non-started state.\n    this.state = finalState;\n\n    // Notify the listener that the stream closed.\n    await this.listener.onClose(error);\n  }\n\n  /**\n   * Can be overridden to perform additional cleanup before the stream is closed.\n   * Calling super.tearDown() is not required.\n   */\n  protected tearDown(): void {}\n\n  /**\n   * Used by subclasses to start the concrete RPC and return the underlying\n   * connection stream.\n   */\n  protected abstract startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<SendType, ReceiveType>;\n\n  /**\n   * Called after the stream has received a message. The function will be\n   * called on the right queue and must return a Promise.\n   * @param message - The message received from the stream.\n   */\n  protected abstract onMessage(message: ReceiveType): Promise<void>;\n\n  private auth(): void {\n    debugAssert(\n      this.state === PersistentStreamState.Initial,\n      'Must be in initial state to auth'\n    );\n\n    this.state = PersistentStreamState.Starting;\n\n    const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n\n    // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n    const closeCount = this.closeCount;\n\n    Promise.all([\n      this.authCredentialsProvider.getToken(),\n      this.appCheckCredentialsProvider.getToken()\n    ]).then(\n      ([authToken, appCheckToken]) => {\n        // Stream can be stopped while waiting for authentication.\n        // TODO(mikelehen): We really should just use dispatchIfNotClosed\n        // and let this dispatch onto the queue, but that opened a spec test can\n        // of worms that I don't want to deal with in this PR.\n        if (this.closeCount === closeCount) {\n          // Normally we'd have to schedule the callback on the AsyncQueue.\n          // However, the following calls are safe to be called outside the\n          // AsyncQueue since they don't chain asynchronous calls\n          this.startStream(authToken, appCheckToken);\n        }\n      },\n      (error: Error) => {\n        dispatchIfNotClosed(() => {\n          const rpcError = new FirestoreError(\n            Code.UNKNOWN,\n            'Fetching auth token failed: ' + error.message\n          );\n          return this.handleStreamClose(rpcError);\n        });\n      }\n    );\n  }\n\n  private startStream(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): void {\n    debugAssert(\n      this.state === PersistentStreamState.Starting,\n      'Trying to start stream in a non-starting state'\n    );\n\n    const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n\n    this.stream = this.startRpc(authToken, appCheckToken);\n    this.stream.onOpen(() => {\n      dispatchIfNotClosed(() => {\n        debugAssert(\n          this.state === PersistentStreamState.Starting,\n          'Expected stream to be in state Starting, but was ' + this.state\n        );\n        this.state = PersistentStreamState.Open;\n        debugAssert(\n          this.healthCheck === null,\n          'Expected healthCheck to be null'\n        );\n        this.healthCheck = this.queue.enqueueAfterDelay(\n          this.healthTimerId,\n          HEALTHY_TIMEOUT_MS,\n          () => {\n            if (this.isOpen()) {\n              this.state = PersistentStreamState.Healthy;\n            }\n            return Promise.resolve();\n          }\n        );\n        return this.listener!.onOpen();\n      });\n    });\n    this.stream.onClose((error?: FirestoreError) => {\n      dispatchIfNotClosed(() => {\n        return this.handleStreamClose(error);\n      });\n    });\n    this.stream.onMessage((msg: ReceiveType) => {\n      dispatchIfNotClosed(() => {\n        return this.onMessage(msg);\n      });\n    });\n  }\n\n  private performBackoff(): void {\n    debugAssert(\n      this.state === PersistentStreamState.Error,\n      'Should only perform backoff when in Error state'\n    );\n    this.state = PersistentStreamState.Backoff;\n\n    this.backoff.backoffAndRun(async () => {\n      debugAssert(\n        this.state === PersistentStreamState.Backoff,\n        'Backoff elapsed but state is now: ' + this.state\n      );\n\n      this.state = PersistentStreamState.Initial;\n      this.start();\n      debugAssert(this.isStarted(), 'PersistentStream should have started');\n    });\n  }\n\n  // Visible for tests\n  handleStreamClose(error?: FirestoreError): Promise<void> {\n    debugAssert(\n      this.isStarted(),\n      \"Can't handle server close on non-started stream\"\n    );\n    logDebug(LOG_TAG, `close with error: ${error}`);\n\n    this.stream = null;\n\n    // In theory the stream could close cleanly, however, in our current model\n    // we never expect this to happen because if we stop a stream ourselves,\n    // this callback will never be called. To prevent cases where we retry\n    // without a backoff accidentally, we set the stream to error in all cases.\n    return this.close(PersistentStreamState.Error, error);\n  }\n\n  /**\n   * Returns a \"dispatcher\" function that dispatches operations onto the\n   * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n   * us to turn auth / stream callbacks into no-ops if the stream is closed /\n   * re-opened, etc.\n   */\n  private getCloseGuardedDispatcher(\n    startCloseCount: number\n  ): (fn: () => Promise<void>) => void {\n    return (fn: () => Promise<void>): void => {\n      this.queue.enqueueAndForget(() => {\n        if (this.closeCount === startCloseCount) {\n          return fn();\n        } else {\n          logDebug(\n            LOG_TAG,\n            'stream callback skipped by getCloseGuardedDispatcher.'\n          );\n          return Promise.resolve();\n        }\n      });\n    };\n  }\n}\n\n/** Listener for the PersistentWatchStream */\nexport interface WatchStreamListener extends PersistentStreamListener {\n  /**\n   * Called on a watchChange. The snapshot parameter will be MIN if the watch\n   * change did not have a snapshot associated with it.\n   */\n  onWatchChange: (\n    watchChange: WatchChange,\n    snapshot: SnapshotVersion\n  ) => Promise<void>;\n}\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */\nexport class PersistentListenStream extends PersistentStream<\n  ProtoListenRequest,\n  ProtoListenResponse,\n  WatchStreamListener\n> {\n  constructor(\n    queue: AsyncQueue,\n    connection: Connection,\n    authCredentials: CredentialsProvider<User>,\n    appCheckCredentials: CredentialsProvider<string>,\n    private serializer: JsonProtoSerializer,\n    listener: WatchStreamListener\n  ) {\n    super(\n      queue,\n      TimerId.ListenStreamConnectionBackoff,\n      TimerId.ListenStreamIdle,\n      TimerId.HealthCheckTimeout,\n      connection,\n      authCredentials,\n      appCheckCredentials,\n      listener\n    );\n  }\n\n  protected startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<ProtoListenRequest, ProtoListenResponse> {\n    return this.connection.openStream<ProtoListenRequest, ProtoListenResponse>(\n      'Listen',\n      authToken,\n      appCheckToken\n    );\n  }\n\n  protected onMessage(watchChangeProto: ProtoListenResponse): Promise<void> {\n    // A successful response means the stream is healthy\n    this.backoff.reset();\n\n    const watchChange = fromWatchChange(this.serializer, watchChangeProto);\n    const snapshot = versionFromListenResponse(watchChangeProto);\n    return this.listener!.onWatchChange(watchChange, snapshot);\n  }\n\n  /**\n   * Registers interest in the results of the given target. If the target\n   * includes a resumeToken it will be included in the request. Results that\n   * affect the target will be streamed back as WatchChange messages that\n   * reference the targetId.\n   */\n  watch(targetData: TargetData): void {\n    const request: ListenRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    request.addTarget = toTarget(this.serializer, targetData);\n\n    const labels = toListenRequestLabels(this.serializer, targetData);\n    if (labels) {\n      request.labels = labels;\n    }\n\n    this.sendRequest(request);\n  }\n\n  /**\n   * Unregisters interest in the results of the target associated with the\n   * given targetId.\n   */\n  unwatch(targetId: TargetId): void {\n    const request: ListenRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    request.removeTarget = targetId;\n    this.sendRequest(request);\n  }\n}\n\n/** Listener for the PersistentWriteStream */\nexport interface WriteStreamListener extends PersistentStreamListener {\n  /**\n   * Called by the PersistentWriteStream upon a successful handshake response\n   * from the server, which is the receiver's cue to send any pending writes.\n   */\n  onHandshakeComplete: () => Promise<void>;\n\n  /**\n   * Called by the PersistentWriteStream upon receiving a StreamingWriteResponse\n   * from the server that contains a mutation result.\n   */\n  onMutationResult: (\n    commitVersion: SnapshotVersion,\n    results: MutationResult[]\n  ) => Promise<void>;\n}\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\nexport class PersistentWriteStream extends PersistentStream<\n  ProtoWriteRequest,\n  ProtoWriteResponse,\n  WriteStreamListener\n> {\n  private handshakeComplete_ = false;\n\n  constructor(\n    queue: AsyncQueue,\n    connection: Connection,\n    authCredentials: CredentialsProvider<User>,\n    appCheckCredentials: CredentialsProvider<string>,\n    private serializer: JsonProtoSerializer,\n    listener: WriteStreamListener\n  ) {\n    super(\n      queue,\n      TimerId.WriteStreamConnectionBackoff,\n      TimerId.WriteStreamIdle,\n      TimerId.HealthCheckTimeout,\n      connection,\n      authCredentials,\n      appCheckCredentials,\n      listener\n    );\n  }\n\n  /**\n   * The last received stream token from the server, used to acknowledge which\n   * responses the client has processed. Stream tokens are opaque checkpoint\n   * markers whose only real value is their inclusion in the next request.\n   *\n   * PersistentWriteStream manages propagating this value from responses to the\n   * next request.\n   */\n  private lastStreamToken: string | Uint8Array | undefined;\n\n  /**\n   * Tracks whether or not a handshake has been successfully exchanged and\n   * the stream is ready to accept mutations.\n   */\n  get handshakeComplete(): boolean {\n    return this.handshakeComplete_;\n  }\n\n  // Override of PersistentStream.start\n  start(): void {\n    this.handshakeComplete_ = false;\n    this.lastStreamToken = undefined;\n    super.start();\n  }\n\n  protected tearDown(): void {\n    if (this.handshakeComplete_) {\n      this.writeMutations([]);\n    }\n  }\n\n  protected startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<ProtoWriteRequest, ProtoWriteResponse> {\n    return this.connection.openStream<ProtoWriteRequest, ProtoWriteResponse>(\n      'Write',\n      authToken,\n      appCheckToken\n    );\n  }\n\n  protected onMessage(responseProto: ProtoWriteResponse): Promise<void> {\n    // Always capture the last stream token.\n    hardAssert(\n      !!responseProto.streamToken,\n      'Got a write response without a stream token'\n    );\n    this.lastStreamToken = responseProto.streamToken;\n\n    if (!this.handshakeComplete_) {\n      // The first response is always the handshake response\n      hardAssert(\n        !responseProto.writeResults || responseProto.writeResults.length === 0,\n        'Got mutation results for handshake'\n      );\n      this.handshakeComplete_ = true;\n      return this.listener!.onHandshakeComplete();\n    } else {\n      // A successful first write response means the stream is healthy,\n      // Note, that we could consider a successful handshake healthy, however,\n      // the write itself might be causing an error we want to back off from.\n      this.backoff.reset();\n\n      const results = fromWriteResults(\n        responseProto.writeResults,\n        responseProto.commitTime\n      );\n      const commitVersion = fromVersion(responseProto.commitTime!);\n      return this.listener!.onMutationResult(commitVersion, results);\n    }\n  }\n\n  /**\n   * Sends an initial streamToken to the server, performing the handshake\n   * required to make the StreamingWrite RPC work. Subsequent\n   * calls should wait until onHandshakeComplete was called.\n   */\n  writeHandshake(): void {\n    debugAssert(this.isOpen(), 'Writing handshake requires an opened stream');\n    debugAssert(!this.handshakeComplete_, 'Handshake already completed');\n    debugAssert(\n      !this.lastStreamToken,\n      'Stream token should be empty during handshake'\n    );\n    // TODO(dimond): Support stream resumption. We intentionally do not set the\n    // stream token on the handshake, ignoring any stream token we might have.\n    const request: WriteRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    this.sendRequest(request);\n  }\n\n  /** Sends a group of mutations to the Firestore backend to apply. */\n  writeMutations(mutations: Mutation[]): void {\n    debugAssert(this.isOpen(), 'Writing mutations requires an opened stream');\n    debugAssert(\n      this.handshakeComplete_,\n      'Handshake must be complete before writing mutations'\n    );\n    debugAssert(\n      !!this.lastStreamToken,\n      'Trying to write mutation without a token'\n    );\n\n    const request: WriteRequest = {\n      streamToken: this.lastStreamToken,\n      writes: mutations.map(mutation => toMutation(this.serializer, mutation))\n    };\n\n    this.sendRequest(request);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { User } from '../auth/user';\nimport { Aggregate } from '../core/aggregate';\nimport { queryToAggregateTarget, Query, queryToTarget } from '../core/query';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport {\n  ApiClientObjectMap,\n  BatchGetDocumentsRequest as ProtoBatchGetDocumentsRequest,\n  BatchGetDocumentsResponse as ProtoBatchGetDocumentsResponse,\n  RunAggregationQueryRequest as ProtoRunAggregationQueryRequest,\n  RunAggregationQueryResponse as ProtoRunAggregationQueryResponse,\n  RunQueryRequest as ProtoRunQueryRequest,\n  RunQueryResponse as ProtoRunQueryResponse,\n  Value\n} from '../protos/firestore_proto_api';\nimport { debugAssert, debugCast, hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { Connection } from './connection';\nimport {\n  PersistentListenStream,\n  PersistentWriteStream,\n  WatchStreamListener,\n  WriteStreamListener\n} from './persistent_stream';\nimport {\n  fromDocument,\n  fromBatchGetDocumentsResponse,\n  getEncodedDatabaseId,\n  JsonProtoSerializer,\n  toMutation,\n  toName,\n  toQueryTarget,\n  toRunAggregationQueryRequest\n} from './serializer';\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\nexport abstract class Datastore {\n  abstract terminate(): void;\n  abstract serializer: JsonProtoSerializer;\n}\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass DatastoreImpl extends Datastore {\n  terminated = false;\n\n  constructor(\n    readonly authCredentials: CredentialsProvider<User>,\n    readonly appCheckCredentials: CredentialsProvider<string>,\n    readonly connection: Connection,\n    readonly serializer: JsonProtoSerializer\n  ) {\n    super();\n  }\n\n  verifyInitialized(): void {\n    debugAssert(!!this.connection, 'Datastore.start() not called');\n    if (this.terminated) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'The client has already been terminated.'\n      );\n    }\n  }\n\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n  invokeRPC<Req, Resp>(\n    rpcName: string,\n    path: string,\n    request: Req\n  ): Promise<Resp> {\n    this.verifyInitialized();\n    return Promise.all([\n      this.authCredentials.getToken(),\n      this.appCheckCredentials.getToken()\n    ])\n      .then(([authToken, appCheckToken]) => {\n        return this.connection.invokeRPC<Req, Resp>(\n          rpcName,\n          path,\n          request,\n          authToken,\n          appCheckToken\n        );\n      })\n      .catch((error: FirestoreError) => {\n        if (error.name === 'FirebaseError') {\n          if (error.code === Code.UNAUTHENTICATED) {\n            this.authCredentials.invalidateToken();\n            this.appCheckCredentials.invalidateToken();\n          }\n          throw error;\n        } else {\n          throw new FirestoreError(Code.UNKNOWN, error.toString());\n        }\n      });\n  }\n\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  invokeStreamingRPC<Req, Resp>(\n    rpcName: string,\n    path: string,\n    request: Req,\n    expectedResponseCount?: number\n  ): Promise<Resp[]> {\n    this.verifyInitialized();\n    return Promise.all([\n      this.authCredentials.getToken(),\n      this.appCheckCredentials.getToken()\n    ])\n      .then(([authToken, appCheckToken]) => {\n        return this.connection.invokeStreamingRPC<Req, Resp>(\n          rpcName,\n          path,\n          request,\n          authToken,\n          appCheckToken,\n          expectedResponseCount\n        );\n      })\n      .catch((error: FirestoreError) => {\n        if (error.name === 'FirebaseError') {\n          if (error.code === Code.UNAUTHENTICATED) {\n            this.authCredentials.invalidateToken();\n            this.appCheckCredentials.invalidateToken();\n          }\n          throw error;\n        } else {\n          throw new FirestoreError(Code.UNKNOWN, error.toString());\n        }\n      });\n  }\n\n  terminate(): void {\n    this.terminated = true;\n  }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nexport function newDatastore(\n  authCredentials: CredentialsProvider<User>,\n  appCheckCredentials: CredentialsProvider<string>,\n  connection: Connection,\n  serializer: JsonProtoSerializer\n): Datastore {\n  return new DatastoreImpl(\n    authCredentials,\n    appCheckCredentials,\n    connection,\n    serializer\n  );\n}\n\nexport async function invokeCommitRpc(\n  datastore: Datastore,\n  mutations: Mutation[]\n): Promise<void> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const path = getEncodedDatabaseId(datastoreImpl.serializer) + '/documents';\n  const request = {\n    writes: mutations.map(m => toMutation(datastoreImpl.serializer, m))\n  };\n  await datastoreImpl.invokeRPC('Commit', path, request);\n}\n\nexport async function invokeBatchGetDocumentsRpc(\n  datastore: Datastore,\n  keys: DocumentKey[]\n): Promise<Document[]> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const path = getEncodedDatabaseId(datastoreImpl.serializer) + '/documents';\n  const request = {\n    documents: keys.map(k => toName(datastoreImpl.serializer, k))\n  };\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoBatchGetDocumentsRequest,\n    ProtoBatchGetDocumentsResponse\n  >('BatchGetDocuments', path, request, keys.length);\n\n  const docs = new Map<string, Document>();\n  response.forEach(proto => {\n    const doc = fromBatchGetDocumentsResponse(datastoreImpl.serializer, proto);\n    docs.set(doc.key.toString(), doc);\n  });\n  const result: Document[] = [];\n  keys.forEach(key => {\n    const doc = docs.get(key.toString());\n    hardAssert(!!doc, 'Missing entity in write response for ' + key);\n    result.push(doc);\n  });\n  return result;\n}\n\nexport async function invokeRunQueryRpc(\n  datastore: Datastore,\n  query: Query\n): Promise<Document[]> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const request = toQueryTarget(datastoreImpl.serializer, queryToTarget(query));\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoRunQueryRequest,\n    ProtoRunQueryResponse\n  >('RunQuery', request.parent!, { structuredQuery: request.structuredQuery });\n  return (\n    response\n      // Omit RunQueryResponses that only contain readTimes.\n      .filter(proto => !!proto.document)\n      .map(proto =>\n        fromDocument(datastoreImpl.serializer, proto.document!, undefined)\n      )\n  );\n}\n\nexport async function invokeRunAggregationQueryRpc(\n  datastore: Datastore,\n  query: Query,\n  aggregates: Aggregate[]\n): Promise<ApiClientObjectMap<Value>> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const { request, aliasMap } = toRunAggregationQueryRequest(\n    datastoreImpl.serializer,\n    queryToAggregateTarget(query),\n    aggregates\n  );\n\n  const parent = request.parent;\n  if (!datastoreImpl.connection.shouldResourcePathBeIncludedInRequest) {\n    delete request.parent;\n  }\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoRunAggregationQueryRequest,\n    ProtoRunAggregationQueryResponse\n  >('RunAggregationQuery', parent!, request, /*expectedResponseCount=*/ 1);\n\n  // Omit RunAggregationQueryResponse that only contain readTimes.\n  const filteredResult = response.filter(proto => !!proto.result);\n\n  hardAssert(\n    filteredResult.length === 1,\n    'Aggregation fields are missing from result.'\n  );\n  debugAssert(\n    !isNullOrUndefined(filteredResult[0].result),\n    'aggregationQueryResponse.result'\n  );\n  debugAssert(\n    !isNullOrUndefined(filteredResult[0].result.aggregateFields),\n    'aggregationQueryResponse.result.aggregateFields'\n  );\n\n  // Remap the short-form aliases that were sent to the server\n  // to the client-side aliases. Users will access the results\n  // using the client-side alias.\n  const unmappedAggregateFields = filteredResult[0].result?.aggregateFields;\n  const remappedFields = Object.keys(unmappedAggregateFields).reduce<\n    ApiClientObjectMap<Value>\n  >((accumulator, key) => {\n    debugAssert(\n      !isNullOrUndefined(aliasMap[key]),\n      `'${key}' not present in aliasMap result`\n    );\n    accumulator[aliasMap[key]] = unmappedAggregateFields[key]!;\n    return accumulator;\n  }, {});\n\n  return remappedFields;\n}\n\nexport function newPersistentWriteStream(\n  datastore: Datastore,\n  queue: AsyncQueue,\n  listener: WriteStreamListener\n): PersistentWriteStream {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  datastoreImpl.verifyInitialized();\n  return new PersistentWriteStream(\n    queue,\n    datastoreImpl.connection,\n    datastoreImpl.authCredentials,\n    datastoreImpl.appCheckCredentials,\n    datastoreImpl.serializer,\n    listener\n  );\n}\n\nexport function newPersistentWatchStream(\n  datastore: Datastore,\n  queue: AsyncQueue,\n  listener: WatchStreamListener\n): PersistentListenStream {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  datastoreImpl.verifyInitialized();\n  return new PersistentListenStream(\n    queue,\n    datastoreImpl.connection,\n    datastoreImpl.authCredentials,\n    datastoreImpl.appCheckCredentials,\n    datastoreImpl.serializer,\n    listener\n  );\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnlineState } from '../core/types';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { FirestoreError } from '../util/error';\nimport { logError, logDebug } from '../util/log';\n\nconst LOG_TAG = 'OnlineStateTracker';\n\n// To deal with transient failures, we allow multiple stream attempts before\n// giving up and transitioning from OnlineState.Unknown to Offline.\n// TODO(mikelehen): This used to be set to 2 as a mitigation for b/66228394.\n// @jdimond thinks that bug is sufficiently fixed so that we can set this back\n// to 1. If that works okay, we could potentially remove this logic entirely.\nconst MAX_WATCH_STREAM_FAILURES = 1;\n\n// To deal with stream attempts that don't succeed or fail in a timely manner,\n// we have a timeout for OnlineState to reach Online or Offline.\n// If the timeout is reached, we transition to Offline rather than waiting\n// indefinitely.\nconst ONLINE_STATE_TIMEOUT_MS = 10 * 1000;\n\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nexport class OnlineStateTracker {\n  /** The current OnlineState. */\n  private state = OnlineState.Unknown;\n\n  /**\n   * A count of consecutive failures to open the stream. If it reaches the\n   * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n   * Offline.\n   */\n  private watchStreamFailures = 0;\n\n  /**\n   * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n   * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n   * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n   */\n  private onlineStateTimer: DelayedOperation<void> | null = null;\n\n  /**\n   * Whether the client should log a warning message if it fails to connect to\n   * the backend (initially true, cleared after a successful stream, or if we've\n   * logged the message already).\n   */\n  private shouldWarnClientIsOffline = true;\n\n  constructor(\n    private asyncQueue: AsyncQueue,\n    private onlineStateHandler: (onlineState: OnlineState) => void\n  ) {}\n\n  /**\n   * Called by RemoteStore when a watch stream is started (including on each\n   * backoff attempt).\n   *\n   * If this is the first attempt, it sets the OnlineState to Unknown and starts\n   * the onlineStateTimer.\n   */\n  handleWatchStreamStart(): void {\n    if (this.watchStreamFailures === 0) {\n      this.setAndBroadcast(OnlineState.Unknown);\n\n      debugAssert(\n        this.onlineStateTimer === null,\n        `onlineStateTimer shouldn't be started yet`\n      );\n      this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(\n        TimerId.OnlineStateTimeout,\n        ONLINE_STATE_TIMEOUT_MS,\n        () => {\n          this.onlineStateTimer = null;\n          debugAssert(\n            this.state === OnlineState.Unknown,\n            'Timer should be canceled if we transitioned to a different state.'\n          );\n          this.logClientOfflineWarningIfNecessary(\n            `Backend didn't respond within ${ONLINE_STATE_TIMEOUT_MS / 1000} ` +\n              `seconds.`\n          );\n          this.setAndBroadcast(OnlineState.Offline);\n\n          // NOTE: handleWatchStreamFailure() will continue to increment\n          // watchStreamFailures even though we are already marked Offline,\n          // but this is non-harmful.\n\n          return Promise.resolve();\n        }\n      );\n    }\n  }\n\n  /**\n   * Updates our OnlineState as appropriate after the watch stream reports a\n   * failure. The first failure moves us to the 'Unknown' state. We then may\n   * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n   * actually transition to the 'Offline' state.\n   */\n  handleWatchStreamFailure(error: FirestoreError): void {\n    if (this.state === OnlineState.Online) {\n      this.setAndBroadcast(OnlineState.Unknown);\n\n      // To get to OnlineState.Online, set() must have been called which would\n      // have reset our heuristics.\n      debugAssert(\n        this.watchStreamFailures === 0,\n        'watchStreamFailures must be 0'\n      );\n      debugAssert(\n        this.onlineStateTimer === null,\n        'onlineStateTimer must be null'\n      );\n    } else {\n      this.watchStreamFailures++;\n      if (this.watchStreamFailures >= MAX_WATCH_STREAM_FAILURES) {\n        this.clearOnlineStateTimer();\n\n        this.logClientOfflineWarningIfNecessary(\n          `Connection failed ${MAX_WATCH_STREAM_FAILURES} ` +\n            `times. Most recent error: ${error.toString()}`\n        );\n\n        this.setAndBroadcast(OnlineState.Offline);\n      }\n    }\n  }\n\n  /**\n   * Explicitly sets the OnlineState to the specified state.\n   *\n   * Note that this resets our timers / failure counters, etc. used by our\n   * Offline heuristics, so must not be used in place of\n   * handleWatchStreamStart() and handleWatchStreamFailure().\n   */\n  set(newState: OnlineState): void {\n    this.clearOnlineStateTimer();\n    this.watchStreamFailures = 0;\n\n    if (newState === OnlineState.Online) {\n      // We've connected to watch at least once. Don't warn the developer\n      // about being offline going forward.\n      this.shouldWarnClientIsOffline = false;\n    }\n\n    this.setAndBroadcast(newState);\n  }\n\n  private setAndBroadcast(newState: OnlineState): void {\n    if (newState !== this.state) {\n      this.state = newState;\n      this.onlineStateHandler(newState);\n    }\n  }\n\n  private logClientOfflineWarningIfNecessary(details: string): void {\n    const message =\n      `Could not reach Cloud Firestore backend. ${details}\\n` +\n      `This typically indicates that your device does not have a healthy ` +\n      `Internet connection at the moment. The client will operate in offline ` +\n      `mode until it is able to successfully connect to the backend.`;\n    if (this.shouldWarnClientIsOffline) {\n      logError(message);\n      this.shouldWarnClientIsOffline = false;\n    } else {\n      logDebug(LOG_TAG, message);\n    }\n  }\n\n  private clearOnlineStateTimer(): void {\n    if (this.onlineStateTimer !== null) {\n      this.onlineStateTimer.cancel();\n      this.onlineStateTimer = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { OnlineState, TargetId } from '../core/types';\nimport { LocalStore } from '../local/local_store';\nimport {\n  localStoreGetLastRemoteSnapshotVersion,\n  localStoreGetNextMutationBatch\n} from '../local/local_store_impl';\nimport { isIndexedDbTransactionError } from '../local/simple_db';\nimport { TargetData } from '../local/target_data';\nimport { MutationResult } from '../model/mutation';\nimport { MutationBatch, MutationBatchResult } from '../model/mutation_batch';\nimport { debugAssert, debugCast } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { ConnectivityMonitor, NetworkStatus } from './connectivity_monitor';\nimport {\n  Datastore,\n  newPersistentWatchStream,\n  newPersistentWriteStream\n} from './datastore';\nimport { OnlineStateTracker } from './online_state_tracker';\nimport {\n  PersistentListenStream,\n  PersistentWriteStream\n} from './persistent_stream';\nimport { RemoteSyncer } from './remote_syncer';\nimport { isPermanentWriteError } from './rpc_error';\nimport {\n  DocumentWatchChange,\n  ExistenceFilterChange,\n  WatchChange,\n  WatchChangeAggregator,\n  WatchTargetChange,\n  WatchTargetChangeState\n} from './watch_change';\n\nconst LOG_TAG = 'RemoteStore';\n\n// TODO(b/35853402): Negotiate this with the stream.\nconst MAX_PENDING_WRITES = 10;\n\n/** Reasons for why the RemoteStore may be offline. */\nconst enum OfflineCause {\n  /** The user has explicitly disabled the network (via `disableNetwork()`). */\n  UserDisabled,\n  /** An IndexedDb failure occurred while persisting a stream update. */\n  IndexedDbFailed,\n  /** The tab is not the primary tab (only relevant with multi-tab). */\n  IsSecondary,\n  /** We are restarting the streams due to an Auth credential change. */\n  CredentialChange,\n  /** The connectivity state of the environment has changed. */\n  ConnectivityChange,\n  /** The RemoteStore has been shut down. */\n  Shutdown\n}\n\n/**\n * RemoteStore - An interface to remotely stored data, basically providing a\n * wrapper around the Datastore that is more reliable for the rest of the\n * system.\n *\n * RemoteStore is responsible for maintaining the connection to the server.\n * - maintaining a list of active listens.\n * - reconnecting when the connection is dropped.\n * - resuming all the active listens on reconnect.\n *\n * RemoteStore handles all incoming events from the Datastore.\n * - listening to the watch stream and repackaging the events as RemoteEvents\n * - notifying SyncEngine of any changes to the active listens.\n *\n * RemoteStore takes writes from other components and handles them reliably.\n * - pulling pending mutations from LocalStore and sending them to Datastore.\n * - retrying mutations that failed because of network problems.\n * - acking mutations to the SyncEngine once they are accepted or rejected.\n */\nexport interface RemoteStore {\n  /**\n   * SyncEngine to notify of watch and write events. This must be set\n   * immediately after construction.\n   */\n  remoteSyncer: RemoteSyncer;\n}\n\nclass RemoteStoreImpl implements RemoteStore {\n  remoteSyncer: RemoteSyncer = {};\n\n  /**\n   * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n   * LocalStore via fillWritePipeline() and have or will send to the write\n   * stream.\n   *\n   * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n   * restart the write stream. When the stream is established the writes in the\n   * pipeline will be sent in order.\n   *\n   * Writes remain in writePipeline until they are acknowledged by the backend\n   * and thus will automatically be re-sent if the stream is interrupted /\n   * restarted before they're acknowledged.\n   *\n   * Write responses from the backend are linked to their originating request\n   * purely based on order, and so we can just shift() writes from the front of\n   * the writePipeline as we receive responses.\n   */\n  writePipeline: MutationBatch[] = [];\n\n  /**\n   * A mapping of watched targets that the client cares about tracking and the\n   * user has explicitly called a 'listen' for this target.\n   *\n   * These targets may or may not have been sent to or acknowledged by the\n   * server. On re-establishing the listen stream, these targets should be sent\n   * to the server. The targets removed with unlistens are removed eagerly\n   * without waiting for confirmation from the listen stream.\n   */\n  listenTargets = new Map<TargetId, TargetData>();\n\n  connectivityMonitor: ConnectivityMonitor;\n  watchStream?: PersistentListenStream;\n  writeStream?: PersistentWriteStream;\n  watchChangeAggregator?: WatchChangeAggregator;\n\n  /**\n   * A set of reasons for why the RemoteStore may be offline. If empty, the\n   * RemoteStore may start its network connections.\n   */\n  offlineCauses = new Set<OfflineCause>();\n\n  /**\n   * Event handlers that get called when the network is disabled or enabled.\n   *\n   * PORTING NOTE: These functions are used on the Web client to create the\n   * underlying streams (to support tree-shakeable streams). On Android and iOS,\n   * the streams are created during construction of RemoteStore.\n   */\n  onNetworkStatusChange: Array<(enabled: boolean) => Promise<void>> = [];\n\n  onlineStateTracker: OnlineStateTracker;\n\n  constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    readonly localStore: LocalStore,\n    /** The client-side proxy for interacting with the backend. */\n    readonly datastore: Datastore,\n    readonly asyncQueue: AsyncQueue,\n    onlineStateHandler: (onlineState: OnlineState) => void,\n    connectivityMonitor: ConnectivityMonitor\n  ) {\n    this.connectivityMonitor = connectivityMonitor;\n    this.connectivityMonitor.addCallback((_: NetworkStatus) => {\n      asyncQueue.enqueueAndForget(async () => {\n        // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n        // network becomes unreachable as we don't have any other way to tear\n        // down our streams.\n        if (canUseNetwork(this)) {\n          logDebug(\n            LOG_TAG,\n            'Restarting streams for network reachability change.'\n          );\n          await restartNetwork(this);\n        }\n      });\n    });\n\n    this.onlineStateTracker = new OnlineStateTracker(\n      asyncQueue,\n      onlineStateHandler\n    );\n  }\n}\n\nexport function newRemoteStore(\n  localStore: LocalStore,\n  datastore: Datastore,\n  asyncQueue: AsyncQueue,\n  onlineStateHandler: (onlineState: OnlineState) => void,\n  connectivityMonitor: ConnectivityMonitor\n): RemoteStore {\n  return new RemoteStoreImpl(\n    localStore,\n    datastore,\n    asyncQueue,\n    onlineStateHandler,\n    connectivityMonitor\n  );\n}\n\n/** Re-enables the network. Idempotent. */\nexport function remoteStoreEnableNetwork(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.UserDisabled);\n  return enableNetworkInternal(remoteStoreImpl);\n}\n\nasync function enableNetworkInternal(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  if (canUseNetwork(remoteStoreImpl)) {\n    for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n      await networkStatusHandler(/* enabled= */ true);\n    }\n  }\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */\nexport async function remoteStoreDisableNetwork(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.add(OfflineCause.UserDisabled);\n  await disableNetworkInternal(remoteStoreImpl);\n\n  // Set the OnlineState to Offline so get()s return from cache, etc.\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Offline);\n}\n\nasync function disableNetworkInternal(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n    await networkStatusHandler(/* enabled= */ false);\n  }\n}\n\nexport async function remoteStoreShutdown(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  logDebug(LOG_TAG, 'RemoteStore shutting down.');\n  remoteStoreImpl.offlineCauses.add(OfflineCause.Shutdown);\n  await disableNetworkInternal(remoteStoreImpl);\n  remoteStoreImpl.connectivityMonitor.shutdown();\n\n  // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n  // triggering spurious listener events with cached data, etc.\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nexport function remoteStoreListen(\n  remoteStore: RemoteStore,\n  targetData: TargetData\n): void {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n\n  if (remoteStoreImpl.listenTargets.has(targetData.targetId)) {\n    return;\n  }\n\n  // Mark this as something the client is currently listening for.\n  remoteStoreImpl.listenTargets.set(targetData.targetId, targetData);\n\n  if (shouldStartWatchStream(remoteStoreImpl)) {\n    // The listen will be sent in onWatchStreamOpen\n    startWatchStream(remoteStoreImpl);\n  } else if (ensureWatchStream(remoteStoreImpl).isOpen()) {\n    sendWatchRequest(remoteStoreImpl, targetData);\n  }\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */\nexport function remoteStoreUnlisten(\n  remoteStore: RemoteStore,\n  targetId: TargetId\n): void {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  const watchStream = ensureWatchStream(remoteStoreImpl);\n\n  debugAssert(\n    remoteStoreImpl.listenTargets.has(targetId),\n    `unlisten called on target no currently watched: ${targetId}`\n  );\n\n  remoteStoreImpl.listenTargets.delete(targetId);\n  if (watchStream.isOpen()) {\n    sendUnwatchRequest(remoteStoreImpl, targetId);\n  }\n\n  if (remoteStoreImpl.listenTargets.size === 0) {\n    if (watchStream.isOpen()) {\n      watchStream.markIdle();\n    } else if (canUseNetwork(remoteStoreImpl)) {\n      // Revert to OnlineState.Unknown if the watch stream is not open and we\n      // have no listeners, since without any listens to send we cannot\n      // confirm if the stream is healthy and upgrade to OnlineState.Online.\n      remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n    }\n  }\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */\nfunction sendWatchRequest(\n  remoteStoreImpl: RemoteStoreImpl,\n  targetData: TargetData\n): void {\n  remoteStoreImpl.watchChangeAggregator!.recordPendingTargetRequest(\n    targetData.targetId\n  );\n\n  if (\n    targetData.resumeToken.approximateByteSize() > 0 ||\n    targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0\n  ) {\n    const expectedCount = remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget!(\n      targetData.targetId\n    ).size;\n    targetData = targetData.withExpectedCount(expectedCount);\n  }\n\n  ensureWatchStream(remoteStoreImpl).watch(targetData);\n}\n\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */\nfunction sendUnwatchRequest(\n  remoteStoreImpl: RemoteStoreImpl,\n  targetId: TargetId\n): void {\n  remoteStoreImpl.watchChangeAggregator!.recordPendingTargetRequest(targetId);\n  ensureWatchStream(remoteStoreImpl).unwatch(targetId);\n}\n\nfunction startWatchStream(remoteStoreImpl: RemoteStoreImpl): void {\n  debugAssert(\n    shouldStartWatchStream(remoteStoreImpl),\n    'startWatchStream() called when shouldStartWatchStream() is false.'\n  );\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget,\n    'getRemoteKeysForTarget() not set'\n  );\n\n  remoteStoreImpl.watchChangeAggregator = new WatchChangeAggregator({\n    getRemoteKeysForTarget: targetId =>\n      remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget!(targetId),\n    getTargetDataForTarget: targetId =>\n      remoteStoreImpl.listenTargets.get(targetId) || null,\n    getDatabaseId: () => remoteStoreImpl.datastore.serializer.databaseId\n  });\n  ensureWatchStream(remoteStoreImpl).start();\n  remoteStoreImpl.onlineStateTracker.handleWatchStreamStart();\n}\n\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */\nfunction shouldStartWatchStream(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    !ensureWatchStream(remoteStoreImpl).isStarted() &&\n    remoteStoreImpl.listenTargets.size > 0\n  );\n}\n\nexport function canUseNetwork(remoteStore: RemoteStore): boolean {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  return remoteStoreImpl.offlineCauses.size === 0;\n}\n\nfunction cleanUpWatchStreamState(remoteStoreImpl: RemoteStoreImpl): void {\n  remoteStoreImpl.watchChangeAggregator = undefined;\n}\n\nasync function onWatchStreamOpen(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  remoteStoreImpl.listenTargets.forEach((targetData, targetId) => {\n    sendWatchRequest(remoteStoreImpl, targetData);\n  });\n}\n\nasync function onWatchStreamClose(\n  remoteStoreImpl: RemoteStoreImpl,\n  error?: FirestoreError\n): Promise<void> {\n  if (error === undefined) {\n    // Graceful stop (due to stop() or idle timeout). Make sure that's\n    // desirable.\n    debugAssert(\n      !shouldStartWatchStream(remoteStoreImpl),\n      'Watch stream was stopped gracefully while still needed.'\n    );\n  }\n\n  cleanUpWatchStreamState(remoteStoreImpl);\n\n  // If we still need the watch stream, retry the connection.\n  if (shouldStartWatchStream(remoteStoreImpl)) {\n    remoteStoreImpl.onlineStateTracker.handleWatchStreamFailure(error!);\n\n    startWatchStream(remoteStoreImpl);\n  } else {\n    // No need to restart watch stream because there are no active targets.\n    // The online state is set to unknown because there is no active attempt\n    // at establishing a connection\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n}\n\nasync function onWatchStreamChange(\n  remoteStoreImpl: RemoteStoreImpl,\n  watchChange: WatchChange,\n  snapshotVersion: SnapshotVersion\n): Promise<void> {\n  // Mark the client as online since we got a message from the server\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Online);\n\n  if (\n    watchChange instanceof WatchTargetChange &&\n    watchChange.state === WatchTargetChangeState.Removed &&\n    watchChange.cause\n  ) {\n    // There was an error on a target, don't wait for a consistent snapshot\n    // to raise events\n    try {\n      await handleTargetError(remoteStoreImpl, watchChange);\n    } catch (e) {\n      logDebug(\n        LOG_TAG,\n        'Failed to remove targets %s: %s ',\n        watchChange.targetIds.join(','),\n        e\n      );\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n    return;\n  }\n\n  if (watchChange instanceof DocumentWatchChange) {\n    remoteStoreImpl.watchChangeAggregator!.handleDocumentChange(watchChange);\n  } else if (watchChange instanceof ExistenceFilterChange) {\n    remoteStoreImpl.watchChangeAggregator!.handleExistenceFilter(watchChange);\n  } else {\n    debugAssert(\n      watchChange instanceof WatchTargetChange,\n      'Expected watchChange to be an instance of WatchTargetChange'\n    );\n    remoteStoreImpl.watchChangeAggregator!.handleTargetChange(watchChange);\n  }\n\n  if (!snapshotVersion.isEqual(SnapshotVersion.min())) {\n    try {\n      const lastRemoteSnapshotVersion =\n        await localStoreGetLastRemoteSnapshotVersion(\n          remoteStoreImpl.localStore\n        );\n      if (snapshotVersion.compareTo(lastRemoteSnapshotVersion) >= 0) {\n        // We have received a target change with a global snapshot if the snapshot\n        // version is not equal to SnapshotVersion.min().\n        await raiseWatchSnapshot(remoteStoreImpl, snapshotVersion);\n      }\n    } catch (e) {\n      logDebug(LOG_TAG, 'Failed to raise snapshot:', e);\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n  }\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */\nasync function disableNetworkUntilRecovery(\n  remoteStoreImpl: RemoteStoreImpl,\n  e: FirestoreError,\n  op?: () => Promise<unknown>\n): Promise<void> {\n  if (isIndexedDbTransactionError(e)) {\n    debugAssert(\n      !remoteStoreImpl.offlineCauses.has(OfflineCause.IndexedDbFailed),\n      'Unexpected network event when IndexedDB was marked failed.'\n    );\n    remoteStoreImpl.offlineCauses.add(OfflineCause.IndexedDbFailed);\n\n    // Disable network and raise offline snapshots\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Offline);\n\n    if (!op) {\n      // Use a simple read operation to determine if IndexedDB recovered.\n      // Ideally, we would expose a health check directly on SimpleDb, but\n      // RemoteStore only has access to persistence through LocalStore.\n      op = () =>\n        localStoreGetLastRemoteSnapshotVersion(remoteStoreImpl.localStore);\n    }\n\n    // Probe IndexedDB periodically and re-enable network\n    remoteStoreImpl.asyncQueue.enqueueRetryable(async () => {\n      logDebug(LOG_TAG, 'Retrying IndexedDB access');\n      await op!();\n      remoteStoreImpl.offlineCauses.delete(OfflineCause.IndexedDbFailed);\n      await enableNetworkInternal(remoteStoreImpl);\n    });\n  } else {\n    throw e;\n  }\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */\nfunction executeWithRecovery(\n  remoteStoreImpl: RemoteStoreImpl,\n  op: () => Promise<void>\n): Promise<void> {\n  return op().catch(e => disableNetworkUntilRecovery(remoteStoreImpl, e, op));\n}\n\n/**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\nfunction raiseWatchSnapshot(\n  remoteStoreImpl: RemoteStoreImpl,\n  snapshotVersion: SnapshotVersion\n): Promise<void> {\n  debugAssert(\n    !snapshotVersion.isEqual(SnapshotVersion.min()),\n    \"Can't raise event for unknown SnapshotVersion\"\n  );\n  const remoteEvent =\n    remoteStoreImpl.watchChangeAggregator!.createRemoteEvent(snapshotVersion);\n\n  // Update in-memory resume tokens. LocalStore will update the\n  // persistent view of these when applying the completed RemoteEvent.\n  remoteEvent.targetChanges.forEach((change, targetId) => {\n    if (change.resumeToken.approximateByteSize() > 0) {\n      const targetData = remoteStoreImpl.listenTargets.get(targetId);\n      // A watched target might have been removed already.\n      if (targetData) {\n        remoteStoreImpl.listenTargets.set(\n          targetId,\n          targetData.withResumeToken(change.resumeToken, snapshotVersion)\n        );\n      }\n    }\n  });\n\n  // Re-establish listens for the targets that have been invalidated by\n  // existence filter mismatches.\n  remoteEvent.targetMismatches.forEach((targetId, targetPurpose) => {\n    const targetData = remoteStoreImpl.listenTargets.get(targetId);\n    if (!targetData) {\n      // A watched target might have been removed already.\n      return;\n    }\n\n    // Clear the resume token for the target, since we're in a known mismatch\n    // state.\n    remoteStoreImpl.listenTargets.set(\n      targetId,\n      targetData.withResumeToken(\n        ByteString.EMPTY_BYTE_STRING,\n        targetData.snapshotVersion\n      )\n    );\n\n    // Cause a hard reset by unwatching and rewatching immediately, but\n    // deliberately don't send a resume token so that we get a full update.\n    sendUnwatchRequest(remoteStoreImpl, targetId);\n\n    // Mark the target we send as being on behalf of an existence filter\n    // mismatch, but don't actually retain that in listenTargets. This ensures\n    // that we flag the first re-listen this way without impacting future\n    // listens of this target (that might happen e.g. on reconnect).\n    const requestTargetData = new TargetData(\n      targetData.target,\n      targetId,\n      targetPurpose,\n      targetData.sequenceNumber\n    );\n    sendWatchRequest(remoteStoreImpl, requestTargetData);\n  });\n\n  // Finally raise remote event\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.applyRemoteEvent,\n    'applyRemoteEvent() not set'\n  );\n  return remoteStoreImpl.remoteSyncer.applyRemoteEvent(remoteEvent);\n}\n\n/** Handles an error on a target */\nasync function handleTargetError(\n  remoteStoreImpl: RemoteStoreImpl,\n  watchChange: WatchTargetChange\n): Promise<void> {\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.rejectListen,\n    'rejectListen() not set'\n  );\n  debugAssert(!!watchChange.cause, 'Handling target error without a cause');\n  const error = watchChange.cause!;\n  for (const targetId of watchChange.targetIds) {\n    // A watched target might have been removed already.\n    if (remoteStoreImpl.listenTargets.has(targetId)) {\n      await remoteStoreImpl.remoteSyncer.rejectListen(targetId, error);\n      remoteStoreImpl.listenTargets.delete(targetId);\n      remoteStoreImpl.watchChangeAggregator!.removeTarget(targetId);\n    }\n  }\n}\n\n/**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */\nexport async function fillWritePipeline(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n\n  let lastBatchIdRetrieved =\n    remoteStoreImpl.writePipeline.length > 0\n      ? remoteStoreImpl.writePipeline[remoteStoreImpl.writePipeline.length - 1]\n          .batchId\n      : BATCHID_UNKNOWN;\n\n  while (canAddToWritePipeline(remoteStoreImpl)) {\n    try {\n      const batch = await localStoreGetNextMutationBatch(\n        remoteStoreImpl.localStore,\n        lastBatchIdRetrieved\n      );\n\n      if (batch === null) {\n        if (remoteStoreImpl.writePipeline.length === 0) {\n          writeStream.markIdle();\n        }\n        break;\n      } else {\n        lastBatchIdRetrieved = batch.batchId;\n        addToWritePipeline(remoteStoreImpl, batch);\n      }\n    } catch (e) {\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n  }\n\n  if (shouldStartWriteStream(remoteStoreImpl)) {\n    startWriteStream(remoteStoreImpl);\n  }\n}\n\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */\nfunction canAddToWritePipeline(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    remoteStoreImpl.writePipeline.length < MAX_PENDING_WRITES\n  );\n}\n\n// For testing\nexport function outstandingWrites(remoteStore: RemoteStore): number {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  return remoteStoreImpl.writePipeline.length;\n}\n\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */\nfunction addToWritePipeline(\n  remoteStoreImpl: RemoteStoreImpl,\n  batch: MutationBatch\n): void {\n  debugAssert(\n    canAddToWritePipeline(remoteStoreImpl),\n    'addToWritePipeline called when pipeline is full'\n  );\n  remoteStoreImpl.writePipeline.push(batch);\n\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n  if (writeStream.isOpen() && writeStream.handshakeComplete) {\n    writeStream.writeMutations(batch.mutations);\n  }\n}\n\nfunction shouldStartWriteStream(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    !ensureWriteStream(remoteStoreImpl).isStarted() &&\n    remoteStoreImpl.writePipeline.length > 0\n  );\n}\n\nfunction startWriteStream(remoteStoreImpl: RemoteStoreImpl): void {\n  debugAssert(\n    shouldStartWriteStream(remoteStoreImpl),\n    'startWriteStream() called when shouldStartWriteStream() is false.'\n  );\n  ensureWriteStream(remoteStoreImpl).start();\n}\n\nasync function onWriteStreamOpen(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  ensureWriteStream(remoteStoreImpl).writeHandshake();\n}\n\nasync function onWriteHandshakeComplete(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n  // Send the write pipeline now that the stream is established.\n  for (const batch of remoteStoreImpl.writePipeline) {\n    writeStream.writeMutations(batch.mutations);\n  }\n}\n\nasync function onMutationResult(\n  remoteStoreImpl: RemoteStoreImpl,\n  commitVersion: SnapshotVersion,\n  results: MutationResult[]\n): Promise<void> {\n  // This is a response to a write containing mutations and should be\n  // correlated to the first write in our write pipeline.\n  debugAssert(\n    remoteStoreImpl.writePipeline.length > 0,\n    'Got result for empty write pipeline'\n  );\n  const batch = remoteStoreImpl.writePipeline.shift()!;\n  const success = MutationBatchResult.from(batch, commitVersion, results);\n\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.applySuccessfulWrite,\n    'applySuccessfulWrite() not set'\n  );\n  await executeWithRecovery(remoteStoreImpl, () =>\n    remoteStoreImpl.remoteSyncer.applySuccessfulWrite!(success)\n  );\n\n  // It's possible that with the completion of this mutation another\n  // slot has freed up.\n  await fillWritePipeline(remoteStoreImpl);\n}\n\nasync function onWriteStreamClose(\n  remoteStoreImpl: RemoteStoreImpl,\n  error?: FirestoreError\n): Promise<void> {\n  if (error === undefined) {\n    // Graceful stop (due to stop() or idle timeout). Make sure that's\n    // desirable.\n    debugAssert(\n      !shouldStartWriteStream(remoteStoreImpl),\n      'Write stream was stopped gracefully while still needed.'\n    );\n  }\n\n  // If the write stream closed after the write handshake completes, a write\n  // operation failed and we fail the pending operation.\n  if (error && ensureWriteStream(remoteStoreImpl).handshakeComplete) {\n    // This error affects the actual write.\n    await handleWriteError(remoteStoreImpl, error!);\n  }\n\n  // The write stream might have been started by refilling the write\n  // pipeline for failed writes\n  if (shouldStartWriteStream(remoteStoreImpl)) {\n    startWriteStream(remoteStoreImpl);\n  }\n}\n\nasync function handleWriteError(\n  remoteStoreImpl: RemoteStoreImpl,\n  error: FirestoreError\n): Promise<void> {\n  // Only handle permanent errors here. If it's transient, just let the retry\n  // logic kick in.\n  if (isPermanentWriteError(error.code)) {\n    // This was a permanent error, the request itself was the problem\n    // so it's not going to succeed if we resend it.\n    const batch = remoteStoreImpl.writePipeline.shift()!;\n\n    // In this case it's also unlikely that the server itself is melting\n    // down -- this was just a bad request so inhibit backoff on the next\n    // restart.\n    ensureWriteStream(remoteStoreImpl).inhibitBackoff();\n\n    debugAssert(\n      !!remoteStoreImpl.remoteSyncer.rejectFailedWrite,\n      'rejectFailedWrite() not set'\n    );\n    await executeWithRecovery(remoteStoreImpl, () =>\n      remoteStoreImpl.remoteSyncer.rejectFailedWrite!(batch.batchId, error)\n    );\n\n    // It's possible that with the completion of this mutation\n    // another slot has freed up.\n    await fillWritePipeline(remoteStoreImpl);\n  } else {\n    // Transient error, just let the retry logic kick in.\n  }\n}\n\nasync function restartNetwork(remoteStore: RemoteStore): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.add(OfflineCause.ConnectivityChange);\n  await disableNetworkInternal(remoteStoreImpl);\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.ConnectivityChange);\n  await enableNetworkInternal(remoteStoreImpl);\n}\n\nexport async function remoteStoreHandleCredentialChange(\n  remoteStore: RemoteStore,\n  user: User\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.asyncQueue.verifyOperationInProgress();\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.handleCredentialChange,\n    'handleCredentialChange() not set'\n  );\n\n  logDebug(LOG_TAG, 'RemoteStore received new credentials');\n  const usesNetwork = canUseNetwork(remoteStoreImpl);\n\n  // Tear down and re-create our network streams. This will ensure we get a\n  // fresh auth token for the new user and re-fill the write pipeline with\n  // new mutations from the LocalStore (since mutations are per-user).\n  remoteStoreImpl.offlineCauses.add(OfflineCause.CredentialChange);\n  await disableNetworkInternal(remoteStoreImpl);\n  if (usesNetwork) {\n    // Don't set the network status to Unknown if we are offline.\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n  await remoteStoreImpl.remoteSyncer.handleCredentialChange(user);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.CredentialChange);\n  await enableNetworkInternal(remoteStoreImpl);\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */\nexport async function remoteStoreApplyPrimaryState(\n  remoteStore: RemoteStore,\n  isPrimary: boolean\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  if (isPrimary) {\n    remoteStoreImpl.offlineCauses.delete(OfflineCause.IsSecondary);\n    await enableNetworkInternal(remoteStoreImpl);\n  } else if (!isPrimary) {\n    remoteStoreImpl.offlineCauses.add(OfflineCause.IsSecondary);\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWatchStream(\n  remoteStoreImpl: RemoteStoreImpl\n): PersistentListenStream {\n  if (!remoteStoreImpl.watchStream) {\n    // Create stream (but note that it is not started yet).\n    remoteStoreImpl.watchStream = newPersistentWatchStream(\n      remoteStoreImpl.datastore,\n      remoteStoreImpl.asyncQueue,\n      {\n        onOpen: onWatchStreamOpen.bind(null, remoteStoreImpl),\n        onClose: onWatchStreamClose.bind(null, remoteStoreImpl),\n        onWatchChange: onWatchStreamChange.bind(null, remoteStoreImpl)\n      }\n    );\n\n    remoteStoreImpl.onNetworkStatusChange.push(async enabled => {\n      if (enabled) {\n        remoteStoreImpl.watchStream!.inhibitBackoff();\n        if (shouldStartWatchStream(remoteStoreImpl)) {\n          startWatchStream(remoteStoreImpl);\n        } else {\n          remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n        }\n      } else {\n        await remoteStoreImpl.watchStream!.stop();\n        cleanUpWatchStreamState(remoteStoreImpl);\n      }\n    });\n  }\n\n  return remoteStoreImpl.watchStream;\n}\n\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWriteStream(\n  remoteStoreImpl: RemoteStoreImpl\n): PersistentWriteStream {\n  if (!remoteStoreImpl.writeStream) {\n    debugAssert(\n      remoteStoreImpl.writePipeline.length === 0,\n      'Should not issue writes before WriteStream is enabled'\n    );\n\n    // Create stream (but note that it is not started yet).\n    remoteStoreImpl.writeStream = newPersistentWriteStream(\n      remoteStoreImpl.datastore,\n      remoteStoreImpl.asyncQueue,\n      {\n        onOpen: onWriteStreamOpen.bind(null, remoteStoreImpl),\n        onClose: onWriteStreamClose.bind(null, remoteStoreImpl),\n        onHandshakeComplete: onWriteHandshakeComplete.bind(\n          null,\n          remoteStoreImpl\n        ),\n        onMutationResult: onMutationResult.bind(null, remoteStoreImpl)\n      }\n    );\n\n    remoteStoreImpl.onNetworkStatusChange.push(async enabled => {\n      if (enabled) {\n        remoteStoreImpl.writeStream!.inhibitBackoff();\n\n        // This will start the write stream if necessary.\n        await fillWritePipeline(remoteStoreImpl);\n      } else {\n        await remoteStoreImpl.writeStream!.stop();\n\n        if (remoteStoreImpl.writePipeline.length > 0) {\n          logDebug(\n            LOG_TAG,\n            `Stopping write stream with ${remoteStoreImpl.writePipeline.length} pending writes`\n          );\n          remoteStoreImpl.writePipeline = [];\n        }\n      }\n    });\n  }\n\n  return remoteStoreImpl.writeStream;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\n\nimport { Code, FirestoreError } from './error';\nimport { logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TimerHandle = any;\n\n/**\n * Wellknown \"timer\" IDs used when scheduling delayed operations on the\n * AsyncQueue. These IDs can then be used from tests to check for the presence\n * of operations or to run them early.\n *\n * The string values are used when encoding these timer IDs in JSON spec tests.\n */\nexport const enum TimerId {\n  /** All can be used with runDelayedOperationsEarly() to run all timers. */\n  All = 'all',\n\n  /**\n   * The following 5 timers are used in persistent_stream.ts for the listen and\n   * write streams. The \"Idle\" timer is used to close the stream due to\n   * inactivity. The \"ConnectionBackoff\" timer is used to restart a stream once\n   * the appropriate backoff delay has elapsed. The health check is used to mark\n   * a stream healthy if it has not received an error during its initial setup.\n   */\n  ListenStreamIdle = 'listen_stream_idle',\n  ListenStreamConnectionBackoff = 'listen_stream_connection_backoff',\n  WriteStreamIdle = 'write_stream_idle',\n  WriteStreamConnectionBackoff = 'write_stream_connection_backoff',\n  HealthCheckTimeout = 'health_check_timeout',\n\n  /**\n   * A timer used in online_state_tracker.ts to transition from\n   * OnlineState.Unknown to Offline after a set timeout, rather than waiting\n   * indefinitely for success or failure.\n   */\n  OnlineStateTimeout = 'online_state_timeout',\n\n  /**\n   * A timer used to update the client metadata in IndexedDb, which is used\n   * to determine the primary leaseholder.\n   */\n  ClientMetadataRefresh = 'client_metadata_refresh',\n\n  /** A timer used to periodically attempt LRU Garbage collection */\n  LruGarbageCollection = 'lru_garbage_collection',\n\n  /**\n   * A timer used to retry transactions. Since there can be multiple concurrent\n   * transactions, multiple of these may be in the queue at a given time.\n   */\n  TransactionRetry = 'transaction_retry',\n\n  /**\n   * A timer used to retry operations scheduled via retryable AsyncQueue\n   * operations.\n   */\n  AsyncQueueRetry = 'async_queue_retry',\n\n  /**\n   *  A timer used to periodically attempt index backfill.\n   */\n  IndexBackfill = 'index_backfill'\n}\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nexport class DelayedOperation<T extends unknown> implements PromiseLike<T> {\n  // handle for use with clearTimeout(), or null if the operation has been\n  // executed or canceled already.\n  private timerHandle: TimerHandle | null;\n\n  private readonly deferred = new Deferred<T>();\n\n  private constructor(\n    private readonly asyncQueue: AsyncQueue,\n    readonly timerId: TimerId,\n    readonly targetTimeMs: number,\n    private readonly op: () => Promise<T>,\n    private readonly removalCallback: (op: DelayedOperation<T>) => void\n  ) {\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(err => {});\n  }\n\n  get promise(): Promise<T> {\n    return this.deferred.promise;\n  }\n\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule<R extends unknown>(\n    asyncQueue: AsyncQueue,\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<R>,\n    removalCallback: (op: DelayedOperation<R>) => void\n  ): DelayedOperation<R> {\n    const targetTime = Date.now() + delayMs;\n    const delayedOp = new DelayedOperation(\n      asyncQueue,\n      timerId,\n      targetTime,\n      op,\n      removalCallback\n    );\n    delayedOp.start(delayMs);\n    return delayedOp;\n  }\n\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  private start(delayMs: number): void {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), delayMs);\n  }\n\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay(): void {\n    return this.handleDelayElapsed();\n  }\n\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(reason?: string): void {\n    if (this.timerHandle !== null) {\n      this.clearTimeout();\n      this.deferred.reject(\n        new FirestoreError(\n          Code.CANCELLED,\n          'Operation cancelled' + (reason ? ': ' + reason : '')\n        )\n      );\n    }\n  }\n\n  then = this.deferred.promise.then.bind(this.deferred.promise);\n\n  private handleDelayElapsed(): void {\n    this.asyncQueue.enqueueAndForget(() => {\n      if (this.timerHandle !== null) {\n        this.clearTimeout();\n        return this.op().then(result => {\n          return this.deferred.resolve(result);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  }\n\n  private clearTimeout(): void {\n    if (this.timerHandle !== null) {\n      this.removalCallback(this);\n      clearTimeout(this.timerHandle);\n      this.timerHandle = null;\n    }\n  }\n}\n\nexport interface AsyncQueue {\n  // Is this AsyncQueue being shut down? If true, this instance will not enqueue\n  // any new operations, Promises from enqueue requests will not resolve.\n  readonly isShuttingDown: boolean;\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void;\n\n  /**\n   * Regardless if the queue has initialized shutdown, adds a new operation to the\n   * queue without waiting for it to complete (i.e. we ignore the Promise result).\n   */\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void;\n\n  /**\n   * Initialize the shutdown of this queue. Once this method is called, the\n   * only possible way to request running an operation is through\n   * `enqueueEvenWhileRestricted()`.\n   *\n   * @param purgeExistingTasks Whether already enqueued tasked should be\n   * rejected (unless enqueued wih `enqueueEvenWhileRestricted()`). Defaults\n   * to false.\n   */\n  enterRestrictedMode(purgeExistingTasks?: boolean): void;\n\n  /**\n   * Adds a new operation to the queue. Returns a promise that will be resolved\n   * when the promise returned by the new operation is (with its value).\n   */\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T>;\n\n  /**\n   * Enqueue a retryable operation.\n   *\n   * A retryable operation is rescheduled with backoff if it fails with a\n   * IndexedDbTransactionError (the error type used by SimpleDb). All\n   * retryable operations are executed in order and only run if all prior\n   * operations were retried successfully.\n   */\n  enqueueRetryable(op: () => Promise<void>): void;\n\n  /**\n   * Schedules an operation to be queued on the AsyncQueue once the specified\n   * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel\n   * or fast-forward the operation prior to its running.\n   */\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T>;\n\n  /**\n   * Verifies there's an operation currently in-progress on the AsyncQueue.\n   * Unfortunately we can't verify that the running code is in the promise chain\n   * of that operation, so this isn't a foolproof check, but it should be enough\n   * to catch some bugs.\n   */\n  verifyOperationInProgress(): void;\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */\nexport function wrapInUserErrorIfRecoverable(\n  e: Error,\n  msg: string\n): FirestoreError {\n  logError(LOG_TAG, `${msg}: ${e}`);\n  if (isIndexedDbTransactionError(e)) {\n    return new FirestoreError(Code.UNAVAILABLE, `${msg}: ${e}`);\n  } else {\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap } from '../util/sorted_map';\n\nimport { documentMap } from './collections';\nimport { Document } from './document';\nimport { DocumentComparator } from './document_comparator';\nimport { DocumentKey } from './document_key';\n\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\n\nexport class DocumentSet {\n  /**\n   * Returns an empty copy of the existing DocumentSet, using the same\n   * comparator.\n   */\n  static emptySet(oldSet: DocumentSet): DocumentSet {\n    return new DocumentSet(oldSet.comparator);\n  }\n\n  private comparator: DocumentComparator;\n  private keyedMap: SortedMap<DocumentKey, Document>;\n  private sortedSet: SortedMap<Document, null>;\n\n  /** The default ordering is by key if the comparator is omitted */\n  constructor(comp?: DocumentComparator) {\n    // We are adding document key comparator to the end as it's the only\n    // guaranteed unique property of a document.\n    if (comp) {\n      this.comparator = (d1: Document, d2: Document) =>\n        comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\n    } else {\n      this.comparator = (d1: Document, d2: Document) =>\n        DocumentKey.comparator(d1.key, d2.key);\n    }\n\n    this.keyedMap = documentMap();\n    this.sortedSet = new SortedMap<Document, null>(this.comparator);\n  }\n\n  has(key: DocumentKey): boolean {\n    return this.keyedMap.get(key) != null;\n  }\n\n  get(key: DocumentKey): Document | null {\n    return this.keyedMap.get(key);\n  }\n\n  first(): Document | null {\n    return this.sortedSet.minKey();\n  }\n\n  last(): Document | null {\n    return this.sortedSet.maxKey();\n  }\n\n  isEmpty(): boolean {\n    return this.sortedSet.isEmpty();\n  }\n\n  /**\n   * Returns the index of the provided key in the document set, or -1 if the\n   * document key is not present in the set;\n   */\n  indexOf(key: DocumentKey): number {\n    const doc = this.keyedMap.get(key);\n    return doc ? this.sortedSet.indexOf(doc) : -1;\n  }\n\n  get size(): number {\n    return this.sortedSet.size;\n  }\n\n  /** Iterates documents in order defined by \"comparator\" */\n  forEach(cb: (doc: Document) => void): void {\n    this.sortedSet.inorderTraversal((k, v) => {\n      cb(k);\n      return false;\n    });\n  }\n\n  /** Inserts or updates a document with the same key */\n  add(doc: Document): DocumentSet {\n    // First remove the element if we have it.\n    const set = this.delete(doc.key);\n    return set.copy(\n      set.keyedMap.insert(doc.key, doc),\n      set.sortedSet.insert(doc, null)\n    );\n  }\n\n  /** Deletes a document with a given key */\n  delete(key: DocumentKey): DocumentSet {\n    const doc = this.get(key);\n    if (!doc) {\n      return this;\n    }\n\n    return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n  }\n\n  isEqual(other: DocumentSet | null | undefined): boolean {\n    if (!(other instanceof DocumentSet)) {\n      return false;\n    }\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    const thisIt = this.sortedSet.getIterator();\n    const otherIt = other.sortedSet.getIterator();\n    while (thisIt.hasNext()) {\n      const thisDoc = thisIt.getNext().key;\n      const otherDoc = otherIt.getNext().key;\n      if (!thisDoc.isEqual(otherDoc)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toString(): string {\n    const docStrings: string[] = [];\n    this.forEach(doc => {\n      docStrings.push(doc.toString());\n    });\n    if (docStrings.length === 0) {\n      return 'DocumentSet ()';\n    } else {\n      return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n    }\n  }\n\n  private copy(\n    keyedMap: SortedMap<DocumentKey, Document>,\n    sortedSet: SortedMap<Document, null>\n  ): DocumentSet {\n    const newSet = new DocumentSet();\n    newSet.comparator = this.comparator;\n    newSet.keyedMap = keyedMap;\n    newSet.sortedSet = sortedSet;\n    return newSet;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKeySet } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { DocumentSet } from '../model/document_set';\nimport { fail } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { Query, queryEquals } from './query';\n\nexport const enum ChangeType {\n  Added,\n  Removed,\n  Modified,\n  Metadata\n}\n\nexport interface DocumentViewChange {\n  type: ChangeType;\n  doc: Document;\n}\n\nexport const enum SyncState {\n  Local,\n  Synced\n}\n\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\nexport class DocumentChangeSet {\n  private changeMap = new SortedMap<DocumentKey, DocumentViewChange>(\n    DocumentKey.comparator\n  );\n\n  track(change: DocumentViewChange): void {\n    const key = change.doc.key;\n    const oldChange = this.changeMap.get(key);\n    if (!oldChange) {\n      this.changeMap = this.changeMap.insert(key, change);\n      return;\n    }\n\n    // Merge the new change with the existing change.\n    if (\n      change.type !== ChangeType.Added &&\n      oldChange.type === ChangeType.Metadata\n    ) {\n      this.changeMap = this.changeMap.insert(key, change);\n    } else if (\n      change.type === ChangeType.Metadata &&\n      oldChange.type !== ChangeType.Removed\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: oldChange.type,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Modified &&\n      oldChange.type === ChangeType.Modified\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Modified &&\n      oldChange.type === ChangeType.Added\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Added,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Removed &&\n      oldChange.type === ChangeType.Added\n    ) {\n      this.changeMap = this.changeMap.remove(key);\n    } else if (\n      change.type === ChangeType.Removed &&\n      oldChange.type === ChangeType.Modified\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Removed,\n        doc: oldChange.doc\n      });\n    } else if (\n      change.type === ChangeType.Added &&\n      oldChange.type === ChangeType.Removed\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else {\n      // This includes these cases, which don't make sense:\n      // Added->Added\n      // Removed->Removed\n      // Modified->Added\n      // Removed->Modified\n      // Metadata->Added\n      // Removed->Metadata\n      fail(\n        'unsupported combination of changes: ' +\n          JSON.stringify(change) +\n          ' after ' +\n          JSON.stringify(oldChange)\n      );\n    }\n  }\n\n  getChanges(): DocumentViewChange[] {\n    const changes: DocumentViewChange[] = [];\n    this.changeMap.inorderTraversal(\n      (key: DocumentKey, change: DocumentViewChange) => {\n        changes.push(change);\n      }\n    );\n    return changes;\n  }\n}\n\nexport class ViewSnapshot {\n  constructor(\n    readonly query: Query,\n    readonly docs: DocumentSet,\n    readonly oldDocs: DocumentSet,\n    readonly docChanges: DocumentViewChange[],\n    readonly mutatedKeys: DocumentKeySet,\n    readonly fromCache: boolean,\n    readonly syncStateChanged: boolean,\n    readonly excludesMetadataChanges: boolean,\n    readonly hasCachedResults: boolean\n  ) {}\n\n  /** Returns a view snapshot as if all documents in the snapshot were added. */\n  static fromInitialDocuments(\n    query: Query,\n    documents: DocumentSet,\n    mutatedKeys: DocumentKeySet,\n    fromCache: boolean,\n    hasCachedResults: boolean\n  ): ViewSnapshot {\n    const changes: DocumentViewChange[] = [];\n    documents.forEach(doc => {\n      changes.push({ type: ChangeType.Added, doc });\n    });\n\n    return new ViewSnapshot(\n      query,\n      documents,\n      DocumentSet.emptySet(documents),\n      changes,\n      mutatedKeys,\n      fromCache,\n      /* syncStateChanged= */ true,\n      /* excludesMetadataChanges= */ false,\n      hasCachedResults\n    );\n  }\n\n  get hasPendingWrites(): boolean {\n    return !this.mutatedKeys.isEmpty();\n  }\n\n  isEqual(other: ViewSnapshot): boolean {\n    if (\n      this.fromCache !== other.fromCache ||\n      this.hasCachedResults !== other.hasCachedResults ||\n      this.syncStateChanged !== other.syncStateChanged ||\n      !this.mutatedKeys.isEqual(other.mutatedKeys) ||\n      !queryEquals(this.query, other.query) ||\n      !this.docs.isEqual(other.docs) ||\n      !this.oldDocs.isEqual(other.oldDocs)\n    ) {\n      return false;\n    }\n    const changes: DocumentViewChange[] = this.docChanges;\n    const otherChanges: DocumentViewChange[] = other.docChanges;\n    if (changes.length !== otherChanges.length) {\n      return false;\n    }\n    for (let i = 0; i < changes.length; i++) {\n      if (\n        changes[i].type !== otherChanges[i].type ||\n        !changes[i].doc.isEqual(otherChanges[i].doc)\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, debugCast } from '../util/assert';\nimport { wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { FirestoreError } from '../util/error';\nimport { EventHandler } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { canonifyQuery, Query, queryEquals, stringifyQuery } from './query';\nimport { OnlineState } from './types';\nimport { ChangeType, DocumentViewChange, ViewSnapshot } from './view_snapshot';\n\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nclass QueryListenersInfo {\n  viewSnap: ViewSnapshot | undefined = undefined;\n  listeners: QueryListener[] = [];\n}\n\n/**\n * Interface for handling events from the EventManager.\n */\nexport interface Observer<T> {\n  next: EventHandler<T>;\n  error: EventHandler<FirestoreError>;\n}\n\n/**\n * EventManager is responsible for mapping queries to query event emitters.\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\n * backend.\n *\n * PORTING NOTE: On Web, EventManager `onListen` and `onUnlisten` need to be\n * assigned to SyncEngine's `listen()` and `unlisten()` API before usage. This\n * allows users to tree-shake the Watch logic.\n */\nexport interface EventManager {\n  onListen?: (query: Query) => Promise<ViewSnapshot>;\n  onUnlisten?: (query: Query) => Promise<void>;\n}\n\nexport function newEventManager(): EventManager {\n  return new EventManagerImpl();\n}\n\nexport class EventManagerImpl implements EventManager {\n  queries = new ObjectMap<Query, QueryListenersInfo>(\n    q => canonifyQuery(q),\n    queryEquals\n  );\n\n  onlineState = OnlineState.Unknown;\n\n  snapshotsInSyncListeners: Set<Observer<void>> = new Set();\n\n  /** Callback invoked when a Query is first listen to. */\n  onListen?: (query: Query) => Promise<ViewSnapshot>;\n  /** Callback invoked once all listeners to a Query are removed. */\n  onUnlisten?: (query: Query) => Promise<void>;\n}\n\nexport async function eventManagerListen(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  debugAssert(!!eventManagerImpl.onListen, 'onListen not set');\n  const query = listener.query;\n  let firstListen = false;\n\n  let queryInfo = eventManagerImpl.queries.get(query);\n  if (!queryInfo) {\n    firstListen = true;\n    queryInfo = new QueryListenersInfo();\n  }\n\n  if (firstListen) {\n    try {\n      queryInfo.viewSnap = await eventManagerImpl.onListen(query);\n    } catch (e) {\n      const firestoreError = wrapInUserErrorIfRecoverable(\n        e as Error,\n        `Initialization of query '${stringifyQuery(listener.query)}' failed`\n      );\n      listener.onError(firestoreError);\n      return;\n    }\n  }\n\n  eventManagerImpl.queries.set(query, queryInfo);\n  queryInfo.listeners.push(listener);\n\n  // Run global snapshot listeners if a consistent snapshot has been emitted.\n  const raisedEvent = listener.applyOnlineStateChange(\n    eventManagerImpl.onlineState\n  );\n  debugAssert(\n    !raisedEvent,\n    \"applyOnlineStateChange() shouldn't raise an event for brand-new listeners.\"\n  );\n\n  if (queryInfo.viewSnap) {\n    const raisedEvent = listener.onViewSnapshot(queryInfo.viewSnap);\n    if (raisedEvent) {\n      raiseSnapshotsInSyncEvent(eventManagerImpl);\n    }\n  }\n}\n\nexport async function eventManagerUnlisten(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  debugAssert(!!eventManagerImpl.onUnlisten, 'onUnlisten not set');\n  const query = listener.query;\n  let lastListen = false;\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    const i = queryInfo.listeners.indexOf(listener);\n    if (i >= 0) {\n      queryInfo.listeners.splice(i, 1);\n      lastListen = queryInfo.listeners.length === 0;\n    }\n  }\n\n  if (lastListen) {\n    eventManagerImpl.queries.delete(query);\n    return eventManagerImpl.onUnlisten(query);\n  }\n}\n\nexport function eventManagerOnWatchChange(\n  eventManager: EventManager,\n  viewSnaps: ViewSnapshot[]\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  let raisedEvent = false;\n  for (const viewSnap of viewSnaps) {\n    const query = viewSnap.query;\n    const queryInfo = eventManagerImpl.queries.get(query);\n    if (queryInfo) {\n      for (const listener of queryInfo.listeners) {\n        if (listener.onViewSnapshot(viewSnap)) {\n          raisedEvent = true;\n        }\n      }\n      queryInfo.viewSnap = viewSnap;\n    }\n  }\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function eventManagerOnWatchError(\n  eventManager: EventManager,\n  query: Query,\n  error: FirestoreError\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    for (const listener of queryInfo.listeners) {\n      listener.onError(error);\n    }\n  }\n\n  // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n  // after an error.\n  eventManagerImpl.queries.delete(query);\n}\n\nexport function eventManagerOnOnlineStateChange(\n  eventManager: EventManager,\n  onlineState: OnlineState\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.onlineState = onlineState;\n  let raisedEvent = false;\n  eventManagerImpl.queries.forEach((_, queryInfo) => {\n    for (const listener of queryInfo.listeners) {\n      // Run global snapshot listeners if a consistent snapshot has been emitted.\n      if (listener.applyOnlineStateChange(onlineState)) {\n        raisedEvent = true;\n      }\n    }\n  });\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function addSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.snapshotsInSyncListeners.add(observer);\n  // Immediately fire an initial event, indicating all existing listeners\n  // are in-sync.\n  observer.next();\n}\n\nexport function removeSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  eventManagerImpl.snapshotsInSyncListeners.delete(observer);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction raiseSnapshotsInSyncEvent(eventManagerImpl: EventManagerImpl): void {\n  eventManagerImpl.snapshotsInSyncListeners.forEach(observer => {\n    observer.next();\n  });\n}\n\nexport interface ListenOptions {\n  /** Raise events even when only the metadata changes */\n  readonly includeMetadataChanges?: boolean;\n\n  /**\n   * Wait for a sync with the server when online, but still raise events while\n   * offline.\n   */\n  readonly waitForSyncWhenOnline?: boolean;\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nexport class QueryListener {\n  /**\n   * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n   * observer. This flag is set to true once we've actually raised an event.\n   */\n  private raisedInitialEvent = false;\n\n  private options: ListenOptions;\n\n  private snap: ViewSnapshot | null = null;\n\n  private onlineState = OnlineState.Unknown;\n\n  constructor(\n    readonly query: Query,\n    private queryObserver: Observer<ViewSnapshot>,\n    options?: ListenOptions\n  ) {\n    this.options = options || {};\n  }\n\n  /**\n   * Applies the new ViewSnapshot to this listener, raising a user-facing event\n   * if applicable (depending on what changed, whether the user has opted into\n   * metadata-only changes, etc.). Returns true if a user-facing event was\n   * indeed raised.\n   */\n  onViewSnapshot(snap: ViewSnapshot): boolean {\n    debugAssert(\n      snap.docChanges.length > 0 || snap.syncStateChanged,\n      'We got a new snapshot with no changes?'\n    );\n\n    if (!this.options.includeMetadataChanges) {\n      // Remove the metadata only changes.\n      const docChanges: DocumentViewChange[] = [];\n      for (const docChange of snap.docChanges) {\n        if (docChange.type !== ChangeType.Metadata) {\n          docChanges.push(docChange);\n        }\n      }\n      snap = new ViewSnapshot(\n        snap.query,\n        snap.docs,\n        snap.oldDocs,\n        docChanges,\n        snap.mutatedKeys,\n        snap.fromCache,\n        snap.syncStateChanged,\n        /* excludesMetadataChanges= */ true,\n        snap.hasCachedResults\n      );\n    }\n    let raisedEvent = false;\n    if (!this.raisedInitialEvent) {\n      if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n        this.raiseInitialEvent(snap);\n        raisedEvent = true;\n      }\n    } else if (this.shouldRaiseEvent(snap)) {\n      this.queryObserver.next(snap);\n      raisedEvent = true;\n    }\n\n    this.snap = snap;\n    return raisedEvent;\n  }\n\n  onError(error: FirestoreError): void {\n    this.queryObserver.error(error);\n  }\n\n  /** Returns whether a snapshot was raised. */\n  applyOnlineStateChange(onlineState: OnlineState): boolean {\n    this.onlineState = onlineState;\n    let raisedEvent = false;\n    if (\n      this.snap &&\n      !this.raisedInitialEvent &&\n      this.shouldRaiseInitialEvent(this.snap, onlineState)\n    ) {\n      this.raiseInitialEvent(this.snap);\n      raisedEvent = true;\n    }\n    return raisedEvent;\n  }\n\n  private shouldRaiseInitialEvent(\n    snap: ViewSnapshot,\n    onlineState: OnlineState\n  ): boolean {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Determining whether to raise first event but already had first event'\n    );\n\n    // Always raise the first event when we're synced\n    if (!snap.fromCache) {\n      return true;\n    }\n\n    // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n    // or Online if we wait long enough).\n    const maybeOnline = onlineState !== OnlineState.Offline;\n    // Don't raise the event if we're online, aren't synced yet (checked\n    // above) and are waiting for a sync.\n    if (this.options.waitForSyncWhenOnline && maybeOnline) {\n      debugAssert(\n        snap.fromCache,\n        'Waiting for sync, but snapshot is not from cache'\n      );\n      return false;\n    }\n\n    // Raise data from cache if we have any documents, have cached results before,\n    // or we are offline.\n    return (\n      !snap.docs.isEmpty() ||\n      snap.hasCachedResults ||\n      onlineState === OnlineState.Offline\n    );\n  }\n\n  private shouldRaiseEvent(snap: ViewSnapshot): boolean {\n    // We don't need to handle includeDocumentMetadataChanges here because\n    // the Metadata only changes have already been stripped out if needed.\n    // At this point the only changes we will see are the ones we should\n    // propagate.\n    if (snap.docChanges.length > 0) {\n      return true;\n    }\n\n    const hasPendingWritesChanged =\n      this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n    if (snap.syncStateChanged || hasPendingWritesChanged) {\n      return this.options.includeMetadataChanges === true;\n    }\n\n    // Generally we should have hit one of the cases above, but it's possible\n    // to get here if there were only metadata docChanges and they got\n    // stripped out.\n    return false;\n  }\n\n  private raiseInitialEvent(snap: ViewSnapshot): void {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Trying to raise initial events for second time'\n    );\n    snap = ViewSnapshot.fromInitialDocuments(\n      snap.query,\n      snap.docs,\n      snap.mutatedKeys,\n      snap.fromCache,\n      snap.hasCachedResults\n    );\n    this.raisedInitialEvent = true;\n    this.queryObserver.next(snap);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryResult } from '../local/local_store_impl';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { DocumentSet } from '../model/document_set';\nimport { TargetChange } from '../remote/remote_event';\nimport { debugAssert, fail } from '../util/assert';\n\nimport { LimitType, newQueryComparator, Query, queryMatches } from './query';\nimport { OnlineState } from './types';\nimport {\n  ChangeType,\n  DocumentChangeSet,\n  SyncState,\n  ViewSnapshot\n} from './view_snapshot';\n\nexport type LimboDocumentChange = AddedLimboDocument | RemovedLimboDocument;\nexport class AddedLimboDocument {\n  constructor(public key: DocumentKey) {}\n}\nexport class RemovedLimboDocument {\n  constructor(public key: DocumentKey) {}\n}\n\n/** The result of applying a set of doc changes to a view. */\nexport interface ViewDocumentChanges {\n  /** The new set of docs that should be in the view. */\n  documentSet: DocumentSet;\n  /** The diff of these docs with the previous set of docs. */\n  changeSet: DocumentChangeSet;\n  /**\n   * Whether the set of documents passed in was not sufficient to calculate the\n   * new state of the view and there needs to be another pass based on the\n   * local cache.\n   */\n  needsRefill: boolean;\n\n  mutatedKeys: DocumentKeySet;\n}\n\nexport interface ViewChange {\n  snapshot?: ViewSnapshot;\n  limboChanges: LimboDocumentChange[];\n}\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\nexport class View {\n  private syncState: SyncState | null = null;\n  private hasCachedResults: boolean = false;\n  /**\n   * A flag whether the view is current with the backend. A view is considered\n   * current after it has seen the current flag from the backend and did not\n   * lose consistency within the watch stream (e.g. because of an existence\n   * filter mismatch).\n   */\n  private current = false;\n  private documentSet: DocumentSet;\n  /** Documents in the view but not in the remote target */\n  private limboDocuments = documentKeySet();\n  /** Document Keys that have local changes */\n  private mutatedKeys = documentKeySet();\n  /** Query comparator that defines the document order in this view. */\n  private docComparator: (d1: Document, d2: Document) => number;\n\n  constructor(\n    private query: Query,\n    /** Documents included in the remote target */\n    private _syncedDocuments: DocumentKeySet\n  ) {\n    this.docComparator = newQueryComparator(query);\n    this.documentSet = new DocumentSet(this.docComparator);\n  }\n\n  /**\n   * The set of remote documents that the server has told us belongs to the target associated with\n   * this view.\n   */\n  get syncedDocuments(): DocumentKeySet {\n    return this._syncedDocuments;\n  }\n\n  /**\n   * Iterates over a set of doc changes, applies the query limit, and computes\n   * what the new results should be, what the changes were, and whether we may\n   * need to go back to the local cache for more results. Does not make any\n   * changes to the view.\n   * @param docChanges - The doc changes to apply to this view.\n   * @param previousChanges - If this is being called with a refill, then start\n   *        with this set of docs and changes instead of the current view.\n   * @returns a new set of docs, changes, and refill flag.\n   */\n  computeDocChanges(\n    docChanges: DocumentMap,\n    previousChanges?: ViewDocumentChanges\n  ): ViewDocumentChanges {\n    const changeSet = previousChanges\n      ? previousChanges.changeSet\n      : new DocumentChangeSet();\n    const oldDocumentSet = previousChanges\n      ? previousChanges.documentSet\n      : this.documentSet;\n    let newMutatedKeys = previousChanges\n      ? previousChanges.mutatedKeys\n      : this.mutatedKeys;\n    let newDocumentSet = oldDocumentSet;\n    let needsRefill = false;\n\n    // Track the last doc in a (full) limit. This is necessary, because some\n    // update (a delete, or an update moving a doc past the old limit) might\n    // mean there is some other document in the local cache that either should\n    // come (1) between the old last limit doc and the new last document, in the\n    // case of updates, or (2) after the new last document, in the case of\n    // deletes. So we keep this doc at the old limit to compare the updates to.\n    //\n    // Note that this should never get used in a refill (when previousChanges is\n    // set), because there will only be adds -- no deletes or updates.\n    const lastDocInLimit =\n      this.query.limitType === LimitType.First &&\n      oldDocumentSet.size === this.query.limit\n        ? oldDocumentSet.last()\n        : null;\n    const firstDocInLimit =\n      this.query.limitType === LimitType.Last &&\n      oldDocumentSet.size === this.query.limit\n        ? oldDocumentSet.first()\n        : null;\n\n    docChanges.inorderTraversal((key, entry) => {\n      const oldDoc = oldDocumentSet.get(key);\n      const newDoc = queryMatches(this.query, entry) ? entry : null;\n\n      const oldDocHadPendingMutations = oldDoc\n        ? this.mutatedKeys.has(oldDoc.key)\n        : false;\n      const newDocHasPendingMutations = newDoc\n        ? newDoc.hasLocalMutations ||\n          // We only consider committed mutations for documents that were\n          // mutated during the lifetime of the view.\n          (this.mutatedKeys.has(newDoc.key) && newDoc.hasCommittedMutations)\n        : false;\n\n      let changeApplied = false;\n\n      // Calculate change\n      if (oldDoc && newDoc) {\n        const docsEqual = oldDoc.data.isEqual(newDoc.data);\n        if (!docsEqual) {\n          if (!this.shouldWaitForSyncedDocument(oldDoc, newDoc)) {\n            changeSet.track({\n              type: ChangeType.Modified,\n              doc: newDoc\n            });\n            changeApplied = true;\n\n            if (\n              (lastDocInLimit &&\n                this.docComparator(newDoc, lastDocInLimit) > 0) ||\n              (firstDocInLimit &&\n                this.docComparator(newDoc, firstDocInLimit) < 0)\n            ) {\n              // This doc moved from inside the limit to outside the limit.\n              // That means there may be some other doc in the local cache\n              // that should be included instead.\n              needsRefill = true;\n            }\n          }\n        } else if (oldDocHadPendingMutations !== newDocHasPendingMutations) {\n          changeSet.track({ type: ChangeType.Metadata, doc: newDoc });\n          changeApplied = true;\n        }\n      } else if (!oldDoc && newDoc) {\n        changeSet.track({ type: ChangeType.Added, doc: newDoc });\n        changeApplied = true;\n      } else if (oldDoc && !newDoc) {\n        changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\n        changeApplied = true;\n\n        if (lastDocInLimit || firstDocInLimit) {\n          // A doc was removed from a full limit query. We'll need to\n          // requery from the local cache to see if we know about some other\n          // doc that should be in the results.\n          needsRefill = true;\n        }\n      }\n\n      if (changeApplied) {\n        if (newDoc) {\n          newDocumentSet = newDocumentSet.add(newDoc);\n          if (newDocHasPendingMutations) {\n            newMutatedKeys = newMutatedKeys.add(key);\n          } else {\n            newMutatedKeys = newMutatedKeys.delete(key);\n          }\n        } else {\n          newDocumentSet = newDocumentSet.delete(key);\n          newMutatedKeys = newMutatedKeys.delete(key);\n        }\n      }\n    });\n\n    // Drop documents out to meet limit/limitToLast requirement.\n    if (this.query.limit !== null) {\n      while (newDocumentSet.size > this.query.limit!) {\n        const oldDoc =\n          this.query.limitType === LimitType.First\n            ? newDocumentSet.last()\n            : newDocumentSet.first();\n        newDocumentSet = newDocumentSet.delete(oldDoc!.key);\n        newMutatedKeys = newMutatedKeys.delete(oldDoc!.key);\n        changeSet.track({ type: ChangeType.Removed, doc: oldDoc! });\n      }\n    }\n\n    debugAssert(\n      !needsRefill || !previousChanges,\n      'View was refilled using docs that themselves needed refilling.'\n    );\n    return {\n      documentSet: newDocumentSet,\n      changeSet,\n      needsRefill,\n      mutatedKeys: newMutatedKeys\n    };\n  }\n\n  private shouldWaitForSyncedDocument(\n    oldDoc: Document,\n    newDoc: Document\n  ): boolean {\n    // We suppress the initial change event for documents that were modified as\n    // part of a write acknowledgment (e.g. when the value of a server transform\n    // is applied) as Watch will send us the same document again.\n    // By suppressing the event, we only raise two user visible events (one with\n    // `hasPendingWrites` and the final state of the document) instead of three\n    // (one with `hasPendingWrites`, the modified document with\n    // `hasPendingWrites` and the final state of the document).\n    return (\n      oldDoc.hasLocalMutations &&\n      newDoc.hasCommittedMutations &&\n      !newDoc.hasLocalMutations\n    );\n  }\n\n  /**\n   * Updates the view with the given ViewDocumentChanges and optionally updates\n   * limbo docs and sync state from the provided target change.\n   * @param docChanges - The set of changes to make to the view's docs.\n   * @param updateLimboDocuments - Whether to update limbo documents based on\n   *        this change.\n   * @param targetChange - A target change to apply for computing limbo docs and\n   *        sync state.\n   * @returns A new ViewChange with the given docs, changes, and sync state.\n   */\n  // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n  applyChanges(\n    docChanges: ViewDocumentChanges,\n    updateLimboDocuments: boolean,\n    targetChange?: TargetChange\n  ): ViewChange {\n    debugAssert(\n      !docChanges.needsRefill,\n      'Cannot apply changes that need a refill'\n    );\n    const oldDocs = this.documentSet;\n    this.documentSet = docChanges.documentSet;\n    this.mutatedKeys = docChanges.mutatedKeys;\n    // Sort changes based on type and query comparator\n    const changes = docChanges.changeSet.getChanges();\n    changes.sort((c1, c2) => {\n      return (\n        compareChangeType(c1.type, c2.type) ||\n        this.docComparator(c1.doc, c2.doc)\n      );\n    });\n\n    this.applyTargetChange(targetChange);\n    const limboChanges = updateLimboDocuments\n      ? this.updateLimboDocuments()\n      : [];\n    const synced = this.limboDocuments.size === 0 && this.current;\n    const newSyncState = synced ? SyncState.Synced : SyncState.Local;\n    const syncStateChanged = newSyncState !== this.syncState;\n    this.syncState = newSyncState;\n\n    if (changes.length === 0 && !syncStateChanged) {\n      // no changes\n      return { limboChanges };\n    } else {\n      const snap: ViewSnapshot = new ViewSnapshot(\n        this.query,\n        docChanges.documentSet,\n        oldDocs,\n        changes,\n        docChanges.mutatedKeys,\n        newSyncState === SyncState.Local,\n        syncStateChanged,\n        /* excludesMetadataChanges= */ false,\n        targetChange\n          ? targetChange.resumeToken.approximateByteSize() > 0\n          : false\n      );\n      return {\n        snapshot: snap,\n        limboChanges\n      };\n    }\n  }\n\n  /**\n   * Applies an OnlineState change to the view, potentially generating a\n   * ViewChange if the view's syncState changes as a result.\n   */\n  applyOnlineStateChange(onlineState: OnlineState): ViewChange {\n    if (this.current && onlineState === OnlineState.Offline) {\n      // If we're offline, set `current` to false and then call applyChanges()\n      // to refresh our syncState and generate a ViewChange as appropriate. We\n      // are guaranteed to get a new TargetChange that sets `current` back to\n      // true once the client is back online.\n      this.current = false;\n      return this.applyChanges(\n        {\n          documentSet: this.documentSet,\n          changeSet: new DocumentChangeSet(),\n          mutatedKeys: this.mutatedKeys,\n          needsRefill: false\n        },\n        /* updateLimboDocuments= */ false\n      );\n    } else {\n      // No effect, just return a no-op ViewChange.\n      return { limboChanges: [] };\n    }\n  }\n\n  /**\n   * Returns whether the doc for the given key should be in limbo.\n   */\n  private shouldBeInLimbo(key: DocumentKey): boolean {\n    // If the remote end says it's part of this query, it's not in limbo.\n    if (this._syncedDocuments.has(key)) {\n      return false;\n    }\n    // The local store doesn't think it's a result, so it shouldn't be in limbo.\n    if (!this.documentSet.has(key)) {\n      return false;\n    }\n    // If there are local changes to the doc, they might explain why the server\n    // doesn't know that it's part of the query. So don't put it in limbo.\n    // TODO(klimt): Ideally, we would only consider changes that might actually\n    // affect this specific query.\n    if (this.documentSet.get(key)!.hasLocalMutations) {\n      return false;\n    }\n    // Everything else is in limbo.\n    return true;\n  }\n\n  /**\n   * Updates syncedDocuments, current, and limbo docs based on the given change.\n   * Returns the list of changes to which docs are in limbo.\n   */\n  private applyTargetChange(targetChange?: TargetChange): void {\n    if (targetChange) {\n      targetChange.addedDocuments.forEach(\n        key => (this._syncedDocuments = this._syncedDocuments.add(key))\n      );\n      targetChange.modifiedDocuments.forEach(key => {\n        debugAssert(\n          this._syncedDocuments.has(key),\n          `Modified document ${key} not found in view.`\n        );\n      });\n      targetChange.removedDocuments.forEach(\n        key => (this._syncedDocuments = this._syncedDocuments.delete(key))\n      );\n      this.current = targetChange.current;\n    }\n  }\n\n  private updateLimboDocuments(): LimboDocumentChange[] {\n    // We can only determine limbo documents when we're in-sync with the server.\n    if (!this.current) {\n      return [];\n    }\n\n    // TODO(klimt): Do this incrementally so that it's not quadratic when\n    // updating many documents.\n    const oldLimboDocuments = this.limboDocuments;\n    this.limboDocuments = documentKeySet();\n    this.documentSet.forEach(doc => {\n      if (this.shouldBeInLimbo(doc.key)) {\n        this.limboDocuments = this.limboDocuments.add(doc.key);\n      }\n    });\n\n    // Diff the new limbo docs with the old limbo docs.\n    const changes: LimboDocumentChange[] = [];\n    oldLimboDocuments.forEach(key => {\n      if (!this.limboDocuments.has(key)) {\n        changes.push(new RemovedLimboDocument(key));\n      }\n    });\n    this.limboDocuments.forEach(key => {\n      if (!oldLimboDocuments.has(key)) {\n        changes.push(new AddedLimboDocument(key));\n      }\n    });\n    return changes;\n  }\n\n  /**\n   * Update the in-memory state of the current view with the state read from\n   * persistence.\n   *\n   * We update the query view whenever a client's primary status changes:\n   * - When a client transitions from primary to secondary, it can miss\n   *   LocalStorage updates and its query views may temporarily not be\n   *   synchronized with the state on disk.\n   * - For secondary to primary transitions, the client needs to update the list\n   *   of `syncedDocuments` since secondary clients update their query views\n   *   based purely on synthesized RemoteEvents.\n   *\n   * @param queryResult.documents - The documents that match the query according\n   * to the LocalStore.\n   * @param queryResult.remoteKeys - The keys of the documents that match the\n   * query according to the backend.\n   *\n   * @returns The ViewChange that resulted from this synchronization.\n   */\n  // PORTING NOTE: Multi-tab only.\n  synchronizeWithPersistedState(queryResult: QueryResult): ViewChange {\n    this._syncedDocuments = queryResult.remoteKeys;\n    this.limboDocuments = documentKeySet();\n    const docChanges = this.computeDocChanges(queryResult.documents);\n    return this.applyChanges(docChanges, /*updateLimboDocuments=*/ true);\n  }\n\n  /**\n   * Returns a view snapshot as if this query was just listened to. Contains\n   * a document add for every existing document and the `fromCache` and\n   * `hasPendingWrites` status of the already established view.\n   */\n  // PORTING NOTE: Multi-tab only.\n  computeInitialSnapshot(): ViewSnapshot {\n    return ViewSnapshot.fromInitialDocuments(\n      this.query,\n      this.documentSet,\n      this.mutatedKeys,\n      this.syncState === SyncState.Local,\n      this.hasCachedResults\n    );\n  }\n}\n\nfunction compareChangeType(c1: ChangeType, c2: ChangeType): number {\n  const order = (change: ChangeType): 0 | 1 | 2 => {\n    switch (change) {\n      case ChangeType.Added:\n        return 1;\n      case ChangeType.Modified:\n        return 2;\n      case ChangeType.Metadata:\n        // A metadata change is converted to a modified change at the public\n        // api layer.  Since we sort by document key and then change type,\n        // metadata and modified changes must be sorted equivalently.\n        return 2;\n      case ChangeType.Removed:\n        return 0;\n      default:\n        return fail('Unknown ChangeType: ' + change);\n    }\n  };\n\n  return order(c1) - order(c2);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoadBundleTask } from '../api/bundle';\nimport { User } from '../auth/user';\nimport { ignoreIfPrimaryLeaseLoss, LocalStore } from '../local/local_store';\nimport {\n  localStoreAcknowledgeBatch,\n  localStoreAllocateTarget,\n  localStoreApplyRemoteEventToLocalCache,\n  localStoreExecuteQuery,\n  localStoreGetActiveClients,\n  localStoreGetCachedTarget,\n  localStoreGetHighestUnacknowledgedBatchId,\n  localStoreGetNewDocumentChanges,\n  localStoreHandleUserChange,\n  localStoreHasNewerBundle,\n  localStoreLookupMutationDocuments,\n  localStoreNotifyLocalViewChanges,\n  localStoreRejectBatch,\n  localStoreReleaseTarget,\n  localStoreRemoveCachedMutationBatchMetadata,\n  localStoreSaveBundle,\n  localStoreWriteLocally\n} from '../local/local_store_impl';\nimport { LocalViewChanges } from '../local/local_view_changes';\nimport { ReferenceSet } from '../local/reference_set';\nimport { ClientId, SharedClientState } from '../local/shared_client_state';\nimport { QueryTargetState } from '../local/shared_client_state_syncer';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport {\n  DocumentKeySet,\n  documentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { MutationBatchResult } from '../model/mutation_batch';\nimport { ResourcePath } from '../model/path';\nimport { RemoteEvent, TargetChange } from '../remote/remote_event';\nimport {\n  canUseNetwork,\n  fillWritePipeline,\n  RemoteStore,\n  remoteStoreApplyPrimaryState,\n  remoteStoreListen,\n  remoteStoreUnlisten\n} from '../remote/remote_store';\nimport { debugAssert, debugCast, fail, hardAssert } from '../util/assert';\nimport { wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { BundleReader } from '../util/bundle_reader';\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { Deferred } from '../util/promise';\nimport { SortedMap } from '../util/sorted_map';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport {\n  bundleInitialProgress,\n  BundleLoader,\n  bundleSuccessProgress\n} from './bundle_impl';\nimport {\n  EventManager,\n  eventManagerOnOnlineStateChange,\n  eventManagerOnWatchChange,\n  eventManagerOnWatchError\n} from './event_manager';\nimport { ListenSequence } from './listen_sequence';\nimport {\n  canonifyQuery,\n  LimitType,\n  newQuery,\n  newQueryForPath,\n  Query,\n  queryEquals,\n  queryCollectionGroup,\n  queryToTarget,\n  stringifyQuery\n} from './query';\nimport { SnapshotVersion } from './snapshot_version';\nimport { SyncEngine } from './sync_engine';\nimport { Target } from './target';\nimport { TargetIdGenerator } from './target_id_generator';\nimport {\n  BatchId,\n  MutationBatchState,\n  OnlineState,\n  OnlineStateSource,\n  TargetId\n} from './types';\nimport {\n  AddedLimboDocument,\n  LimboDocumentChange,\n  RemovedLimboDocument,\n  View,\n  ViewChange\n} from './view';\nimport { ViewSnapshot } from './view_snapshot';\n\nconst LOG_TAG = 'SyncEngine';\n\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass QueryView {\n  constructor(\n    /**\n     * The query itself.\n     */\n    public query: Query,\n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    public targetId: TargetId,\n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    public view: View\n  ) {}\n}\n\n/** Tracks a limbo resolution. */\nclass LimboResolution {\n  constructor(public key: DocumentKey) {}\n\n  /**\n   * Set to true once we've received a document. This is used in\n   * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n   * decide whether it needs to manufacture a delete event for the target once\n   * the target is CURRENT.\n   */\n  receivedDocument: boolean = false;\n}\n\n/**\n * A function that updates a QueryView with a set of document changes (and a\n * remote event if applicable).\n */\ntype ApplyDocChangesHandler = (\n  queryView: QueryView,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n) => Promise<ViewSnapshot | undefined>;\n\n/**\n * Callbacks implemented by EventManager to handle notifications from\n * SyncEngine.\n */\ninterface SyncEngineListener {\n  /** Handles new view snapshots. */\n  onWatchChange?(snapshots: ViewSnapshot[]): void;\n\n  /** Handles the failure of a query. */\n  onWatchError?(query: Query, error: FirestoreError): void;\n}\n\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass SyncEngineImpl implements SyncEngine {\n  syncEngineListener: SyncEngineListener = {};\n\n  /**\n   * A callback that updates the QueryView based on the provided change.\n   *\n   * PORTING NOTE: On other platforms, this logic lives in\n   * `emitNewSnapshotsAndNotifyLocalStore()`, but on Web it is extracted to\n   *  ensure that all view logic only exists in bundles that include views.\n   */\n  applyDocChanges?: ApplyDocChangesHandler;\n\n  queryViewsByQuery = new ObjectMap<Query, QueryView>(\n    q => canonifyQuery(q),\n    queryEquals\n  );\n  queriesByTarget = new Map<TargetId, Query[]>();\n  /**\n   * The keys of documents that are in limbo for which we haven't yet started a\n   * limbo resolution query. The strings in this set are the result of calling\n   * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n   *\n   * The `Set` type was chosen because it provides efficient lookup and removal\n   * of arbitrary elements and it also maintains insertion order, providing the\n   * desired queue-like FIFO semantics.\n   */\n  enqueuedLimboResolutions = new Set<string>();\n  /**\n   * Keeps track of the target ID for each document that is in limbo with an\n   * active target.\n   */\n  activeLimboTargetsByKey = new SortedMap<DocumentKey, TargetId>(\n    DocumentKey.comparator\n  );\n  /**\n   * Keeps track of the information about an active limbo resolution for each\n   * active target ID that was started for the purpose of limbo resolution.\n   */\n  activeLimboResolutionsByTarget = new Map<TargetId, LimboResolution>();\n  limboDocumentRefs = new ReferenceSet();\n  /** Stores user completion handlers, indexed by User and BatchId. */\n  mutationUserCallbacks = {} as {\n    [uidKey: string]: SortedMap<BatchId, Deferred<void>>;\n  };\n  /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n  pendingWritesCallbacks = new Map<BatchId, Array<Deferred<void>>>();\n  limboTargetIdGenerator = TargetIdGenerator.forSyncEngine();\n\n  onlineState = OnlineState.Unknown;\n\n  // The primary state is set to `true` or `false` immediately after Firestore\n  // startup. In the interim, a client should only be considered primary if\n  // `isPrimary` is true.\n  _isPrimaryClient: undefined | boolean = undefined;\n\n  constructor(\n    readonly localStore: LocalStore,\n    readonly remoteStore: RemoteStore,\n    readonly eventManager: EventManager,\n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    readonly sharedClientState: SharedClientState,\n    public currentUser: User,\n    readonly maxConcurrentLimboResolutions: number\n  ) {}\n\n  get isPrimaryClient(): boolean {\n    return this._isPrimaryClient === true;\n  }\n}\n\nexport function newSyncEngine(\n  localStore: LocalStore,\n  remoteStore: RemoteStore,\n  eventManager: EventManager,\n  // PORTING NOTE: Manages state synchronization in multi-tab environments.\n  sharedClientState: SharedClientState,\n  currentUser: User,\n  maxConcurrentLimboResolutions: number,\n  isPrimary: boolean\n): SyncEngine {\n  const syncEngine = new SyncEngineImpl(\n    localStore,\n    remoteStore,\n    eventManager,\n    sharedClientState,\n    currentUser,\n    maxConcurrentLimboResolutions\n  );\n  if (isPrimary) {\n    syncEngine._isPrimaryClient = true;\n  }\n  return syncEngine;\n}\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nexport async function syncEngineListen(\n  syncEngine: SyncEngine,\n  query: Query\n): Promise<ViewSnapshot> {\n  const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n\n  let targetId;\n  let viewSnapshot;\n\n  const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n  if (queryView) {\n    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n    // already exists when EventManager calls us for the first time. This\n    // happens when the primary tab is already listening to this query on\n    // behalf of another tab and the user of the primary also starts listening\n    // to the query. EventManager will not have an assigned target ID in this\n    // case and calls `listen` to obtain this ID.\n    targetId = queryView.targetId;\n    syncEngineImpl.sharedClientState.addLocalQueryTarget(targetId);\n    viewSnapshot = queryView.view.computeInitialSnapshot();\n  } else {\n    const targetData = await localStoreAllocateTarget(\n      syncEngineImpl.localStore,\n      queryToTarget(query)\n    );\n\n    const status = syncEngineImpl.sharedClientState.addLocalQueryTarget(\n      targetData.targetId\n    );\n    targetId = targetData.targetId;\n    viewSnapshot = await initializeViewAndComputeSnapshot(\n      syncEngineImpl,\n      query,\n      targetId,\n      status === 'current',\n      targetData.resumeToken\n    );\n\n    if (syncEngineImpl.isPrimaryClient) {\n      remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n    }\n  }\n\n  return viewSnapshot;\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */\nasync function initializeViewAndComputeSnapshot(\n  syncEngineImpl: SyncEngineImpl,\n  query: Query,\n  targetId: TargetId,\n  current: boolean,\n  resumeToken: ByteString\n): Promise<ViewSnapshot> {\n  // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n  // targets based on view changes. This allows us to only depend on Limbo\n  // changes when user code includes queries.\n  syncEngineImpl.applyDocChanges = (queryView, changes, remoteEvent) =>\n    applyDocChanges(syncEngineImpl, queryView, changes, remoteEvent);\n\n  const queryResult = await localStoreExecuteQuery(\n    syncEngineImpl.localStore,\n    query,\n    /* usePreviousResults= */ true\n  );\n  const view = new View(query, queryResult.remoteKeys);\n  const viewDocChanges = view.computeDocChanges(queryResult.documents);\n  const synthesizedTargetChange =\n    TargetChange.createSynthesizedTargetChangeForCurrentChange(\n      targetId,\n      current && syncEngineImpl.onlineState !== OnlineState.Offline,\n      resumeToken\n    );\n  const viewChange = view.applyChanges(\n    viewDocChanges,\n    /* updateLimboDocuments= */ syncEngineImpl.isPrimaryClient,\n    synthesizedTargetChange\n  );\n  updateTrackedLimbos(syncEngineImpl, targetId, viewChange.limboChanges);\n\n  debugAssert(\n    !!viewChange.snapshot,\n    'applyChanges for new view should always return a snapshot'\n  );\n\n  const data = new QueryView(query, targetId, view);\n\n  syncEngineImpl.queryViewsByQuery.set(query, data);\n  if (syncEngineImpl.queriesByTarget.has(targetId)) {\n    syncEngineImpl.queriesByTarget.get(targetId)!.push(query);\n  } else {\n    syncEngineImpl.queriesByTarget.set(targetId, [query]);\n  }\n\n  return viewChange.snapshot;\n}\n\n/** Stops listening to the query. */\nexport async function syncEngineUnlisten(\n  syncEngine: SyncEngine,\n  query: Query\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const queryView = syncEngineImpl.queryViewsByQuery.get(query)!;\n  debugAssert(\n    !!queryView,\n    'Trying to unlisten on query not found:' + stringifyQuery(query)\n  );\n\n  // Only clean up the query view and target if this is the only query mapped\n  // to the target.\n  const queries = syncEngineImpl.queriesByTarget.get(queryView.targetId)!;\n  if (queries.length > 1) {\n    syncEngineImpl.queriesByTarget.set(\n      queryView.targetId,\n      queries.filter(q => !queryEquals(q, query))\n    );\n    syncEngineImpl.queryViewsByQuery.delete(query);\n    return;\n  }\n\n  // No other queries are mapped to the target, clean up the query and the target.\n  if (syncEngineImpl.isPrimaryClient) {\n    // We need to remove the local query target first to allow us to verify\n    // whether any other client is still interested in this target.\n    syncEngineImpl.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n    const targetRemainsActive =\n      syncEngineImpl.sharedClientState.isActiveQueryTarget(queryView.targetId);\n\n    if (!targetRemainsActive) {\n      await localStoreReleaseTarget(\n        syncEngineImpl.localStore,\n        queryView.targetId,\n        /*keepPersistedTargetData=*/ false\n      )\n        .then(() => {\n          syncEngineImpl.sharedClientState.clearQueryState(queryView.targetId);\n          remoteStoreUnlisten(syncEngineImpl.remoteStore, queryView.targetId);\n          removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n        })\n        .catch(ignoreIfPrimaryLeaseLoss);\n    }\n  } else {\n    removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      queryView.targetId,\n      /*keepPersistedTargetData=*/ true\n    );\n  }\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */\nexport async function syncEngineWrite(\n  syncEngine: SyncEngine,\n  batch: Mutation[],\n  userCallback: Deferred<void>\n): Promise<void> {\n  const syncEngineImpl = syncEngineEnsureWriteCallbacks(syncEngine);\n\n  try {\n    const result = await localStoreWriteLocally(\n      syncEngineImpl.localStore,\n      batch\n    );\n    syncEngineImpl.sharedClientState.addPendingMutation(result.batchId);\n    addMutationCallback(syncEngineImpl, result.batchId, userCallback);\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      result.changes\n    );\n    await fillWritePipeline(syncEngineImpl.remoteStore);\n  } catch (e) {\n    // If we can't persist the mutation, we reject the user callback and\n    // don't send the mutation. The user can then retry the write.\n    const error = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to persist write`\n    );\n    userCallback.reject(error);\n  }\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */\nexport async function syncEngineApplyRemoteEvent(\n  syncEngine: SyncEngine,\n  remoteEvent: RemoteEvent\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  try {\n    const changes = await localStoreApplyRemoteEventToLocalCache(\n      syncEngineImpl.localStore,\n      remoteEvent\n    );\n    // Update `receivedDocument` as appropriate for any limbo targets.\n    remoteEvent.targetChanges.forEach((targetChange, targetId) => {\n      const limboResolution =\n        syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n      if (limboResolution) {\n        // Since this is a limbo resolution lookup, it's for a single document\n        // and it could be added, modified, or removed, but not a combination.\n        hardAssert(\n          targetChange.addedDocuments.size +\n            targetChange.modifiedDocuments.size +\n            targetChange.removedDocuments.size <=\n            1,\n          'Limbo resolution for single document contains multiple changes.'\n        );\n        if (targetChange.addedDocuments.size > 0) {\n          limboResolution.receivedDocument = true;\n        } else if (targetChange.modifiedDocuments.size > 0) {\n          hardAssert(\n            limboResolution.receivedDocument,\n            'Received change for limbo target document without add.'\n          );\n        } else if (targetChange.removedDocuments.size > 0) {\n          hardAssert(\n            limboResolution.receivedDocument,\n            'Received remove for limbo target document without add.'\n          );\n          limboResolution.receivedDocument = false;\n        } else {\n          // This was probably just a CURRENT targetChange or similar.\n        }\n      }\n    });\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      changes,\n      remoteEvent\n    );\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */\nexport function syncEngineApplyOnlineStateChange(\n  syncEngine: SyncEngine,\n  onlineState: OnlineState,\n  source: OnlineStateSource\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  // If we are the secondary client, we explicitly ignore the remote store's\n  // online state (the local client may go offline, even though the primary\n  // tab remains online) and only apply the primary tab's online state from\n  // SharedClientState.\n  if (\n    (syncEngineImpl.isPrimaryClient &&\n      source === OnlineStateSource.RemoteStore) ||\n    (!syncEngineImpl.isPrimaryClient &&\n      source === OnlineStateSource.SharedClientState)\n  ) {\n    const newViewSnapshots = [] as ViewSnapshot[];\n    syncEngineImpl.queryViewsByQuery.forEach((query, queryView) => {\n      const viewChange = queryView.view.applyOnlineStateChange(onlineState);\n      debugAssert(\n        viewChange.limboChanges.length === 0,\n        'OnlineState should not affect limbo documents.'\n      );\n      if (viewChange.snapshot) {\n        newViewSnapshots.push(viewChange.snapshot);\n      }\n    });\n\n    eventManagerOnOnlineStateChange(syncEngineImpl.eventManager, onlineState);\n\n    if (newViewSnapshots.length) {\n      debugAssert(\n        !!syncEngineImpl.syncEngineListener.onWatchChange,\n        'Active views but EventManager callbacks are not assigned'\n      );\n      syncEngineImpl.syncEngineListener.onWatchChange(newViewSnapshots);\n    }\n\n    syncEngineImpl.onlineState = onlineState;\n    if (syncEngineImpl.isPrimaryClient) {\n      syncEngineImpl.sharedClientState.setOnlineState(onlineState);\n    }\n  }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */\nexport async function syncEngineRejectListen(\n  syncEngine: SyncEngine,\n  targetId: TargetId,\n  err: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  // PORTING NOTE: Multi-tab only.\n  syncEngineImpl.sharedClientState.updateQueryState(targetId, 'rejected', err);\n\n  const limboResolution =\n    syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n  const limboKey = limboResolution && limboResolution.key;\n  if (limboKey) {\n    // TODO(klimt): We really only should do the following on permission\n    // denied errors, but we don't have the cause code here.\n\n    // It's a limbo doc. Create a synthetic event saying it was deleted.\n    // This is kind of a hack. Ideally, we would have a method in the local\n    // store to purge a document. However, it would be tricky to keep all of\n    // the local store's invariants with another method.\n    let documentUpdates = new SortedMap<DocumentKey, MutableDocument>(\n      DocumentKey.comparator\n    );\n    // TODO(b/217189216): This limbo document should ideally have a read time,\n    // so that it is picked up by any read-time based scans. The backend,\n    // however, does not send a read time for target removals.\n    documentUpdates = documentUpdates.insert(\n      limboKey,\n      MutableDocument.newNoDocument(limboKey, SnapshotVersion.min())\n    );\n    const resolvedLimboDocuments = documentKeySet().add(limboKey);\n    const event = new RemoteEvent(\n      SnapshotVersion.min(),\n      /* targetChanges= */ new Map<TargetId, TargetChange>(),\n      /* targetMismatches= */ new SortedMap<TargetId, TargetPurpose>(\n        primitiveComparator\n      ),\n      documentUpdates,\n      resolvedLimboDocuments\n    );\n\n    await syncEngineApplyRemoteEvent(syncEngineImpl, event);\n\n    // Since this query failed, we won't want to manually unlisten to it.\n    // We only remove it from bookkeeping after we successfully applied the\n    // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n    // this query when the RemoteStore restarts the Watch stream, which should\n    // re-trigger the target failure.\n    syncEngineImpl.activeLimboTargetsByKey =\n      syncEngineImpl.activeLimboTargetsByKey.remove(limboKey);\n    syncEngineImpl.activeLimboResolutionsByTarget.delete(targetId);\n    pumpEnqueuedLimboResolutions(syncEngineImpl);\n  } else {\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      targetId,\n      /* keepPersistedTargetData */ false\n    )\n      .then(() => removeAndCleanupTarget(syncEngineImpl, targetId, err))\n      .catch(ignoreIfPrimaryLeaseLoss);\n  }\n}\n\nexport async function syncEngineApplySuccessfulWrite(\n  syncEngine: SyncEngine,\n  mutationBatchResult: MutationBatchResult\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const batchId = mutationBatchResult.batch.batchId;\n\n  try {\n    const changes = await localStoreAcknowledgeBatch(\n      syncEngineImpl.localStore,\n      mutationBatchResult\n    );\n\n    // The local store may or may not be able to apply the write result and\n    // raise events immediately (depending on whether the watcher is caught\n    // up), so we raise user callbacks first so that they consistently happen\n    // before listen events.\n    processUserCallback(syncEngineImpl, batchId, /*error=*/ null);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n\n    syncEngineImpl.sharedClientState.updateMutationState(\n      batchId,\n      'acknowledged'\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\nexport async function syncEngineRejectFailedWrite(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  error: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  try {\n    const changes = await localStoreRejectBatch(\n      syncEngineImpl.localStore,\n      batchId\n    );\n\n    // The local store may or may not be able to apply the write result and\n    // raise events immediately (depending on whether the watcher is caught up),\n    // so we raise user callbacks first so that they consistently happen before\n    // listen events.\n    processUserCallback(syncEngineImpl, batchId, error);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n\n    syncEngineImpl.sharedClientState.updateMutationState(\n      batchId,\n      'rejected',\n      error\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */\nexport async function syncEngineRegisterPendingWritesCallback(\n  syncEngine: SyncEngine,\n  callback: Deferred<void>\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  if (!canUseNetwork(syncEngineImpl.remoteStore)) {\n    logDebug(\n      LOG_TAG,\n      'The network is disabled. The task returned by ' +\n        \"'awaitPendingWrites()' will not complete until the network is enabled.\"\n    );\n  }\n\n  try {\n    const highestBatchId = await localStoreGetHighestUnacknowledgedBatchId(\n      syncEngineImpl.localStore\n    );\n    if (highestBatchId === BATCHID_UNKNOWN) {\n      // Trigger the callback right away if there is no pending writes at the moment.\n      callback.resolve();\n      return;\n    }\n\n    const callbacks =\n      syncEngineImpl.pendingWritesCallbacks.get(highestBatchId) || [];\n    callbacks.push(callback);\n    syncEngineImpl.pendingWritesCallbacks.set(highestBatchId, callbacks);\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      'Initialization of waitForPendingWrites() operation failed'\n    );\n    callback.reject(firestoreError);\n  }\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */\nfunction triggerPendingWritesCallbacks(\n  syncEngineImpl: SyncEngineImpl,\n  batchId: BatchId\n): void {\n  (syncEngineImpl.pendingWritesCallbacks.get(batchId) || []).forEach(\n    callback => {\n      callback.resolve();\n    }\n  );\n\n  syncEngineImpl.pendingWritesCallbacks.delete(batchId);\n}\n\n/** Reject all outstanding callbacks waiting for pending writes to complete. */\nfunction rejectOutstandingPendingWritesCallbacks(\n  syncEngineImpl: SyncEngineImpl,\n  errorMessage: string\n): void {\n  syncEngineImpl.pendingWritesCallbacks.forEach(callbacks => {\n    callbacks.forEach(callback => {\n      callback.reject(new FirestoreError(Code.CANCELLED, errorMessage));\n    });\n  });\n\n  syncEngineImpl.pendingWritesCallbacks.clear();\n}\n\nfunction addMutationCallback(\n  syncEngineImpl: SyncEngineImpl,\n  batchId: BatchId,\n  callback: Deferred<void>\n): void {\n  let newCallbacks =\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n  if (!newCallbacks) {\n    newCallbacks = new SortedMap<BatchId, Deferred<void>>(primitiveComparator);\n  }\n  newCallbacks = newCallbacks.insert(batchId, callback);\n  syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n    newCallbacks;\n}\n\n/**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */\nfunction processUserCallback(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  error: FirestoreError | null\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  let newCallbacks =\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n\n  // NOTE: Mutations restored from persistence won't have callbacks, so it's\n  // okay for there to be no callback for this ID.\n  if (newCallbacks) {\n    const callback = newCallbacks.get(batchId);\n    if (callback) {\n      debugAssert(\n        batchId === newCallbacks.minKey(),\n        'Mutation callbacks processed out-of-order?'\n      );\n      if (error) {\n        callback.reject(error);\n      } else {\n        callback.resolve();\n      }\n      newCallbacks = newCallbacks.remove(batchId);\n    }\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n      newCallbacks;\n  }\n}\n\nfunction removeAndCleanupTarget(\n  syncEngineImpl: SyncEngineImpl,\n  targetId: number,\n  error: FirestoreError | null = null\n): void {\n  syncEngineImpl.sharedClientState.removeLocalQueryTarget(targetId);\n\n  debugAssert(\n    syncEngineImpl.queriesByTarget.has(targetId) &&\n      syncEngineImpl.queriesByTarget.get(targetId)!.length !== 0,\n    `There are no queries mapped to target id ${targetId}`\n  );\n\n  for (const query of syncEngineImpl.queriesByTarget.get(targetId)!) {\n    syncEngineImpl.queryViewsByQuery.delete(query);\n    if (error) {\n      syncEngineImpl.syncEngineListener.onWatchError!(query, error);\n    }\n  }\n\n  syncEngineImpl.queriesByTarget.delete(targetId);\n\n  if (syncEngineImpl.isPrimaryClient) {\n    const limboKeys =\n      syncEngineImpl.limboDocumentRefs.removeReferencesForId(targetId);\n    limboKeys.forEach(limboKey => {\n      const isReferenced =\n        syncEngineImpl.limboDocumentRefs.containsKey(limboKey);\n      if (!isReferenced) {\n        // We removed the last reference for this key\n        removeLimboTarget(syncEngineImpl, limboKey);\n      }\n    });\n  }\n}\n\nfunction removeLimboTarget(\n  syncEngineImpl: SyncEngineImpl,\n  key: DocumentKey\n): void {\n  syncEngineImpl.enqueuedLimboResolutions.delete(key.path.canonicalString());\n\n  // It's possible that the target already got removed because the query failed. In that case,\n  // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n  const limboTargetId = syncEngineImpl.activeLimboTargetsByKey.get(key);\n  if (limboTargetId === null) {\n    // This target already got removed, because the query failed.\n    return;\n  }\n\n  remoteStoreUnlisten(syncEngineImpl.remoteStore, limboTargetId);\n  syncEngineImpl.activeLimboTargetsByKey =\n    syncEngineImpl.activeLimboTargetsByKey.remove(key);\n  syncEngineImpl.activeLimboResolutionsByTarget.delete(limboTargetId);\n  pumpEnqueuedLimboResolutions(syncEngineImpl);\n}\n\nfunction updateTrackedLimbos(\n  syncEngineImpl: SyncEngineImpl,\n  targetId: TargetId,\n  limboChanges: LimboDocumentChange[]\n): void {\n  for (const limboChange of limboChanges) {\n    if (limboChange instanceof AddedLimboDocument) {\n      syncEngineImpl.limboDocumentRefs.addReference(limboChange.key, targetId);\n      trackLimboChange(syncEngineImpl, limboChange);\n    } else if (limboChange instanceof RemovedLimboDocument) {\n      logDebug(LOG_TAG, 'Document no longer in limbo: ' + limboChange.key);\n      syncEngineImpl.limboDocumentRefs.removeReference(\n        limboChange.key,\n        targetId\n      );\n      const isReferenced = syncEngineImpl.limboDocumentRefs.containsKey(\n        limboChange.key\n      );\n      if (!isReferenced) {\n        // We removed the last reference for this key\n        removeLimboTarget(syncEngineImpl, limboChange.key);\n      }\n    } else {\n      fail('Unknown limbo change: ' + JSON.stringify(limboChange));\n    }\n  }\n}\n\nfunction trackLimboChange(\n  syncEngineImpl: SyncEngineImpl,\n  limboChange: AddedLimboDocument\n): void {\n  const key = limboChange.key;\n  const keyString = key.path.canonicalString();\n  if (\n    !syncEngineImpl.activeLimboTargetsByKey.get(key) &&\n    !syncEngineImpl.enqueuedLimboResolutions.has(keyString)\n  ) {\n    logDebug(LOG_TAG, 'New document in limbo: ' + key);\n    syncEngineImpl.enqueuedLimboResolutions.add(keyString);\n    pumpEnqueuedLimboResolutions(syncEngineImpl);\n  }\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */\nfunction pumpEnqueuedLimboResolutions(syncEngineImpl: SyncEngineImpl): void {\n  while (\n    syncEngineImpl.enqueuedLimboResolutions.size > 0 &&\n    syncEngineImpl.activeLimboTargetsByKey.size <\n      syncEngineImpl.maxConcurrentLimboResolutions\n  ) {\n    const keyString = syncEngineImpl.enqueuedLimboResolutions\n      .values()\n      .next().value;\n    syncEngineImpl.enqueuedLimboResolutions.delete(keyString);\n    const key = new DocumentKey(ResourcePath.fromString(keyString));\n    const limboTargetId = syncEngineImpl.limboTargetIdGenerator.next();\n    syncEngineImpl.activeLimboResolutionsByTarget.set(\n      limboTargetId,\n      new LimboResolution(key)\n    );\n    syncEngineImpl.activeLimboTargetsByKey =\n      syncEngineImpl.activeLimboTargetsByKey.insert(key, limboTargetId);\n    remoteStoreListen(\n      syncEngineImpl.remoteStore,\n      new TargetData(\n        queryToTarget(newQueryForPath(key.path)),\n        limboTargetId,\n        TargetPurpose.LimboResolution,\n        ListenSequence.INVALID\n      )\n    );\n  }\n}\n\n// Visible for testing\nexport function syncEngineGetActiveLimboDocumentResolutions(\n  syncEngine: SyncEngine\n): SortedMap<DocumentKey, TargetId> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return syncEngineImpl.activeLimboTargetsByKey;\n}\n\n// Visible for testing\nexport function syncEngineGetEnqueuedLimboDocumentResolutions(\n  syncEngine: SyncEngine\n): Set<string> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return syncEngineImpl.enqueuedLimboResolutions;\n}\n\nexport async function syncEngineEmitNewSnapsAndNotifyLocalStore(\n  syncEngine: SyncEngine,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const newSnaps: ViewSnapshot[] = [];\n  const docChangesInAllViews: LocalViewChanges[] = [];\n  const queriesProcessed: Array<Promise<void>> = [];\n\n  if (syncEngineImpl.queryViewsByQuery.isEmpty()) {\n    // Return early since `onWatchChange()` might not have been assigned yet.\n    return;\n  }\n\n  syncEngineImpl.queryViewsByQuery.forEach((_, queryView) => {\n    debugAssert(\n      !!syncEngineImpl.applyDocChanges,\n      'ApplyDocChangesHandler not set'\n    );\n    queriesProcessed.push(\n      syncEngineImpl\n        .applyDocChanges(queryView, changes, remoteEvent)\n        .then(viewSnapshot => {\n          // If there are changes, or we are handling a global snapshot, notify\n          // secondary clients to update query state.\n          if (viewSnapshot || remoteEvent) {\n            if (syncEngineImpl.isPrimaryClient) {\n              syncEngineImpl.sharedClientState.updateQueryState(\n                queryView.targetId,\n                viewSnapshot?.fromCache ? 'not-current' : 'current'\n              );\n            }\n          }\n\n          // Update views if there are actual changes.\n          if (!!viewSnapshot) {\n            newSnaps.push(viewSnapshot);\n            const docChanges = LocalViewChanges.fromSnapshot(\n              queryView.targetId,\n              viewSnapshot\n            );\n            docChangesInAllViews.push(docChanges);\n          }\n        })\n    );\n  });\n\n  await Promise.all(queriesProcessed);\n  syncEngineImpl.syncEngineListener.onWatchChange!(newSnaps);\n  await localStoreNotifyLocalViewChanges(\n    syncEngineImpl.localStore,\n    docChangesInAllViews\n  );\n}\n\nasync function applyDocChanges(\n  syncEngineImpl: SyncEngineImpl,\n  queryView: QueryView,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n): Promise<ViewSnapshot | undefined> {\n  let viewDocChanges = queryView.view.computeDocChanges(changes);\n  if (viewDocChanges.needsRefill) {\n    // The query has a limit and some docs were removed, so we need\n    // to re-run the query against the local store to make sure we\n    // didn't lose any good docs that had been past the limit.\n    viewDocChanges = await localStoreExecuteQuery(\n      syncEngineImpl.localStore,\n      queryView.query,\n      /* usePreviousResults= */ false\n    ).then(({ documents }) => {\n      return queryView.view.computeDocChanges(documents, viewDocChanges);\n    });\n  }\n\n  const targetChange =\n    remoteEvent && remoteEvent.targetChanges.get(queryView.targetId);\n  const viewChange = queryView.view.applyChanges(\n    viewDocChanges,\n    /* updateLimboDocuments= */ syncEngineImpl.isPrimaryClient,\n    targetChange\n  );\n  updateTrackedLimbos(\n    syncEngineImpl,\n    queryView.targetId,\n    viewChange.limboChanges\n  );\n  return viewChange.snapshot;\n}\n\nexport async function syncEngineHandleCredentialChange(\n  syncEngine: SyncEngine,\n  user: User\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const userChanged = !syncEngineImpl.currentUser.isEqual(user);\n\n  if (userChanged) {\n    logDebug(LOG_TAG, 'User change. New user:', user.toKey());\n\n    const result = await localStoreHandleUserChange(\n      syncEngineImpl.localStore,\n      user\n    );\n    syncEngineImpl.currentUser = user;\n\n    // Fails tasks waiting for pending writes requested by previous user.\n    rejectOutstandingPendingWritesCallbacks(\n      syncEngineImpl,\n      \"'waitForPendingWrites' promise is rejected due to a user change.\"\n    );\n    // TODO(b/114226417): Consider calling this only in the primary tab.\n    syncEngineImpl.sharedClientState.handleUserChange(\n      user,\n      result.removedBatchIds,\n      result.addedBatchIds\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      result.affectedDocuments\n    );\n  }\n}\n\nexport function syncEngineGetRemoteKeysForTarget(\n  syncEngine: SyncEngine,\n  targetId: TargetId\n): DocumentKeySet {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const limboResolution =\n    syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n  if (limboResolution && limboResolution.receivedDocument) {\n    return documentKeySet().add(limboResolution.key);\n  } else {\n    let keySet = documentKeySet();\n    const queries = syncEngineImpl.queriesByTarget.get(targetId);\n    if (!queries) {\n      return keySet;\n    }\n    for (const query of queries) {\n      const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n      debugAssert(\n        !!queryView,\n        `No query view found for ${stringifyQuery(query)}`\n      );\n      keySet = keySet.unionWith(queryView.view.syncedDocuments);\n    }\n    return keySet;\n  }\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */\nasync function synchronizeViewAndComputeSnapshot(\n  syncEngine: SyncEngine,\n  queryView: QueryView\n): Promise<ViewChange> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const queryResult = await localStoreExecuteQuery(\n    syncEngineImpl.localStore,\n    queryView.query,\n    /* usePreviousResults= */ true\n  );\n  const viewSnapshot =\n    queryView.view.synchronizeWithPersistedState(queryResult);\n  if (syncEngineImpl.isPrimaryClient) {\n    updateTrackedLimbos(\n      syncEngineImpl,\n      queryView.targetId,\n      viewSnapshot.limboChanges\n    );\n  }\n  return viewSnapshot;\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineSynchronizeWithChangedDocuments(\n  syncEngine: SyncEngine,\n  collectionGroup: string\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  return localStoreGetNewDocumentChanges(\n    syncEngineImpl.localStore,\n    collectionGroup\n  ).then(changes =>\n    syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes)\n  );\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyBatchState(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  batchState: MutationBatchState,\n  error?: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const documents = await localStoreLookupMutationDocuments(\n    syncEngineImpl.localStore,\n    batchId\n  );\n\n  if (documents === null) {\n    // A throttled tab may not have seen the mutation before it was completed\n    // and removed from the mutation queue, in which case we won't have cached\n    // the affected documents. In this case we can safely ignore the update\n    // since that means we didn't apply the mutation locally at all (if we\n    // had, we would have cached the affected documents), and so we will just\n    // see any resulting document changes via normal remote document updates\n    // as applicable.\n    logDebug(LOG_TAG, 'Cannot apply mutation batch with id: ' + batchId);\n    return;\n  }\n\n  if (batchState === 'pending') {\n    // If we are the primary client, we need to send this write to the\n    // backend. Secondary clients will ignore these writes since their remote\n    // connection is disabled.\n    await fillWritePipeline(syncEngineImpl.remoteStore);\n  } else if (batchState === 'acknowledged' || batchState === 'rejected') {\n    // NOTE: Both these methods are no-ops for batches that originated from\n    // other clients.\n    processUserCallback(syncEngineImpl, batchId, error ? error : null);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n    localStoreRemoveCachedMutationBatchMetadata(\n      syncEngineImpl.localStore,\n      batchId\n    );\n  } else {\n    fail(`Unknown batchState: ${batchState}`);\n  }\n\n  await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, documents);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyPrimaryState(\n  syncEngine: SyncEngine,\n  isPrimary: boolean\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  ensureWatchCallbacks(syncEngineImpl);\n  syncEngineEnsureWriteCallbacks(syncEngineImpl);\n  if (isPrimary === true && syncEngineImpl._isPrimaryClient !== true) {\n    // Secondary tabs only maintain Views for their local listeners and the\n    // Views internal state may not be 100% populated (in particular\n    // secondary tabs don't track syncedDocuments, the set of documents the\n    // server considers to be in the target). So when a secondary becomes\n    // primary, we need to need to make sure that all views for all targets\n    // match the state on disk.\n    const activeTargets =\n      syncEngineImpl.sharedClientState.getAllActiveQueryTargets();\n    const activeQueries = await synchronizeQueryViewsAndRaiseSnapshots(\n      syncEngineImpl,\n      activeTargets.toArray(),\n      /*transitionToPrimary=*/ true\n    );\n    syncEngineImpl._isPrimaryClient = true;\n    await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, true);\n    for (const targetData of activeQueries) {\n      remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n    }\n  } else if (isPrimary === false && syncEngineImpl._isPrimaryClient !== false) {\n    const activeTargets: TargetId[] = [];\n\n    let p = Promise.resolve();\n    syncEngineImpl.queriesByTarget.forEach((_, targetId) => {\n      if (syncEngineImpl.sharedClientState.isLocalQueryTarget(targetId)) {\n        activeTargets.push(targetId);\n      } else {\n        p = p.then(() => {\n          removeAndCleanupTarget(syncEngineImpl, targetId);\n          return localStoreReleaseTarget(\n            syncEngineImpl.localStore,\n            targetId,\n            /*keepPersistedTargetData=*/ true\n          );\n        });\n      }\n      remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n    });\n    await p;\n\n    await synchronizeQueryViewsAndRaiseSnapshots(\n      syncEngineImpl,\n      activeTargets,\n      /*transitionToPrimary=*/ false\n    );\n    resetLimboDocuments(syncEngineImpl);\n    syncEngineImpl._isPrimaryClient = false;\n    await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, false);\n  }\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction resetLimboDocuments(syncEngine: SyncEngine): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.activeLimboResolutionsByTarget.forEach((_, targetId) => {\n    remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n  });\n  syncEngineImpl.limboDocumentRefs.removeAllReferences();\n  syncEngineImpl.activeLimboResolutionsByTarget = new Map<\n    TargetId,\n    LimboResolution\n  >();\n  syncEngineImpl.activeLimboTargetsByKey = new SortedMap<DocumentKey, TargetId>(\n    DocumentKey.comparator\n  );\n}\n\n/**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n// PORTING NOTE: Multi-Tab only.\nasync function synchronizeQueryViewsAndRaiseSnapshots(\n  syncEngine: SyncEngine,\n  targets: TargetId[],\n  transitionToPrimary: boolean\n): Promise<TargetData[]> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const activeQueries: TargetData[] = [];\n  const newViewSnapshots: ViewSnapshot[] = [];\n  for (const targetId of targets) {\n    let targetData: TargetData;\n    const queries = syncEngineImpl.queriesByTarget.get(targetId);\n\n    if (queries && queries.length !== 0) {\n      // For queries that have a local View, we fetch their current state\n      // from LocalStore (as the resume token and the snapshot version\n      // might have changed) and reconcile their views with the persisted\n      // state (the list of syncedDocuments may have gotten out of sync).\n      targetData = await localStoreAllocateTarget(\n        syncEngineImpl.localStore,\n        queryToTarget(queries[0])\n      );\n\n      for (const query of queries) {\n        const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n        debugAssert(\n          !!queryView,\n          `No query view found for ${stringifyQuery(query)}`\n        );\n\n        const viewChange = await synchronizeViewAndComputeSnapshot(\n          syncEngineImpl,\n          queryView\n        );\n        if (viewChange.snapshot) {\n          newViewSnapshots.push(viewChange.snapshot);\n        }\n      }\n    } else {\n      debugAssert(\n        transitionToPrimary,\n        'A secondary tab should never have an active view without an active target.'\n      );\n      // For queries that never executed on this client, we need to\n      // allocate the target in LocalStore and initialize a new View.\n      const target = await localStoreGetCachedTarget(\n        syncEngineImpl.localStore,\n        targetId\n      );\n      debugAssert(!!target, `Target for id ${targetId} not found`);\n      targetData = await localStoreAllocateTarget(\n        syncEngineImpl.localStore,\n        target\n      );\n      await initializeViewAndComputeSnapshot(\n        syncEngineImpl,\n        synthesizeTargetToQuery(target!),\n        targetId,\n        /*current=*/ false,\n        targetData.resumeToken\n      );\n    }\n\n    activeQueries.push(targetData!);\n  }\n\n  syncEngineImpl.syncEngineListener.onWatchChange!(newViewSnapshots);\n  return activeQueries;\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction synthesizeTargetToQuery(target: Target): Query {\n  return newQuery(\n    target.path,\n    target.collectionGroup,\n    target.orderBy,\n    target.filters,\n    target.limit,\n    LimitType.First,\n    target.startAt,\n    target.endAt\n  );\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nexport function syncEngineGetActiveClients(\n  syncEngine: SyncEngine\n): Promise<ClientId[]> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return localStoreGetActiveClients(syncEngineImpl.localStore);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyTargetState(\n  syncEngine: SyncEngine,\n  targetId: TargetId,\n  state: QueryTargetState,\n  error?: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  if (syncEngineImpl._isPrimaryClient) {\n    // If we receive a target state notification via WebStorage, we are\n    // either already secondary or another tab has taken the primary lease.\n    logDebug(LOG_TAG, 'Ignoring unexpected query state notification.');\n    return;\n  }\n\n  const query = syncEngineImpl.queriesByTarget.get(targetId);\n  if (query && query.length > 0) {\n    switch (state) {\n      case 'current':\n      case 'not-current': {\n        const changes = await localStoreGetNewDocumentChanges(\n          syncEngineImpl.localStore,\n          queryCollectionGroup(query[0])\n        );\n        const synthesizedRemoteEvent =\n          RemoteEvent.createSynthesizedRemoteEventForCurrentChange(\n            targetId,\n            state === 'current',\n            ByteString.EMPTY_BYTE_STRING\n          );\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(\n          syncEngineImpl,\n          changes,\n          synthesizedRemoteEvent\n        );\n        break;\n      }\n      case 'rejected': {\n        await localStoreReleaseTarget(\n          syncEngineImpl.localStore,\n          targetId,\n          /* keepPersistedTargetData */ true\n        );\n        removeAndCleanupTarget(syncEngineImpl, targetId, error);\n        break;\n      }\n      default:\n        fail('Unexpected target state: ' + state);\n    }\n  }\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */\nexport async function syncEngineApplyActiveTargetsChange(\n  syncEngine: SyncEngine,\n  added: TargetId[],\n  removed: TargetId[]\n): Promise<void> {\n  const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n  if (!syncEngineImpl._isPrimaryClient) {\n    return;\n  }\n\n  for (const targetId of added) {\n    if (syncEngineImpl.queriesByTarget.has(targetId)) {\n      // A target might have been added in a previous attempt\n      logDebug(LOG_TAG, 'Adding an already active target ' + targetId);\n      continue;\n    }\n\n    const target = await localStoreGetCachedTarget(\n      syncEngineImpl.localStore,\n      targetId\n    );\n    debugAssert(!!target, `Query data for active target ${targetId} not found`);\n    const targetData = await localStoreAllocateTarget(\n      syncEngineImpl.localStore,\n      target\n    );\n    await initializeViewAndComputeSnapshot(\n      syncEngineImpl,\n      synthesizeTargetToQuery(target),\n      targetData.targetId,\n      /*current=*/ false,\n      targetData.resumeToken\n    );\n    remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n  }\n\n  for (const targetId of removed) {\n    // Check that the target is still active since the target might have been\n    // removed if it has been rejected by the backend.\n    if (!syncEngineImpl.queriesByTarget.has(targetId)) {\n      continue;\n    }\n\n    // Release queries that are still active.\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      targetId,\n      /* keepPersistedTargetData */ false\n    )\n      .then(() => {\n        remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n        removeAndCleanupTarget(syncEngineImpl, targetId);\n      })\n      .catch(ignoreIfPrimaryLeaseLoss);\n  }\n}\n\nfunction ensureWatchCallbacks(syncEngine: SyncEngine): SyncEngineImpl {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.applyRemoteEvent =\n    syncEngineApplyRemoteEvent.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.getRemoteKeysForTarget =\n    syncEngineGetRemoteKeysForTarget.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.rejectListen =\n    syncEngineRejectListen.bind(null, syncEngineImpl);\n  syncEngineImpl.syncEngineListener.onWatchChange =\n    eventManagerOnWatchChange.bind(null, syncEngineImpl.eventManager);\n  syncEngineImpl.syncEngineListener.onWatchError =\n    eventManagerOnWatchError.bind(null, syncEngineImpl.eventManager);\n  return syncEngineImpl;\n}\n\nexport function syncEngineEnsureWriteCallbacks(\n  syncEngine: SyncEngine\n): SyncEngineImpl {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.applySuccessfulWrite =\n    syncEngineApplySuccessfulWrite.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.rejectFailedWrite =\n    syncEngineRejectFailedWrite.bind(null, syncEngineImpl);\n  return syncEngineImpl;\n}\n\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */\nexport function syncEngineLoadBundle(\n  syncEngine: SyncEngine,\n  bundleReader: BundleReader,\n  task: LoadBundleTask\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  loadBundleImpl(syncEngineImpl, bundleReader, task).then(collectionGroups => {\n    syncEngineImpl.sharedClientState.notifyBundleLoaded(collectionGroups);\n  });\n}\n\n/** Loads a bundle and returns the list of affected collection groups. */\nasync function loadBundleImpl(\n  syncEngine: SyncEngineImpl,\n  reader: BundleReader,\n  task: LoadBundleTask\n): Promise<Set<string>> {\n  try {\n    const metadata = await reader.getMetadata();\n    const skip = await localStoreHasNewerBundle(\n      syncEngine.localStore,\n      metadata\n    );\n    if (skip) {\n      await reader.close();\n      task._completeWith(bundleSuccessProgress(metadata));\n      return Promise.resolve(new Set<string>());\n    }\n\n    task._updateProgress(bundleInitialProgress(metadata));\n\n    const loader = new BundleLoader(\n      metadata,\n      syncEngine.localStore,\n      reader.serializer\n    );\n    let element = await reader.nextElement();\n    while (element) {\n      debugAssert(\n        !element.payload.metadata,\n        'Unexpected BundleMetadata element.'\n      );\n      const progress = await loader.addSizedElement(element);\n      if (progress) {\n        task._updateProgress(progress);\n      }\n\n      element = await reader.nextElement();\n    }\n\n    const result = await loader.complete();\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngine,\n      result.changedDocs,\n      /* remoteEvent */ undefined\n    );\n\n    // Save metadata, so loading the same bundle will skip.\n    await localStoreSaveBundle(syncEngine.localStore, metadata);\n    task._completeWith(result.progress);\n    return Promise.resolve(result.changedCollectionGroups);\n  } catch (e) {\n    logWarn(LOG_TAG, `Loading bundle failed with ${e}`);\n    task._failWith(e as FirestoreError);\n    return Promise.resolve(new Set<string>());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { User } from '../auth/user';\nimport {\n  IndexBackfiller,\n  IndexBackfillerScheduler\n} from '../local/index_backfiller';\nimport {\n  indexedDbStoragePrefix,\n  IndexedDbPersistence\n} from '../local/indexeddb_persistence';\nimport { LocalStore } from '../local/local_store';\nimport { newLocalStore } from '../local/local_store_impl';\nimport { LruParams } from '../local/lru_garbage_collector';\nimport { LruScheduler } from '../local/lru_garbage_collector_impl';\nimport {\n  MemoryEagerDelegate,\n  MemoryLruDelegate,\n  MemoryPersistence\n} from '../local/memory_persistence';\nimport { Scheduler, Persistence } from '../local/persistence';\nimport { QueryEngine } from '../local/query_engine';\nimport {\n  ClientId,\n  MemorySharedClientState,\n  SharedClientState,\n  WebStorageSharedClientState\n} from '../local/shared_client_state';\nimport { newConnection, newConnectivityMonitor } from '../platform/connection';\nimport { getDocument, getWindow } from '../platform/dom';\nimport { newSerializer } from '../platform/serializer';\nimport { Datastore, newDatastore } from '../remote/datastore';\nimport {\n  fillWritePipeline,\n  newRemoteStore,\n  RemoteStore,\n  remoteStoreApplyPrimaryState,\n  remoteStoreShutdown\n} from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\n\nimport { DatabaseInfo } from './database_info';\nimport { EventManager, newEventManager } from './event_manager';\nimport { SyncEngine } from './sync_engine';\nimport {\n  newSyncEngine,\n  syncEngineApplyActiveTargetsChange,\n  syncEngineApplyBatchState,\n  syncEngineApplyOnlineStateChange,\n  syncEngineApplyPrimaryState,\n  syncEngineApplyTargetState,\n  syncEngineEnsureWriteCallbacks,\n  syncEngineGetActiveClients,\n  syncEngineHandleCredentialChange,\n  syncEngineSynchronizeWithChangedDocuments\n} from './sync_engine_impl';\nimport { OnlineStateSource } from './types';\n\nexport interface ComponentConfiguration {\n  asyncQueue: AsyncQueue;\n  databaseInfo: DatabaseInfo;\n  authCredentials: CredentialsProvider<User>;\n  appCheckCredentials: CredentialsProvider<string>;\n  clientId: ClientId;\n  initialUser: User;\n  maxConcurrentLimboResolutions: number;\n}\n\n/**\n * Initializes and wires components that are needed to interface with the local\n * cache. Implementations override `initialize()` to provide all components.\n */\nexport interface OfflineComponentProvider {\n  persistence: Persistence;\n  sharedClientState: SharedClientState;\n  localStore: LocalStore;\n  gcScheduler: Scheduler | null;\n  indexBackfillerScheduler: Scheduler | null;\n  synchronizeTabs: boolean;\n\n  initialize(cfg: ComponentConfiguration): Promise<void>;\n\n  terminate(): Promise<void>;\n}\n\n/**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */\nexport class MemoryOfflineComponentProvider\n  implements OfflineComponentProvider\n{\n  persistence!: Persistence;\n  sharedClientState!: SharedClientState;\n  localStore!: LocalStore;\n  gcScheduler!: Scheduler | null;\n  indexBackfillerScheduler!: Scheduler | null;\n  synchronizeTabs = false;\n\n  serializer!: JsonProtoSerializer;\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    this.serializer = newSerializer(cfg.databaseInfo.databaseId);\n    this.sharedClientState = this.createSharedClientState(cfg);\n    this.persistence = this.createPersistence(cfg);\n    await this.persistence.start();\n    this.localStore = this.createLocalStore(cfg);\n    this.gcScheduler = this.createGarbageCollectionScheduler(\n      cfg,\n      this.localStore\n    );\n    this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(\n      cfg,\n      this.localStore\n    );\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    return null;\n  }\n\n  createIndexBackfillerScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    return null;\n  }\n\n  createLocalStore(cfg: ComponentConfiguration): LocalStore {\n    return newLocalStore(\n      this.persistence,\n      new QueryEngine(),\n      cfg.initialUser,\n      this.serializer\n    );\n  }\n\n  createPersistence(cfg: ComponentConfiguration): Persistence {\n    return new MemoryPersistence(MemoryEagerDelegate.factory, this.serializer);\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    return new MemorySharedClientState();\n  }\n\n  async terminate(): Promise<void> {\n    if (this.gcScheduler) {\n      this.gcScheduler.stop();\n    }\n    await this.sharedClientState.shutdown();\n    await this.persistence.shutdown();\n  }\n}\n\nexport class LruGcMemoryOfflineComponentProvider extends MemoryOfflineComponentProvider {\n  constructor(protected readonly cacheSizeBytes: number | undefined) {\n    super();\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    hardAssert(\n      this.persistence.referenceDelegate instanceof MemoryLruDelegate,\n      'referenceDelegate is expected to be an instance of MemoryLruDelegate.'\n    );\n\n    const garbageCollector =\n      this.persistence.referenceDelegate.garbageCollector;\n    return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n  }\n\n  createPersistence(cfg: ComponentConfiguration): Persistence {\n    const lruParams =\n      this.cacheSizeBytes !== undefined\n        ? LruParams.withCacheSize(this.cacheSizeBytes)\n        : LruParams.DEFAULT;\n    return new MemoryPersistence(\n      p => MemoryLruDelegate.factory(p, lruParams),\n      this.serializer\n    );\n  }\n}\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */\nexport class IndexedDbOfflineComponentProvider extends MemoryOfflineComponentProvider {\n  persistence!: IndexedDbPersistence;\n  sharedClientState!: SharedClientState;\n  localStore!: LocalStore;\n  gcScheduler!: Scheduler | null;\n  indexBackfillerScheduler!: Scheduler | null;\n  synchronizeTabs = false;\n\n  constructor(\n    protected readonly onlineComponentProvider: OnlineComponentProvider,\n    protected readonly cacheSizeBytes: number | undefined,\n    protected readonly forceOwnership: boolean | undefined\n  ) {\n    super();\n  }\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    await super.initialize(cfg);\n\n    await this.onlineComponentProvider.initialize(this, cfg);\n\n    // Enqueue writes from a previous session\n    await syncEngineEnsureWriteCallbacks(\n      this.onlineComponentProvider.syncEngine\n    );\n    await fillWritePipeline(this.onlineComponentProvider.remoteStore);\n\n    // NOTE: This will immediately call the listener, so we make sure to\n    // set it after localStore / remoteStore are started.\n    await this.persistence.setPrimaryStateListener(() => {\n      if (this.gcScheduler && !this.gcScheduler.started) {\n        this.gcScheduler.start();\n      }\n      if (\n        this.indexBackfillerScheduler &&\n        !this.indexBackfillerScheduler.started\n      ) {\n        this.indexBackfillerScheduler.start();\n      }\n      return Promise.resolve();\n    });\n  }\n\n  createLocalStore(cfg: ComponentConfiguration): LocalStore {\n    return newLocalStore(\n      this.persistence,\n      new QueryEngine(),\n      cfg.initialUser,\n      this.serializer\n    );\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    const garbageCollector =\n      this.persistence.referenceDelegate.garbageCollector;\n    return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n  }\n\n  createIndexBackfillerScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    const indexBackfiller = new IndexBackfiller(localStore, this.persistence);\n    return new IndexBackfillerScheduler(cfg.asyncQueue, indexBackfiller);\n  }\n\n  createPersistence(cfg: ComponentConfiguration): IndexedDbPersistence {\n    const persistenceKey = indexedDbStoragePrefix(\n      cfg.databaseInfo.databaseId,\n      cfg.databaseInfo.persistenceKey\n    );\n    const lruParams =\n      this.cacheSizeBytes !== undefined\n        ? LruParams.withCacheSize(this.cacheSizeBytes)\n        : LruParams.DEFAULT;\n\n    return new IndexedDbPersistence(\n      this.synchronizeTabs,\n      persistenceKey,\n      cfg.clientId,\n      lruParams,\n      cfg.asyncQueue,\n      getWindow(),\n      getDocument(),\n      this.serializer,\n      this.sharedClientState,\n      !!this.forceOwnership\n    );\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    return new MemorySharedClientState();\n  }\n}\n\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */\nexport class MultiTabOfflineComponentProvider extends IndexedDbOfflineComponentProvider {\n  synchronizeTabs = true;\n\n  constructor(\n    protected readonly onlineComponentProvider: OnlineComponentProvider,\n    protected readonly cacheSizeBytes: number | undefined\n  ) {\n    super(onlineComponentProvider, cacheSizeBytes, /* forceOwnership= */ false);\n  }\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    await super.initialize(cfg);\n\n    const syncEngine = this.onlineComponentProvider.syncEngine;\n\n    if (this.sharedClientState instanceof WebStorageSharedClientState) {\n      this.sharedClientState.syncEngine = {\n        applyBatchState: syncEngineApplyBatchState.bind(null, syncEngine),\n        applyTargetState: syncEngineApplyTargetState.bind(null, syncEngine),\n        applyActiveTargetsChange: syncEngineApplyActiveTargetsChange.bind(\n          null,\n          syncEngine\n        ),\n        getActiveClients: syncEngineGetActiveClients.bind(null, syncEngine),\n        synchronizeWithChangedDocuments:\n          syncEngineSynchronizeWithChangedDocuments.bind(null, syncEngine)\n      };\n      await this.sharedClientState.start();\n    }\n\n    // NOTE: This will immediately call the listener, so we make sure to\n    // set it after localStore / remoteStore are started.\n    await this.persistence.setPrimaryStateListener(async isPrimary => {\n      await syncEngineApplyPrimaryState(\n        this.onlineComponentProvider.syncEngine,\n        isPrimary\n      );\n      if (this.gcScheduler) {\n        if (isPrimary && !this.gcScheduler.started) {\n          this.gcScheduler.start();\n        } else if (!isPrimary) {\n          this.gcScheduler.stop();\n        }\n      }\n      if (this.indexBackfillerScheduler) {\n        if (isPrimary && !this.indexBackfillerScheduler.started) {\n          this.indexBackfillerScheduler.start();\n        } else if (!isPrimary) {\n          this.indexBackfillerScheduler.stop();\n        }\n      }\n    });\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    const window = getWindow();\n    if (!WebStorageSharedClientState.isAvailable(window)) {\n      throw new FirestoreError(\n        Code.UNIMPLEMENTED,\n        'IndexedDB persistence is only available on platforms that support LocalStorage.'\n      );\n    }\n    const persistenceKey = indexedDbStoragePrefix(\n      cfg.databaseInfo.databaseId,\n      cfg.databaseInfo.persistenceKey\n    );\n    return new WebStorageSharedClientState(\n      window,\n      cfg.asyncQueue,\n      persistenceKey,\n      cfg.clientId,\n      cfg.initialUser\n    );\n  }\n}\n\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */\nexport class OnlineComponentProvider {\n  protected localStore!: LocalStore;\n  protected sharedClientState!: SharedClientState;\n  datastore!: Datastore;\n  eventManager!: EventManager;\n  remoteStore!: RemoteStore;\n  syncEngine!: SyncEngine;\n\n  async initialize(\n    offlineComponentProvider: OfflineComponentProvider,\n    cfg: ComponentConfiguration\n  ): Promise<void> {\n    if (this.localStore) {\n      // OnlineComponentProvider may get initialized multiple times if\n      // multi-tab persistence is used.\n      return;\n    }\n\n    this.localStore = offlineComponentProvider.localStore;\n    this.sharedClientState = offlineComponentProvider.sharedClientState;\n    this.datastore = this.createDatastore(cfg);\n    this.remoteStore = this.createRemoteStore(cfg);\n    this.eventManager = this.createEventManager(cfg);\n    this.syncEngine = this.createSyncEngine(\n      cfg,\n      /* startAsPrimary=*/ !offlineComponentProvider.synchronizeTabs\n    );\n\n    this.sharedClientState.onlineStateHandler = onlineState =>\n      syncEngineApplyOnlineStateChange(\n        this.syncEngine,\n        onlineState,\n        OnlineStateSource.SharedClientState\n      );\n\n    this.remoteStore.remoteSyncer.handleCredentialChange =\n      syncEngineHandleCredentialChange.bind(null, this.syncEngine);\n\n    await remoteStoreApplyPrimaryState(\n      this.remoteStore,\n      this.syncEngine.isPrimaryClient\n    );\n  }\n\n  createEventManager(cfg: ComponentConfiguration): EventManager {\n    return newEventManager();\n  }\n\n  createDatastore(cfg: ComponentConfiguration): Datastore {\n    const serializer = newSerializer(cfg.databaseInfo.databaseId);\n    const connection = newConnection(cfg.databaseInfo);\n    return newDatastore(\n      cfg.authCredentials,\n      cfg.appCheckCredentials,\n      connection,\n      serializer\n    );\n  }\n\n  createRemoteStore(cfg: ComponentConfiguration): RemoteStore {\n    return newRemoteStore(\n      this.localStore,\n      this.datastore,\n      cfg.asyncQueue,\n      onlineState =>\n        syncEngineApplyOnlineStateChange(\n          this.syncEngine,\n          onlineState,\n          OnlineStateSource.RemoteStore\n        ),\n      newConnectivityMonitor()\n    );\n  }\n\n  createSyncEngine(\n    cfg: ComponentConfiguration,\n    startAsPrimary: boolean\n  ): SyncEngine {\n    return newSyncEngine(\n      this.localStore,\n      this.remoteStore,\n      this.eventManager,\n      this.sharedClientState,\n      cfg.initialUser,\n      cfg.maxConcurrentLimboResolutions,\n      startAsPrimary\n    );\n  }\n\n  terminate(): Promise<void> {\n    return remoteStoreShutdown(this.remoteStore);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInfo } from '../../core/database_info';\nimport { Connection } from '../../remote/connection';\nimport { ConnectivityMonitor } from '../../remote/connectivity_monitor';\nimport { NoopConnectivityMonitor } from '../../remote/connectivity_monitor_noop';\n\nimport { BrowserConnectivityMonitor } from './connectivity_monitor';\nimport { WebChannelConnection } from './webchannel_connection';\n\n/** Initializes the WebChannelConnection for the browser. */\nexport function newConnection(databaseInfo: DatabaseInfo): Connection {\n  return new WebChannelConnection(databaseInfo);\n}\n\n/** Return the Platform-specific connectivity monitor. */\nexport function newConnectivityMonitor(): ConnectivityMonitor {\n  if (BrowserConnectivityMonitor.isAvailable()) {\n    return new BrowserConnectivityMonitor();\n  } else {\n    return new NoopConnectivityMonitor();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observer } from '../core/event_manager';\n\nimport { FirestoreError } from './error';\nimport { logError } from './log';\nimport { EventHandler } from './misc';\n\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nexport class AsyncObserver<T> implements Observer<T> {\n  /**\n   * When set to true, will not raise future events. Necessary to deal with\n   * async detachment of listener.\n   */\n  private muted = false;\n\n  constructor(private observer: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    if (this.observer.next) {\n      this.scheduleEvent(this.observer.next, value);\n    }\n  }\n\n  error(error: FirestoreError): void {\n    if (this.observer.error) {\n      this.scheduleEvent(this.observer.error, error);\n    } else {\n      logError('Uncaught Error in snapshot listener:', error.toString());\n    }\n  }\n\n  mute(): void {\n    this.muted = true;\n  }\n\n  private scheduleEvent<E>(eventHandler: EventHandler<E>, event: E): void {\n    if (!this.muted) {\n      setTimeout(() => {\n        if (!this.muted) {\n          eventHandler(event);\n        }\n      }, 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetOptions } from '@firebase/firestore-types';\n\nimport { LoadBundleTask } from '../api/bundle';\nimport {\n  CredentialChangeListener,\n  CredentialsProvider\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { LocalStore } from '../local/local_store';\nimport {\n  localStoreConfigureFieldIndexes,\n  localStoreDeleteAllFieldIndexes,\n  localStoreExecuteQuery,\n  localStoreGetNamedQuery,\n  localStoreHandleUserChange,\n  localStoreReadDocument,\n  localStoreSetIndexAutoCreationEnabled\n} from '../local/local_store_impl';\nimport { Persistence } from '../local/persistence';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldIndex } from '../model/field_index';\nimport { Mutation } from '../model/mutation';\nimport { toByteStreamReader } from '../platform/byte_stream_reader';\nimport { newSerializer } from '../platform/serializer';\nimport { newTextEncoder } from '../platform/text_serializer';\nimport { ApiClientObjectMap, Value } from '../protos/firestore_proto_api';\nimport { Datastore, invokeRunAggregationQueryRpc } from '../remote/datastore';\nimport {\n  RemoteStore,\n  remoteStoreDisableNetwork,\n  remoteStoreEnableNetwork,\n  remoteStoreHandleCredentialChange\n} from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { debugAssert } from '../util/assert';\nimport { AsyncObserver } from '../util/async_observer';\nimport { AsyncQueue, wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { BundleReader } from '../util/bundle_reader';\nimport { newBundleReader } from '../util/bundle_reader_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { AutoId } from '../util/misc';\nimport { Deferred } from '../util/promise';\n\nimport { Aggregate } from './aggregate';\nimport { NamedQuery } from './bundle';\nimport {\n  ComponentConfiguration,\n  MemoryOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from './component_provider';\nimport { DatabaseId, DatabaseInfo } from './database_info';\nimport {\n  addSnapshotsInSyncListener,\n  EventManager,\n  eventManagerListen,\n  eventManagerUnlisten,\n  ListenOptions,\n  Observer,\n  QueryListener,\n  removeSnapshotsInSyncListener\n} from './event_manager';\nimport { newQueryForPath, Query } from './query';\nimport { SyncEngine } from './sync_engine';\nimport {\n  syncEngineListen,\n  syncEngineLoadBundle,\n  syncEngineRegisterPendingWritesCallback,\n  syncEngineUnlisten,\n  syncEngineWrite\n} from './sync_engine_impl';\nimport { Transaction } from './transaction';\nimport { TransactionOptions } from './transaction_options';\nimport { TransactionRunner } from './transaction_runner';\nimport { View } from './view';\nimport { ViewSnapshot } from './view_snapshot';\n\nconst LOG_TAG = 'FirestoreClient';\nexport const MAX_CONCURRENT_LIMBO_RESOLUTIONS = 100;\n\n/** DOMException error code constants. */\nconst DOM_EXCEPTION_INVALID_STATE = 11;\nconst DOM_EXCEPTION_ABORTED = 20;\nconst DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\n\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the //\n * pieces of the client SDK architecture. It is responsible for creating the //\n * async queue that is shared by all of the other components in the system. //\n */\nexport class FirestoreClient {\n  private user = User.UNAUTHENTICATED;\n  private readonly clientId = AutoId.newId();\n  private authCredentialListener: CredentialChangeListener<User> = () =>\n    Promise.resolve();\n  private appCheckCredentialListener: (\n    appCheckToken: string,\n    user: User\n  ) => Promise<void> = () => Promise.resolve();\n  _uninitializedComponentsProvider?: {\n    _offline: OfflineComponentProvider;\n    _offlineKind: 'memory' | 'persistent';\n    _online: OnlineComponentProvider;\n  };\n\n  _offlineComponents?: OfflineComponentProvider;\n  _onlineComponents?: OnlineComponentProvider;\n\n  constructor(\n    private authCredentials: CredentialsProvider<User>,\n    private appCheckCredentials: CredentialsProvider<string>,\n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    public asyncQueue: AsyncQueue,\n    private databaseInfo: DatabaseInfo\n  ) {\n    this.authCredentials.start(asyncQueue, async user => {\n      logDebug(LOG_TAG, 'Received user=', user.uid);\n      await this.authCredentialListener(user);\n      this.user = user;\n    });\n    this.appCheckCredentials.start(asyncQueue, newAppCheckToken => {\n      logDebug(LOG_TAG, 'Received new app check token=', newAppCheckToken);\n      return this.appCheckCredentialListener(newAppCheckToken, this.user);\n    });\n  }\n\n  async getConfiguration(): Promise<ComponentConfiguration> {\n    return {\n      asyncQueue: this.asyncQueue,\n      databaseInfo: this.databaseInfo,\n      clientId: this.clientId,\n      authCredentials: this.authCredentials,\n      appCheckCredentials: this.appCheckCredentials,\n      initialUser: this.user,\n      maxConcurrentLimboResolutions: MAX_CONCURRENT_LIMBO_RESOLUTIONS\n    };\n  }\n\n  setCredentialChangeListener(listener: (user: User) => Promise<void>): void {\n    this.authCredentialListener = listener;\n  }\n\n  setAppCheckTokenChangeListener(\n    listener: (appCheckToken: string, user: User) => Promise<void>\n  ): void {\n    this.appCheckCredentialListener = listener;\n  }\n\n  /**\n   * Checks that the client has not been terminated. Ensures that other methods on //\n   * this class cannot be called after the client is terminated. //\n   */\n  verifyNotTerminated(): void {\n    if (this.asyncQueue.isShuttingDown) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'The client has already been terminated.'\n      );\n    }\n  }\n\n  terminate(): Promise<void> {\n    this.asyncQueue.enterRestrictedMode();\n    const deferred = new Deferred();\n    this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {\n      try {\n        if (this._onlineComponents) {\n          await this._onlineComponents.terminate();\n        }\n        if (this._offlineComponents) {\n          await this._offlineComponents.terminate();\n        }\n\n        // The credentials provider must be terminated after shutting down the\n        // RemoteStore as it will prevent the RemoteStore from retrieving auth\n        // tokens.\n        this.authCredentials.shutdown();\n        this.appCheckCredentials.shutdown();\n        deferred.resolve();\n      } catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(\n          e as Error,\n          `Failed to shutdown persistence`\n        );\n        deferred.reject(firestoreError);\n      }\n    });\n    return deferred.promise;\n  }\n}\n\nexport async function setOfflineComponentProvider(\n  client: FirestoreClient,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  logDebug(LOG_TAG, 'Initializing OfflineComponentProvider');\n  const configuration = await client.getConfiguration();\n  await offlineComponentProvider.initialize(configuration);\n\n  let currentUser = configuration.initialUser;\n  client.setCredentialChangeListener(async user => {\n    if (!currentUser.isEqual(user)) {\n      await localStoreHandleUserChange(\n        offlineComponentProvider.localStore,\n        user\n      );\n      currentUser = user;\n    }\n  });\n\n  // When a user calls clearPersistence() in one client, all other clients\n  // need to be terminated to allow the delete to succeed.\n  offlineComponentProvider.persistence.setDatabaseDeletedListener(() =>\n    client.terminate()\n  );\n\n  client._offlineComponents = offlineComponentProvider;\n}\n\nexport async function setOnlineComponentProvider(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  const offlineComponentProvider = await ensureOfflineComponents(client);\n\n  logDebug(LOG_TAG, 'Initializing OnlineComponentProvider');\n  const configuration = await client.getConfiguration();\n  await onlineComponentProvider.initialize(\n    offlineComponentProvider,\n    configuration\n  );\n  // The CredentialChangeListener of the online component provider takes\n  // precedence over the offline component provider.\n  client.setCredentialChangeListener(user =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client.setAppCheckTokenChangeListener((_, user) =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client._onlineComponents = onlineComponentProvider;\n}\n\n/**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\nexport function canFallbackFromIndexedDbError(\n  error: FirestoreError | DOMException\n): boolean {\n  if (error.name === 'FirebaseError') {\n    return (\n      error.code === Code.FAILED_PRECONDITION ||\n      error.code === Code.UNIMPLEMENTED\n    );\n  } else if (\n    typeof DOMException !== 'undefined' &&\n    error instanceof DOMException\n  ) {\n    // There are a few known circumstances where we can open IndexedDb but\n    // trying to read/write will fail (e.g. quota exceeded). For\n    // well-understood cases, we attempt to detect these and then gracefully\n    // fall back to memory persistence.\n    // NOTE: Rather than continue to add to this list, we could decide to\n    // always fall back, with the risk that we might accidentally hide errors\n    // representing actual SDK bugs.\n    return (\n      // When the browser is out of quota we could get either quota exceeded\n      // or an aborted error depending on whether the error happened during\n      // schema migration.\n      error.code === DOM_EXCEPTION_QUOTA_EXCEEDED ||\n      error.code === DOM_EXCEPTION_ABORTED ||\n      // Firefox Private Browsing mode disables IndexedDb and returns\n      // INVALID_STATE for any usage.\n      error.code === DOM_EXCEPTION_INVALID_STATE\n    );\n  }\n\n  return true;\n}\n\nasync function ensureOfflineComponents(\n  client: FirestoreClient\n): Promise<OfflineComponentProvider> {\n  if (!client._offlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OfflineComponentProvider');\n      try {\n        await setOfflineComponentProvider(\n          client,\n          client._uninitializedComponentsProvider._offline\n        );\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error using user provided cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        await setOfflineComponentProvider(\n          client,\n          new MemoryOfflineComponentProvider()\n        );\n      }\n    } else {\n      logDebug(LOG_TAG, 'Using default OfflineComponentProvider');\n      await setOfflineComponentProvider(\n        client,\n        new MemoryOfflineComponentProvider()\n      );\n    }\n  }\n\n  return client._offlineComponents!;\n}\n\nasync function ensureOnlineComponents(\n  client: FirestoreClient\n): Promise<OnlineComponentProvider> {\n  if (!client._onlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OnlineComponentProvider');\n      await setOnlineComponentProvider(\n        client,\n        client._uninitializedComponentsProvider._online\n      );\n    } else {\n      logDebug(LOG_TAG, 'Using default OnlineComponentProvider');\n      await setOnlineComponentProvider(client, new OnlineComponentProvider());\n    }\n  }\n\n  return client._onlineComponents!;\n}\n\nfunction getPersistence(client: FirestoreClient): Promise<Persistence> {\n  return ensureOfflineComponents(client).then(c => c.persistence);\n}\n\nexport function getLocalStore(client: FirestoreClient): Promise<LocalStore> {\n  return ensureOfflineComponents(client).then(c => c.localStore);\n}\n\nfunction getRemoteStore(client: FirestoreClient): Promise<RemoteStore> {\n  return ensureOnlineComponents(client).then(c => c.remoteStore);\n}\n\nexport function getSyncEngine(client: FirestoreClient): Promise<SyncEngine> {\n  return ensureOnlineComponents(client).then(c => c.syncEngine);\n}\n\nfunction getDatastore(client: FirestoreClient): Promise<Datastore> {\n  return ensureOnlineComponents(client).then(c => c.datastore);\n}\n\nexport async function getEventManager(\n  client: FirestoreClient\n): Promise<EventManager> {\n  const onlineComponentProvider = await ensureOnlineComponents(client);\n  const eventManager = onlineComponentProvider.eventManager;\n  eventManager.onListen = syncEngineListen.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onUnlisten = syncEngineUnlisten.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  return eventManager;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */\nexport function firestoreClientEnableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(true);\n    return remoteStoreEnableNetwork(remoteStore);\n  });\n}\n\n/** Disables the network connection. Pending operations will not complete. */\nexport function firestoreClientDisableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(false);\n    return remoteStoreDisableNetwork(remoteStore);\n  });\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */\nexport function firestoreClientWaitForPendingWrites(\n  client: FirestoreClient\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineRegisterPendingWritesCallback(syncEngine, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientListen(\n  client: FirestoreClient,\n  query: Query,\n  options: ListenOptions,\n  observer: Partial<Observer<ViewSnapshot>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  const listener = new QueryListener(query, wrappedObserver, options);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return eventManagerListen(eventManager, listener);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return eventManagerUnlisten(eventManager, listener);\n    });\n  };\n}\n\nexport function firestoreClientGetDocumentFromLocalCache(\n  client: FirestoreClient,\n  docKey: DocumentKey\n): Promise<Document | null> {\n  const deferred = new Deferred<Document | null>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return readDocumentFromCache(localStore, docKey, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentViaSnapshotListener(\n  client: FirestoreClient,\n  key: DocumentKey,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return readDocumentViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      key,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsFromLocalCache(\n  client: FirestoreClient,\n  query: Query\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return executeQueryFromCache(localStore, query, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsViaSnapshotListener(\n  client: FirestoreClient,\n  query: Query,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return executeQueryViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      query,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientRunAggregateQuery(\n  client: FirestoreClient,\n  query: Query,\n  aggregates: Aggregate[]\n): Promise<ApiClientObjectMap<Value>> {\n  const deferred = new Deferred<ApiClientObjectMap<Value>>();\n\n  client.asyncQueue.enqueueAndForget(async () => {\n    // Implement and call executeAggregateQueryViaSnapshotListener, similar\n    // to the implementation in firestoreClientGetDocumentsViaSnapshotListener\n    // above\n    try {\n      // TODO(b/277628384): check `canUseNetwork()` and handle multi-tab.\n      const datastore = await getDatastore(client);\n      deferred.resolve(\n        invokeRunAggregationQueryRpc(datastore, query, aggregates)\n      );\n    } catch (e) {\n      deferred.reject(e as Error);\n    }\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientWrite(\n  client: FirestoreClient,\n  mutations: Mutation[]\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineWrite(syncEngine, mutations, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientAddSnapshotsInSyncListener(\n  client: FirestoreClient,\n  observer: Partial<Observer<void>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return addSnapshotsInSyncListener(eventManager, wrappedObserver);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return removeSnapshotsInSyncListener(eventManager, wrappedObserver);\n    });\n  };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */\nexport function firestoreClientTransaction<T>(\n  client: FirestoreClient,\n  updateFunction: (transaction: Transaction) => Promise<T>,\n  options: TransactionOptions\n): Promise<T> {\n  const deferred = new Deferred<T>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const datastore = await getDatastore(client);\n    new TransactionRunner<T>(\n      client.asyncQueue,\n      datastore,\n      options,\n      updateFunction,\n      deferred\n    ).run();\n  });\n  return deferred.promise;\n}\n\nasync function readDocumentFromCache(\n  localStore: LocalStore,\n  docKey: DocumentKey,\n  result: Deferred<Document | null>\n): Promise<void> {\n  try {\n    const document = await localStoreReadDocument(localStore, docKey);\n    if (document.isFoundDocument()) {\n      result.resolve(document);\n    } else if (document.isNoDocument()) {\n      result.resolve(null);\n    } else {\n      result.reject(\n        new FirestoreError(\n          Code.UNAVAILABLE,\n          'Failed to get document from cache. (However, this document may ' +\n            \"exist on the server. Run again without setting 'source' in \" +\n            'the GetOptions to attempt to retrieve the document from the ' +\n            'server.)'\n        )\n      );\n    }\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to get document '${docKey} from cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */\nfunction readDocumentViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  key: DocumentKey,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver({\n    next: (snap: ViewSnapshot) => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      const exists = snap.docs.has(key);\n      if (!exists && snap.fromCache) {\n        // TODO(dimond): If we're online and the document doesn't\n        // exist then we resolve with a doc.exists set to false. If\n        // we're offline however, we reject the Promise in this\n        // case. Two options: 1) Cache the negative response from\n        // the server so we can deliver that even when you're\n        // offline 2) Actually reject the Promise in the online case\n        // if the document doesn't exist.\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document because the client is offline.'\n          )\n        );\n      } else if (\n        exists &&\n        snap.fromCache &&\n        options &&\n        options.source === 'server'\n      ) {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document from server. (However, this ' +\n              'document does exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached document.)'\n          )\n        );\n      } else {\n        debugAssert(\n          snap.docs.size <= 1,\n          'Expected zero or a single result on a document-only query'\n        );\n        result.resolve(snap);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(\n    newQueryForPath(key.path),\n    wrappedObserver,\n    {\n      includeMetadataChanges: true,\n      waitForSyncWhenOnline: true\n    }\n  );\n  return eventManagerListen(eventManager, listener);\n}\n\nasync function executeQueryFromCache(\n  localStore: LocalStore,\n  query: Query,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  try {\n    const queryResult = await localStoreExecuteQuery(\n      localStore,\n      query,\n      /* usePreviousResults= */ true\n    );\n    const view = new View(query, queryResult.remoteKeys);\n    const viewDocChanges = view.computeDocChanges(queryResult.documents);\n    const viewChange = view.applyChanges(\n      viewDocChanges,\n      /* updateLimboDocuments= */ false\n    );\n    result.resolve(viewChange.snapshot!);\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to execute query '${query} against cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */\nfunction executeQueryViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  query: Query,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver<ViewSnapshot>({\n    next: snapshot => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      if (snapshot.fromCache && options.source === 'server') {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get documents from server. (However, these ' +\n              'documents may exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached documents.)'\n          )\n        );\n      } else {\n        result.resolve(snapshot);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(query, wrappedObserver, {\n    includeMetadataChanges: true,\n    waitForSyncWhenOnline: true\n  });\n  return eventManagerListen(eventManager, listener);\n}\n\nexport function firestoreClientLoadBundle(\n  client: FirestoreClient,\n  databaseId: DatabaseId,\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  resultTask: LoadBundleTask\n): void {\n  const reader = createBundleReader(data, newSerializer(databaseId));\n  client.asyncQueue.enqueueAndForget(async () => {\n    syncEngineLoadBundle(await getSyncEngine(client), reader, resultTask);\n  });\n}\n\nexport function firestoreClientGetNamedQuery(\n  client: FirestoreClient,\n  queryName: string\n): Promise<NamedQuery | undefined> {\n  return client.asyncQueue.enqueue(async () =>\n    localStoreGetNamedQuery(await getLocalStore(client), queryName)\n  );\n}\n\nfunction createBundleReader(\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  serializer: JsonProtoSerializer\n): BundleReader {\n  let content: ReadableStream<Uint8Array> | ArrayBuffer;\n  if (typeof data === 'string') {\n    content = newTextEncoder().encode(data);\n  } else {\n    content = data;\n  }\n  return newBundleReader(toByteStreamReader(content), serializer);\n}\n\nexport function firestoreClientSetIndexConfiguration(\n  client: FirestoreClient,\n  indexes: FieldIndex[]\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreConfigureFieldIndexes(\n      await getLocalStore(client),\n      indexes\n    );\n  });\n}\n\nexport function firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n  client: FirestoreClient,\n  isEnabled: boolean\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreSetIndexAutoCreationEnabled(\n      await getLocalStore(client),\n      isEnabled\n    );\n  });\n}\n\nexport function firestoreClientDeleteAllFieldIndexes(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreDeleteAllFieldIndexes(await getLocalStore(client));\n  });\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Options that configure the SDK’s underlying network transport (WebChannel)\n * when long-polling is used.\n *\n * Note: This interface is \"experimental\" and is subject to change.\n *\n * See `FirestoreSettings.experimentalAutoDetectLongPolling`,\n * `FirestoreSettings.experimentalForceLongPolling`, and\n * `FirestoreSettings.experimentalLongPollingOptions`.\n */\nexport interface ExperimentalLongPollingOptions {\n  /**\n   * The desired maximum timeout interval, in seconds, to complete a\n   * long-polling GET response. Valid values are between 5 and 30, inclusive.\n   * Floating point values are allowed and will be rounded to the nearest\n   * millisecond.\n   *\n   * By default, when long-polling is used the \"hanging GET\" request sent by\n   * the client times out after 30 seconds. To request a different timeout\n   * from the server, set this setting with the desired timeout.\n   *\n   * Changing the default timeout may be useful, for example, if the buffering\n   * proxy that necessitated enabling long-polling in the first place has a\n   * shorter timeout for hanging GET requests, in which case setting the\n   * long-polling timeout to a shorter value, such as 25 seconds, may fix\n   * prematurely-closed hanging GET requests.\n   * For example, see https://github.com/firebase/firebase-js-sdk/issues/6987.\n   */\n  timeoutSeconds?: number;\n}\n\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\nexport function longPollingOptionsEqual(\n  options1: ExperimentalLongPollingOptions,\n  options2: ExperimentalLongPollingOptions\n): boolean {\n  return options1.timeoutSeconds === options2.timeoutSeconds;\n}\n\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nexport function cloneLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): ExperimentalLongPollingOptions {\n  const clone: ExperimentalLongPollingOptions = {};\n\n  if (options.timeoutSeconds !== undefined) {\n    clone.timeoutSeconds = options.timeoutSeconds;\n  }\n\n  return clone;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _FirebaseService } from '@firebase/app';\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { cloneLongPollingOptions } from '../api/long_polling_options';\nimport { User } from '../auth/user';\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { newConnection } from '../platform/connection';\nimport { newSerializer } from '../platform/serializer';\nimport { Datastore, newDatastore } from '../remote/datastore';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\n\nimport { FirestoreSettingsImpl } from './settings';\n\nexport const LOG_TAG = 'ComponentProvider';\n\n// The components module manages the lifetime of dependencies of the Firestore\n// client. Dependencies can be lazily constructed and only one exists per\n// Firestore instance.\n\n/**\n * An interface implemented by FirebaseFirestore that provides compatibility\n * with the usage in this file.\n *\n * This interface mainly exists to remove a cyclic dependency.\n */\nexport interface FirestoreService extends _FirebaseService {\n  _authCredentials: CredentialsProvider<User>;\n  _appCheckCredentials: CredentialsProvider<string>;\n  _persistenceKey: string;\n  _databaseId: DatabaseId;\n  _terminated: boolean;\n\n  _freezeSettings(): FirestoreSettingsImpl;\n}\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\nconst datastoreInstances = new Map<FirestoreService, Datastore>();\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nexport function getDatastore(firestore: FirestoreService): Datastore {\n  if (firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'The client has already been terminated.'\n    );\n  }\n  if (!datastoreInstances.has(firestore)) {\n    logDebug(LOG_TAG, 'Initializing Datastore');\n    const databaseInfo = makeDatabaseInfo(\n      firestore._databaseId,\n      firestore.app.options.appId || '',\n      firestore._persistenceKey,\n      firestore._freezeSettings()\n    );\n    const connection = newConnection(databaseInfo);\n    const serializer = newSerializer(firestore._databaseId);\n    const datastore = newDatastore(\n      firestore._authCredentials,\n      firestore._appCheckCredentials,\n      connection,\n      serializer\n    );\n\n    datastoreInstances.set(firestore, datastore);\n  }\n  return datastoreInstances.get(firestore)!;\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\nexport function removeComponents(firestore: FirestoreService): void {\n  const datastore = datastoreInstances.get(firestore);\n  if (datastore) {\n    logDebug(LOG_TAG, 'Removing Datastore');\n    datastoreInstances.delete(firestore);\n    datastore.terminate();\n  }\n}\n\nexport function makeDatabaseInfo(\n  databaseId: DatabaseId,\n  appId: string,\n  persistenceKey: string,\n  settings: FirestoreSettingsImpl\n): DatabaseInfo {\n  return new DatabaseInfo(\n    databaseId,\n    appId,\n    persistenceKey,\n    settings.host,\n    settings.ssl,\n    settings.experimentalForceLongPolling,\n    settings.experimentalAutoDetectLongPolling,\n    cloneLongPollingOptions(settings.experimentalLongPollingOptions),\n    settings.useFetchStreams\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\n\nimport { fail } from './assert';\nimport { Code, FirestoreError } from './error';\n\n/** Types accepted by validateType() and related methods for validation. */\nexport type ValidationType =\n  | 'undefined'\n  | 'object'\n  | 'function'\n  | 'boolean'\n  | 'number'\n  | 'string'\n  | 'non-empty string';\n\nexport function validateNonEmptyArgument(\n  functionName: string,\n  argumentName: string,\n  argument?: string\n): asserts argument is string {\n  if (!argument) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() cannot be called with an empty ${argumentName}.`\n    );\n  }\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\nexport function validateIsNotUsedTogether(\n  optionName1: string,\n  argument1: boolean | undefined,\n  optionName2: string,\n  argument2: boolean | undefined\n): void {\n  if (argument1 === true && argument2 === true) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `${optionName1} and ${optionName2} cannot be used together.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nexport function validateDocumentPath(path: ResourcePath): void {\n  if (!DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid document reference. Document references must have an even number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nexport function validateCollectionPath(path: ResourcePath): void {\n  if (DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid collection reference. Collection references must have an odd number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nexport function isPlainObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    (Object.getPrototypeOf(input) === Object.prototype ||\n      Object.getPrototypeOf(input) === null)\n  );\n}\n\n/** Returns a string describing the type / value of the provided input. */\nexport function valueDescription(input: unknown): string {\n  if (input === undefined) {\n    return 'undefined';\n  } else if (input === null) {\n    return 'null';\n  } else if (typeof input === 'string') {\n    if (input.length > 20) {\n      input = `${input.substring(0, 20)}...`;\n    }\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return '' + input;\n  } else if (typeof input === 'object') {\n    if (input instanceof Array) {\n      return 'an array';\n    } else {\n      const customObjectName = tryGetCustomObjectType(input!);\n      if (customObjectName) {\n        return `a custom ${customObjectName} object`;\n      } else {\n        return 'an object';\n      }\n    }\n  } else if (typeof input === 'function') {\n    return 'a function';\n  } else {\n    return fail('Unknown wrong type: ' + typeof input);\n  }\n}\n\n/** try to get the constructor name for an object. */\nexport function tryGetCustomObjectType(input: object): string | null {\n  if (input.constructor) {\n    return input.constructor.name;\n  }\n  return null;\n}\n\n/**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */\nexport function cast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  if ('_delegate' in obj) {\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj = (obj as any)._delegate;\n  }\n\n  if (!(obj instanceof constructor)) {\n    if (constructor.name === obj.constructor.name) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Type does not match the expected instance. Did you pass a ' +\n          `reference from a different Firestore SDK?`\n      );\n    } else {\n      const description = valueDescription(obj);\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Expected type '${constructor.name}', but it was: ${description}`\n      );\n    }\n  }\n  return obj as T;\n}\n\nexport function validatePositiveNumber(functionName: string, n: number): void {\n  if (n <= 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires a positive number, but it was: ${n}.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreLocalCache } from '../api/cache_config';\nimport { CredentialsSettings } from '../api/credentials';\nimport {\n  ExperimentalLongPollingOptions,\n  cloneLongPollingOptions,\n  longPollingOptionsEqual\n} from '../api/long_polling_options';\nimport {\n  LRU_COLLECTION_DISABLED,\n  LRU_DEFAULT_CACHE_SIZE_BYTES\n} from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { validateIsNotUsedTogether } from '../util/input_validation';\n\n// settings() defaults:\nexport const DEFAULT_HOST = 'firestore.googleapis.com';\nexport const DEFAULT_SSL = true;\n\n// The minimum long-polling timeout is hardcoded on the server. The value here\n// should be kept in sync with the value used by the server, as the server will\n// silently ignore a value below the minimum and fall back to the default.\n// Googlers see b/266868871 for relevant discussion.\nconst MIN_LONG_POLLING_TIMEOUT_SECONDS = 5;\n\n// No maximum long-polling timeout is configured in the server, and defaults to\n// 30 seconds, which is what Watch appears to use.\n// Googlers see b/266868871 for relevant discussion.\nconst MAX_LONG_POLLING_TIMEOUT_SECONDS = 30;\n\n// Whether long-polling auto-detected is enabled by default.\nconst DEFAULT_AUTO_DETECT_LONG_POLLING = true;\n\n/**\n * Specifies custom configurations for your Cloud Firestore instance.\n * You must set these before invoking any other methods.\n */\nexport interface FirestoreSettings {\n  /** The hostname to connect to. */\n  host?: string;\n\n  /** Whether to use SSL when connecting. */\n  ssl?: boolean;\n\n  /**\n   * Whether to skip nested properties that are set to `undefined` during\n   * object serialization. If set to `true`, these properties are skipped\n   * and not written to Firestore. If set to `false` or omitted, the SDK\n   * throws an exception when it encounters properties of type `undefined`.\n   */\n  ignoreUndefinedProperties?: boolean;\n}\n\n/**\n * @internal\n * Undocumented, private additional settings not exposed in our public API.\n */\nexport interface PrivateSettings extends FirestoreSettings {\n  // Can be a google-auth-library or gapi client.\n  credentials?: CredentialsSettings;\n  cacheSizeBytes?: number;\n  experimentalForceLongPolling?: boolean;\n  experimentalAutoDetectLongPolling?: boolean;\n  experimentalLongPollingOptions?: ExperimentalLongPollingOptions;\n  useFetchStreams?: boolean;\n\n  localCache?: FirestoreLocalCache;\n}\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nexport class FirestoreSettingsImpl {\n  /** The hostname to connect to. */\n  readonly host: string;\n\n  /** Whether to use SSL when connecting. */\n  readonly ssl: boolean;\n\n  readonly cacheSizeBytes: number;\n\n  readonly experimentalForceLongPolling: boolean;\n\n  readonly experimentalAutoDetectLongPolling: boolean;\n\n  readonly experimentalLongPollingOptions: ExperimentalLongPollingOptions;\n\n  readonly ignoreUndefinedProperties: boolean;\n\n  readonly useFetchStreams: boolean;\n  readonly localCache?: FirestoreLocalCache;\n\n  // Can be a google-auth-library or gapi client.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  credentials?: any;\n\n  constructor(settings: PrivateSettings) {\n    if (settings.host === undefined) {\n      if (settings.ssl !== undefined) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"Can't provide ssl option if host option is not set\"\n        );\n      }\n      this.host = DEFAULT_HOST;\n      this.ssl = DEFAULT_SSL;\n    } else {\n      this.host = settings.host;\n      this.ssl = settings.ssl ?? DEFAULT_SSL;\n    }\n\n    this.credentials = settings.credentials;\n    this.ignoreUndefinedProperties = !!settings.ignoreUndefinedProperties;\n    this.localCache = settings.localCache;\n\n    if (settings.cacheSizeBytes === undefined) {\n      this.cacheSizeBytes = LRU_DEFAULT_CACHE_SIZE_BYTES;\n    } else {\n      if (\n        settings.cacheSizeBytes !== LRU_COLLECTION_DISABLED &&\n        settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n      ) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n        );\n      } else {\n        this.cacheSizeBytes = settings.cacheSizeBytes;\n      }\n    }\n\n    validateIsNotUsedTogether(\n      'experimentalForceLongPolling',\n      settings.experimentalForceLongPolling,\n      'experimentalAutoDetectLongPolling',\n      settings.experimentalAutoDetectLongPolling\n    );\n\n    this.experimentalForceLongPolling = !!settings.experimentalForceLongPolling;\n\n    if (this.experimentalForceLongPolling) {\n      this.experimentalAutoDetectLongPolling = false;\n    } else if (settings.experimentalAutoDetectLongPolling === undefined) {\n      this.experimentalAutoDetectLongPolling = DEFAULT_AUTO_DETECT_LONG_POLLING;\n    } else {\n      // For backwards compatibility, coerce the value to boolean even though\n      // the TypeScript compiler has narrowed the type to boolean already.\n      // noinspection PointlessBooleanExpressionJS\n      this.experimentalAutoDetectLongPolling =\n        !!settings.experimentalAutoDetectLongPolling;\n    }\n\n    this.experimentalLongPollingOptions = cloneLongPollingOptions(\n      settings.experimentalLongPollingOptions ?? {}\n    );\n    validateLongPollingOptions(this.experimentalLongPollingOptions);\n\n    this.useFetchStreams = !!settings.useFetchStreams;\n  }\n\n  isEqual(other: FirestoreSettingsImpl): boolean {\n    return (\n      this.host === other.host &&\n      this.ssl === other.ssl &&\n      this.credentials === other.credentials &&\n      this.cacheSizeBytes === other.cacheSizeBytes &&\n      this.experimentalForceLongPolling ===\n        other.experimentalForceLongPolling &&\n      this.experimentalAutoDetectLongPolling ===\n        other.experimentalAutoDetectLongPolling &&\n      longPollingOptionsEqual(\n        this.experimentalLongPollingOptions,\n        other.experimentalLongPollingOptions\n      ) &&\n      this.ignoreUndefinedProperties === other.ignoreUndefinedProperties &&\n      this.useFetchStreams === other.useFetchStreams\n    );\n  }\n}\n\nfunction validateLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): void {\n  if (options.timeoutSeconds !== undefined) {\n    if (isNaN(options.timeoutSeconds)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ` +\n          `${options.timeoutSeconds} (must not be NaN)`\n      );\n    }\n    if (options.timeoutSeconds < MIN_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(minimum allowed value is ${MIN_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n    if (options.timeoutSeconds > MAX_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(maximum allowed value is ${MAX_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreError } from '../api';\nimport { ListenSequence } from '../core/listen_sequence';\nimport { ListenSequenceNumber } from '../core/types';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { getLogLevel, logDebug, LogLevel } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { ignoreIfPrimaryLeaseLoss, LocalStore } from './local_store';\nimport {\n  ActiveTargets,\n  GC_DID_NOT_RUN,\n  LRU_COLLECTION_DISABLED,\n  LruDelegate,\n  LruGarbageCollector,\n  LruParams,\n  LruResults\n} from './lru_garbage_collector';\nimport { Scheduler } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { isIndexedDbTransactionError } from './simple_db';\n\nconst LOG_TAG = 'LruGarbageCollector';\n\nexport const LRU_MINIMUM_CACHE_SIZE_BYTES = 1 * 1024 * 1024;\n\n/** How long we wait to try running LRU GC after SDK initialization. */\nconst INITIAL_GC_DELAY_MS = 1 * 60 * 1000;\n/** Minimum amount of time between GC checks, after the first one. */\nconst REGULAR_GC_DELAY_MS = 5 * 60 * 1000;\n\n// The type and comparator for the items contained in the SortedSet used in\n// place of a priority queue for the RollingSequenceNumberBuffer.\ntype BufferEntry = [ListenSequenceNumber, number];\n\nfunction bufferEntryComparator(\n  [aSequence, aIndex]: BufferEntry,\n  [bSequence, bIndex]: BufferEntry\n): number {\n  const seqCmp = primitiveComparator(aSequence, bSequence);\n  if (seqCmp === 0) {\n    // This order doesn't matter, but we can bias against churn by sorting\n    // entries created earlier as less than newer entries.\n    return primitiveComparator(aIndex, bIndex);\n  } else {\n    return seqCmp;\n  }\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */\nclass RollingSequenceNumberBuffer {\n  private buffer: SortedSet<BufferEntry> = new SortedSet<BufferEntry>(\n    bufferEntryComparator\n  );\n\n  private previousIndex = 0;\n\n  constructor(private readonly maxElements: number) {}\n\n  private nextIndex(): number {\n    return ++this.previousIndex;\n  }\n\n  addElement(sequenceNumber: ListenSequenceNumber): void {\n    const entry: BufferEntry = [sequenceNumber, this.nextIndex()];\n    if (this.buffer.size < this.maxElements) {\n      this.buffer = this.buffer.add(entry);\n    } else {\n      const highestValue = this.buffer.last()!;\n      if (bufferEntryComparator(entry, highestValue) < 0) {\n        this.buffer = this.buffer.delete(highestValue).add(entry);\n      }\n    }\n  }\n\n  get maxValue(): ListenSequenceNumber {\n    // Guaranteed to be non-empty. If we decide we are not collecting any\n    // sequence numbers, nthSequenceNumber below short-circuits. If we have\n    // decided that we are collecting n sequence numbers, it's because n is some\n    // percentage of the existing sequence numbers. That means we should never\n    // be in a situation where we are collecting sequence numbers but don't\n    // actually have any.\n    return this.buffer.last()![0];\n  }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */\nexport class LruScheduler implements Scheduler {\n  private gcTask: DelayedOperation<void> | null;\n\n  constructor(\n    private readonly garbageCollector: LruGarbageCollector,\n    private readonly asyncQueue: AsyncQueue,\n    private readonly localStore: LocalStore\n  ) {\n    this.gcTask = null;\n  }\n\n  start(): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot start an already started LruScheduler'\n    );\n    if (\n      this.garbageCollector.params.cacheSizeCollectionThreshold !==\n      LRU_COLLECTION_DISABLED\n    ) {\n      this.scheduleGC(INITIAL_GC_DELAY_MS);\n    }\n  }\n\n  stop(): void {\n    if (this.gcTask) {\n      this.gcTask.cancel();\n      this.gcTask = null;\n    }\n  }\n\n  get started(): boolean {\n    return this.gcTask !== null;\n  }\n\n  private scheduleGC(delay: number): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot schedule GC while a task is pending'\n    );\n    logDebug(LOG_TAG, `Garbage collection scheduled in ${delay}ms`);\n    this.gcTask = this.asyncQueue.enqueueAfterDelay(\n      TimerId.LruGarbageCollection,\n      delay,\n      async () => {\n        this.gcTask = null;\n        try {\n          await this.localStore.collectGarbage(this.garbageCollector);\n        } catch (e) {\n          if (isIndexedDbTransactionError(e as Error)) {\n            logDebug(\n              LOG_TAG,\n              'Ignoring IndexedDB error during garbage collection: ',\n              e\n            );\n          } else {\n            await ignoreIfPrimaryLeaseLoss(e as FirestoreError);\n          }\n        }\n        await this.scheduleGC(REGULAR_GC_DELAY_MS);\n      }\n    );\n  }\n}\n\n/**\n * Implements the steps for LRU garbage collection.\n */\nclass LruGarbageCollectorImpl implements LruGarbageCollector {\n  constructor(\n    private readonly delegate: LruDelegate,\n    readonly params: LruParams\n  ) {}\n\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number> {\n    return this.delegate.getSequenceNumberCount(txn).next(targetCount => {\n      return Math.floor((percentile / 100.0) * targetCount);\n    });\n  }\n\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<ListenSequenceNumber> {\n    if (n === 0) {\n      return PersistencePromise.resolve(ListenSequence.INVALID);\n    }\n\n    const buffer = new RollingSequenceNumberBuffer(n);\n    return this.delegate\n      .forEachTarget(txn, target => buffer.addElement(target.sequenceNumber))\n      .next(() => {\n        return this.delegate.forEachOrphanedDocumentSequenceNumber(\n          txn,\n          sequenceNumber => buffer.addElement(sequenceNumber)\n        );\n      })\n      .next(() => buffer.maxValue);\n  }\n\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    return this.delegate.removeTargets(txn, upperBound, activeTargetIds);\n  }\n\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number> {\n    return this.delegate.removeOrphanedDocuments(txn, upperBound);\n  }\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    if (this.params.cacheSizeCollectionThreshold === LRU_COLLECTION_DISABLED) {\n      logDebug('LruGarbageCollector', 'Garbage collection skipped; disabled');\n      return PersistencePromise.resolve(GC_DID_NOT_RUN);\n    }\n\n    return this.getCacheSize(txn).next(cacheSize => {\n      if (cacheSize < this.params.cacheSizeCollectionThreshold) {\n        logDebug(\n          'LruGarbageCollector',\n          `Garbage collection skipped; Cache size ${cacheSize} ` +\n            `is lower than threshold ${this.params.cacheSizeCollectionThreshold}`\n        );\n        return GC_DID_NOT_RUN;\n      } else {\n        return this.runGarbageCollection(txn, activeTargetIds);\n      }\n    });\n  }\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return this.delegate.getCacheSize(txn);\n  }\n\n  private runGarbageCollection(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    let upperBoundSequenceNumber: number;\n    let sequenceNumbersToCollect: number, targetsRemoved: number;\n    // Timestamps for various pieces of the process\n    let countedTargetsTs: number,\n      foundUpperBoundTs: number,\n      removedTargetsTs: number,\n      removedDocumentsTs: number;\n    const startTs = Date.now();\n    return this.calculateTargetCount(txn, this.params.percentileToCollect)\n      .next(sequenceNumbers => {\n        // Cap at the configured max\n        if (sequenceNumbers > this.params.maximumSequenceNumbersToCollect) {\n          logDebug(\n            'LruGarbageCollector',\n            'Capping sequence numbers to collect down ' +\n              `to the maximum of ${this.params.maximumSequenceNumbersToCollect} ` +\n              `from ${sequenceNumbers}`\n          );\n          sequenceNumbersToCollect =\n            this.params.maximumSequenceNumbersToCollect;\n        } else {\n          sequenceNumbersToCollect = sequenceNumbers;\n        }\n        countedTargetsTs = Date.now();\n\n        return this.nthSequenceNumber(txn, sequenceNumbersToCollect);\n      })\n      .next(upperBound => {\n        upperBoundSequenceNumber = upperBound;\n        foundUpperBoundTs = Date.now();\n\n        return this.removeTargets(\n          txn,\n          upperBoundSequenceNumber,\n          activeTargetIds\n        );\n      })\n      .next(numTargetsRemoved => {\n        targetsRemoved = numTargetsRemoved;\n        removedTargetsTs = Date.now();\n\n        return this.removeOrphanedDocuments(txn, upperBoundSequenceNumber);\n      })\n      .next(documentsRemoved => {\n        removedDocumentsTs = Date.now();\n\n        if (getLogLevel() <= LogLevel.DEBUG) {\n          const desc =\n            'LRU Garbage Collection\\n' +\n            `\\tCounted targets in ${countedTargetsTs - startTs}ms\\n` +\n            `\\tDetermined least recently used ${sequenceNumbersToCollect} in ` +\n            `${foundUpperBoundTs - countedTargetsTs}ms\\n` +\n            `\\tRemoved ${targetsRemoved} targets in ` +\n            `${removedTargetsTs - foundUpperBoundTs}ms\\n` +\n            `\\tRemoved ${documentsRemoved} documents in ` +\n            `${removedDocumentsTs - removedTargetsTs}ms\\n` +\n            `Total Duration: ${removedDocumentsTs - startTs}ms`;\n          logDebug('LruGarbageCollector', desc);\n        }\n\n        return PersistencePromise.resolve<LruResults>({\n          didRun: true,\n          sequenceNumbersCollected: sequenceNumbersToCollect,\n          targetsRemoved,\n          documentsRemoved\n        });\n      });\n  }\n}\n\nexport function newLruGarbageCollector(\n  delegate: LruDelegate,\n  params: LruParams\n): LruGarbageCollector {\n  return new LruGarbageCollectorImpl(delegate, params);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport {\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport {\n  CredentialsProvider,\n  EmulatorAuthCredentialsProvider,\n  makeAuthCredentialsProvider,\n  OAuthToken\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\n\nimport { FirestoreService, removeComponents } from './components';\nimport {\n  DEFAULT_HOST,\n  FirestoreSettingsImpl,\n  PrivateSettings,\n  FirestoreSettings\n} from './settings';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore/lite': Firestore;\n  }\n}\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore implements FirestoreService {\n  /**\n   * Whether it's a Firestore or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore-lite';\n\n  readonly _persistenceKey: string = '(lite)';\n\n  private _settings = new FirestoreSettingsImpl({});\n  private _settingsFrozen = false;\n\n  // A task that is assigned when the terminate() is invoked and resolved when\n  // all components have shut down.\n  private _terminateTask?: Promise<void>;\n\n  /** @hideconstructor */\n  constructor(\n    public _authCredentials: CredentialsProvider<User>,\n    public _appCheckCredentials: CredentialsProvider<string>,\n    readonly _databaseId: DatabaseId,\n    readonly _app?: FirebaseApp\n  ) {}\n\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app(): FirebaseApp {\n    if (!this._app) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n          'not available'\n      );\n    }\n    return this._app;\n  }\n\n  get _initialized(): boolean {\n    return this._settingsFrozen;\n  }\n\n  get _terminated(): boolean {\n    return this._terminateTask !== undefined;\n  }\n\n  _setSettings(settings: PrivateSettings): void {\n    if (this._settingsFrozen) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'Firestore has already been started and its settings can no longer ' +\n          'be changed. You can only modify settings before calling any other ' +\n          'methods on a Firestore object.'\n      );\n    }\n    this._settings = new FirestoreSettingsImpl(settings);\n    if (settings.credentials !== undefined) {\n      this._authCredentials = makeAuthCredentialsProvider(settings.credentials);\n    }\n  }\n\n  _getSettings(): FirestoreSettingsImpl {\n    return this._settings;\n  }\n\n  _freezeSettings(): FirestoreSettingsImpl {\n    this._settingsFrozen = true;\n    return this._settings;\n  }\n\n  _delete(): Promise<void> {\n    if (!this._terminateTask) {\n      this._terminateTask = this._terminate();\n    }\n    return this._terminateTask;\n  }\n\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON(): object {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  protected _terminate(): Promise<void> {\n    removeComponents(this);\n    return Promise.resolve();\n  }\n}\n\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings\n): Firestore;\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized `Firestore` instance.\n * @beta\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore;\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore/lite');\n\n  if (provider.isInitialized(databaseId)) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore can only be initialized once per app.'\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || '(default)';\n  const db = _getProvider(app, 'firestore/lite').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nexport function connectFirestoreEmulator(\n  firestore: Firestore,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  firestore = cast(firestore, Firestore);\n  const settings = firestore._getSettings();\n  const newHostSetting = `${host}:${port}`;\n\n  if (settings.host !== DEFAULT_HOST && settings.host !== newHostSetting) {\n    logWarn(\n      'Host has been set in both settings() and connectFirestoreEmulator(), emulator host ' +\n        'will be used.'\n    );\n  }\n\n  firestore._setSettings({\n    ...settings,\n    host: newHostSetting,\n    ssl: false\n  });\n\n  if (options.mockUserToken) {\n    let token: string;\n    let user: User;\n    if (typeof options.mockUserToken === 'string') {\n      token = options.mockUserToken;\n      user = User.MOCK_USER;\n    } else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      token = createMockUserToken(\n        options.mockUserToken,\n        firestore._app?.options.projectId\n      );\n      const uid = options.mockUserToken.sub || options.mockUserToken.user_id;\n      if (!uid) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"mockUserToken must contain 'sub' or 'user_id' field!\"\n        );\n      }\n      user = new User(uid);\n    }\n\n    firestore._authCredentials = new EmulatorAuthCredentialsProvider(\n      new OAuthToken(token, user)\n    );\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  _removeServiceInstance(firestore.app, 'firestore/lite');\n  return firestore._delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport {\n  newQueryForCollectionGroup,\n  newQueryForPath,\n  Query as InternalQuery,\n  queryEquals\n} from '../core/query';\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\nimport { Code, FirestoreError } from '../util/error';\nimport {\n  cast,\n  validateCollectionPath,\n  validateDocumentPath,\n  validateNonEmptyArgument\n} from '../util/input_validation';\nimport { AutoId } from '../util/misc';\n\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { FieldValue } from './field_value';\nimport { FirestoreDataConverter } from './snapshot';\nimport { NestedUpdateFields, Primitive } from './types';\n\n/**\n * Document data (for use with {@link @firebase/firestore/lite#(setDoc:1)}) consists of fields mapped to\n * values.\n */\nexport interface DocumentData {\n  /** A mapping between a field and its value. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [field: string]: any;\n}\n\n/**\n * Similar to Typescript's `Partial<T>`, but allows nested fields to be\n * omitted and FieldValues to be passed in as property values.\n */\nexport type PartialWithFieldValue<T> =\n  | Partial<T>\n  | (T extends Primitive\n      ? T\n      : T extends {}\n      ? { [K in keyof T]?: PartialWithFieldValue<T[K]> | FieldValue }\n      : never);\n\n/**\n * Allows FieldValues to be passed in as a property value while maintaining\n * type safety.\n */\nexport type WithFieldValue<T> =\n  | T\n  | (T extends Primitive\n      ? T\n      : T extends {}\n      ? { [K in keyof T]: WithFieldValue<T[K]> | FieldValue }\n      : never);\n\n/**\n * Update data (for use with {@link (updateDoc:1)}) that consists of field paths\n * (e.g. 'foo' or 'foo.baz') mapped to values. Fields that contain dots\n * reference nested fields within the document. FieldValues can be passed in\n * as property values.\n */\nexport type UpdateData<T> = T extends Primitive\n  ? T\n  : T extends {}\n  ? { [K in keyof T]?: UpdateData<T[K]> | FieldValue } & NestedUpdateFields<T>\n  : Partial<T>;\n/**\n * An options object that configures the behavior of {@link @firebase/firestore/lite#(setDoc:1)}, {@link\n * @firebase/firestore/lite#(WriteBatch.set:1)} and {@link @firebase/firestore/lite#(Transaction.set:1)} calls. These calls can be\n * configured to perform granular merges instead of overwriting the target\n * documents in their entirety by providing a `SetOptions` with `merge: true`.\n *\n * @param merge - Changes the behavior of a `setDoc()` call to only replace the\n * values specified in its data argument. Fields omitted from the `setDoc()`\n * call remain untouched. If your input sets any field to an empty map, all\n * nested fields are overwritten.\n * @param mergeFields - Changes the behavior of `setDoc()` calls to only replace\n * the specified field paths. Any field path that is not specified is ignored\n * and remains untouched. If your input sets any field to an empty map, all\n * nested fields are overwritten.\n */\nexport type SetOptions =\n  | {\n      readonly merge?: boolean;\n    }\n  | {\n      readonly mergeFields?: Array<string | FieldPath>;\n    };\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nexport class Query<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of this Firestore reference. */\n  readonly type: 'query' | 'collection' = 'query';\n\n  /**\n   * The `Firestore` instance for the Firestore database (useful for performing\n   * transactions, etc.).\n   */\n  readonly firestore: Firestore;\n\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  constructor(\n    firestore: Firestore,\n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    readonly converter: FirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null,\n    readonly _query: InternalQuery\n  ) {\n    this.firestore = firestore;\n  }\n\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `Query<DocumentData, DocumentData>` that does not use a\n   * converter.\n   */\n  withConverter(converter: null): Query<DocumentData, DocumentData>;\n  /**\n   * Applies a custom data converter to this query, allowing you to use your own\n   * custom model objects with Firestore. When you call {@link getDocs} with\n   * the returned query, the provided converter will convert between Firestore\n   * data of type `NewDbModelType` and your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `Query` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): Query<NewAppModelType, NewDbModelType>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): Query<NewAppModelType, NewDbModelType> {\n    return new Query<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._query\n    );\n  }\n}\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nexport class DocumentReference<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of this Firestore reference. */\n  readonly type = 'document';\n\n  /**\n   * The {@link Firestore} instance the document is in.\n   * This is useful for performing transactions, for example.\n   */\n  readonly firestore: Firestore;\n\n  /** @hideconstructor */\n  constructor(\n    firestore: Firestore,\n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    readonly converter: FirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null,\n    readonly _key: DocumentKey\n  ) {\n    this.firestore = firestore;\n  }\n\n  get _path(): ResourcePath {\n    return this._key.path;\n  }\n\n  /**\n   * The document's identifier within its collection.\n   */\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n  get path(): string {\n    return this._key.path.canonicalString();\n  }\n\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n  get parent(): CollectionReference<AppModelType, DbModelType> {\n    return new CollectionReference<AppModelType, DbModelType>(\n      this.firestore,\n      this.converter,\n      this._key.path.popLast()\n    );\n  }\n\n  /**\n   * Applies a custom data converter to this `DocumentReference`, allowing you\n   * to use your own custom model objects with Firestore. When you call {@link\n   * @firebase/firestore/lite#(setDoc:1)}, {@link @firebase/firestore/lite#getDoc}, etc. with the returned `DocumentReference`\n   * instance, the provided converter will convert between Firestore data of\n   * type `NewDbModelType` and your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `DocumentReference` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): DocumentReference<NewAppModelType, NewDbModelType>;\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `DocumentReference<DocumentData, DocumentData>` that does not\n   * use a converter.\n   */\n  withConverter(converter: null): DocumentReference<DocumentData, DocumentData>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): DocumentReference<NewAppModelType, NewDbModelType> {\n    return new DocumentReference<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._key\n    );\n  }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\nexport class CollectionReference<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends Query<AppModelType, DbModelType> {\n  /** The type of this Firestore reference. */\n  readonly type = 'collection';\n\n  /** @hideconstructor */\n  constructor(\n    firestore: Firestore,\n    converter: FirestoreDataConverter<AppModelType, DbModelType> | null,\n    readonly _path: ResourcePath\n  ) {\n    super(firestore, converter, newQueryForPath(_path));\n  }\n\n  /** The collection's identifier. */\n  get id(): string {\n    return this._query.path.lastSegment();\n  }\n\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n  get path(): string {\n    return this._query.path.canonicalString();\n  }\n\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n  get parent(): DocumentReference<DocumentData, DocumentData> | null {\n    const parentPath = this._path.popLast();\n    if (parentPath.isEmpty()) {\n      return null;\n    } else {\n      return new DocumentReference(\n        this.firestore,\n        /* converter= */ null,\n        new DocumentKey(parentPath)\n      );\n    }\n  }\n\n  /**\n   * Applies a custom data converter to this `CollectionReference`, allowing you\n   * to use your own custom model objects with Firestore. When you call {@link\n   * addDoc} with the returned `CollectionReference` instance, the provided\n   * converter will convert between Firestore data of type `NewDbModelType` and\n   * your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `CollectionReference` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): CollectionReference<NewAppModelType, NewDbModelType>;\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `CollectionReference<DocumentData, DocumentData>` that does not\n   * use a converter.\n   */\n  withConverter(\n    converter: null\n  ): CollectionReference<DocumentData, DocumentData>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): CollectionReference<NewAppModelType, NewDbModelType> {\n    return new CollectionReference<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._path\n    );\n  }\n}\n\n/**\n * Gets a `CollectionReference` instance that refers to the collection at\n * the specified absolute path.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments to apply relative to the first\n * argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection(\n  firestore: Firestore,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\n/**\n * Gets a `CollectionReference` instance that refers to a subcollection of\n * `reference` at the the specified relative path.\n *\n * @param reference - A reference to a collection.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments to apply relative to the first\n * argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\n/**\n * Gets a `CollectionReference` instance that refers to a subcollection of\n * `reference` at the the specified relative path.\n *\n * @param reference - A reference to a Firestore document.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  parent:\n    | Firestore\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData> {\n  parent = getModularInstance(parent);\n\n  validateNonEmptyArgument('collection', 'path', path);\n  if (parent instanceof Firestore) {\n    const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n    validateCollectionPath(absolutePath);\n    return new CollectionReference(parent, /* converter= */ null, absolutePath);\n  } else {\n    if (\n      !(parent instanceof DocumentReference) &&\n      !(parent instanceof CollectionReference)\n    ) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Expected first argument to collection() to be a CollectionReference, ' +\n          'a DocumentReference or FirebaseFirestore'\n      );\n    }\n    const absolutePath = parent._path.child(\n      ResourcePath.fromString(path, ...pathSegments)\n    );\n    validateCollectionPath(absolutePath);\n    return new CollectionReference(\n      parent.firestore,\n      /* converter= */ null,\n      absolutePath\n    );\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nexport function collectionGroup(\n  firestore: Firestore,\n  collectionId: string\n): Query<DocumentData, DocumentData> {\n  firestore = cast(firestore, Firestore);\n\n  validateNonEmptyArgument('collectionGroup', 'collection id', collectionId);\n  if (collectionId.indexOf('/') >= 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid collection ID '${collectionId}' passed to function ` +\n        `collectionGroup(). Collection IDs must not contain '/'.`\n    );\n  }\n\n  return new Query(\n    firestore,\n    /* converter= */ null,\n    newQueryForCollectionGroup(collectionId)\n  );\n}\n\n/**\n * Gets a `DocumentReference` instance that refers to the document at the\n * specified absolute path.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param path - A slash-separated path to a document.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc(\n  firestore: Firestore,\n  path: string,\n  ...pathSegments: string[]\n): DocumentReference<DocumentData, DocumentData>;\n/**\n * Gets a `DocumentReference` instance that refers to a document within\n * `reference` at the specified relative path. If no path is specified, an\n * automatically-generated unique ID will be used for the returned\n * `DocumentReference`.\n *\n * @param reference - A reference to a collection.\n * @param path - A slash-separated path to a document. Has to be omitted to use\n * auto-genrated IDs.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  path?: string,\n  ...pathSegments: string[]\n): DocumentReference<AppModelType, DbModelType>;\n/**\n * Gets a `DocumentReference` instance that refers to a document within\n * `reference` at the specified relative path.\n *\n * @param reference - A reference to a Firestore document.\n * @param path - A slash-separated path to a document.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): DocumentReference<DocumentData, DocumentData>;\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  parent:\n    | Firestore\n    | CollectionReference<AppModelType, DbModelType>\n    | DocumentReference<AppModelType, DbModelType>,\n  path?: string,\n  ...pathSegments: string[]\n): DocumentReference<AppModelType, DbModelType> {\n  parent = getModularInstance(parent);\n\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  if (arguments.length === 1) {\n    path = AutoId.newId();\n  }\n  validateNonEmptyArgument('doc', 'path', path);\n\n  if (parent instanceof Firestore) {\n    const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n    validateDocumentPath(absolutePath);\n    return new DocumentReference(\n      parent,\n      /* converter= */ null,\n      new DocumentKey(absolutePath)\n    );\n  } else {\n    if (\n      !(parent instanceof DocumentReference) &&\n      !(parent instanceof CollectionReference)\n    ) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Expected first argument to collection() to be a CollectionReference, ' +\n          'a DocumentReference or FirebaseFirestore'\n      );\n    }\n    const absolutePath = parent._path.child(\n      ResourcePath.fromString(path, ...pathSegments)\n    );\n    validateDocumentPath(absolutePath);\n    return new DocumentReference<AppModelType, DbModelType>(\n      parent.firestore,\n      parent instanceof CollectionReference ? parent.converter : null,\n      new DocumentKey(absolutePath)\n    );\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nexport function refEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>,\n  right:\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (\n    (left instanceof DocumentReference ||\n      left instanceof CollectionReference) &&\n    (right instanceof DocumentReference || right instanceof CollectionReference)\n  ) {\n    return (\n      left.firestore === right.firestore &&\n      left.path === right.path &&\n      left.converter === right.converter\n    );\n  }\n  return false;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nexport function queryEqual<AppModelType, DbModelType extends DocumentData>(\n  left: Query<AppModelType, DbModelType>,\n  right: Query<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (left instanceof Query && right instanceof Query) {\n    return (\n      left.firestore === right.firestore &&\n      queryEquals(left._query, right._query) &&\n      left.converter === right.converter\n    );\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\nimport { getDocument } from '../platform/dom';\nimport { ExponentialBackoff } from '../remote/backoff';\n\nimport { debugAssert, fail } from './assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from './async_queue';\nimport { FirestoreError } from './error';\nimport { logDebug, logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\nexport class AsyncQueueImpl implements AsyncQueue {\n  // The last promise in the queue.\n  private tail: Promise<unknown> = Promise.resolve();\n\n  // A list of retryable operations. Retryable operations are run in order and\n  // retried with backoff.\n  private retryableOps: Array<() => Promise<void>> = [];\n\n  // Is this AsyncQueue being shut down? Once it is set to true, it will not\n  // be changed again.\n  private _isShuttingDown: boolean = false;\n\n  // Operations scheduled to be queued in the future. Operations are\n  // automatically removed after they are run or canceled.\n  private delayedOperations: Array<DelayedOperation<unknown>> = [];\n\n  // visible for testing\n  failure: FirestoreError | null = null;\n\n  // Flag set while there's an outstanding AsyncQueue operation, used for\n  // assertion sanity-checks.\n  private operationInProgress = false;\n\n  // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n  private skipNonRestrictedTasks = false;\n\n  // List of TimerIds to fast-forward delays for.\n  private timerIdsToSkip: TimerId[] = [];\n\n  // Backoff timer used to schedule retries for retryable operations\n  private backoff = new ExponentialBackoff(this, TimerId.AsyncQueueRetry);\n\n  // Visibility handler that triggers an immediate retry of all retryable\n  // operations. Meant to speed up recovery when we regain file system access\n  // after page comes into foreground.\n  private visibilityHandler: () => void = () => {\n    const document = getDocument();\n    if (document) {\n      logDebug(\n        LOG_TAG,\n        'Visibility state changed to ' + document.visibilityState\n      );\n    }\n    this.backoff.skipBackoff();\n  };\n\n  constructor() {\n    const document = getDocument();\n    if (document && typeof document.addEventListener === 'function') {\n      document.addEventListener('visibilitychange', this.visibilityHandler);\n    }\n  }\n\n  get isShuttingDown(): boolean {\n    return this._isShuttingDown;\n  }\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(op);\n  }\n\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void {\n    this.verifyNotFailed();\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueueInternal(op);\n  }\n\n  enterRestrictedMode(purgeExistingTasks?: boolean): void {\n    if (!this._isShuttingDown) {\n      this._isShuttingDown = true;\n      this.skipNonRestrictedTasks = purgeExistingTasks || false;\n      const document = getDocument();\n      if (document && typeof document.removeEventListener === 'function') {\n        document.removeEventListener(\n          'visibilitychange',\n          this.visibilityHandler\n        );\n      }\n    }\n  }\n\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    this.verifyNotFailed();\n    if (this._isShuttingDown) {\n      // Return a Promise which never resolves.\n      return new Promise<T>(() => {});\n    }\n\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const task = new Deferred<T>();\n    return this.enqueueInternal<unknown>(() => {\n      if (this._isShuttingDown && this.skipNonRestrictedTasks) {\n        // We do not resolve 'task'\n        return Promise.resolve();\n      }\n\n      op().then(task.resolve, task.reject);\n      return task.promise;\n    }).then(() => task.promise);\n  }\n\n  enqueueRetryable(op: () => Promise<void>): void {\n    this.enqueueAndForget(() => {\n      this.retryableOps.push(op);\n      return this.retryNextOp();\n    });\n  }\n\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  private async retryNextOp(): Promise<void> {\n    if (this.retryableOps.length === 0) {\n      return;\n    }\n\n    try {\n      await this.retryableOps[0]();\n      this.retryableOps.shift();\n      this.backoff.reset();\n    } catch (e) {\n      if (isIndexedDbTransactionError(e as Error)) {\n        logDebug(LOG_TAG, 'Operation failed with retryable error: ' + e);\n      } else {\n        throw e; // Failure will be handled by AsyncQueue\n      }\n    }\n\n    if (this.retryableOps.length > 0) {\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.backoff.backoffAndRun(() => this.retryNextOp());\n    }\n  }\n\n  private enqueueInternal<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    const newTail = this.tail.then(() => {\n      this.operationInProgress = true;\n      return op()\n        .catch((error: FirestoreError) => {\n          this.failure = error;\n          this.operationInProgress = false;\n          const message = getMessageOrStack(error);\n          logError('INTERNAL UNHANDLED ERROR: ', message);\n\n          // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n          throw error;\n        })\n        .then(result => {\n          this.operationInProgress = false;\n          return result;\n        });\n    });\n    this.tail = newTail;\n    return newTail;\n  }\n\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T> {\n    this.verifyNotFailed();\n\n    debugAssert(\n      delayMs >= 0,\n      `Attempted to schedule an operation with a negative delay of ${delayMs}`\n    );\n\n    // Fast-forward delays for timerIds that have been overriden.\n    if (this.timerIdsToSkip.indexOf(timerId) > -1) {\n      delayMs = 0;\n    }\n\n    const delayedOp = DelayedOperation.createAndSchedule<T>(\n      this,\n      timerId,\n      delayMs,\n      op,\n      removedOp =>\n        this.removeDelayedOperation(removedOp as DelayedOperation<unknown>)\n    );\n    this.delayedOperations.push(delayedOp as DelayedOperation<unknown>);\n    return delayedOp;\n  }\n\n  private verifyNotFailed(): void {\n    if (this.failure) {\n      fail('AsyncQueue is already failed: ' + getMessageOrStack(this.failure));\n    }\n  }\n\n  verifyOperationInProgress(): void {\n    debugAssert(\n      this.operationInProgress,\n      'verifyOpInProgress() called when no op in progress on this queue.'\n    );\n  }\n\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async drain(): Promise<void> {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let currentTail: Promise<unknown>;\n    do {\n      currentTail = this.tail;\n      await currentTail;\n    } while (currentTail !== this.tail);\n  }\n\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  containsDelayedOperation(timerId: TimerId): boolean {\n    for (const op of this.delayedOperations) {\n      if (op.timerId === timerId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  runAllDelayedOperationsUntil(lastTimerId: TimerId): Promise<void> {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.drain().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.delayedOperations.sort((a, b) => a.targetTimeMs - b.targetTimeMs);\n\n      for (const op of this.delayedOperations) {\n        op.skipDelay();\n        if (lastTimerId !== TimerId.All && op.timerId === lastTimerId) {\n          break;\n        }\n      }\n\n      return this.drain();\n    });\n  }\n\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  skipDelaysForTimerId(timerId: TimerId): void {\n    this.timerIdsToSkip.push(timerId);\n  }\n\n  /** Called once a DelayedOperation is run or canceled. */\n  private removeDelayedOperation(op: DelayedOperation<unknown>): void {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const index = this.delayedOperations.indexOf(op);\n    debugAssert(index >= 0, 'Delayed operation not found.');\n    this.delayedOperations.splice(index, 1);\n  }\n}\n\nexport function newAsyncQueue(): AsyncQueue {\n  return new AsyncQueueImpl();\n}\n\n/**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\nfunction getMessageOrStack(error: Error): string {\n  let message = error.message || '';\n  if (error.stack) {\n    if (error.stack.includes(error.message)) {\n      message = error.stack;\n    } else {\n      message = error.message + '\\n' + error.stack;\n    }\n  }\n  return message;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { deepEqual, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\n\nimport { User } from '../auth/user';\nimport {\n  IndexedDbOfflineComponentProvider,\n  MultiTabOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from '../core/component_provider';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport {\n  canFallbackFromIndexedDbError,\n  FirestoreClient,\n  firestoreClientDisableNetwork,\n  firestoreClientEnableNetwork,\n  firestoreClientGetNamedQuery,\n  firestoreClientLoadBundle,\n  firestoreClientWaitForPendingWrites,\n  setOfflineComponentProvider,\n  setOnlineComponentProvider\n} from '../core/firestore_client';\nimport { makeDatabaseInfo } from '../lite-api/components';\nimport {\n  Firestore as LiteFirestore,\n  connectFirestoreEmulator\n} from '../lite-api/database';\nimport { Query } from '../lite-api/reference';\nimport {\n  indexedDbClearPersistence,\n  indexedDbStoragePrefix\n} from '../local/indexeddb_persistence';\nimport { LRU_COLLECTION_DISABLED } from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { newAsyncQueue } from '../util/async_queue_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { LoadBundleTask } from './bundle';\nimport { CredentialsProvider } from './credentials';\nimport { PersistenceSettings, FirestoreSettings } from './settings';\nexport {\n  connectFirestoreEmulator,\n  EmulatorMockTokenOptions\n} from '../lite-api/database';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore': Firestore;\n  }\n}\n\n/**\n * Constant used to indicate the LRU garbage collection should be disabled.\n * Set this value as the `cacheSizeBytes` on the settings passed to the\n * {@link Firestore} instance.\n */\nexport const CACHE_SIZE_UNLIMITED = LRU_COLLECTION_DISABLED;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore extends LiteFirestore {\n  /**\n   * Whether it's a {@link Firestore} or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore';\n\n  readonly _queue: AsyncQueue = newAsyncQueue();\n  readonly _persistenceKey: string;\n\n  _firestoreClient: FirestoreClient | undefined;\n\n  /** @hideconstructor */\n  constructor(\n    authCredentialsProvider: CredentialsProvider<User>,\n    appCheckCredentialsProvider: CredentialsProvider<string>,\n    databaseId: DatabaseId,\n    app?: FirebaseApp\n  ) {\n    super(\n      authCredentialsProvider,\n      appCheckCredentialsProvider,\n      databaseId,\n      app\n    );\n    this._persistenceKey = app?.name || '[DEFAULT]';\n  }\n\n  _terminate(): Promise<void> {\n    if (!this._firestoreClient) {\n      // The client must be initialized to ensure that all subsequent API\n      // usage throws an exception.\n      configureFirestore(this);\n    }\n    return this._firestoreClient!.terminate();\n  }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized {@link Firestore} instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore');\n\n  if (provider.isInitialized(databaseId)) {\n    const existingInstance = provider.getImmediate({\n      identifier: databaseId\n    });\n    const initialSettings = provider.getOptions(\n      databaseId\n    ) as FirestoreSettings;\n    if (deepEqual(initialSettings, settings)) {\n      return existingInstance;\n    } else {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'initializeFirestore() has already been called with ' +\n          'different options. To avoid this error, call initializeFirestore() with the ' +\n          'same options as when it was originally called, or call getFirestore() to return the' +\n          ' already initialized instance.'\n      );\n    }\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.localCache !== undefined\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes will` +\n        `be deprecated. Instead, specify the cache size in the cache object`\n    );\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED &&\n    settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The default {@link Firestore} instance of the default app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The default {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the default app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || DEFAULT_DATABASE_NAME;\n  const db = _getProvider(app, 'firestore').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * @internal\n */\nexport function ensureFirestoreConfigured(\n  firestore: Firestore\n): FirestoreClient {\n  if (!firestore._firestoreClient) {\n    configureFirestore(firestore);\n  }\n  firestore._firestoreClient!.verifyNotTerminated();\n  return firestore._firestoreClient as FirestoreClient;\n}\n\nexport function configureFirestore(firestore: Firestore): void {\n  const settings = firestore._freezeSettings();\n  debugAssert(!!settings.host, 'FirestoreSettings.host is not set');\n  debugAssert(\n    !firestore._firestoreClient,\n    'configureFirestore() called multiple times'\n  );\n\n  const databaseInfo = makeDatabaseInfo(\n    firestore._databaseId,\n    firestore._app?.options.appId || '',\n    firestore._persistenceKey,\n    settings\n  );\n  firestore._firestoreClient = new FirestoreClient(\n    firestore._authCredentials,\n    firestore._appCheckCredentials,\n    firestore._queue,\n    databaseInfo\n  );\n  if (\n    settings.localCache?._offlineComponentProvider &&\n    settings.localCache?._onlineComponentProvider\n  ) {\n    firestore._firestoreClient._uninitializedComponentsProvider = {\n      _offlineKind: settings.localCache.kind,\n      _offline: settings.localCache._offlineComponentProvider,\n      _online: settings.localCache._onlineComponentProvider\n    };\n  }\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link (getFirestore:1)} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * Persistence cannot be used in a Node.js environment.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on IndexedDb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableIndexedDbPersistence(\n  firestore: Firestore,\n  persistenceSettings?: PersistenceSettings\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new IndexedDbOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes,\n    persistenceSettings?.forceOwnership\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise\n * it returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on indexeddb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableMultiTabIndexedDbPersistence(\n  firestore: Firestore\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableMultiTabIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new MultiTabOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */\nfunction setPersistenceProviders(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  const persistenceResult = new Deferred();\n  return client.asyncQueue\n    .enqueue(async () => {\n      try {\n        await setOfflineComponentProvider(client, offlineComponentProvider);\n        await setOnlineComponentProvider(client, onlineComponentProvider);\n        persistenceResult.resolve();\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error enabling indexeddb cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        persistenceResult.reject(error);\n      }\n    })\n    .then(() => persistenceResult.promise);\n}\n\n/**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */\nexport function clearIndexedDbPersistence(firestore: Firestore): Promise<void> {\n  if (firestore._initialized && !firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Persistence can only be cleared before a Firestore instance is ' +\n        'initialized or after it is terminated.'\n    );\n  }\n\n  const deferred = new Deferred<void>();\n  firestore._queue.enqueueAndForgetEvenWhileRestricted(async () => {\n    try {\n      await indexedDbClearPersistence(\n        indexedDbStoragePrefix(firestore._databaseId, firestore._persistenceKey)\n      );\n      deferred.resolve();\n    } catch (e) {\n      deferred.reject(e as Error | undefined);\n    }\n  });\n  return deferred.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */\nexport function waitForPendingWrites(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientWaitForPendingWrites(client);\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */\nexport function enableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientEnableNetwork(client);\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */\nexport function disableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientDisableNetwork(client);\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link (getFirestore:1)}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  _removeServiceInstance(\n    firestore.app,\n    'firestore',\n    firestore._databaseId.database\n  );\n  return firestore._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */\nexport function loadBundle(\n  firestore: Firestore,\n  bundleData: ReadableStream<Uint8Array> | ArrayBuffer | string\n): LoadBundleTask {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const resultTask = new LoadBundleTask();\n  firestoreClientLoadBundle(\n    client,\n    firestore._databaseId,\n    bundleData,\n    resultTask\n  );\n  return resultTask;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */\nexport function namedQuery(\n  firestore: Firestore,\n  name: string\n): Promise<Query | null> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientGetNamedQuery(client, name).then(namedQuery => {\n    if (!namedQuery) {\n      return null;\n    }\n\n    return new Query(firestore, null, namedQuery.query);\n  });\n}\n\nfunction verifyNotInitialized(firestore: Firestore): void {\n  if (firestore._initialized || firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore has already been started and persistence can no longer be ' +\n        'enabled. You can only enable persistence before calling any other ' +\n        'methods on a Firestore object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * An immutable object representing an array of bytes.\n */\nexport class Bytes {\n  _byteString: ByteString;\n\n  /** @hideconstructor */\n  constructor(byteString: ByteString) {\n    this._byteString = byteString;\n  }\n\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  static fromBase64String(base64: string): Bytes {\n    try {\n      return new Bytes(ByteString.fromBase64String(base64));\n    } catch (e) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Failed to construct data from Base64 string: ' + e\n      );\n    }\n  }\n\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n  static fromUint8Array(array: Uint8Array): Bytes {\n    return new Bytes(ByteString.fromUint8Array(array));\n  }\n\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n  toBase64(): string {\n    return this._byteString.toBase64();\n  }\n\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n  toUint8Array(): Uint8Array {\n    return this._byteString.toUint8Array();\n  }\n\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n  toString(): string {\n    return 'Bytes(base64: ' + this.toBase64() + ')';\n  }\n\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n  isEqual(other: Bytes): boolean {\n    return this._byteString.isEqual(other._byteString);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DOCUMENT_KEY_NAME,\n  FieldPath as InternalFieldPath\n} from '../model/path';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nexport class FieldPath {\n  /** Internal representation of a Firestore field path. */\n  readonly _internalPath: InternalFieldPath;\n\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor(...fieldNames: string[]) {\n    for (let i = 0; i < fieldNames.length; ++i) {\n      if (fieldNames[i].length === 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid field name at argument $(i + 1). ` +\n            'Field names must not be empty.'\n        );\n      }\n    }\n\n    this._internalPath = new InternalFieldPath(fieldNames);\n  }\n\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  isEqual(other: FieldPath): boolean {\n    return this._internalPath.isEqual(other._internalPath);\n  }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nexport function documentId(): FieldPath {\n  return new FieldPath(DOCUMENT_KEY_NAME);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ParseContext } from '../api/parse_context';\nimport { FieldTransform } from '../model/mutation';\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nexport abstract class FieldValue {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(public _methodName: string) {}\n\n  /** Compares `FieldValue`s for equality. */\n  abstract isEqual(other: FieldValue): boolean;\n  abstract _toFieldTransform(context: ParseContext): FieldTransform | null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { primitiveComparator } from '../util/misc';\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nexport class GeoPoint {\n  // Prefix with underscore to signal this is a private variable in JS and\n  // prevent it showing up for autocompletion when typing latitude or longitude.\n  private _lat: number;\n  private _long: number;\n\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(latitude: number, longitude: number) {\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Latitude must be a number between -90 and 90, but was: ' + latitude\n      );\n    }\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Longitude must be a number between -180 and 180, but was: ' + longitude\n      );\n    }\n\n    this._lat = latitude;\n    this._long = longitude;\n  }\n\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  get latitude(): number {\n    return this._lat;\n  }\n\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n  get longitude(): number {\n    return this._long;\n  }\n\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n  isEqual(other: GeoPoint): boolean {\n    return this._lat === other._lat && this._long === other._long;\n  }\n\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n  toJSON(): { latitude: number; longitude: number } {\n    return { latitude: this._lat, longitude: this._long };\n  }\n\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n  _compareTo(other: GeoPoint): number {\n    return (\n      primitiveComparator(this._lat, other._lat) ||\n      primitiveComparator(this._long, other._long)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentData,\n  FieldPath as PublicFieldPath,\n  SetOptions\n} from '@firebase/firestore-types';\nimport { Compat, getModularInstance } from '@firebase/util';\n\nimport { ParseContext } from '../api/parse_context';\nimport { DatabaseId } from '../core/database_info';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  FieldTransform,\n  Mutation,\n  PatchMutation,\n  Precondition,\n  SetMutation\n} from '../model/mutation';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform\n} from '../model/transform_operation';\nimport { newSerializer } from '../platform/serializer';\nimport {\n  MapValue as ProtoMapValue,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { toNumber } from '../remote/number_serializer';\nimport {\n  JsonProtoSerializer,\n  toBytes,\n  toResourceName,\n  toTimestamp\n} from '../remote/serializer';\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { isPlainObject, valueDescription } from '../util/input_validation';\nimport { Dict, forEach, isEmpty } from '../util/obj';\n\nimport { Bytes } from './bytes';\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { FieldValue } from './field_value';\nimport { GeoPoint } from './geo_point';\nimport {\n  DocumentReference,\n  PartialWithFieldValue,\n  WithFieldValue\n} from './reference';\nimport { Timestamp } from './timestamp';\n\nconst RESERVED_FIELD_REGEX = /^__.*__$/;\n\n/**\n * An untyped Firestore Data Converter interface that is shared between the\n * lite, firestore-exp and classic SDK.\n */\nexport interface UntypedFirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> {\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n  fromFirestore(snapshot: unknown, options?: unknown): AppModelType;\n}\n\n/** The result of parsing document data (e.g. for a setData call). */\nexport class ParsedSetData {\n  constructor(\n    readonly data: ObjectValue,\n    readonly fieldMask: FieldMask | null,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    if (this.fieldMask !== null) {\n      return new PatchMutation(\n        key,\n        this.data,\n        this.fieldMask,\n        precondition,\n        this.fieldTransforms\n      );\n    } else {\n      return new SetMutation(\n        key,\n        this.data,\n        precondition,\n        this.fieldTransforms\n      );\n    }\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nexport class ParsedUpdateData {\n  constructor(\n    readonly data: ObjectValue,\n    // The fieldMask does not include document transforms.\n    readonly fieldMask: FieldMask,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    return new PatchMutation(\n      key,\n      this.data,\n      this.fieldMask,\n      precondition,\n      this.fieldTransforms\n    );\n  }\n}\n\n/*\n * Represents what type of API method provided the data being parsed; useful\n * for determining which error conditions apply during parsing and providing\n * better error messages.\n */\nexport const enum UserDataSource {\n  Set,\n  Update,\n  MergeSet,\n  /**\n   * Indicates the source is a where clause, cursor bound, arrayUnion()\n   * element, etc. Of note, isWrite(source) will return false.\n   */\n  Argument,\n  /**\n   * Indicates that the source is an Argument that may directly contain nested\n   * arrays (e.g. the operand of an `in` query).\n   */\n  ArrayArgument\n}\n\nfunction isWrite(dataSource: UserDataSource): boolean {\n  switch (dataSource) {\n    case UserDataSource.Set: // fall through\n    case UserDataSource.MergeSet: // fall through\n    case UserDataSource.Update:\n      return true;\n    case UserDataSource.Argument:\n    case UserDataSource.ArrayArgument:\n      return false;\n    default:\n      throw fail(`Unexpected case for UserDataSource: ${dataSource}`);\n  }\n}\n\n/** Contains the settings that are mutated as we parse user data. */\ninterface ContextSettings {\n  /** Indicates what kind of API method this data came from. */\n  readonly dataSource: UserDataSource;\n  /** The name of the method the user called to create the ParseContext. */\n  readonly methodName: string;\n  /** The document the user is attempting to modify, if that applies. */\n  readonly targetDoc?: DocumentKey;\n  /**\n   * A path within the object being parsed. This could be an empty path (in\n   * which case the context represents the root of the data being parsed), or a\n   * nonempty path (indicating the context represents a nested location within\n   * the data).\n   */\n  readonly path?: InternalFieldPath;\n  /**\n   * Whether or not this context corresponds to an element of an array.\n   * If not set, elements are treated as if they were outside of arrays.\n   */\n  readonly arrayElement?: boolean;\n  /**\n   * Whether or not a converter was specified in this context. If true, error\n   * messages will reference the converter when invalid data is provided.\n   */\n  readonly hasConverter?: boolean;\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass ParseContextImpl implements ParseContext {\n  readonly fieldTransforms: FieldTransform[];\n  readonly fieldMask: InternalFieldPath[];\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(\n    readonly settings: ContextSettings,\n    readonly databaseId: DatabaseId,\n    readonly serializer: JsonProtoSerializer,\n    readonly ignoreUndefinedProperties: boolean,\n    fieldTransforms?: FieldTransform[],\n    fieldMask?: InternalFieldPath[]\n  ) {\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    if (fieldTransforms === undefined) {\n      this.validatePath();\n    }\n    this.fieldTransforms = fieldTransforms || [];\n    this.fieldMask = fieldMask || [];\n  }\n\n  get path(): InternalFieldPath | undefined {\n    return this.settings.path;\n  }\n\n  get dataSource(): UserDataSource {\n    return this.settings.dataSource;\n  }\n\n  /** Returns a new context with the specified settings overwritten. */\n  contextWith(configuration: Partial<ContextSettings>): ParseContextImpl {\n    return new ParseContextImpl(\n      { ...this.settings, ...configuration },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties,\n      this.fieldTransforms,\n      this.fieldMask\n    );\n  }\n\n  childContextForField(field: string): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePathSegment(field);\n    return context;\n  }\n\n  childContextForFieldPath(field: InternalFieldPath): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePath();\n    return context;\n  }\n\n  childContextForArray(index: number): ParseContextImpl {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.contextWith({ path: undefined, arrayElement: true });\n  }\n\n  createError(reason: string): FirestoreError {\n    return createError(\n      reason,\n      this.settings.methodName,\n      this.settings.hasConverter || false,\n      this.path,\n      this.settings.targetDoc\n    );\n  }\n\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(fieldPath: InternalFieldPath): boolean {\n    return (\n      this.fieldMask.find(field => fieldPath.isPrefixOf(field)) !== undefined ||\n      this.fieldTransforms.find(transform =>\n        fieldPath.isPrefixOf(transform.field)\n      ) !== undefined\n    );\n  }\n\n  private validatePath(): void {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (!this.path) {\n      return;\n    }\n    for (let i = 0; i < this.path.length; i++) {\n      this.validatePathSegment(this.path.get(i));\n    }\n  }\n\n  private validatePathSegment(segment: string): void {\n    if (segment.length === 0) {\n      throw this.createError('Document fields must not be empty');\n    }\n    if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n      throw this.createError('Document fields cannot begin and end with \"__\"');\n    }\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nexport class UserDataReader {\n  private readonly serializer: JsonProtoSerializer;\n\n  constructor(\n    private readonly databaseId: DatabaseId,\n    private readonly ignoreUndefinedProperties: boolean,\n    serializer?: JsonProtoSerializer\n  ) {\n    this.serializer = serializer || newSerializer(databaseId);\n  }\n\n  /** Creates a new top-level parse context. */\n  createContext(\n    dataSource: UserDataSource,\n    methodName: string,\n    targetDoc?: DocumentKey,\n    hasConverter = false\n  ): ParseContextImpl {\n    return new ParseContextImpl(\n      {\n        dataSource,\n        methodName,\n        targetDoc,\n        path: InternalFieldPath.emptyPath(),\n        arrayElement: false,\n        hasConverter\n      },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties\n    );\n  }\n}\n\nexport function newUserDataReader(firestore: Firestore): UserDataReader {\n  const settings = firestore._freezeSettings();\n  const serializer = newSerializer(firestore._databaseId);\n  return new UserDataReader(\n    firestore._databaseId,\n    !!settings.ignoreUndefinedProperties,\n    serializer\n  );\n}\n\n/** Parse document data from a set() call. */\nexport function parseSetData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown,\n  hasConverter: boolean,\n  options: SetOptions = {}\n): ParsedSetData {\n  const context = userDataReader.createContext(\n    options.merge || options.mergeFields\n      ? UserDataSource.MergeSet\n      : UserDataSource.Set,\n    methodName,\n    targetDoc,\n    hasConverter\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n  const updateData = parseObject(input, context)!;\n\n  let fieldMask: FieldMask | null;\n  let fieldTransforms: FieldTransform[];\n\n  if (options.merge) {\n    fieldMask = new FieldMask(context.fieldMask);\n    fieldTransforms = context.fieldTransforms;\n  } else if (options.mergeFields) {\n    const validatedFieldPaths: InternalFieldPath[] = [];\n\n    for (const stringOrFieldPath of options.mergeFields) {\n      const fieldPath = fieldPathFromArgument(\n        methodName,\n        stringOrFieldPath,\n        targetDoc\n      );\n      if (!context.contains(fieldPath)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Field '${fieldPath}' is specified in your field mask but missing from your input data.`\n        );\n      }\n\n      if (!fieldMaskContains(validatedFieldPaths, fieldPath)) {\n        validatedFieldPaths.push(fieldPath);\n      }\n    }\n\n    fieldMask = new FieldMask(validatedFieldPaths);\n    fieldTransforms = context.fieldTransforms.filter(transform =>\n      fieldMask!.covers(transform.field)\n    );\n  } else {\n    fieldMask = null;\n    fieldTransforms = context.fieldTransforms;\n  }\n\n  return new ParsedSetData(\n    new ObjectValue(updateData),\n    fieldMask,\n    fieldTransforms\n  );\n}\n\nexport class DeleteFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): null {\n    if (context.dataSource === UserDataSource.MergeSet) {\n      // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n      context.fieldMask.push(context.path!);\n    } else if (context.dataSource === UserDataSource.Update) {\n      debugAssert(\n        context.path!.length > 0,\n        `${this._methodName}() at the top level should have already ` +\n          'been handled.'\n      );\n      throw context.createError(\n        `${this._methodName}() can only appear at the top level ` +\n          'of your update data'\n      );\n    } else {\n      // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n      throw context.createError(\n        `${this._methodName}() cannot be used with set() unless you pass ` +\n          '{merge:true}'\n      );\n    }\n    return null;\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof DeleteFieldValueImpl;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction createSentinelChildContext(\n  fieldValue: FieldValue,\n  context: ParseContextImpl,\n  arrayElement: boolean\n): ParseContextImpl {\n  return new ParseContextImpl(\n    {\n      dataSource: UserDataSource.Argument,\n      targetDoc: context.settings.targetDoc,\n      methodName: fieldValue._methodName,\n      arrayElement\n    },\n    context.databaseId,\n    context.serializer,\n    context.ignoreUndefinedProperties\n  );\n}\n\nexport class ServerTimestampFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    return new FieldTransform(context.path!, new ServerTimestampTransform());\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof ServerTimestampFieldValueImpl;\n  }\n}\n\nexport class ArrayUnionFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayUnionTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    // TODO(mrschmidt): Implement isEquals\n    return this === other;\n  }\n}\n\nexport class ArrayRemoveFieldValueImpl extends FieldValue {\n  constructor(methodName: string, readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayRemoveTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    // TODO(mrschmidt): Implement isEquals\n    return this === other;\n  }\n}\n\nexport class NumericIncrementFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _operand: number) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const numericIncrement = new NumericIncrementTransformOperation(\n      context.serializer,\n      toNumber(context.serializer, this._operand)\n    );\n    return new FieldTransform(context.path!, numericIncrement);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    // TODO(mrschmidt): Implement isEquals\n    return this === other;\n  }\n}\n\n/** Parse update data from an update() call. */\nexport function parseUpdateData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n  forEach(input as Dict<unknown>, (key, value) => {\n    const path = fieldPathFromDotSeparatedString(methodName, key, targetDoc);\n\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    value = getModularInstance(value);\n\n    const childContext = context.childContextForFieldPath(path);\n    if (value instanceof DeleteFieldValueImpl) {\n      // Add it to the field mask, but don't add anything to updateData.\n      fieldMaskPaths.push(path);\n    } else {\n      const parsedValue = parseData(value, childContext);\n      if (parsedValue != null) {\n        fieldMaskPaths.push(path);\n        updateData.set(path, parsedValue);\n      }\n    }\n  });\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nexport function parseUpdateVarargs(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  field: string | PublicFieldPath | Compat<PublicFieldPath>,\n  value: unknown,\n  moreFieldsAndValues: unknown[]\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  const keys = [fieldPathFromArgument(methodName, field, targetDoc)];\n  const values = [value];\n\n  if (moreFieldsAndValues.length % 2 !== 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${methodName}() needs to be called with an even number ` +\n        'of arguments that alternate between field names and values.'\n    );\n  }\n\n  for (let i = 0; i < moreFieldsAndValues.length; i += 2) {\n    keys.push(\n      fieldPathFromArgument(\n        methodName,\n        moreFieldsAndValues[i] as string | PublicFieldPath\n      )\n    );\n    values.push(moreFieldsAndValues[i + 1]);\n  }\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let i = keys.length - 1; i >= 0; --i) {\n    if (!fieldMaskContains(fieldMaskPaths, keys[i])) {\n      const path = keys[i];\n      let value = values[i];\n\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      value = getModularInstance(value);\n\n      const childContext = context.childContextForFieldPath(path);\n      if (value instanceof DeleteFieldValueImpl) {\n        // Add it to the field mask, but don't add anything to updateData.\n        fieldMaskPaths.push(path);\n      } else {\n        const parsedValue = parseData(value, childContext);\n        if (parsedValue != null) {\n          fieldMaskPaths.push(path);\n          updateData.set(path, parsedValue);\n        }\n      }\n    }\n  }\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nexport function parseQueryValue(\n  userDataReader: UserDataReader,\n  methodName: string,\n  input: unknown,\n  allowArrays = false\n): ProtoValue {\n  const context = userDataReader.createContext(\n    allowArrays ? UserDataSource.ArrayArgument : UserDataSource.Argument,\n    methodName\n  );\n  const parsed = parseData(input, context);\n  debugAssert(parsed != null, 'Parsed data should not be null.');\n  debugAssert(\n    context.fieldTransforms.length === 0,\n    'Field transforms should have been disallowed.'\n  );\n  return parsed;\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nexport function parseData(\n  input: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  input = getModularInstance(input);\n\n  if (looksLikeJsonObject(input)) {\n    validatePlainObject('Unsupported field value:', context, input);\n    return parseObject(input, context);\n  } else if (input instanceof FieldValue) {\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    parseSentinelFieldValue(input, context);\n    return null;\n  } else if (input === undefined && context.ignoreUndefinedProperties) {\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  } else {\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    if (context.path) {\n      context.fieldMask.push(context.path);\n    }\n\n    if (input instanceof Array) {\n      // TODO(b/34871131): Include the path containing the array in the error\n      // message.\n      // In the case of IN queries, the parsed data is an array (representing\n      // the set of values to be included for the IN query) that may directly\n      // contain additional arrays (each representing an individual field\n      // value), so we disable this validation.\n      if (\n        context.settings.arrayElement &&\n        context.dataSource !== UserDataSource.ArrayArgument\n      ) {\n        throw context.createError('Nested arrays are not supported');\n      }\n      return parseArray(input as unknown[], context);\n    } else {\n      return parseScalarValue(input, context);\n    }\n  }\n}\n\nfunction parseObject(\n  obj: Dict<unknown>,\n  context: ParseContextImpl\n): { mapValue: ProtoMapValue } {\n  const fields: Dict<ProtoValue> = {};\n\n  if (isEmpty(obj)) {\n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    if (context.path && context.path.length > 0) {\n      context.fieldMask.push(context.path);\n    }\n  } else {\n    forEach(obj, (key: string, val: unknown) => {\n      const parsedValue = parseData(val, context.childContextForField(key));\n      if (parsedValue != null) {\n        fields[key] = parsedValue;\n      }\n    });\n  }\n\n  return { mapValue: { fields } };\n}\n\nfunction parseArray(array: unknown[], context: ParseContextImpl): ProtoValue {\n  const values: ProtoValue[] = [];\n  let entryIndex = 0;\n  for (const entry of array) {\n    let parsedEntry = parseData(\n      entry,\n      context.childContextForArray(entryIndex)\n    );\n    if (parsedEntry == null) {\n      // Just include nulls in the array for fields being replaced with a\n      // sentinel.\n      parsedEntry = { nullValue: 'NULL_VALUE' };\n    }\n    values.push(parsedEntry);\n    entryIndex++;\n  }\n  return { arrayValue: { values } };\n}\n\n/**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\nfunction parseSentinelFieldValue(\n  value: FieldValue,\n  context: ParseContextImpl\n): void {\n  // Sentinels are only supported with writes, and not within arrays.\n  if (!isWrite(context.dataSource)) {\n    throw context.createError(\n      `${value._methodName}() can only be used with update() and set()`\n    );\n  }\n  if (!context.path) {\n    throw context.createError(\n      `${value._methodName}() is not currently supported inside arrays`\n    );\n  }\n\n  const fieldTransform = value._toFieldTransform(context);\n  if (fieldTransform) {\n    context.fieldTransforms.push(fieldTransform);\n  }\n}\n\n/**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */\nfunction parseScalarValue(\n  value: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  value = getModularInstance(value);\n\n  if (value === null) {\n    return { nullValue: 'NULL_VALUE' };\n  } else if (typeof value === 'number') {\n    return toNumber(context.serializer, value);\n  } else if (typeof value === 'boolean') {\n    return { booleanValue: value };\n  } else if (typeof value === 'string') {\n    return { stringValue: value };\n  } else if (value instanceof Date) {\n    const timestamp = Timestamp.fromDate(value);\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof Timestamp) {\n    // Firestore backend truncates precision down to microseconds. To ensure\n    // offline mode works the same with regards to truncation, perform the\n    // truncation immediately without waiting for the backend to do that.\n    const timestamp = new Timestamp(\n      value.seconds,\n      Math.floor(value.nanoseconds / 1000) * 1000\n    );\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof GeoPoint) {\n    return {\n      geoPointValue: {\n        latitude: value.latitude,\n        longitude: value.longitude\n      }\n    };\n  } else if (value instanceof Bytes) {\n    return { bytesValue: toBytes(context.serializer, value._byteString) };\n  } else if (value instanceof DocumentReference) {\n    const thisDb = context.databaseId;\n    const otherDb = value.firestore._databaseId;\n    if (!otherDb.isEqual(thisDb)) {\n      throw context.createError(\n        'Document reference is for database ' +\n          `${otherDb.projectId}/${otherDb.database} but should be ` +\n          `for database ${thisDb.projectId}/${thisDb.database}`\n      );\n    }\n    return {\n      referenceValue: toResourceName(\n        value.firestore._databaseId || context.databaseId,\n        value._key.path\n      )\n    };\n  } else {\n    throw context.createError(\n      `Unsupported field value: ${valueDescription(value)}`\n    );\n  }\n}\n\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    !(input instanceof Array) &&\n    !(input instanceof Date) &&\n    !(input instanceof Timestamp) &&\n    !(input instanceof GeoPoint) &&\n    !(input instanceof Bytes) &&\n    !(input instanceof DocumentReference) &&\n    !(input instanceof FieldValue)\n  );\n}\n\nfunction validatePlainObject(\n  message: string,\n  context: ParseContextImpl,\n  input: unknown\n): asserts input is Dict<unknown> {\n  if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n    const description = valueDescription(input);\n    if (description === 'an object') {\n      // Massage the error if it was an object.\n      throw context.createError(message + ' a custom object');\n    } else {\n      throw context.createError(message + ' ' + description);\n    }\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nexport function fieldPathFromArgument(\n  methodName: string,\n  path: string | PublicFieldPath | Compat<PublicFieldPath>,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  path = getModularInstance(path);\n\n  if (path instanceof FieldPath) {\n    return path._internalPath;\n  } else if (typeof path === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, path);\n  } else {\n    const message = 'Field path arguments must be of type string or ';\n    throw createError(\n      message,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst FIELD_PATH_RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nexport function fieldPathFromDotSeparatedString(\n  methodName: string,\n  path: string,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  const found = path.search(FIELD_PATH_RESERVED);\n  if (found >= 0) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not contain ` +\n        `'~', '*', '/', '[', or ']'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n\n  try {\n    return new FieldPath(...path.split('.'))._internalPath;\n  } catch (e) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not be empty, ` +\n        `begin with '.', end with '.', or contain '..'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\nfunction createError(\n  reason: string,\n  methodName: string,\n  hasConverter: boolean,\n  path?: InternalFieldPath,\n  targetDoc?: DocumentKey\n): FirestoreError {\n  const hasPath = path && !path.isEmpty();\n  const hasDocument = targetDoc !== undefined;\n  let message = `Function ${methodName}() called with invalid data`;\n  if (hasConverter) {\n    message += ' (via `toFirestore()`)';\n  }\n  message += '. ';\n\n  let description = '';\n  if (hasPath || hasDocument) {\n    description += ' (found';\n\n    if (hasPath) {\n      description += ` in field ${path}`;\n    }\n    if (hasDocument) {\n      description += ` in document ${targetDoc}`;\n    }\n    description += ')';\n  }\n\n  return new FirestoreError(\n    Code.INVALID_ARGUMENT,\n    message + reason + description\n  );\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction fieldMaskContains(\n  haystack: InternalFieldPath[],\n  needle: InternalFieldPath\n): boolean {\n  return haystack.some(v => v.isEqual(needle));\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Compat, getModularInstance } from '@firebase/util';\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport { arrayEquals } from '../util/misc';\n\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport {\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  queryEqual,\n  SetOptions,\n  WithFieldValue\n} from './reference';\nimport {\n  fieldPathFromDotSeparatedString,\n  UntypedFirestoreDataConverter\n} from './user_data_reader';\nimport { AbstractUserDataWriter } from './user_data_writer';\n\n/**\n * Converter used by `withConverter()` to transform user objects of type\n * `AppModelType` into Firestore data of type `DbModelType`.\n *\n * Using the converter allows you to specify generic type arguments when\n * storing and retrieving objects from Firestore.\n *\n * @example\n * ```typescript\n * class Post {\n *   constructor(readonly title: string, readonly author: string) {}\n *\n *   toString(): string {\n *     return this.title + ', by ' + this.author;\n *   }\n * }\n *\n * interface PostDbModel {\n *   title: string;\n *   author: string;\n * }\n *\n * const postConverter = {\n *   toFirestore(post: WithFieldValue<Post>): PostDbModel {\n *     return {title: post.title, author: post.author};\n *   },\n *   fromFirestore(snapshot: QueryDocumentSnapshot): Post {\n *     const data = snapshot.data(options) as PostDbModel;\n *     return new Post(data.title, data.author);\n *   }\n * };\n *\n * const postSnap = await firebase.firestore()\n *   .collection('posts')\n *   .withConverter(postConverter)\n *   .doc().get();\n * const post = postSnap.data();\n * if (post !== undefined) {\n *   post.title; // string\n *   post.toString(); // Should be defined\n *   post.someNonExistentProperty; // TS error\n * }\n * ```\n */\nexport interface FirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain Javascript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link @firebase/firestore/lite#(setDoc:1)},\n   * {@link @firebase/firestore/lite#(WriteBatch.set:1)} and\n   * {@link @firebase/firestore/lite#(Transaction.set:1)}.\n   *\n   * The `WithFieldValue<T>` type extends `T` to also allow FieldValues such as\n   * {@link (deleteField:1)} to be used as property values.\n   */\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain Javascript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link @firebase/firestore/lite#(setDoc:1)},\n   * {@link @firebase/firestore/lite#(WriteBatch.set:1)} and\n   * {@link @firebase/firestore/lite#(Transaction.set:1)} with `merge:true`\n   * or `mergeFields`.\n   *\n   * The `PartialWithFieldValue<T>` type extends `Partial<T>` to allow\n   * FieldValues such as {@link (arrayUnion:1)} to be used as property values.\n   * It also supports nested `Partial` by allowing nested fields to be\n   * omitted.\n   */\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert Firestore data into an object of\n   * type `AppModelType`. You can access your data by calling:\n   * `snapshot.data()`.\n   *\n   * Generally, the data returned from `snapshot.data()` can be cast to\n   * `DbModelType`; however, this is not guaranteed as writes to the database\n   * may have occurred without a type converter enforcing this specific layout.\n   *\n   * @param snapshot - A `QueryDocumentSnapshot` containing your data and\n   * metadata.\n   */\n  fromFirestore(\n    snapshot: QueryDocumentSnapshot<DocumentData, DocumentData>\n  ): AppModelType;\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nexport class DocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  constructor(\n    public _firestore: Firestore,\n    public _userDataWriter: AbstractUserDataWriter,\n    public _key: DocumentKey,\n    public _document: Document | null,\n    public _converter: UntypedFirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null\n  ) {}\n\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n  get ref(): DocumentReference<AppModelType, DbModelType> {\n    return new DocumentReference<AppModelType, DbModelType>(\n      this._firestore,\n      this._converter,\n      this._key\n    );\n  }\n\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n  exists(): this is QueryDocumentSnapshot<AppModelType, DbModelType> {\n    return this._document !== null;\n  }\n\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n  data(): AppModelType | undefined {\n    if (!this._document) {\n      return undefined;\n    } else if (this._converter) {\n      // We only want to use the converter and create a new DocumentSnapshot\n      // if a converter has been provided.\n      const snapshot = new QueryDocumentSnapshot(\n        this._firestore,\n        this._userDataWriter,\n        this._key,\n        this._document,\n        /* converter= */ null\n      );\n      return this._converter.fromFirestore(snapshot);\n    } else {\n      return this._userDataWriter.convertValue(\n        this._document.data.value\n      ) as AppModelType;\n    }\n  }\n\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(fieldPath: string | FieldPath): any {\n    if (this._document) {\n      const value = this._document.data.field(\n        fieldPathFromArgument('DocumentSnapshot.get', fieldPath)\n      );\n      if (value !== null) {\n        return this._userDataWriter.convertValue(value);\n      }\n    }\n    return undefined;\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nexport class QueryDocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends DocumentSnapshot<AppModelType, DbModelType> {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data(): AppModelType {\n    return super.data() as AppModelType;\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nexport class QuerySnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * The query on which you called {@link getDocs} in order to get this\n   * `QuerySnapshot`.\n   */\n  readonly query: Query<AppModelType, DbModelType>;\n\n  /** @hideconstructor */\n  constructor(\n    _query: Query<AppModelType, DbModelType>,\n    readonly _docs: Array<QueryDocumentSnapshot<AppModelType, DbModelType>>\n  ) {\n    this.query = _query;\n  }\n\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs(): Array<QueryDocumentSnapshot<AppModelType, DbModelType>> {\n    return [...this._docs];\n  }\n\n  /** The number of documents in the `QuerySnapshot`. */\n  get size(): number {\n    return this.docs.length;\n  }\n\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty(): boolean {\n    return this.docs.length === 0;\n  }\n\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(\n    callback: (\n      result: QueryDocumentSnapshot<AppModelType, DbModelType>\n    ) => void,\n    thisArg?: unknown\n  ): void {\n    this._docs.forEach(callback, thisArg);\n  }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nexport function snapshotEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>,\n  right:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (left instanceof DocumentSnapshot && right instanceof DocumentSnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      left._key.isEqual(right._key) &&\n      (left._document === null\n        ? right._document === null\n        : left._document.isEqual(right._document)) &&\n      left._converter === right._converter\n    );\n  } else if (left instanceof QuerySnapshot && right instanceof QuerySnapshot) {\n    return (\n      queryEqual(left.query, right.query) &&\n      arrayEquals(left.docs, right.docs, snapshotEqual)\n    );\n  }\n\n  return false;\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nexport function fieldPathFromArgument(\n  methodName: string,\n  arg: string | FieldPath | Compat<FieldPath>\n): InternalFieldPath {\n  if (typeof arg === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, arg);\n  } else if (arg instanceof FieldPath) {\n    return arg._internalPath;\n  } else {\n    return arg._delegate._internalPath;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport { Direction, OrderBy } from '../core/order_by';\nimport {\n  isCollectionGroupQuery,\n  LimitType,\n  Query as InternalQuery,\n  queryNormalizedOrderBy,\n  queryWithAddedFilter,\n  queryWithAddedOrderBy,\n  queryWithEndAt,\n  queryWithLimit,\n  queryWithStartAt\n} from '../core/query';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath as InternalFieldPath, ResourcePath } from '../model/path';\nimport { isServerTimestamp } from '../model/server_timestamps';\nimport { refValue } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { Code, FirestoreError } from '../util/error';\nimport {\n  validatePositiveNumber,\n  valueDescription\n} from '../util/input_validation';\n\nimport { FieldPath } from './field_path';\nimport { DocumentData, DocumentReference, Query } from './reference';\nimport { DocumentSnapshot, fieldPathFromArgument } from './snapshot';\nimport {\n  newUserDataReader,\n  parseQueryValue,\n  UserDataReader\n} from './user_data_reader';\n\nexport function validateHasExplicitOrderByForLimitToLast(\n  query: InternalQuery\n): void {\n  if (\n    query.limitType === LimitType.Last &&\n    query.explicitOrderBy.length === 0\n  ) {\n    throw new FirestoreError(\n      Code.UNIMPLEMENTED,\n      'limitToLast() queries require specifying at least one orderBy() clause'\n    );\n  }\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'where'\n  | 'orderBy'\n  | 'limit'\n  | 'limitToLast'\n  | 'startAt'\n  | 'startAfter'\n  | 'endAt'\n  | 'endBefore';\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nexport abstract class AppliableConstraint {\n  /**\n   * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n   * {@link AppliableConstraint} applied.\n   */\n  abstract _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType>;\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint extends AppliableConstraint {\n  /** The type of this query constraint */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n   * {@link AppliableConstraint} applied.\n   */\n  abstract _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType>;\n}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also\n * include additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new\n * constraints.\n * @param compositeFilter - The {@link QueryCompositeFilterConstraint} to\n * apply. Create {@link QueryCompositeFilterConstraint} using {@link and} or\n * {@link or}.\n * @param queryConstraints - Additional {@link QueryNonFilterConstraint}s to\n * apply (e.g. {@link orderBy}, {@link limit}).\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  compositeFilter: QueryCompositeFilterConstraint,\n  ...queryConstraints: QueryNonFilterConstraint[]\n): Query<AppModelType, DbModelType>;\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also\n * include additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new\n * constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  ...queryConstraints: QueryConstraint[]\n): Query<AppModelType, DbModelType>;\n\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  queryConstraint: QueryCompositeFilterConstraint | QueryConstraint | undefined,\n  ...additionalQueryConstraints: Array<\n    QueryConstraint | QueryNonFilterConstraint\n  >\n): Query<AppModelType, DbModelType> {\n  let queryConstraints: AppliableConstraint[] = [];\n\n  if (queryConstraint instanceof AppliableConstraint) {\n    queryConstraints.push(queryConstraint);\n  }\n\n  queryConstraints = queryConstraints.concat(additionalQueryConstraints);\n\n  validateQueryConstraintArray(queryConstraints);\n\n  for (const constraint of queryConstraints) {\n    query = constraint._apply(query);\n  }\n  return query;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nexport class QueryFieldFilterConstraint extends QueryConstraint {\n  /** The type of this query constraint */\n  readonly type = 'where';\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    private readonly _field: InternalFieldPath,\n    private _op: Operator,\n    private _value: unknown\n  ) {\n    super();\n  }\n\n  static _create(\n    _field: InternalFieldPath,\n    _op: Operator,\n    _value: unknown\n  ): QueryFieldFilterConstraint {\n    return new QueryFieldFilterConstraint(_field, _op, _value);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const filter = this._parse(query);\n    validateNewFieldFilter(query._query, filter);\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedFilter(query._query, filter)\n    );\n  }\n\n  _parse<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): FieldFilter {\n    const reader = newUserDataReader(query.firestore);\n    const filter = newQueryFilter(\n      query._query,\n      'where',\n      reader,\n      query.firestore._databaseId,\n      this._field,\n      this._op,\n      this._value\n    );\n    return filter;\n  }\n}\n\n/**\n * Filter conditions in a {@link where} clause are specified using the\n * strings '&lt;', '&lt;=', '==', '!=', '&gt;=', '&gt;', 'array-contains', 'in',\n * 'array-contains-any', and 'not-in'.\n */\nexport type WhereFilterOp =\n  | '<'\n  | '<='\n  | '=='\n  | '!='\n  | '>='\n  | '>'\n  | 'array-contains'\n  | 'in'\n  | 'array-contains-any'\n  | 'not-in';\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nexport function where(\n  fieldPath: string | FieldPath,\n  opStr: WhereFilterOp,\n  value: unknown\n): QueryFieldFilterConstraint {\n  const op = opStr as Operator;\n  const field = fieldPathFromArgument('where', fieldPath);\n  return QueryFieldFilterConstraint._create(field, op, value);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\nexport class QueryCompositeFilterConstraint extends AppliableConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'or' | 'and',\n    private readonly _queryConstraints: QueryFilterConstraint[]\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'or' | 'and',\n    _queryConstraints: QueryFilterConstraint[]\n  ): QueryCompositeFilterConstraint {\n    return new QueryCompositeFilterConstraint(type, _queryConstraints);\n  }\n\n  _parse<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Filter {\n    const parsedFilters = this._queryConstraints\n      .map(queryConstraint => {\n        return queryConstraint._parse(query);\n      })\n      .filter(parsedFilter => parsedFilter.getFilters().length > 0);\n\n    if (parsedFilters.length === 1) {\n      return parsedFilters[0];\n    }\n\n    return CompositeFilter.create(parsedFilters, this._getOperator());\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const parsedFilter = this._parse(query);\n    if (parsedFilter.getFilters().length === 0) {\n      // Return the existing query if not adding any more filters (e.g. an empty\n      // composite filter).\n      return query;\n    }\n    validateNewFilter(query._query, parsedFilter);\n\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedFilter(query._query, parsedFilter)\n    );\n  }\n\n  _getQueryConstraints(): readonly AppliableConstraint[] {\n    return this._queryConstraints;\n  }\n\n  _getOperator(): CompositeOperator {\n    return this.type === 'and' ? CompositeOperator.AND : CompositeOperator.OR;\n  }\n}\n\n/**\n * `QueryNonFilterConstraint` is a helper union type that represents\n * QueryConstraints which are used to narrow or order the set of documents,\n * but that do not explicitly filter on a document field.\n * `QueryNonFilterConstraint`s are created by invoking {@link orderBy},\n * {@link (startAt:1)}, {@link (startAfter:1)}, {@link (endBefore:1)}, {@link (endAt:1)},\n * {@link limit} or {@link limitToLast} and can then be passed to {@link (query:1)}\n * to create a new query instance that also contains the `QueryConstraint`.\n */\nexport type QueryNonFilterConstraint =\n  | QueryOrderByConstraint\n  | QueryLimitConstraint\n  | QueryStartAtConstraint\n  | QueryEndAtConstraint;\n\n/**\n * `QueryFilterConstraint` is a helper union type that represents\n * {@link QueryFieldFilterConstraint} and {@link QueryCompositeFilterConstraint}.\n */\nexport type QueryFilterConstraint =\n  | QueryFieldFilterConstraint\n  | QueryCompositeFilterConstraint;\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nexport function or(\n  ...queryConstraints: QueryFilterConstraint[]\n): QueryCompositeFilterConstraint {\n  // Only support QueryFilterConstraints\n  queryConstraints.forEach(queryConstraint =>\n    validateQueryFilterConstraint('or', queryConstraint)\n  );\n\n  return QueryCompositeFilterConstraint._create(\n    CompositeOperator.OR,\n    queryConstraints as QueryFilterConstraint[]\n  );\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nexport function and(\n  ...queryConstraints: QueryFilterConstraint[]\n): QueryCompositeFilterConstraint {\n  // Only support QueryFilterConstraints\n  queryConstraints.forEach(queryConstraint =>\n    validateQueryFilterConstraint('and', queryConstraint)\n  );\n\n  return QueryCompositeFilterConstraint._create(\n    CompositeOperator.AND,\n    queryConstraints as QueryFilterConstraint[]\n  );\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nexport class QueryOrderByConstraint extends QueryConstraint {\n  /** The type of this query constraint */\n  readonly type = 'orderBy';\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    private readonly _field: InternalFieldPath,\n    private _direction: Direction\n  ) {\n    super();\n  }\n\n  static _create(\n    _field: InternalFieldPath,\n    _direction: Direction\n  ): QueryOrderByConstraint {\n    return new QueryOrderByConstraint(_field, _direction);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const orderBy = newQueryOrderBy(query._query, this._field, this._direction);\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedOrderBy(query._query, orderBy)\n    );\n  }\n}\n\n/**\n * The direction of a {@link orderBy} clause is specified as 'desc' or 'asc'\n * (descending or ascending).\n */\nexport type OrderByDirection = 'desc' | 'asc';\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nexport function orderBy(\n  fieldPath: string | FieldPath,\n  directionStr: OrderByDirection = 'asc'\n): QueryOrderByConstraint {\n  const direction = directionStr as Direction;\n  const path = fieldPathFromArgument('orderBy', fieldPath);\n  return QueryOrderByConstraint._create(path, direction);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nexport class QueryLimitConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'limit' | 'limitToLast',\n    private readonly _limit: number,\n    private readonly _limitType: LimitType\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'limit' | 'limitToLast',\n    _limit: number,\n    _limitType: LimitType\n  ): QueryLimitConstraint {\n    return new QueryLimitConstraint(type, _limit, _limitType);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithLimit(query._query, this._limit, this._limitType)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nexport function limit(limit: number): QueryLimitConstraint {\n  validatePositiveNumber('limit', limit);\n  return QueryLimitConstraint._create('limit', limit, LimitType.First);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nexport function limitToLast(limit: number): QueryLimitConstraint {\n  validatePositiveNumber('limitToLast', limit);\n  return QueryLimitConstraint._create('limitToLast', limit, LimitType.Last);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nexport class QueryStartAtConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'startAt' | 'startAfter',\n    private readonly _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    private readonly _inclusive: boolean\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'startAt' | 'startAfter',\n    _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    _inclusive: boolean\n  ): QueryStartAtConstraint {\n    return new QueryStartAtConstraint(type, _docOrFields, _inclusive);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const bound = newQueryBoundFromDocOrFields(\n      query,\n      this.type,\n      this._docOrFields,\n      this._inclusive\n    );\n    return new Query<AppModelType, DbModelType>(\n      query.firestore,\n      query.converter,\n      queryWithStartAt(query._query, bound)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start at the provided document (inclusive). The starting position is relative\n * to the order of the query. The document must contain all of the fields\n * provided in the `orderBy` of this query.\n *\n * @param snapshot - The snapshot of the document to start at.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`.\n */\nexport function startAt<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryStartAtConstraint;\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start at the provided fields relative to the order of the query. The order of\n * the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to start this query at, in order\n * of the query's order by.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`.\n */\nexport function startAt(...fieldValues: unknown[]): QueryStartAtConstraint;\nexport function startAt<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryStartAtConstraint {\n  return QueryStartAtConstraint._create(\n    'startAt',\n    docOrFields,\n    /*inclusive=*/ true\n  );\n}\n\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start after the provided document (exclusive). The starting position is\n * relative to the order of the query. The document must contain all of the\n * fields provided in the orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to start after.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`\n */\nexport function startAfter<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryStartAtConstraint;\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start after the provided fields relative to the order of the query. The order\n * of the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to start this query after, in order\n * of the query's order by.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`\n */\nexport function startAfter(...fieldValues: unknown[]): QueryStartAtConstraint;\nexport function startAfter<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryStartAtConstraint {\n  return QueryStartAtConstraint._create(\n    'startAfter',\n    docOrFields,\n    /*inclusive=*/ false\n  );\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nexport class QueryEndAtConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'endBefore' | 'endAt',\n    private readonly _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    private readonly _inclusive: boolean\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'endBefore' | 'endAt',\n    _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    _inclusive: boolean\n  ): QueryEndAtConstraint {\n    return new QueryEndAtConstraint(type, _docOrFields, _inclusive);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const bound = newQueryBoundFromDocOrFields(\n      query,\n      this.type,\n      this._docOrFields,\n      this._inclusive\n    );\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithEndAt(query._query, bound)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end\n * before the provided document (exclusive). The end position is relative to the\n * order of the query. The document must contain all of the fields provided in\n * the orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to end before.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endBefore<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryEndAtConstraint;\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end\n * before the provided fields relative to the order of the query. The order of\n * the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to end this query before, in order\n * of the query's order by.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endBefore(...fieldValues: unknown[]): QueryEndAtConstraint;\nexport function endBefore<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryEndAtConstraint {\n  return QueryEndAtConstraint._create(\n    'endBefore',\n    docOrFields,\n    /*inclusive=*/ false\n  );\n}\n\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end at\n * the provided document (inclusive). The end position is relative to the order\n * of the query. The document must contain all of the fields provided in the\n * orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to end at.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endAt<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryEndAtConstraint;\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end at\n * the provided fields relative to the order of the query. The order of the field\n * values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to end this query at, in order\n * of the query's order by.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endAt(...fieldValues: unknown[]): QueryEndAtConstraint;\nexport function endAt<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryEndAtConstraint {\n  return QueryEndAtConstraint._create(\n    'endAt',\n    docOrFields,\n    /*inclusive=*/ true\n  );\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction newQueryBoundFromDocOrFields<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>,\n  methodName: string,\n  docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>,\n  inclusive: boolean\n): Bound {\n  docOrFields[0] = getModularInstance(docOrFields[0]);\n\n  if (docOrFields[0] instanceof DocumentSnapshot) {\n    return newQueryBoundFromDocument(\n      query._query,\n      query.firestore._databaseId,\n      methodName,\n      docOrFields[0]._document,\n      inclusive\n    );\n  } else {\n    const reader = newUserDataReader(query.firestore);\n    return newQueryBoundFromFields(\n      query._query,\n      query.firestore._databaseId,\n      reader,\n      methodName,\n      docOrFields,\n      inclusive\n    );\n  }\n}\n\nexport function newQueryFilter(\n  query: InternalQuery,\n  methodName: string,\n  dataReader: UserDataReader,\n  databaseId: DatabaseId,\n  fieldPath: InternalFieldPath,\n  op: Operator,\n  value: unknown\n): FieldFilter {\n  let fieldValue: ProtoValue;\n  if (fieldPath.isKeyField()) {\n    if (op === Operator.ARRAY_CONTAINS || op === Operator.ARRAY_CONTAINS_ANY) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid Query. You can't perform '${op}' queries on documentId().`\n      );\n    } else if (op === Operator.IN || op === Operator.NOT_IN) {\n      validateDisjunctiveFilterElements(value, op);\n      const referenceList: ProtoValue[] = [];\n      for (const arrayValue of value as ProtoValue[]) {\n        referenceList.push(parseDocumentIdValue(databaseId, query, arrayValue));\n      }\n      fieldValue = { arrayValue: { values: referenceList } };\n    } else {\n      fieldValue = parseDocumentIdValue(databaseId, query, value);\n    }\n  } else {\n    if (\n      op === Operator.IN ||\n      op === Operator.NOT_IN ||\n      op === Operator.ARRAY_CONTAINS_ANY\n    ) {\n      validateDisjunctiveFilterElements(value, op);\n    }\n    fieldValue = parseQueryValue(\n      dataReader,\n      methodName,\n      value,\n      /* allowArrays= */ op === Operator.IN || op === Operator.NOT_IN\n    );\n  }\n  const filter = FieldFilter.create(fieldPath, op, fieldValue);\n  return filter;\n}\n\nexport function newQueryOrderBy(\n  query: InternalQuery,\n  fieldPath: InternalFieldPath,\n  direction: Direction\n): OrderBy {\n  if (query.startAt !== null) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid query. You must not call startAt() or startAfter() before ' +\n        'calling orderBy().'\n    );\n  }\n  if (query.endAt !== null) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid query. You must not call endAt() or endBefore() before ' +\n        'calling orderBy().'\n    );\n  }\n  const orderBy = new OrderBy(fieldPath, direction);\n  return orderBy;\n}\n\n/**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */\nexport function newQueryBoundFromDocument(\n  query: InternalQuery,\n  databaseId: DatabaseId,\n  methodName: string,\n  doc: Document | null,\n  inclusive: boolean\n): Bound {\n  if (!doc) {\n    throw new FirestoreError(\n      Code.NOT_FOUND,\n      `Can't use a DocumentSnapshot that doesn't exist for ` +\n        `${methodName}().`\n    );\n  }\n\n  const components: ProtoValue[] = [];\n\n  // Because people expect to continue/end a query at the exact document\n  // provided, we need to use the implicit sort order rather than the explicit\n  // sort order, because it's guaranteed to contain the document key. That way\n  // the position becomes unambiguous and the query continues/ends exactly at\n  // the provided document. Without the key (by using the explicit sort\n  // orders), multiple documents could match the position, yielding duplicate\n  // results.\n  for (const orderBy of queryNormalizedOrderBy(query)) {\n    if (orderBy.field.isKeyField()) {\n      components.push(refValue(databaseId, doc.key));\n    } else {\n      const value = doc.data.field(orderBy.field);\n      if (isServerTimestamp(value)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          'Invalid query. You are trying to start or end a query using a ' +\n            'document for which the field \"' +\n            orderBy.field +\n            '\" is an uncommitted server timestamp. (Since the value of ' +\n            'this field is unknown, you cannot start/end a query with it.)'\n        );\n      } else if (value !== null) {\n        components.push(value);\n      } else {\n        const field = orderBy.field.canonicalString();\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. You are trying to start or end a query using a ` +\n            `document for which the field '${field}' (used as the ` +\n            `orderBy) does not exist.`\n        );\n      }\n    }\n  }\n  return new Bound(components, inclusive);\n}\n\n/**\n * Converts a list of field values to a `Bound` for the given query.\n */\nexport function newQueryBoundFromFields(\n  query: InternalQuery,\n  databaseId: DatabaseId,\n  dataReader: UserDataReader,\n  methodName: string,\n  values: unknown[],\n  inclusive: boolean\n): Bound {\n  // Use explicit order by's because it has to match the query the user made\n  const orderBy = query.explicitOrderBy;\n  if (values.length > orderBy.length) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Too many arguments provided to ${methodName}(). ` +\n        `The number of arguments must be less than or equal to the ` +\n        `number of orderBy() clauses`\n    );\n  }\n\n  const components: ProtoValue[] = [];\n  for (let i = 0; i < values.length; i++) {\n    const rawValue = values[i];\n    const orderByComponent = orderBy[i];\n    if (orderByComponent.field.isKeyField()) {\n      if (typeof rawValue !== 'string') {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. Expected a string for document ID in ` +\n            `${methodName}(), but got a ${typeof rawValue}`\n        );\n      }\n      if (!isCollectionGroupQuery(query) && rawValue.indexOf('/') !== -1) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. When querying a collection and ordering by documentId(), ` +\n            `the value passed to ${methodName}() must be a plain document ID, but ` +\n            `'${rawValue}' contains a slash.`\n        );\n      }\n      const path = query.path.child(ResourcePath.fromString(rawValue));\n      if (!DocumentKey.isDocumentKey(path)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. When querying a collection group and ordering by ` +\n            `documentId(), the value passed to ${methodName}() must result in a ` +\n            `valid document path, but '${path}' is not because it contains an odd number ` +\n            `of segments.`\n        );\n      }\n      const key = new DocumentKey(path);\n      components.push(refValue(databaseId, key));\n    } else {\n      const wrapped = parseQueryValue(dataReader, methodName, rawValue);\n      components.push(wrapped);\n    }\n  }\n\n  return new Bound(components, inclusive);\n}\n\n/**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */\nfunction parseDocumentIdValue(\n  databaseId: DatabaseId,\n  query: InternalQuery,\n  documentIdValue: unknown\n): ProtoValue {\n  documentIdValue = getModularInstance(documentIdValue);\n\n  if (typeof documentIdValue === 'string') {\n    if (documentIdValue === '') {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. When querying with documentId(), you ' +\n          'must provide a valid document ID, but it was an empty string.'\n      );\n    }\n    if (!isCollectionGroupQuery(query) && documentIdValue.indexOf('/') !== -1) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. When querying a collection by ` +\n          `documentId(), you must provide a plain document ID, but ` +\n          `'${documentIdValue}' contains a '/' character.`\n      );\n    }\n    const path = query.path.child(ResourcePath.fromString(documentIdValue));\n    if (!DocumentKey.isDocumentKey(path)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. When querying a collection group by ` +\n          `documentId(), the value provided must result in a valid document path, ` +\n          `but '${path}' is not because it has an odd number of segments (${path.length}).`\n      );\n    }\n    return refValue(databaseId, new DocumentKey(path));\n  } else if (documentIdValue instanceof DocumentReference) {\n    return refValue(databaseId, documentIdValue._key);\n  } else {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid query. When querying with documentId(), you must provide a valid ` +\n        `string or a DocumentReference, but it was: ` +\n        `${valueDescription(documentIdValue)}.`\n    );\n  }\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction validateDisjunctiveFilterElements(\n  value: unknown,\n  operator: Operator\n): void {\n  if (!Array.isArray(value) || value.length === 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid Query. A non-empty array is required for ' +\n        `'${operator.toString()}' filters.`\n    );\n  }\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\nfunction conflictingOps(op: Operator): Operator[] {\n  switch (op) {\n    case Operator.NOT_EQUAL:\n      return [Operator.NOT_EQUAL, Operator.NOT_IN];\n    case Operator.ARRAY_CONTAINS_ANY:\n    case Operator.IN:\n      return [Operator.NOT_IN];\n    case Operator.NOT_IN:\n      return [\n        Operator.ARRAY_CONTAINS_ANY,\n        Operator.IN,\n        Operator.NOT_IN,\n        Operator.NOT_EQUAL\n      ];\n    default:\n      return [];\n  }\n}\n\nfunction validateNewFieldFilter(\n  query: InternalQuery,\n  fieldFilter: FieldFilter\n): void {\n  const conflictingOp = findOpInsideFilters(\n    query.filters,\n    conflictingOps(fieldFilter.op)\n  );\n  if (conflictingOp !== null) {\n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    if (conflictingOp === fieldFilter.op) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. You cannot use more than one ' +\n          `'${fieldFilter.op.toString()}' filter.`\n      );\n    } else {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. You cannot use '${fieldFilter.op.toString()}' filters ` +\n          `with '${conflictingOp.toString()}' filters.`\n      );\n    }\n  }\n}\n\nfunction validateNewFilter(query: InternalQuery, filter: Filter): void {\n  let testQuery = query;\n  const subFilters = filter.getFlattenedFilters();\n  for (const subFilter of subFilters) {\n    validateNewFieldFilter(testQuery, subFilter);\n    testQuery = queryWithAddedFilter(testQuery, subFilter);\n  }\n}\n\n// Checks if any of the provided filter operators are included in the given list of filters and\n// returns the first one that is, or null if none are.\nfunction findOpInsideFilters(\n  filters: Filter[],\n  operators: Operator[]\n): Operator | null {\n  for (const filter of filters) {\n    for (const fieldFilter of filter.getFlattenedFilters()) {\n      if (operators.indexOf(fieldFilter.op) >= 0) {\n        return fieldFilter.op;\n      }\n    }\n  }\n  return null;\n}\n\nexport function validateQueryFilterConstraint(\n  functionName: string,\n  queryConstraint: AppliableConstraint\n): void {\n  if (\n    !(queryConstraint instanceof QueryFieldFilterConstraint) &&\n    !(queryConstraint instanceof QueryCompositeFilterConstraint)\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`\n    );\n  }\n}\n\nfunction validateQueryConstraintArray(\n  queryConstraint: AppliableConstraint[]\n): void {\n  const compositeFilterCount = queryConstraint.filter(\n    filter => filter instanceof QueryCompositeFilterConstraint\n  ).length;\n  const fieldFilterCount = queryConstraint.filter(\n    filter => filter instanceof QueryFieldFilterConstraint\n  ).length;\n\n  if (\n    compositeFilterCount > 1 ||\n    (compositeFilterCount > 0 && fieldFilterCount > 0)\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'InvalidQuery. When using composite filters, you cannot use ' +\n        'more than one filter at the top level. Consider nesting the multiple ' +\n        'filters within an `and(...)` statement. For example: ' +\n        'change `query(query, where(...), or(...))` to ' +\n        '`query(query, and(where(...), or(...)))`.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentData } from '@firebase/firestore-types';\n\nimport { DatabaseId } from '../core/database_info';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from '../model/normalize';\nimport { ResourcePath } from '../model/path';\nimport {\n  getLocalWriteTime,\n  getPreviousValue\n} from '../model/server_timestamps';\nimport { TypeOrder } from '../model/type_order';\nimport { typeOrder } from '../model/values';\nimport {\n  ApiClientObjectMap,\n  ArrayValue as ProtoArrayValue,\n  LatLng as ProtoLatLng,\n  MapValue as ProtoMapValue,\n  Timestamp as ProtoTimestamp,\n  Value,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { isValidResourceName } from '../remote/serializer';\nimport { fail, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { logError } from '../util/log';\nimport { forEach } from '../util/obj';\n\nimport { GeoPoint } from './geo_point';\nimport { Timestamp } from './timestamp';\n\nexport type ServerTimestampBehavior = 'estimate' | 'previous' | 'none';\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\nexport abstract class AbstractUserDataWriter {\n  convertValue(\n    value: ProtoValue,\n    serverTimestampBehavior: ServerTimestampBehavior = 'none'\n  ): unknown {\n    switch (typeOrder(value)) {\n      case TypeOrder.NullValue:\n        return null;\n      case TypeOrder.BooleanValue:\n        return value.booleanValue!;\n      case TypeOrder.NumberValue:\n        return normalizeNumber(value.integerValue || value.doubleValue);\n      case TypeOrder.TimestampValue:\n        return this.convertTimestamp(value.timestampValue!);\n      case TypeOrder.ServerTimestampValue:\n        return this.convertServerTimestamp(value, serverTimestampBehavior);\n      case TypeOrder.StringValue:\n        return value.stringValue!;\n      case TypeOrder.BlobValue:\n        return this.convertBytes(normalizeByteString(value.bytesValue!));\n      case TypeOrder.RefValue:\n        return this.convertReference(value.referenceValue!);\n      case TypeOrder.GeoPointValue:\n        return this.convertGeoPoint(value.geoPointValue!);\n      case TypeOrder.ArrayValue:\n        return this.convertArray(value.arrayValue!, serverTimestampBehavior);\n      case TypeOrder.ObjectValue:\n        return this.convertObject(value.mapValue!, serverTimestampBehavior);\n      default:\n        throw fail('Invalid value type: ' + JSON.stringify(value));\n    }\n  }\n\n  private convertObject(\n    mapValue: ProtoMapValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): DocumentData {\n    return this.convertObjectMap(mapValue.fields, serverTimestampBehavior);\n  }\n\n  /**\n   * @internal\n   */\n  convertObjectMap(\n    fields: ApiClientObjectMap<Value> | undefined,\n    serverTimestampBehavior: ServerTimestampBehavior = 'none'\n  ): DocumentData {\n    const result: DocumentData = {};\n    forEach(fields, (key, value) => {\n      result[key] = this.convertValue(value, serverTimestampBehavior);\n    });\n    return result;\n  }\n\n  private convertGeoPoint(value: ProtoLatLng): GeoPoint {\n    return new GeoPoint(\n      normalizeNumber(value.latitude),\n      normalizeNumber(value.longitude)\n    );\n  }\n\n  private convertArray(\n    arrayValue: ProtoArrayValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): unknown[] {\n    return (arrayValue.values || []).map(value =>\n      this.convertValue(value, serverTimestampBehavior)\n    );\n  }\n\n  private convertServerTimestamp(\n    value: ProtoValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): unknown {\n    switch (serverTimestampBehavior) {\n      case 'previous':\n        const previousValue = getPreviousValue(value);\n        if (previousValue == null) {\n          return null;\n        }\n        return this.convertValue(previousValue, serverTimestampBehavior);\n      case 'estimate':\n        return this.convertTimestamp(getLocalWriteTime(value));\n      default:\n        return null;\n    }\n  }\n\n  private convertTimestamp(value: ProtoTimestamp): Timestamp {\n    const normalizedValue = normalizeTimestamp(value);\n    return new Timestamp(normalizedValue.seconds, normalizedValue.nanos);\n  }\n\n  protected convertDocumentKey(\n    name: string,\n    expectedDatabaseId: DatabaseId\n  ): DocumentKey {\n    const resourcePath = ResourcePath.fromString(name);\n    hardAssert(\n      isValidResourceName(resourcePath),\n      'ReferenceValue is not valid ' + name\n    );\n    const databaseId = new DatabaseId(resourcePath.get(1), resourcePath.get(3));\n    const key = new DocumentKey(resourcePath.popFirst(5));\n\n    if (!databaseId.isEqual(expectedDatabaseId)) {\n      // TODO(b/64130202): Somehow support foreign references.\n      logError(\n        `Document ${key} contains a document ` +\n          `reference within a different database (` +\n          `${databaseId.projectId}/${databaseId.database}) which is not ` +\n          `supported. It will be treated as a reference in the current ` +\n          `database (${expectedDatabaseId.projectId}/${expectedDatabaseId.database}) ` +\n          `instead.`\n      );\n    }\n    return key;\n  }\n\n  protected abstract convertReference(name: string): unknown;\n\n  protected abstract convertBytes(bytes: ByteString): unknown;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentData as PublicDocumentData,\n  SetOptions as PublicSetOptions\n} from '@firebase/firestore-types';\nimport { getModularInstance } from '@firebase/util';\n\nimport { LimitType } from '../core/query';\nimport { DeleteMutation, Precondition } from '../model/mutation';\nimport {\n  invokeBatchGetDocumentsRpc,\n  invokeCommitRpc,\n  invokeRunQueryRpc\n} from '../remote/datastore';\nimport { hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { cast } from '../util/input_validation';\n\nimport { Bytes } from './bytes';\nimport { getDatastore } from './components';\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { validateHasExplicitOrderByForLimitToLast } from './query';\nimport {\n  CollectionReference,\n  doc,\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  SetOptions,\n  UpdateData,\n  WithFieldValue\n} from './reference';\nimport {\n  DocumentSnapshot,\n  QueryDocumentSnapshot,\n  QuerySnapshot\n} from './snapshot';\nimport {\n  newUserDataReader,\n  ParsedUpdateData,\n  parseSetData,\n  parseUpdateData,\n  parseUpdateVarargs,\n  UntypedFirestoreDataConverter\n} from './user_data_reader';\nimport { AbstractUserDataWriter } from './user_data_writer';\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nexport function applyFirestoreDataConverter<T>(\n  converter: UntypedFirestoreDataConverter<T> | null,\n  value: WithFieldValue<T> | PartialWithFieldValue<T>,\n  options?: PublicSetOptions\n): PublicDocumentData {\n  let convertedValue;\n  if (converter) {\n    if (options && (options.merge || options.mergeFields)) {\n      // Cast to `any` in order to satisfy the union type constraint on\n      // toFirestore().\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      convertedValue = (converter as any).toFirestore(value, options);\n    } else {\n      convertedValue = converter.toFirestore(value as WithFieldValue<T>);\n    }\n  } else {\n    convertedValue = value as PublicDocumentData;\n  }\n  return convertedValue;\n}\n\nexport class LiteUserDataWriter extends AbstractUserDataWriter {\n  constructor(protected firestore: Firestore) {\n    super();\n  }\n\n  protected convertBytes(bytes: ByteString): Bytes {\n    return new Bytes(bytes);\n  }\n\n  protected convertReference(name: string): DocumentReference {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return new DocumentReference(this.firestore, /* converter= */ null, key);\n  }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nexport function getDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const datastore = getDatastore(reference.firestore);\n  const userDataWriter = new LiteUserDataWriter(reference.firestore);\n\n  return invokeBatchGetDocumentsRpc(datastore, [reference._key]).then(\n    result => {\n      hardAssert(result.length === 1, 'Expected a single document result');\n      const document = result[0];\n      return new DocumentSnapshot<AppModelType, DbModelType>(\n        reference.firestore,\n        userDataWriter,\n        reference._key,\n        document.isFoundDocument() ? document : null,\n        reference.converter\n      );\n    }\n  );\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nexport function getDocs<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  validateHasExplicitOrderByForLimitToLast(query._query);\n\n  const datastore = getDatastore(query.firestore);\n  const userDataWriter = new LiteUserDataWriter(query.firestore);\n  return invokeRunQueryRpc(datastore, query._query).then(result => {\n    const docs = result.map(\n      doc =>\n        new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          query.firestore,\n          userDataWriter,\n          doc.key,\n          doc,\n          query.converter\n        )\n    );\n\n    if (query._query.limitType === LimitType.Last) {\n      // Limit to last queries reverse the orderBy constraint that was\n      // specified by the user. As such, we need to reverse the order of the\n      // results to return the documents in the expected order.\n      docs.reverse();\n    }\n\n    return new QuerySnapshot<AppModelType, DbModelType>(query, docs);\n  });\n}\n\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<void>;\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created. If you provide `merge`\n * or `mergeFields`, the provided data can be merged into an existing document.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @param options - An object to configure the set behavior.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options: SetOptions\n): Promise<void>;\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options?: SetOptions\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data,\n    options\n  );\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'setDoc',\n    reference._key,\n    convertedValue,\n    reference.converter !== null,\n    options\n  );\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(reference._key, Precondition.none())\n  ]);\n}\n\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference`. The update will fail if applied to a document that does\n * not exist.\n *\n * The result of this update will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * update fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to update.\n * @param data - An object containing the fields and values with which to\n * update the document. Fields can contain dots to reference nested fields\n * within the document.\n * @throws Error - If the provided input is not valid Firestore data.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: UpdateData<DbModelType>\n): Promise<void>;\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference` The update will fail if applied to a document that does\n * not exist.\n *\n * Nested fields can be updated by providing dot-separated field path\n * strings or by providing `FieldPath` objects.\n *\n * The result of this update will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * update fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to update.\n * @param field - The first field to update.\n * @param value - The first value.\n * @param moreFieldsAndValues - Additional key value pairs.\n * @throws Error - If the provided input is not valid Firestore data.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  field: string | FieldPath,\n  value: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void>;\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  fieldOrUpdateData: string | FieldPath | UpdateData<DbModelType>,\n  value?: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const dataReader = newUserDataReader(reference.firestore);\n\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n\n  let parsed: ParsedUpdateData;\n  if (\n    typeof fieldOrUpdateData === 'string' ||\n    fieldOrUpdateData instanceof FieldPath\n  ) {\n    parsed = parseUpdateVarargs(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData,\n      value,\n      moreFieldsAndValues\n    );\n  } else {\n    parsed = parseUpdateData(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData\n    );\n  }\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(reference._key, Precondition.exists(true))\n  ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nexport function deleteDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    new DeleteMutation(reference._key, Precondition.none())\n  ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nexport function addDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<DocumentReference<AppModelType, DbModelType>> {\n  reference = cast<CollectionReference<AppModelType, DbModelType>>(\n    reference,\n    CollectionReference\n  );\n  const docRef = doc(reference);\n\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data as PartialWithFieldValue<AppModelType>\n  );\n\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'addDoc',\n    docRef._key,\n    convertedValue,\n    docRef.converter !== null,\n    {}\n  );\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(docRef._key, Precondition.exists(false))\n  ]).then(() => docRef);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newQueryComparator } from '../core/query';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { FieldPath } from '../lite-api/field_path';\nimport {\n  DocumentData,\n  PartialWithFieldValue,\n  Query,\n  queryEqual,\n  SetOptions,\n  WithFieldValue\n} from '../lite-api/reference';\nimport {\n  DocumentSnapshot as LiteDocumentSnapshot,\n  fieldPathFromArgument,\n  FirestoreDataConverter as LiteFirestoreDataConverter\n} from '../lite-api/snapshot';\nimport { UntypedFirestoreDataConverter } from '../lite-api/user_data_reader';\nimport { AbstractUserDataWriter } from '../lite-api/user_data_writer';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\n\nimport { Firestore } from './database';\nimport { SnapshotListenOptions } from './reference_impl';\n\n/**\n * Converter used by `withConverter()` to transform user objects of type\n * `AppModelType` into Firestore data of type `DbModelType`.\n *\n * Using the converter allows you to specify generic type arguments when\n * storing and retrieving objects from Firestore.\n *\n * @example\n * ```typescript\n * class Post {\n *   constructor(readonly title: string, readonly author: string) {}\n *\n *   toString(): string {\n *     return this.title + ', by ' + this.author;\n *   }\n * }\n *\n * interface PostDbModel {\n *   title: string;\n *   author: string;\n * }\n *\n * const postConverter = {\n *   toFirestore(post: WithFieldValue<Post>): PostDbModel {\n *     return {title: post.title, author: post.author};\n *   },\n *   fromFirestore(\n *     snapshot: QueryDocumentSnapshot,\n *     options: SnapshotOptions\n *   ): Post {\n *     const data = snapshot.data(options) as PostDbModel;\n *     return new Post(data.title, data.author);\n *   }\n * };\n *\n * const postSnap = await firebase.firestore()\n *   .collection('posts')\n *   .withConverter(postConverter)\n *   .doc().get();\n * const post = postSnap.data();\n * if (post !== undefined) {\n *   post.title; // string\n *   post.toString(); // Should be defined\n *   post.someNonExistentProperty; // TS error\n * }\n * ```\n */\nexport interface FirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> extends LiteFirestoreDataConverter<AppModelType, DbModelType> {\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain JavaScript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. To use `set()`\n   * with `merge` and `mergeFields`, `toFirestore()` must be defined with\n   * `PartialWithFieldValue<AppModelType>`.\n   *\n   * The `WithFieldValue<T>` type extends `T` to also allow FieldValues such as\n   * {@link (deleteField:1)} to be used as property values.\n   */\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain JavaScript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link (setDoc:1)}, {@link (WriteBatch.set:1)} and\n   * {@link (Transaction.set:1)} with `merge:true` or `mergeFields`.\n   *\n   * The `PartialWithFieldValue<T>` type extends `Partial<T>` to allow\n   * FieldValues such as {@link (arrayUnion:1)} to be used as property values.\n   * It also supports nested `Partial` by allowing nested fields to be\n   * omitted.\n   */\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert Firestore data into an object of\n   * type `AppModelType`. You can access your data by calling:\n   * `snapshot.data(options)`.\n   *\n   * Generally, the data returned from `snapshot.data()` can be cast to\n   * `DbModelType`; however, this is not guaranteed as writes to the database\n   * may have occurred without a type converter enforcing this specific layout.\n   *\n   * @param snapshot - A `QueryDocumentSnapshot` containing your data and metadata.\n   * @param options - The `SnapshotOptions` from the initial call to `data()`.\n   */\n  fromFirestore(\n    snapshot: QueryDocumentSnapshot<DocumentData, DocumentData>,\n    options?: SnapshotOptions\n  ): AppModelType;\n}\n\n/**\n * Options that configure how data is retrieved from a `DocumentSnapshot` (for\n * example the desired behavior for server timestamps that have not yet been set\n * to their final value).\n */\nexport interface SnapshotOptions {\n  /**\n   * If set, controls the return value for server timestamps that have not yet\n   * been set to their final value.\n   *\n   * By specifying 'estimate', pending server timestamps return an estimate\n   * based on the local clock. This estimate will differ from the final value\n   * and cause these values to change once the server result becomes available.\n   *\n   * By specifying 'previous', pending timestamps will be ignored and return\n   * their previous value instead.\n   *\n   * If omitted or set to 'none', `null` will be returned by default until the\n   * server value becomes available.\n   */\n  readonly serverTimestamps?: 'estimate' | 'previous' | 'none';\n}\n\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */\nexport class SnapshotMetadata {\n  /**\n   * True if the snapshot contains the result of local writes (for example\n   * `set()` or `update()` calls) that have not yet been committed to the\n   * backend. If your listener has opted into metadata updates (via\n   * `SnapshotListenOptions`) you will receive another snapshot with\n   * `hasPendingWrites` equal to false once the writes have been committed to\n   * the backend.\n   */\n  readonly hasPendingWrites: boolean;\n\n  /**\n   * True if the snapshot was created from cached data rather than guaranteed\n   * up-to-date server data. If your listener has opted into metadata updates\n   * (via `SnapshotListenOptions`) you will receive another snapshot with\n   * `fromCache` set to false once the client has received up-to-date data from\n   * the backend.\n   */\n  readonly fromCache: boolean;\n\n  /** @hideconstructor */\n  constructor(hasPendingWrites: boolean, fromCache: boolean) {\n    this.hasPendingWrites = hasPendingWrites;\n    this.fromCache = fromCache;\n  }\n\n  /**\n   * Returns true if this `SnapshotMetadata` is equal to the provided one.\n   *\n   * @param other - The `SnapshotMetadata` to compare against.\n   * @returns true if this `SnapshotMetadata` is equal to the provided one.\n   */\n  isEqual(other: SnapshotMetadata): boolean {\n    return (\n      this.hasPendingWrites === other.hasPendingWrites &&\n      this.fromCache === other.fromCache\n    );\n  }\n}\n\n/**\n * The type of a `DocumentChange` may be 'added', 'removed', or 'modified'.\n */\nexport type DocumentChangeType = 'added' | 'removed' | 'modified';\n\n/**\n * A `DocumentChange` represents a change to the documents matching a query.\n * It contains the document affected and the type of change that occurred.\n */\nexport interface DocumentChange<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of change ('added', 'modified', or 'removed'). */\n  readonly type: DocumentChangeType;\n\n  /** The document affected by this change. */\n  readonly doc: QueryDocumentSnapshot<AppModelType, DbModelType>;\n\n  /**\n   * The index of the changed document in the result set immediately prior to\n   * this `DocumentChange` (i.e. supposing that all prior `DocumentChange` objects\n   * have been applied). Is `-1` for 'added' events.\n   */\n  readonly oldIndex: number;\n\n  /**\n   * The index of the changed document in the result set immediately after\n   * this `DocumentChange` (i.e. supposing that all prior `DocumentChange`\n   * objects and the current `DocumentChange` object have been applied).\n   * Is -1 for 'removed' events.\n   */\n  readonly newIndex: number;\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nexport class DocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends LiteDocumentSnapshot<AppModelType, DbModelType> {\n  private readonly _firestoreImpl: Firestore;\n\n  /**\n   *  Metadata about the `DocumentSnapshot`, including information about its\n   *  source and local modifications.\n   */\n  readonly metadata: SnapshotMetadata;\n\n  /** @hideconstructor protected */\n  constructor(\n    readonly _firestore: Firestore,\n    userDataWriter: AbstractUserDataWriter,\n    key: DocumentKey,\n    document: Document | null,\n    metadata: SnapshotMetadata,\n    converter: UntypedFirestoreDataConverter<AppModelType, DbModelType> | null\n  ) {\n    super(_firestore, userDataWriter, key, document, converter);\n    this._firestoreImpl = _firestore;\n    this.metadata = metadata;\n  }\n\n  /**\n   * Returns whether or not the data exists. True if the document exists.\n   */\n  exists(): this is QueryDocumentSnapshot<AppModelType, DbModelType> {\n    return super.exists();\n  }\n\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * By default, `serverTimestamp()` values that have not yet been\n   * set to their final value will be returned as `null`. You can override\n   * this by passing an options object.\n   *\n   * @param options - An options object to configure how data is retrieved from\n   * the snapshot (for example the desired behavior for server timestamps that\n   * have not yet been set to their final value).\n   * @returns An `Object` containing all fields in the document or `undefined` if\n   * the document doesn't exist.\n   */\n  data(options: SnapshotOptions = {}): AppModelType | undefined {\n    if (!this._document) {\n      return undefined;\n    } else if (this._converter) {\n      // We only want to use the converter and create a new DocumentSnapshot\n      // if a converter has been provided.\n      const snapshot = new QueryDocumentSnapshot(\n        this._firestore,\n        this._userDataWriter,\n        this._key,\n        this._document,\n        this.metadata,\n        /* converter= */ null\n      );\n      return this._converter.fromFirestore(snapshot, options);\n    } else {\n      return this._userDataWriter.convertValue(\n        this._document.data.value,\n        options.serverTimestamps\n      ) as AppModelType;\n    }\n  }\n\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * By default, a `serverTimestamp()` that has not yet been set to\n   * its final value will be returned as `null`. You can override this by\n   * passing an options object.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @param options - An options object to configure how the field is retrieved\n   * from the snapshot (for example the desired behavior for server timestamps\n   * that have not yet been set to their final value).\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(fieldPath: string | FieldPath, options: SnapshotOptions = {}): any {\n    if (this._document) {\n      const value = this._document.data.field(\n        fieldPathFromArgument('DocumentSnapshot.get', fieldPath)\n      );\n      if (value !== null) {\n        return this._userDataWriter.convertValue(\n          value,\n          options.serverTimestamps\n        );\n      }\n    }\n    return undefined;\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nexport class QueryDocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends DocumentSnapshot<AppModelType, DbModelType> {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * By default, `serverTimestamp()` values that have not yet been\n   * set to their final value will be returned as `null`. You can override\n   * this by passing an options object.\n   *\n   * @override\n   * @param options - An options object to configure how data is retrieved from\n   * the snapshot (for example the desired behavior for server timestamps that\n   * have not yet been set to their final value).\n   * @returns An `Object` containing all fields in the document.\n   */\n  data(options: SnapshotOptions = {}): AppModelType {\n    return super.data(options) as AppModelType;\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nexport class QuerySnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * Metadata about this snapshot, concerning its source and if it has local\n   * modifications.\n   */\n  readonly metadata: SnapshotMetadata;\n\n  /**\n   * The query on which you called `get` or `onSnapshot` in order to get this\n   * `QuerySnapshot`.\n   */\n  readonly query: Query<AppModelType, DbModelType>;\n\n  private _cachedChanges?: Array<DocumentChange<AppModelType, DbModelType>>;\n  private _cachedChangesIncludeMetadataChanges?: boolean;\n\n  /** @hideconstructor */\n  constructor(\n    readonly _firestore: Firestore,\n    readonly _userDataWriter: AbstractUserDataWriter,\n    query: Query<AppModelType, DbModelType>,\n    readonly _snapshot: ViewSnapshot\n  ) {\n    this.metadata = new SnapshotMetadata(\n      _snapshot.hasPendingWrites,\n      _snapshot.fromCache\n    );\n    this.query = query;\n  }\n\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs(): Array<QueryDocumentSnapshot<AppModelType, DbModelType>> {\n    const result: Array<QueryDocumentSnapshot<AppModelType, DbModelType>> = [];\n    this.forEach(doc => result.push(doc));\n    return result;\n  }\n\n  /** The number of documents in the `QuerySnapshot`. */\n  get size(): number {\n    return this._snapshot.docs.size;\n  }\n\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty(): boolean {\n    return this.size === 0;\n  }\n\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(\n    callback: (\n      result: QueryDocumentSnapshot<AppModelType, DbModelType>\n    ) => void,\n    thisArg?: unknown\n  ): void {\n    this._snapshot.docs.forEach(doc => {\n      callback.call(\n        thisArg,\n        new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          this._firestore,\n          this._userDataWriter,\n          doc.key,\n          doc,\n          new SnapshotMetadata(\n            this._snapshot.mutatedKeys.has(doc.key),\n            this._snapshot.fromCache\n          ),\n          this.query.converter\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns an array of the documents changes since the last snapshot. If this\n   * is the first snapshot, all documents will be in the list as 'added'\n   * changes.\n   *\n   * @param options - `SnapshotListenOptions` that control whether metadata-only\n   * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n   * snapshot events.\n   */\n  docChanges(\n    options: SnapshotListenOptions = {}\n  ): Array<DocumentChange<AppModelType, DbModelType>> {\n    const includeMetadataChanges = !!options.includeMetadataChanges;\n\n    if (includeMetadataChanges && this._snapshot.excludesMetadataChanges) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'To include metadata changes with your document changes, you must ' +\n          'also pass { includeMetadataChanges:true } to onSnapshot().'\n      );\n    }\n\n    if (\n      !this._cachedChanges ||\n      this._cachedChangesIncludeMetadataChanges !== includeMetadataChanges\n    ) {\n      this._cachedChanges = changesFromSnapshot(this, includeMetadataChanges);\n      this._cachedChangesIncludeMetadataChanges = includeMetadataChanges;\n    }\n\n    return this._cachedChanges;\n  }\n}\n\n/** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\nexport function changesFromSnapshot<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  querySnapshot: QuerySnapshot<AppModelType, DbModelType>,\n  includeMetadataChanges: boolean\n): Array<DocumentChange<AppModelType, DbModelType>> {\n  if (querySnapshot._snapshot.oldDocs.isEmpty()) {\n    // Special case the first snapshot because index calculation is easy and\n    // fast\n    let lastDoc: Document;\n    let index = 0;\n    return querySnapshot._snapshot.docChanges.map(change => {\n      debugAssert(\n        change.type === ChangeType.Added,\n        'Invalid event type for first snapshot'\n      );\n      debugAssert(\n        !lastDoc ||\n          newQueryComparator(querySnapshot._snapshot.query)(\n            lastDoc,\n            change.doc\n          ) < 0,\n        'Got added events in wrong order'\n      );\n      const doc = new QueryDocumentSnapshot<AppModelType, DbModelType>(\n        querySnapshot._firestore,\n        querySnapshot._userDataWriter,\n        change.doc.key,\n        change.doc,\n        new SnapshotMetadata(\n          querySnapshot._snapshot.mutatedKeys.has(change.doc.key),\n          querySnapshot._snapshot.fromCache\n        ),\n        querySnapshot.query.converter\n      );\n      lastDoc = change.doc;\n      return {\n        type: 'added' as DocumentChangeType,\n        doc,\n        oldIndex: -1,\n        newIndex: index++\n      };\n    });\n  } else {\n    // A `DocumentSet` that is updated incrementally as changes are applied to use\n    // to lookup the index of a document.\n    let indexTracker = querySnapshot._snapshot.oldDocs;\n    return querySnapshot._snapshot.docChanges\n      .filter(\n        change => includeMetadataChanges || change.type !== ChangeType.Metadata\n      )\n      .map(change => {\n        const doc = new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          querySnapshot._firestore,\n          querySnapshot._userDataWriter,\n          change.doc.key,\n          change.doc,\n          new SnapshotMetadata(\n            querySnapshot._snapshot.mutatedKeys.has(change.doc.key),\n            querySnapshot._snapshot.fromCache\n          ),\n          querySnapshot.query.converter\n        );\n        let oldIndex = -1;\n        let newIndex = -1;\n        if (change.type !== ChangeType.Added) {\n          oldIndex = indexTracker.indexOf(change.doc.key);\n          debugAssert(oldIndex >= 0, 'Index for document not found');\n          indexTracker = indexTracker.delete(change.doc.key);\n        }\n        if (change.type !== ChangeType.Removed) {\n          indexTracker = indexTracker.add(change.doc);\n          newIndex = indexTracker.indexOf(change.doc.key);\n        }\n        return {\n          type: resultChangeType(change.type),\n          doc,\n          oldIndex,\n          newIndex\n        };\n      });\n  }\n}\n\nexport function resultChangeType(type: ChangeType): DocumentChangeType {\n  switch (type) {\n    case ChangeType.Added:\n      return 'added';\n    case ChangeType.Modified:\n    case ChangeType.Metadata:\n      return 'modified';\n    case ChangeType.Removed:\n      return 'removed';\n    default:\n      return fail('Unknown change type: ' + type);\n  }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nexport function snapshotEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>,\n  right:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>\n): boolean {\n  if (left instanceof DocumentSnapshot && right instanceof DocumentSnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      left._key.isEqual(right._key) &&\n      (left._document === null\n        ? right._document === null\n        : left._document.isEqual(right._document)) &&\n      left._converter === right._converter\n    );\n  } else if (left instanceof QuerySnapshot && right instanceof QuerySnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      queryEqual(left.query, right.query) &&\n      left.metadata.isEqual(right.metadata) &&\n      left._snapshot.isEqual(right._snapshot)\n    );\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport {\n  CompleteFn,\n  ErrorFn,\n  isPartialObserver,\n  NextFn,\n  PartialObserver\n} from '../api/observer';\nimport {\n  firestoreClientAddSnapshotsInSyncListener,\n  firestoreClientGetDocumentFromLocalCache,\n  firestoreClientGetDocumentsFromLocalCache,\n  firestoreClientGetDocumentsViaSnapshotListener,\n  firestoreClientGetDocumentViaSnapshotListener,\n  firestoreClientListen,\n  firestoreClientWrite\n} from '../core/firestore_client';\nimport { newQueryForPath, Query as InternalQuery } from '../core/query';\nimport { ViewSnapshot } from '../core/view_snapshot';\nimport { Bytes } from '../lite-api/bytes';\nimport { FieldPath } from '../lite-api/field_path';\nimport { validateHasExplicitOrderByForLimitToLast } from '../lite-api/query';\nimport {\n  CollectionReference,\n  doc,\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  SetOptions,\n  UpdateData,\n  WithFieldValue\n} from '../lite-api/reference';\nimport { applyFirestoreDataConverter } from '../lite-api/reference_impl';\nimport {\n  newUserDataReader,\n  ParsedUpdateData,\n  parseSetData,\n  parseUpdateData,\n  parseUpdateVarargs\n} from '../lite-api/user_data_reader';\nimport { AbstractUserDataWriter } from '../lite-api/user_data_writer';\nimport { DeleteMutation, Mutation, Precondition } from '../model/mutation';\nimport { debugAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\n\nimport { ensureFirestoreConfigured, Firestore } from './database';\nimport { DocumentSnapshot, QuerySnapshot, SnapshotMetadata } from './snapshot';\n\n/**\n * An options object that can be passed to {@link (onSnapshot:1)} and {@link\n * QuerySnapshot.docChanges} to control which types of changes to include in the\n * result set.\n */\nexport interface SnapshotListenOptions {\n  /**\n   * Include a change even if only the metadata of the query or of a document\n   * changed. Default is false.\n   */\n  readonly includeMetadataChanges?: boolean;\n}\n\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n\n  return firestoreClientGetDocumentViaSnapshotListener(\n    client,\n    reference._key\n  ).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\n\nexport class ExpUserDataWriter extends AbstractUserDataWriter {\n  constructor(protected firestore: Firestore) {\n    super();\n  }\n\n  protected convertBytes(bytes: ByteString): Bytes {\n    return new Bytes(bytes);\n  }\n\n  protected convertReference(name: string): DocumentReference {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return new DocumentReference(this.firestore, /* converter= */ null, key);\n  }\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDocFromCache<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentFromLocalCache(client, reference._key).then(\n    doc =>\n      new DocumentSnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        reference._key,\n        doc,\n        new SnapshotMetadata(\n          doc !== null && doc.hasLocalMutations,\n          /* fromCache= */ true\n        ),\n        reference.converter\n      )\n  );\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDocFromServer<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n\n  return firestoreClientGetDocumentViaSnapshotListener(client, reference._key, {\n    source: 'server'\n  }).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocs<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  validateHasExplicitOrderByForLimitToLast(query._query);\n  return firestoreClientGetDocumentsViaSnapshotListener(\n    client,\n    query._query\n  ).then(\n    snapshot =>\n      new QuerySnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        query,\n        snapshot\n      )\n  );\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an empty result set if no documents matching the query are currently\n * cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocsFromCache<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentsFromLocalCache(client, query._query).then(\n    snapshot =>\n      new QuerySnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        query,\n        snapshot\n      )\n  );\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocsFromServer<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentsViaSnapshotListener(client, query._query, {\n    source: 'server'\n  }).then(\n    snapshot => new QuerySnapshot(firestore, userDataWriter, query, snapshot)\n  );\n}\n\n/**\n * Writes to the document referred to by this `DocumentReference`. If the\n * document does not yet exist, it will be created.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<void>;\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created. If you provide `merge`\n * or `mergeFields`, the provided data can be merged into an existing document.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @param options - An object to configure the set behavior.\n * @returns A Promise resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options: SetOptions\n): Promise<void>;\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options?: SetOptions\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data as WithFieldValue<AppModelType>,\n    options\n  );\n  const dataReader = newUserDataReader(firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'setDoc',\n    reference._key,\n    convertedValue,\n    reference.converter !== null,\n    options\n  );\n\n  const mutation = parsed.toMutation(reference._key, Precondition.none());\n  return executeWrite(firestore, [mutation]);\n}\n\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference`. The update will fail if applied to a document that does\n * not exist.\n *\n * @param reference - A reference to the document to update.\n * @param data - An object containing the fields and values with which to\n * update the document. Fields can contain dots to reference nested fields\n * within the document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: UpdateData<DbModelType>\n): Promise<void>;\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference` The update will fail if applied to a document that does\n * not exist.\n *\n * Nested fields can be updated by providing dot-separated field path\n * strings or by providing `FieldPath` objects.\n *\n * @param reference - A reference to the document to update.\n * @param field - The first field to update.\n * @param value - The first value.\n * @param moreFieldsAndValues - Additional key value pairs.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  field: string | FieldPath,\n  value: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void>;\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<unknown>,\n  fieldOrUpdateData: string | FieldPath | UpdateData<DbModelType>,\n  value?: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n\n  const dataReader = newUserDataReader(firestore);\n\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n\n  let parsed: ParsedUpdateData;\n  if (\n    typeof fieldOrUpdateData === 'string' ||\n    fieldOrUpdateData instanceof FieldPath\n  ) {\n    parsed = parseUpdateVarargs(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData,\n      value,\n      moreFieldsAndValues\n    );\n  } else {\n    parsed = parseUpdateData(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData\n    );\n  }\n\n  const mutation = parsed.toMutation(reference._key, Precondition.exists(true));\n  return executeWrite(firestore, [mutation]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */\nexport function deleteDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<void> {\n  const firestore = cast(reference.firestore, Firestore);\n  const mutations = [new DeleteMutation(reference._key, Precondition.none())];\n  return executeWrite(firestore, mutations);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */\nexport function addDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<DocumentReference<AppModelType, DbModelType>> {\n  const firestore = cast(reference.firestore, Firestore);\n\n  const docRef = doc(reference);\n  const convertedValue = applyFirestoreDataConverter(reference.converter, data);\n\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'addDoc',\n    docRef._key,\n    convertedValue,\n    reference.converter !== null,\n    {}\n  );\n\n  const mutation = parsed.toMutation(docRef._key, Precondition.exists(false));\n  return executeWrite(firestore, [mutation]).then(() => docRef);\n}\n\n/**\n * A function returned by `onSnapshot()` that removes the listener when invoked.\n */\nexport interface Unsubscribe {\n  /** Removes the listener when invoked. */\n  (): void;\n}\n\n// TODO(firestorexp): Make sure these overloads are tested via the Firestore\n// integration tests\n\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  observer: {\n    next?: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  observer: {\n    next?: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param onNext - A callback to be called every time a new `DocumentSnapshot`\n * is available.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  onNext: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param options - Options controlling the listen behavior.\n * @param onNext - A callback to be called every time a new `DocumentSnapshot`\n * is available.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  onNext: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  observer: {\n    next?: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  observer: {\n    next?: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param onNext - A callback to be called every time a new `QuerySnapshot`\n * is available.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  onNext: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param options - Options controlling the listen behavior.\n * @param onNext - A callback to be called every time a new `QuerySnapshot`\n * is available.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  onNext: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference:\n    | Query<AppModelType, DbModelType>\n    | DocumentReference<AppModelType, DbModelType>,\n  ...args: unknown[]\n): Unsubscribe {\n  reference = getModularInstance(reference);\n\n  let options: SnapshotListenOptions = {\n    includeMetadataChanges: false\n  };\n  let currArg = 0;\n  if (typeof args[currArg] === 'object' && !isPartialObserver(args[currArg])) {\n    options = args[currArg] as SnapshotListenOptions;\n    currArg++;\n  }\n\n  const internalOptions = {\n    includeMetadataChanges: options.includeMetadataChanges\n  };\n\n  if (isPartialObserver(args[currArg])) {\n    const userObserver = args[currArg] as PartialObserver<\n      QuerySnapshot<AppModelType, DbModelType>\n    >;\n    args[currArg] = userObserver.next?.bind(userObserver);\n    args[currArg + 1] = userObserver.error?.bind(userObserver);\n    args[currArg + 2] = userObserver.complete?.bind(userObserver);\n  }\n\n  let observer: PartialObserver<ViewSnapshot>;\n  let firestore: Firestore;\n  let internalQuery: InternalQuery;\n\n  if (reference instanceof DocumentReference) {\n    firestore = cast(reference.firestore, Firestore);\n    internalQuery = newQueryForPath(reference._key.path);\n\n    observer = {\n      next: snapshot => {\n        if (args[currArg]) {\n          (\n            args[currArg] as NextFn<DocumentSnapshot<AppModelType, DbModelType>>\n          )(\n            convertToDocSnapshot(\n              firestore,\n              reference as DocumentReference<AppModelType, DbModelType>,\n              snapshot\n            )\n          );\n        }\n      },\n      error: args[currArg + 1] as ErrorFn,\n      complete: args[currArg + 2] as CompleteFn\n    };\n  } else {\n    const query = cast<Query<AppModelType, DbModelType>>(reference, Query);\n    firestore = cast(query.firestore, Firestore);\n    internalQuery = query._query;\n    const userDataWriter = new ExpUserDataWriter(firestore);\n\n    observer = {\n      next: snapshot => {\n        if (args[currArg]) {\n          (args[currArg] as NextFn<QuerySnapshot<AppModelType, DbModelType>>)(\n            new QuerySnapshot(firestore, userDataWriter, query, snapshot)\n          );\n        }\n      },\n      error: args[currArg + 1] as ErrorFn,\n      complete: args[currArg + 2] as CompleteFn\n    };\n\n    validateHasExplicitOrderByForLimitToLast(reference._query);\n  }\n\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientListen(\n    client,\n    internalQuery,\n    internalOptions,\n    observer\n  );\n}\n\n// TODO(firestorexp): Make sure these overloads are tested via the Firestore\n// integration tests\n\n/**\n * Attaches a listener for a snapshots-in-sync event. The snapshots-in-sync\n * event indicates that all listeners affected by a given change have fired,\n * even if a single server-generated change affects multiple listeners.\n *\n * NOTE: The snapshots-in-sync event only indicates that listeners are in sync\n * with each other, but does not relate to whether those snapshots are in sync\n * with the server. Use SnapshotMetadata in the individual listeners to\n * determine if a snapshot is from the cache or the server.\n *\n * @param firestore - The instance of Firestore for synchronizing snapshots.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n */\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  observer: {\n    next?: (value: void) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for a snapshots-in-sync event. The snapshots-in-sync\n * event indicates that all listeners affected by a given change have fired,\n * even if a single server-generated change affects multiple listeners.\n *\n * NOTE: The snapshots-in-sync event only indicates that listeners are in sync\n * with each other, but does not relate to whether those snapshots are in sync\n * with the server. Use `SnapshotMetadata` in the individual listeners to\n * determine if a snapshot is from the cache or the server.\n *\n * @param firestore - The `Firestore` instance for synchronizing snapshots.\n * @param onSync - A callback to be called every time all snapshot listeners are\n * in sync with each other.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n */\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  onSync: () => void\n): Unsubscribe;\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  arg: unknown\n): Unsubscribe {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const observer = isPartialObserver(arg)\n    ? (arg as PartialObserver<void>)\n    : {\n        next: arg as () => void\n      };\n\n  return firestoreClientAddSnapshotsInSyncListener(client, observer);\n}\n\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */\nexport function executeWrite(\n  firestore: Firestore,\n  mutations: Mutation[]\n): Promise<void> {\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientWrite(client, mutations);\n}\n\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */\nfunction convertToDocSnapshot<AppModelType, DbModelType extends DocumentData>(\n  firestore: Firestore,\n  ref: DocumentReference<AppModelType, DbModelType>,\n  snapshot: ViewSnapshot\n): DocumentSnapshot<AppModelType, DbModelType> {\n  debugAssert(\n    snapshot.docs.size <= 1,\n    'Expected zero or a single result on a document-only query'\n  );\n  const doc = snapshot.docs.get(ref._key);\n\n  const userDataWriter = new ExpUserDataWriter(firestore);\n  return new DocumentSnapshot<AppModelType, DbModelType>(\n    firestore,\n    userDataWriter,\n    ref._key,\n    doc,\n    new SnapshotMetadata(snapshot.hasPendingWrites, snapshot.fromCache),\n    ref.converter\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  firestoreClientDeleteAllFieldIndexes,\n  firestoreClientSetPersistentCacheIndexAutoCreationEnabled,\n  FirestoreClient\n} from '../core/firestore_client';\nimport { cast } from '../util/input_validation';\nimport { logDebug, logWarn } from '../util/log';\n\nimport { ensureFirestoreConfigured, Firestore } from './database';\n\n/**\n * A `PersistentCacheIndexManager` for configuring persistent cache indexes used\n * for local query execution.\n *\n * To use, call `getPersistentCacheIndexManager()` to get an instance.\n */\nexport class PersistentCacheIndexManager {\n  /** A type string to uniquely identify instances of this class. */\n  readonly type: 'PersistentCacheIndexManager' = 'PersistentCacheIndexManager';\n\n  /** @hideconstructor */\n  constructor(readonly _client: FirestoreClient) {}\n}\n\n/**\n * Returns the PersistentCache Index Manager used by the given `Firestore`\n * object.\n *\n * @return The `PersistentCacheIndexManager` instance, or `null` if local\n * persistent storage is not in use.\n */\nexport function getPersistentCacheIndexManager(\n  firestore: Firestore\n): PersistentCacheIndexManager | null {\n  firestore = cast(firestore, Firestore);\n\n  const cachedInstance = persistentCacheIndexManagerByFirestore.get(firestore);\n  if (cachedInstance) {\n    return cachedInstance;\n  }\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider?._offlineKind !== 'persistent') {\n    return null;\n  }\n\n  const instance = new PersistentCacheIndexManager(client);\n  persistentCacheIndexManagerByFirestore.set(firestore, instance);\n  return instance;\n}\n\n/**\n * Enables the SDK to create persistent cache indexes automatically for local\n * query execution when the SDK believes cache indexes can help improve\n * performance.\n *\n * This feature is disabled by default.\n */\nexport function enablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, true);\n}\n\n/**\n * Stops creating persistent cache indexes automatically for local query\n * execution. The indexes which have been created by calling\n * `enablePersistentCacheIndexAutoCreation()` still take effect.\n */\nexport function disablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, false);\n}\n\n/**\n * Removes all persistent cache indexes.\n *\n * Please note this function will also deletes indexes generated by\n * `setIndexConfiguration()`, which is deprecated.\n */\nexport function deleteAllPersistentCacheIndexes(\n  indexManager: PersistentCacheIndexManager\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientDeleteAllFieldIndexes(indexManager._client);\n\n  promise\n    .then(_ => logDebug('deleting all persistent cache indexes succeeded'))\n    .catch(error =>\n      logWarn('deleting all persistent cache indexes failed', error)\n    );\n}\n\nfunction setPersistentCacheIndexAutoCreationEnabled(\n  indexManager: PersistentCacheIndexManager,\n  isEnabled: boolean\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n    indexManager._client,\n    isEnabled\n  );\n\n  promise\n    .then(_ =>\n      logDebug(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} succeeded`\n      )\n    )\n    .catch(error =>\n      logWarn(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} failed`,\n        error\n      )\n    );\n}\n\n/**\n * Maps `Firestore` instances to their corresponding\n * `PersistentCacheIndexManager` instances.\n *\n * Use a `WeakMap` so that the mapping will be automatically dropped when the\n * `Firestore` instance is garbage collected. This emulates a private member\n * as described in https://goo.gle/454yvug.\n */\nconst persistentCacheIndexManagerByFirestore = new WeakMap<\n  Firestore,\n  PersistentCacheIndexManager\n>();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport {\n  FirebaseAppCheckTokenProvider,\n  FirebaseAuthCredentialsProvider\n} from '../src/api/credentials';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { Firestore } from './api/database';\nimport { databaseIdFromApp } from './core/database_info';\n\nexport function registerFirestore(\n  variant?: string,\n  useFetchStreams = true\n): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'firestore',\n      (container, { instanceIdentifier: databaseId, options: settings }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const firestoreInstance = new Firestore(\n          new FirebaseAuthCredentialsProvider(\n            container.getProvider('auth-internal')\n          ),\n          new FirebaseAppCheckTokenProvider(\n            container.getProvider('app-check-internal')\n          ),\n          databaseIdFromApp(app, databaseId),\n          app\n        );\n        settings = { useFetchStreams, ...settings };\n        firestoreInstance._setSettings(settings);\n        return firestoreInstance;\n      },\n      'PUBLIC' as ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore } from './api/database';\nimport { registerFirestore } from './register';\n\nregisterFirestore();\n\nexport * from './api';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore': Firestore;\n  }\n}\n"],"names":["stringToByteArray$1","str","out","p","i","length","c","charCodeAt","byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","c3","c4","u","join","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","DecodeBase64StringError","constructor","name","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","replace","base64Decode","e","console","error","getGlobal","self","window","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","process","defaultsJsonString","JSON","parse","getDefaultsFromCookie","document","match","cookie","decoded","getDefaults","info","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","createMockUserToken","token","projectId","uid","header","alg","type","project","iat","sub","user_id","payload","Object","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","stringify","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","ERROR_NAME","FirebaseError","code","customData","super","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","key","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","activeEffectScope","EffectScope","detached","_active","effects","cleanups","parent","index","scopes","active","run","fn","currentEffectScope","on","off","stop","fromParent","l","last","pop","recordEffectScope","effect","scope","getCurrentScope","createDep","dep","Set","w","n","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","WeakMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","effect2","trackStack","pauseTracking","resetTracking","track","target","depsMap","get","set","Map","eventInfo","trackEffects","debuggerEventExtraInfo","shouldTrack2","has","add","trigger","newValue","oldValue","oldTarget","values","newLength","Number","forEach","key2","isSymbol","isIntegerKey","isMap","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","makeMap","builtInSymbols","getOwnPropertyNames","filter","map","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","arr","toRaw","res","apply","hasOwnProperty","obj","BaseReactiveHandler","_isReadonly","_shallow","receiver","isReadonly2","shallow","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","hasOwn","Reflect","isRef","readonly","reactive","MutableReactiveHandler","isReadonly","isShallow","hadKey","hasChanged","deleteProperty","ownKeys","ReadonlyReactiveHandler","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","has2","wrap","toReadonly","toReactive","call","size","proto","get2","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations2","shallowInstrumentations2","readonlyInstrumentations2","shallowReadonlyInstrumentations2","iteratorMethods","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","toRawType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","def","trackRefValue","ref2","triggerRefValue","newVal","r","__v_isRef","ref","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","getterOrOptions","debugOptions","setter","onlyGetter","isFunction","NOOP","cRef","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","isPromise","throwInDev","contextVNode","vnode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","nextTick","then","bind","findInsertionIndex","id","start","end","middle","middleJob","middleJobId","getId","pre","queueJob","job","splice","queueFlush","flushJobs","invalidateJob","indexOf","queuePostFlushCb","cb","flushPreFlushCbs","seen","flushPostFlushCbs","deduped","sort","Infinity","comparator","diff","emit","event","rawArgs","isUnmounted","props","EMPTY_OBJ","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","isString","looseToNumber","handlerName","handler","toHandlerKey","camelize","hyphenate","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","raw2","normalizedFromExtend","extend","mixins","extends","isEmitListener","options","isOn","toLowerCase","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render2","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","for","warnMissing","currentInstance","selfName","getComponentName","capitalize","registry","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","pendingBranch","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","isMultiSource","isShallow$1","s","traverse","onCleanup","baseGetter","ssrCleanup","isInSSRComponentSetup","useSSRContext","__watcherHandles","fill","queuePostRenderEffect","unwatch","remove","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","split","isSet","isPlainObject","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","arg","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","binding","hook","leaveCbKey","enterCbKey","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransitionPropsValidators","mode","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","BaseTransitionImpl","setup","getCurrentInstance","prevTransitionKey","default","getTransitionRawChildren","child","hasFound","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","BaseTransition","callHook","callAsyncHook","every","hook2","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","cancelled","leave","clone","vnode2","isKeepAlive","ssContent","ssFallback","keepComment","parentKey","ret","keyedFragmentCount","Fragment","defineComponent","extraOptions","isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","matches","pattern","isRegExp","test","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","current","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","resetShapeFlag","getInnerChild","prepend","__weh","unshift","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","renderList","renderItem","from","item","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","hasSetupBinding","__isScriptSetup","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","defineProperty","descriptor","normalizePropsOrEmits","reduce","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","checkDuplicateProperties","resolveInjections","methodHandler","opt","enumerable","configurable","createWatcher","provides","registerLifecycleHook","register","_hook","exposed","val","normalizeInject","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeEmitsOrPropsOptions","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","createAppContext","app","isNativeTag","NO","performance","warnHandler","compilerOptions","propsCache","uid$1","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","WeakSet","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","unmount","runWithContext","currentApp","parentProvides","defaultValue","treatDefaultAsFactory","arguments","initProps","isStateful","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","isReservedProp","camelKey","castValues","isAbsent","hasDefault","skipFactory","normalizePropsOptions","extendProps","EMPTY_ARR","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","toString","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","owner","oldRef","_isString","_isRef","doSet","existing","initFeatureFlags","createRenderer","baseCreateRenderer","createHydrationFns","getGlobalThis","__VUE__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","dynamicChildren","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","scopeId","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","needTransition","onVnodeMounted","parentVNode","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","class","style","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","componentUpdateFn","bu","originNext","invokeArrayFns","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","prevShapeFlag","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition2","remove2","performLeave","doRemove","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","allowed","ch1","ch2","len","arrI","isTeleport","__isTeleport","currentBlock","openBlock","disableTracking","closeBlock","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","targetAnchor","staticCount","normalizeChildren","normalize","_createVNode","cloned","isClassComponent","__vccOpts","guardReactiveProps","klass","normalizeClass","normalizeStyle","extraProps","mergeRef","mergedProps","mergeProps","ce","createTextVNode","text","flag","createCommentVNode","asBlock","memo","slot","slotFlag","toMerge","incoming","emptyAppContext","exposeProxy","setupContext","attrsProxy","slotsProxy","bc","da","rtg","rtc","sp","internalSetCurrentInstance","globalCurrentInstanceSetters","settersKey","compile","installWithProxy","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","__ssrInlineRender","ssrRender","skipOptions","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","getAttrsProxy","includeInferred","displayName","__name","computed$1","propsOrChildren","ssrContextKey","svgNS","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","content","before","previousSibling","lastChild","cloneNode","innerHTML","wrapper","firstChild","appendChild","TRANSITION","ANIMATION","vtcKey","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","h2","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","toNumber","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","addEventListener","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","patchClass","transitionClasses","removeAttribute","className","vShowOldKey","patchStyle","isCssString","setStyle","currentDisplay","display","cssText","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","isSpecialBooleanAttr","includeBooleanAttr","patchDOMProp","tagName","getAttribute","needRemove","veiKey","patchEvent","prevValue","nextValue","invokers","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","cachedNow","getNow","Date","now","initialValue","_vts","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","HTMLElement","positionMap","newPositionMap","moveCbKey","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","nodeType","getModelAssigner","onCompositionStart","composing","onCompositionEnd","dispatchEvent","Event","assignKey","vModelText","lazy","castToNumber","domValue","activeElement","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","rendererOptions","ensureRenderer","containerOrSelector","normalizeContainer","SVGElement","Element","expectsLowerCase","list","onRE","toTypeString","isDate","objectToString","cacheStringFunction","hit","camelizeRE","toUpperCase","hyphenateRE","fns","parseFloat","isNaN","NaN","_globalThis","globalThis","GLOBALS_ALLOWED","isGloballyAllowed","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","tmp","specialBooleanAttrs","looseCompareArrays","equal","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","replacer","_key","entries","val2","isFrozen","getOwnPropertyDescriptor","freeze","seal","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","TypeError","func","_len","_len2","_key2","addToSet","array","transformCaseFunc","undefined","element","lcElement","object","newObject","property","lookupGetter","desc","fallbackValue","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","DOMPurify","removed","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","getNextSibling","getChildNodes","getParentNode","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","createHTMLDocument","EXPRESSIONS","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","namespaceURI","parentTagName","_forceRemove","_removeAttribute","attribute","getAttributeNode","_initDocument","dirty","leadingWhitespace","dirtyPayload","parseFromString","documentElement","createDocument","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","exports","sfc","hasSymbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","isESModule","__esModule","applyToParams","params","newParams","noop","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","hashPos","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","fromSegments","toSegments","toPosition","segment","position","NavigationType","NavigationDirection","normalizeBase","baseEl","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","elRect","behavior","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","scrollTo","getScrollKey","delta","history","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","protocol","createCurrentLocation","search","slicePos","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","direction","forward","back","unknown","pauseListeners","listen","teardown","beforeUnloadListener","replaceState","destroy","buildState","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","REGEX_CHARS_RE","tokensToParser","score","segmentScores","tokenIndex","subSegmentScore","repeatable","optional","regexp","re","subPattern","avoidDuplicatedSlash","endsWith","param","compareScoreArray","comparePathParserScore","aScore","bScore","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parser","matcher","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","isRecordChildOf","paramsFromLocation","find","parentMatcher","mergeMetaFields","redirect","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","propsObject","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","normalizeQuery","normalizedQuery","useCallbacks","handlers","reset","guardToPromiseFn","enterCallbackArray","valid","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","href","RouterLinkImpl","required","activeClass","exactActiveClass","custom","ariaCurrentValue","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","RouterLink","defaultPrevented","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","oldInstance","oldName","matchedRoute","ViewComponent","currentName","routePropsOption","routeProps","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","targetParams","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","markAsReady","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","removeHistoryListener","setupListeners","_from","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","$router","reactiveRoute","unmountApp","recordFrom","recordTo","isCallable","tryToString","$TypeError","module","argument","$String","isPrototypeOf","it","Prototype","ArrayBuffer","DataView","NAME","Constructor","NATIVE_ARRAY_BUFFER","DESCRIPTORS","classof","createNonEnumerableProperty","defineBuiltIn","defineBuiltInAccessor","wellKnownSymbol","InternalStateModule","enforceInternalState","enforce","getInternalState","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","getTypedArrayConstructor","isTypedArray","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","forced","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","lengthOfArrayLike","toIndexedObject","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","fromIndex","O","SILENT_ON_NON_WRITABLE_LENGTH_SET","A","toIntegerOrInfinity","$RangeError","RangeError","relativeIndex","actualIndex","uncurryThis","stringSlice","TO_STRING_TAG_SUPPORT","classofRaw","$Object","CORRECT_ARGUMENTS","tryGet","callee","getOwnPropertyDescriptorModule","definePropertyModule","exceptions","fails","F","createPropertyDescriptor","bitmap","makeBuiltIn","defineGlobalProperty","simple","unsafe","nonConfigurable","nonWritable","documentAll","all","IS_HTMLDDA","EXISTS","MAX_SAFE_INTEGER","IndexSizeError","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","navigator","userAgent","Deno","versions","v8","$Error","TEST","stack","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","dropEntries","prepareStackTrace","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","dontCallGetSet","sham","exec","NATIVE_BIND","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","aCallable","uncurryThisWithBind","aFunction","namespace","isNullOrUndefined","V","P","check","g","toObject","propertyIsEnumerable","dummy","Wrapper","NewTarget","NewTargetPrototype","store","functionToString","inspectSource","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","getterFor","TYPE","metadata","facade","STATE","$documentAll","replacement","feature","detection","POLYFILL","NATIVE","string","getBuiltIn","USE_SYMBOL_AS_UID","$Symbol","toLength","CONFIGURABLE_FUNCTION_NAME","CONFIGURABLE_LENGTH","TEMPLATE","arity","ceil","floor","trunc","$default","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","getOwnPropertySymbols","CORRECT_PROTOTYPE_GETTER","IE_PROTO","names","$propertyIsEnumerable","NASHORN_BUG","uncurryThisAccessor","aPossiblePrototype","CORRECT_SETTER","__proto__","pref","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","SHARED","IS_PURE","copyright","license","V8_VERSION","symbol","integer","toPrimitive","prim","BigInt","IndexedObject","requireObjectCoercible","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","postfix","random","NATIVE_SYMBOL","passed","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","properErrorOnNonWritableLength","argCount","arrayToReversed","ArrayBufferViewCore","arrayFromConstructorAndList","compareFn","arrayWith","isBigIntArray","toBigInt","PROPER_ORDER","actualValue","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","that","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","BUGGY_DESCRIPTOR","FORCED_CONSTRUCTOR","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constant","constantName","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","append","$delete","$value","entry","dindex","found","entriesLength","getAll","$has","count","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","success","cacheDonePromiseForTransaction","tx","complete","idbProxyTraps","objectStoreNames","objectStore","replaceTraps","wrapFunction","transaction","unwrap","storeNames","transformCachableValue","IDBRequest","openDB","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","targetFuncName","useIndex","isWrite","async","storeName","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","providers","getProviders","provider","isVersionServiceProvider","getImmediate","library","logString","getComponent","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","name$o","name$n","name$l","name$m","name$j","name$k","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","_apps","_components","_addComponent","addComponent","debug","_registerComponent","componentName","_getProvider","heartbeatController","getProvider","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","today","toISOString","heartbeatsCache","maxSize","heartbeatEntry","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","registerCoreComponents","version$1","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","setInstanceCreatedCallback","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","setComponent","isComponentEager","instanceDeferred","clearInstance","services","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","normalizedDeferredIdentifier","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","callbacks","normalizeIdentifierForFactory","addOrOverwriteComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","setLogLevel","logHandler","userLogHandler","log","kindOf","kindOfTest","typeOfTest","isUndefined","isBuffer","isArrayBuffer","isArrayBufferView","isNumber","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","isURLSearchParams","allOwnKeys","findKey","_global","isContextDefined","merge","caseless","assignValue","targetKey","stripBOM","inherits","superConstructor","descriptors","toFlatObject","sourceObj","destObj","propFilter","lastIndex","toArray","forEachEntry","generator","pair","matchAll","regExp","isHTMLForm","toCamelCase","p1","p2","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","defineProperties","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toFiniteNumber","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","alphabet","isSpecCompliantForm","toJSONObject","visit","reducedValue","isAsyncFn","isThenable","hasOwnProp","AxiosError","response","utils","toJSON","description","fileName","lineNumber","columnNumber","status","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","isFlatArray","predicates","toFormData","formData","PlatformFormData","metaTokens","indexes","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","Buffer","exposedHelpers","build","encode","charMap","encodeURIComponent","AxiosURLSearchParams","_pairs","encoder","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","InterceptorManager","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","protocols","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","toURLEncodedForm","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","rawHeaders","parsed","line","$internals","normalizeHeader","normalizeValue","parseTokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","parseHeaders","deleted","deleteHeader","format","targets","asStrings","first","accessor","accessors","defineAccessor","mapped","headerValue","transformData","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","write","expires","domain","secure","toGMTString","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","msie","urlParsingNode","originURL","resolveURL","hostname","requestURL","parseProtocol","speedometer","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","round","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","isXHRAdapterSupported","XMLHttpRequest","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","auth","username","password","unescape","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","isURLSameOrigin","cookies","setRequestHeader","withCredentials","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","knownAdapters","http","httpAdapter","xhr","xhrAdapter","renderReason","reason","isResolvedHandle","getAdapter","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","validator","ERR_BAD_OPTION","formatMessage","ERR_DEPRECATED","Axios","instanceConfig","interceptors","configOrUrl","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","spread","isAxiosError","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","axios","Cancel","promises","formToJSON","goog","commonjsGlobal","aa","ba","ca","ea","fa","q","ha","ac","ia","sa","N","ka","ma","na","oa","pa","y","qa","ra","za","Da","ta","z","ua","va","wa","xa","ya","documentMode","Aa","Ba","Ca","Ea","Fa","relatedTarget","screenY","screenX","clientY","clientX","pointerId","pointerType","changedTouches","srcElement","fromElement","toElement","pageX","pageY","Ga","returnValue","Ha","Ia","Ja","src","capture","la","Ka","Na","Oa","Pa","Qa","Ra","Sa","Ua","Ta","Va","Wa","Ya","once","Za","$a","ab","bb","attachEvent","addListener","removeListener","eb","fb","gb","detachEvent","handleEvent","B","S","J","ib","jb","kb","lb","mb","nb","ob","pb","qb","rb","sb","tb","vb","initializeRunner","schedule","ub","module$contents$goog$async$run_run.processWorkQueue","wb","xb","ga","T","clearTimeout","yb","zb","Ab","Bb","Cb","Db","Fb","Gb","Hb","L","Ib","D","Jb","Kb","E","Lb","Mb","Nb","Ob","Pb","STAT_EVENT","Qb","Rb","Sb","NO_ERROR","Eb","TIMEOUT","Tb","$b","Ub","Vb","Wb","Xb","OPEN","Yb","Zb","W","U","cc","I","G","Y","M","K","dc","fc","gc","hc","ic","jc","kc","lc","oc","rc","uc","qc","vc","wc","nc","H","sc","xc","yc","zc","Ac","Bc","La","Ma","getResponseHeader","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Z","Jc","Kc","ja","TextDecoder","stream","tc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Xc","Sc","Yc","abs","decodeURI","Zc","Tc","Uc","Vc","Wc","$c","ad","bd","cd","dd","PerformanceNavigationTiming","getEntriesByType","nextHopProtocol","ed","fd","gd","hd","jd","Image","onload","kd","ld","md","nd","Headers","qd","Xa","pd","od","credentials","fetch","Request","arrayBuffer","ReadableStream","getReader","rd","sd","td","ud","xd","vd","yd","zd","Ad","wd","mozResponseArrayBuffer","Bd","Cd","Dd","internalChannelParams","Ed","xmlHttpFactory","useFetchStreams","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","encodeInitMessageHeaders","forceLongPolling","detectBufferingProxy","longPollingTimeout","Fd","Gd","sendBeacon","Hd","Id","Jd","Ld","Kd","Md","Nd","Od","Q","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","sendRawJson","httpSessionIdParam","R","Pd","__headers__","statusCode","__status__","__sm__","Qd","Rd","blockSize","Sd","__data__","Td","Ud","Vd","pow","Wd","Xd","X","Zd","$d","ae","Yd","be","LN2","and","or","xor","createWebChannel","HTTP_ERROR","COMPLETE","EventType","CLOSE","MESSAGE","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","setWithCredentials","digest","multiply","modulo","compare","getBits","fromNumber","fromString","createWebChannelTransport","esm","getStatEventTarget","ErrorCode","Stat","PROXY","NOPROXY","FetchXmlHttpFactory","WebChannel","XhrIo","Md5","Integer","User","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","__PRIVATE_getLogLevel","__PRIVATE_logDebug","__PRIVATE_argToString","__PRIVATE_logError","__PRIVATE_logWarn","fail","__PRIVATE_hardAssert","__PRIVATE_debugCast","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FirestoreError","__PRIVATE_Deferred","__PRIVATE_OAuthToken","user","__PRIVATE_EmptyAuthCredentialsProvider","getToken","invalidateToken","enqueueRetryable","shutdown","__PRIVATE_EmulatorAuthCredentialsProvider","changeListener","__PRIVATE_FirebaseAuthCredentialsProvider","currentUser","forceRefresh","__PRIVATE_guardedChangeListener","__PRIVATE_awaitNextToken","__PRIVATE_registerAuth","addAuthTokenListener","accessToken","removeAuthTokenListener","getUid","__PRIVATE_FirstPartyToken","__PRIVATE_FirstPartyAuthCredentialsProvider","AppCheckToken","__PRIVATE_FirebaseAppCheckTokenProvider","appCheck","onTokenChanged","__PRIVATE_registerAppCheck","addTokenListener","removeTokenListener","__PRIVATE_randomBytes","crypto","msCrypto","getRandomValues","__PRIVATE_AutoId","newId","__PRIVATE_primitiveComparator","__PRIVATE_arrayEquals","Timestamp","seconds","nanoseconds","fromMillis","fromDate","toDate","toMillis","_compareTo","padStart","SnapshotVersion","timestamp","fromTimestamp","compareTo","toMicroseconds","toTimestamp","BasePath","limit","popFirst","popLast","firstSegment","lastSegment","isEmpty","isPrefixOf","isImmediateParentOf","ResourcePath","canonicalString","emptyPath","FieldPath$1","isValidIdentifier","isKeyField","keyField","fromServerFormat","__PRIVATE_addCurrentSegment","DocumentKey","fromPath","fromName","empty","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","FieldIndex","indexId","fields","indexState","UNKNOWN_ID","__PRIVATE_newIndexOffsetSuccessorFromReadTime","IndexOffset","__PRIVATE_newIndexOffsetFromDocument","readTime","documentKey","largestBatchId","__PRIVATE_indexOffsetComparator","PersistenceTransaction","onCommittedListeners","addOnCommittedListener","raiseOnCommittedEvent","__PRIVATE_ignoreIfPrimaryLeaseLoss","PersistencePromise","nextCallback","catchCallback","isDone","callbackAttached","wrapFailure","wrapSuccess","toPromise","wrapUserFunction","waitFor","mapArray","doWhile","__PRIVATE_isIndexedDbTransactionError","__PRIVATE_ListenSequence","previousValue","sequenceNumberHandler","se","oe","writeSequenceNumber","__PRIVATE_isNullOrUndefined","__PRIVATE_isNegativeZero","isSafeInteger","isInteger","MIN_SAFE_INTEGER","_e","__PRIVATE_objectSize","SortedMap","LLRBNode","EMPTY","copy","BLACK","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","SortedSet","forEachInRange","forEachWhile","firstAfterOrEqual","SortedSetIterator","unionWith","iter","FieldMask","covers","__PRIVATE_Base64DecodeError","ByteString","binaryString","fromBase64String","fromUint8Array","toBase64","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","te","__PRIVATE_normalizeTimestamp","substr","nanos","__PRIVATE_normalizeNumber","__PRIVATE_normalizeByteString","__PRIVATE_isServerTimestamp","mapValue","__type__","stringValue","__PRIVATE_getPreviousValue","__previous_value__","__PRIVATE_getLocalWriteTime","__local_write_time__","timestampValue","DatabaseInfo","databaseId","persistenceKey","ssl","autoDetectLongPolling","longPollingOptions","DatabaseId","database","isDefaultDatabase","ne","__PRIVATE_typeOrder","__PRIVATE_isMaxValue","__PRIVATE_valueEquals","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","arrayValue","__PRIVATE_arrayValueContains","__PRIVATE_valueCompare","__PRIVATE_compareTimestamps","canonicalId","__PRIVATE_canonifyValue","__PRIVATE_refValue","__PRIVATE_isNullValue","__PRIVATE_isNanValue","__PRIVATE_isMapValue","__PRIVATE_deepClone","ObjectValue","field","getFieldsMap","setAll","applyChanges","__PRIVATE_extractFieldMask","MutableDocument","documentType","createTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Bound","inclusive","__PRIVATE_boundCompareToDocument","__PRIVATE_boundEquals","OrderBy","__PRIVATE_orderByEquals","Filter","FieldFilter","op","createKeyFieldInFilter","__PRIVATE_KeyFieldFilter","__PRIVATE_ArrayContainsFilter","__PRIVATE_InFilter","__PRIVATE_NotInFilter","__PRIVATE_ArrayContainsAnyFilter","__PRIVATE_KeyFieldInFilter","__PRIVATE_KeyFieldNotInFilter","matchesComparison","isInequality","getFlattenedFilters","getFilters","CompositeFilter","ue","__PRIVATE_compositeFilterIsConjunction","__PRIVATE_compositeFilterIsFlatConjunction","__PRIVATE_compositeFilterIsFlat","__PRIVATE_canonifyFilter","__PRIVATE_filterEquals","__PRIVATE_stringifyFilter","__PRIVATE_extractDocumentKeysFromArrayValue","nullValue","__PRIVATE_TargetImpl","orderBy","startAt","endAt","__PRIVATE_newTarget","__PRIVATE_canonifyTarget","__PRIVATE_targetEquals","__PRIVATE_targetIsDocumentTarget","__PRIVATE_QueryImpl","explicitOrderBy","limitType","le","he","Pe","__PRIVATE_newQuery","__PRIVATE_newQueryForPath","__PRIVATE_queryMatchesAllDocuments","__PRIVATE_isCollectionGroupQuery","__PRIVATE_queryNormalizedOrderBy","__PRIVATE_queryToTarget","__PRIVATE__queryToTarget","__PRIVATE_queryWithAddedFilter","__PRIVATE_queryWithLimit","__PRIVATE_queryEquals","__PRIVATE_canonifyQuery","__PRIVATE_stringifyQuery","__PRIVATE_queryMatches","__PRIVATE_queryCollectionGroup","__PRIVATE_newQueryComparator","__PRIVATE_compareDocs","ObjectMap","mapKeyFn","equalsFn","innerSize","ie","__PRIVATE_mutableDocumentMap","documentMap","__PRIVATE_convertOverlayedDocumentMapToDocumentMap","overlayedDocument","__PRIVATE_newOverlayMap","__PRIVATE_newDocumentKeyMap","__PRIVATE_newMutationMap","__PRIVATE_documentKeySet","__PRIVATE_targetIdSet","__PRIVATE_toDouble","useProto3Json","__PRIVATE_toInteger","TransformOperation","__PRIVATE_applyTransformOperationToLocalView","__PRIVATE_ServerTimestampTransform","__PRIVATE_ArrayUnionTransformOperation","__PRIVATE_applyArrayUnionTransformOperation","__PRIVATE_ArrayRemoveTransformOperation","__PRIVATE_applyArrayRemoveTransformOperation","__PRIVATE_computeTransformOperationBaseValue","asNumber","Ie","serializer","__PRIVATE_applyTransformOperationToRemoteDocument","__PRIVATE_NumericIncrementTransformOperation","elements","__PRIVATE_coercedFieldValuesArray","__PRIVATE_fieldTransformEquals","MutationResult","transformResults","Precondition","updateTime","exists","none","isNone","__PRIVATE_preconditionIsValidForDocument","Mutation","__PRIVATE_calculateOverlayMutation","__PRIVATE_DeleteMutation","__PRIVATE_SetMutation","__PRIVATE_PatchMutation","__PRIVATE_mutationApplyToRemoteDocument","__PRIVATE_serverTransformResults","fieldTransforms","precondition","__PRIVATE_getPatch","__PRIVATE_mutationApplyToLocalView","__PRIVATE_localTransformResults","fieldMask","__PRIVATE_mutationExtractBaseValue","__PRIVATE_mutationEquals","getFieldMask","__PRIVATE_VerifyMutation","MutationBatch","batchId","localWriteTime","baseMutations","mutations","applyToRemoteDocument","mutationResults","applyToLocalView","applyToLocalDocumentSet","mutatedFields","MutationBatchResult","batch","commitVersion","docVersions","Overlay","mutation","getKey","ExistenceFilter","unchangedNames","__PRIVATE_isPermanentError","__PRIVATE_mapCodeFromRpcCode","__PRIVATE_newTextEncoder","TextEncoder","__PRIVATE_getMd5HashValue","__PRIVATE_get64BitUints","getUint32","BloomFilter","padding","hashCount","__PRIVATE_BloomFilterError","Te","Ee","de","Ae","mightContain","Re","RemoteEvent","snapshotVersion","targetChanges","targetMismatches","documentUpdates","resolvedLimboDocuments","createSynthesizedRemoteEventForCurrentChange","TargetChange","createSynthesizedTargetChangeForCurrentChange","resumeToken","addedDocuments","modifiedDocuments","removedDocuments","__PRIVATE_DocumentWatchChange","Ve","removedTargetIds","me","__PRIVATE_ExistenceFilterChange","targetId","fe","__PRIVATE_WatchTargetChange","targetIds","__PRIVATE_TargetState","ge","pe","__PRIVATE_snapshotChangesMap","ye","we","Se","De","Ce","ve","Fe","Me","xe","Oe","Ne","Be","__PRIVATE_WatchChangeAggregator","Le","ke","qe","Qe","__PRIVATE_documentTargetMap","Ke","$e","Ue","We","Ge","forEachTarget","ze","je","removeTarget","He","Je","Ye","Ze","Xe","et","tt","localCacheCount","existenceFilterCount","bloomFilter","applied","bitmapLength","bits","nt","rt","getRemoteKeysForTarget","st","purpose","ot","_t","asc","in","JsonProtoSerializer","__PRIVATE_toInt32Proto","__PRIVATE_toBytes","__PRIVATE_toVersion","__PRIVATE_fromVersion","__PRIVATE_toResourceName","__PRIVATE_fromResourceName","__PRIVATE_isValidResourceName","__PRIVATE_toName","__PRIVATE_extractLocalPathFromResourceName","__PRIVATE_toQueryPath","__PRIVATE_fromQueryPath","__PRIVATE_getEncodedDatabaseId","__PRIVATE_toMutationDocument","__PRIVATE_fromWatchChange","targetChange","targetChangeType","documentChange","documentDelete","documentRemove","toMutation","updateMask","__PRIVATE_toDocumentMask","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","__PRIVATE_fromWriteResults","__PRIVATE_toDocumentsTarget","documents","__PRIVATE_toQueryTarget","structuredQuery","collectionId","allDescendants","__PRIVATE_toFilter","where","__PRIVATE_toFieldPathReference","__PRIVATE_toDirection","__PRIVATE_convertQueryTargetToQuery","__PRIVATE_fromFilter","__PRIVATE_fromFieldPathReference","__PRIVATE_toListenRequestLabels","unaryFilter","fieldFilter","compositeFilter","__PRIVATE_toOperatorName","__PRIVATE_toCompositeOperatorName","fieldPaths","TargetData","sequenceNumber","lastLimboFreeSnapshotVersion","expectedCount","withSequenceNumber","withResumeToken","withExpectedCount","withLastLimboFreeSnapshotVersion","__PRIVATE_LocalSerializer","ut","__PRIVATE_fromBundledQuery","__PRIVATE_FirestoreIndexValueWriter","ht","Pt","It","Tt","Et","dt","At","Rt","Vt","ft","gt","yt","wt","St","__PRIVATE_MemoryIndexManager","__PRIVATE_MemoryCollectionParentIndex","addToCollectionParentIndex","getCollectionParents","getEntries","addFieldIndex","deleteFieldIndex","deleteAllFieldIndexes","createTargetIndexes","getDocumentsMatchingTarget","getIndexType","getFieldIndexes","getNextCollectionGroupToUpdate","getMinOffset","getMinOffsetFromCollectionGroup","updateCollectionGroup","updateIndexEntries","LruParams","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","withCacheSize","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","DEFAULT","DISABLED","__PRIVATE_TargetIdGenerator","xn","On","Nn","RemoteDocumentChangeBuffer","changes","changesApplied","addEntry","assertNotApplied","removeEntry","getEntry","getFromCache","getAllFromCache","OverlayedDocument","LocalDocumentsView","remoteDocumentCache","mutationQueue","documentOverlayCache","indexManager","getDocument","getOverlay","getDocuments","getLocalViewOfDocuments","populateOverlays","computeViews","getOverlayedDocuments","getOverlays","recalculateAndSaveOverlays","getAllMutationBatchesAffectingDocumentKeys","saveOverlays","recalculateAndSaveOverlaysForDocumentKeys","getDocumentsMatchingQuery","getDocumentsMatchingDocumentQuery","getDocumentsMatchingCollectionGroupQuery","getDocumentsMatchingCollectionQuery","getNextDocuments","getAllFromCollectionGroup","getOverlaysForCollectionGroup","getOverlaysForCollection","__PRIVATE_MemoryBundleCache","ur","cr","getBundleMetadata","saveBundleMetadata","getNamedQuery","saveNamedQuery","bundledQuery","__PRIVATE_MemoryDocumentOverlayCache","overlays","lr","lt","removeOverlaysForBatchId","__PRIVATE_ReferenceSet","hr","__PRIVATE_DocReference","Pr","Ir","Tr","addReference","Er","removeReference","dr","Ar","Rr","Vr","mr","containsKey","gr","__PRIVATE_MemoryMutationQueue","referenceDelegate","pr","yr","checkEmpty","addMutationBatch","lookupMutationBatch","wr","getNextMutationBatchAfterBatchId","Sr","getHighestUnacknowledgedBatchId","getAllMutationBatches","getAllMutationBatchesAffectingDocumentKey","POSITIVE_INFINITY","br","getAllMutationBatchesAffectingQuery","removeMutationBatch","Dr","markPotentiallyOrphaned","Fn","performConsistencyCheck","__PRIVATE_MemoryRemoteDocumentCacheImpl","Cr","docs","setIndexManager","vr","newChangeBuffer","__PRIVATE_MemoryRemoteDocumentChangeBuffer","getSize","_r","__PRIVATE_MemoryTargetCache","persistence","Fr","lastRemoteSnapshotVersion","highestTargetId","Mr","Or","targetCount","Nr","getLastRemoteSnapshotVersion","getHighestSequenceNumber","allocateTargetId","setTargetsMetadata","kn","addTargetData","updateTargetData","removeTargetData","removeTargets","removeMatchingKeysForTargetId","getTargetCount","getTargetData","addMatchingKeys","removeMatchingKeys","getMatchingKeysForTargetId","__PRIVATE_MemoryPersistence","Br","Lr","kr","qr","Qr","Kr","setDatabaseDeletedListener","setNetworkEnabled","getIndexManager","getDocumentOverlayCache","getMutationQueue","getTargetCache","getRemoteDocumentCache","getBundleCache","runTransaction","__PRIVATE_MemoryTransaction","$r","Ur","Wr","currentSequenceNumber","__PRIVATE_MemoryEagerDelegate","Gr","zr","jr","Hr","Jr","updateLimboDocument","__PRIVATE_LocalViewChanges","fromCache","ki","qi","Qi","docChanges","QueryContext","_documentReadCount","documentReadCount","incrementDocumentReadCount","__PRIVATE_QueryEngine","Ki","$i","Ui","Wi","Gi","zi","ji","Hi","Ji","Yi","Zi","Xi","__PRIVATE_LocalStoreImpl","es","ts","ns","rs","ss","os","localDocuments","collectGarbage","collect","__PRIVATE_newLocalStore","__PRIVATE_localStoreHandleUserChange","_s","removedBatchIds","addedBatchIds","__PRIVATE_localStoreAcknowledgeBatch","trackRemovals","__PRIVATE_localStoreGetLastRemoteSnapshotVersion","__PRIVATE_localStoreApplyRemoteEventToLocalCache","__PRIVATE_populateDocumentChangeBuffer","us","cs","__PRIVATE_localStoreGetNextMutationBatch","__PRIVATE_localStoreAllocateTarget","__PRIVATE_localStoreReleaseTarget","__PRIVATE_localStoreExecuteQuery","__PRIVATE_setMaxReadTime","ls","__PRIVATE_LocalClientState","activeTargetIds","ds","As","Es","updateTimeMs","__PRIVATE_MemorySharedClientState","eo","no","onlineStateHandler","addPendingMutation","updateMutationState","addLocalQueryTarget","updateQueryState","removeLocalQueryTarget","isLocalQueryTarget","clearQueryState","getAllActiveQueryTargets","isActiveQueryTarget","handleUserChange","setOnlineState","notifyBundleLoaded","__PRIVATE_NoopConnectivityMonitor","ro","__PRIVATE_BrowserConnectivityMonitor","io","so","oo","_o","ao","uo","__PRIVATE_generateUniqueDebugId","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","__PRIVATE_StreamBridge","co","lo","ho","Po","Io","To","onMessage","Eo","Ao","Ro","Vo","__PRIVATE_WebChannelConnection","databaseInfo","mo","fo","po","yo","wo","So","bo","Do","Co","vo","forwardChannelRequestTimeoutMs","timeoutSeconds","__PRIVATE_closeFn","__PRIVATE_unguardedEventListen","__PRIVATE_newSerializer","__PRIVATE_ExponentialBackoff","si","timerId","Fo","Mo","xo","Oo","No","Bo","Lo","ko","qo","enqueueAfterDelay","Qo","skipDelay","__PRIVATE_PersistentStream","Ko","$o","connection","authCredentialsProvider","appCheckCredentialsProvider","Uo","Wo","Go","zo","jo","Ho","Jo","Yo","Zo","Xo","e_","t_","n_","r_","i_","s_","o_","__","enqueueAndForget","__PRIVATE_PersistentListenStream","a_","u_","addTarget","labels","c_","__PRIVATE_PersistentWriteStream","l_","h_","lastStreamToken","P_","streamToken","writeResults","commitTime","I_","T_","E_","writes","__PRIVATE_DatastoreImpl","authCredentials","appCheckCredentials","d_","A_","terminate","__PRIVATE_OnlineStateTracker","asyncQueue","V_","m_","f_","g_","p_","y_","w_","S_","__PRIVATE_RemoteStoreImpl","localStore","datastore","remoteSyncer","b_","D_","C_","v_","F_","__PRIVATE_canUseNetwork","__PRIVATE_disableNetworkInternal","M_","__PRIVATE_enableNetworkInternal","__PRIVATE_remoteStoreListen","__PRIVATE_shouldStartWatchStream","__PRIVATE_startWatchStream","__PRIVATE_ensureWatchStream","__PRIVATE_sendWatchRequest","__PRIVATE_remoteStoreUnlisten","__PRIVATE_sendUnwatchRequest","x_","__PRIVATE_getDatabaseId","__PRIVATE_cleanUpWatchStreamState","__PRIVATE_onWatchStreamOpen","__PRIVATE_onWatchStreamClose","__PRIVATE_onWatchStreamChange","rejectListen","__PRIVATE_disableNetworkUntilRecovery","applyRemoteEvent","__PRIVATE_executeWithRecovery","__PRIVATE_fillWritePipeline","__PRIVATE_ensureWriteStream","__PRIVATE_canAddToWritePipeline","__PRIVATE_addToWritePipeline","__PRIVATE_shouldStartWriteStream","__PRIVATE_startWriteStream","__PRIVATE_onWriteStreamOpen","__PRIVATE_onWriteHandshakeComplete","__PRIVATE_onMutationResult","applySuccessfulWrite","__PRIVATE_onWriteStreamClose","rejectFailedWrite","__PRIVATE_remoteStoreHandleCredentialChange","verifyOperationInProgress","handleCredentialChange","__PRIVATE_remoteStoreApplyPrimaryState","O_","N_","DelayedOperation","targetTimeMs","removalCallback","createAndSchedule","timerHandle","handleDelayElapsed","__PRIVATE_wrapInUserErrorIfRecoverable","DocumentSet","keyedMap","sortedSet","emptySet","__PRIVATE_DocumentChangeSet","B_","L_","ViewSnapshot","oldDocs","mutatedKeys","syncStateChanged","excludesMetadataChanges","hasCachedResults","fromInitialDocuments","__PRIVATE_QueryListenersInfo","k_","__PRIVATE_EventManagerImpl","queries","onlineState","q_","__PRIVATE_eventManagerListen","onListen","Q_","K_","__PRIVATE_raiseSnapshotsInSyncEvent","__PRIVATE_eventManagerUnlisten","onUnlisten","__PRIVATE_eventManagerOnWatchChange","__PRIVATE_eventManagerOnWatchError","__PRIVATE_QueryListener","U_","W_","G_","includeMetadataChanges","z_","j_","H_","J_","__PRIVATE_AddedLimboDocument","__PRIVATE_RemovedLimboDocument","__PRIVATE_View","order","snapshot","__PRIVATE_QueryView","view","LimboResolution","__PRIVATE_SyncEngineImpl","remoteStore","eventManager","sharedClientState","maxConcurrentLimboResolutions","isPrimaryClient","__PRIVATE_syncEngineListen","__PRIVATE_ensureWatchCallbacks","__PRIVATE_initializeViewAndComputeSnapshot","__PRIVATE_updateTrackedLimbos","__PRIVATE_syncEngineUnlisten","__PRIVATE_removeAndCleanupTarget","__PRIVATE_syncEngineWrite","__PRIVATE_syncEngineEnsureWriteCallbacks","__PRIVATE_syncEngineEmitNewSnapsAndNotifyLocalStore","__PRIVATE_syncEngineApplyRemoteEvent","__PRIVATE_syncEngineApplyOnlineStateChange","__PRIVATE_syncEngineRejectListen","__PRIVATE_pumpEnqueuedLimboResolutions","__PRIVATE_syncEngineApplySuccessfulWrite","__PRIVATE_processUserCallback","__PRIVATE_triggerPendingWritesCallbacks","__PRIVATE_syncEngineRejectFailedWrite","__PRIVATE_removeLimboTarget","__PRIVATE_trackLimboChange","__PRIVATE_syncEngineHandleCredentialChange","__PRIVATE_syncEngineGetRemoteKeysForTarget","MemoryOfflineComponentProvider","synchronizeTabs","createSharedClientState","createPersistence","createLocalStore","gcScheduler","createGarbageCollectionScheduler","indexBackfillerScheduler","createIndexBackfillerScheduler","initialUser","OnlineComponentProvider","createDatastore","createRemoteStore","createEventManager","syncEngine","createSyncEngine","__PRIVATE_AsyncObserver","observer","muted","FirestoreClient","clientId","authCredentialListener","appCheckCredentialListener","getConfiguration","setCredentialChangeListener","setAppCheckTokenChangeListener","verifyNotTerminated","isShuttingDown","enterRestrictedMode","enqueueAndForgetEvenWhileRestricted","_onlineComponents","_offlineComponents","__PRIVATE_setOfflineComponentProvider","__PRIVATE_setOnlineComponentProvider","__PRIVATE_ensureOfflineComponents","__PRIVATE_canFallbackFromIndexedDbError","_uninitializedComponentsProvider","_offline","__PRIVATE_ensureOnlineComponents","_online","__PRIVATE_getSyncEngine","__PRIVATE_getEventManager","__PRIVATE_firestoreClientGetDocumentsViaSnapshotListener","__PRIVATE_cloneLongPollingOptions","__PRIVATE_validateNonEmptyArgument","__PRIVATE_validateIsNotUsedTogether","__PRIVATE_validateDocumentPath","__PRIVATE_validateCollectionPath","__PRIVATE_valueDescription","__PRIVATE_cast","FirestoreSettingsImpl","ignoreUndefinedProperties","localCache","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","Firestore$1","_authCredentials","_appCheckCredentials","_databaseId","_app","_persistenceKey","_settings","_settingsFrozen","_initialized","_terminated","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_freezeSettings","_terminate","settings","connectFirestoreEmulator","mockUserToken","Query","converter","_query","firestore","withConverter","DocumentReference","_path","CollectionReference","collection","__PRIVATE_AsyncQueueImpl","eu","tu","nu","ru","iu","visibilityState","enqueue","su","ou","_u","au","uu","cu","lu","hu","Firestore","_queue","_firestoreClient","__PRIVATE_configureFirestore","getFirestore","ensureFirestoreConfigured","_offlineComponentProvider","_onlineComponentProvider","_offlineKind","Bytes","_byteString","FieldPath","_internalPath","FieldValue","_methodName","GeoPoint","_lat","_long","ParsedSetData","__PRIVATE_isWrite","__PRIVATE_ParseContextImpl","Pu","Iu","Tu","Eu","du","Au","Ru","Vu","mu","__PRIVATE_createError","fu","gu","contains","__PRIVATE_UserDataReader","pu","__PRIVATE_newUserDataReader","__PRIVATE_parseSetData","mergeFields","__PRIVATE_validatePlainObject","__PRIVATE_parseObject","__PRIVATE_fieldPathFromArgument$1","__PRIVATE_fieldMaskContains","__PRIVATE_parseQueryValue","__PRIVATE_parseData","__PRIVATE_looksLikeJsonObject","_toFieldTransform","__PRIVATE_fieldPathFromDotSeparatedString","DocumentSnapshot$1","_firestore","_userDataWriter","_document","_converter","QueryDocumentSnapshot$1","fromFirestore","__PRIVATE_fieldPathFromArgument","__PRIVATE_validateHasExplicitOrderByForLimitToLast","AppliableConstraint","QueryConstraint","QueryCompositeFilterConstraint","QueryFieldFilterConstraint","_apply","_field","_op","_create","_parse","__PRIVATE_validateNewFieldFilter","__PRIVATE_validateDisjunctiveFilterElements","__PRIVATE_parseDocumentIdValue","_queryConstraints","_getOperator","_getQueryConstraints","AbstractUserDataWriter","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertObjectMap","convertDocumentKey","__PRIVATE_applyFirestoreDataConverter","toFirestore","SnapshotMetadata","DocumentSnapshot","_firestoreImpl","QueryDocumentSnapshot","serverTimestamps","QuerySnapshot","_snapshot","_cachedChanges","_cachedChangesIncludeMetadataChanges","oldIndex","__PRIVATE_resultChangeType","__PRIVATE_ExpUserDataWriter","getDocs","addDoc","executeWrite"],"sourceRoot":""}